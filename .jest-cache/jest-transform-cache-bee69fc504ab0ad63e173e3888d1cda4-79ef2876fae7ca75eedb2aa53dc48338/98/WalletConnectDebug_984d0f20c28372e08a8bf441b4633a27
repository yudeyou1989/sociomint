4a034eeae78800a93c4adad4231ee4a3
'use client';
"use strict";

/* istanbul ignore next */
function cov_17kmtahuli() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/components/wallet/WalletConnectDebug.tsx";
  var hash = "1d9e9a077a25ba9b52b34ed346d64bb215c24cab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/components/wallet/WalletConnectDebug.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "6": {
        start: {
          line: 15,
          column: 39
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "8": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "11": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "16": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "18": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "19": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 88
        }
      },
      "20": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "22": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 95
        }
      },
      "23": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "25": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 39
        }
      },
      "26": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "28": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "29": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "30": {
        start: {
          line: 58,
          column: 31
        },
        end: {
          line: 213,
          column: 1
        }
      },
      "31": {
        start: {
          line: 59,
          column: 38
        },
        end: {
          line: 59,
          column: 62
        }
      },
      "32": {
        start: {
          line: 60,
          column: 44
        },
        end: {
          line: 60,
          column: 71
        }
      },
      "33": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "34": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "35": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "36": {
        start: {
          line: 67,
          column: 30
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "37": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 30
        }
      },
      "38": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "39": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "40": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 51
        }
      },
      "41": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 73,
          column: 79
        }
      },
      "42": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 63
        }
      },
      "43": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "44": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 57
        }
      },
      "45": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "46": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 50
        }
      },
      "47": {
        start: {
          line: 81,
          column: 41
        },
        end: {
          line: 81,
          column: 159
        }
      },
      "48": {
        start: {
          line: 81,
          column: 88
        },
        end: {
          line: 81,
          column: 158
        }
      },
      "49": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 47
        }
      },
      "50": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 52
        }
      },
      "51": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 116,
          column: 14
        }
      },
      "52": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 49
        }
      },
      "53": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "54": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 58
        }
      },
      "55": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 15
        }
      },
      "56": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 37
        }
      },
      "57": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 127,
          column: 15
        }
      },
      "58": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 61
        }
      },
      "59": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 15
        }
      },
      "60": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 48
        }
      },
      "61": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 38
        }
      },
      "62": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 36
        }
      },
      "63": {
        start: {
          line: 134,
          column: 29
        },
        end: {
          line: 134,
          column: 57
        }
      },
      "64": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 56
        }
      },
      "65": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "66": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "67": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 57
        }
      },
      "68": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 43
        }
      },
      "69": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 49
        }
      },
      "70": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 55
        }
      },
      "71": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 35
        }
      },
      "72": {
        start: {
          line: 149,
          column: 27
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "73": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 25
        }
      },
      "74": {
        start: {
          line: 152,
          column: 29
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "75": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 25
        }
      },
      "76": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 37
        }
      },
      "77": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 76
        }
      },
      "78": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 158,
          column: 75
        }
      },
      "79": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 65
        }
      },
      "80": {
        start: {
          line: 161,
          column: 24
        },
        end: {
          line: 161,
          column: 56
        }
      },
      "81": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 49
        }
      },
      "82": {
        start: {
          line: 163,
          column: 23
        },
        end: {
          line: 163,
          column: 54
        }
      },
      "83": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 52
        }
      },
      "84": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "85": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 167,
          column: 67
        }
      },
      "86": {
        start: {
          line: 168,
          column: 30
        },
        end: {
          line: 168,
          column: 68
        }
      },
      "87": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 69
        }
      },
      "88": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 37
        }
      },
      "89": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 212,
          column: 7
        }
      },
      "90": {
        start: {
          line: 206,
          column: 64
        },
        end: {
          line: 209,
          column: 29
        }
      },
      "91": {
        start: {
          line: 214,
          column: 17
        },
        end: {
          line: 214,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 47
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 40
          }
        },
        loc: {
          start: {
            line: 18,
            column: 61
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 34
          }
        },
        loc: {
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 58,
            column: 32
          }
        },
        loc: {
          start: {
            line: 58,
            column: 35
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 61,
            column: 26
          }
        },
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 21
          },
          end: {
            line: 62,
            column: 22
          }
        },
        loc: {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 65,
            column: 13
          }
        },
        line: 62
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 67,
            column: 31
          }
        },
        loc: {
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 81,
            column: 70
          },
          end: {
            line: 81,
            column: 71
          }
        },
        loc: {
          start: {
            line: 81,
            column: 88
          },
          end: {
            line: 81,
            column: 158
          }
        },
        line: 81
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 36
          }
        },
        loc: {
          start: {
            line: 119,
            column: 43
          },
          end: {
            line: 121,
            column: 13
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 122,
            column: 38
          },
          end: {
            line: 122,
            column: 39
          }
        },
        loc: {
          start: {
            line: 122,
            column: 42
          },
          end: {
            line: 124,
            column: 13
          }
        },
        line: 122
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 43
          },
          end: {
            line: 125,
            column: 44
          }
        },
        loc: {
          start: {
            line: 125,
            column: 55
          },
          end: {
            line: 127,
            column: 13
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 128,
            column: 40
          },
          end: {
            line: 128,
            column: 41
          }
        },
        loc: {
          start: {
            line: 128,
            column: 51
          },
          end: {
            line: 130,
            column: 13
          }
        },
        line: 128
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 149,
            column: 27
          },
          end: {
            line: 149,
            column: 28
          }
        },
        loc: {
          start: {
            line: 149,
            column: 31
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 149
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 152,
            column: 29
          },
          end: {
            line: 152,
            column: 30
          }
        },
        loc: {
          start: {
            line: 152,
            column: 33
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 152
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 206,
            column: 35
          },
          end: {
            line: 206,
            column: 36
          }
        },
        loc: {
          start: {
            line: 206,
            column: 64
          },
          end: {
            line: 209,
            column: 29
          }
        },
        line: 206
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 45
          }
        }, {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 19,
            column: 65
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 20
          }
        }, {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 27
          }
        }, {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 45
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 47
          }
        }, {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 76
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 31
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 53
          }
        }, {
          start: {
            line: 38,
            column: 57
          },
          end: {
            line: 38,
            column: 88
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "10": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 29
          }
        }, {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 79
          }
        }],
        line: 40
      },
      "11": {
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 41,
            column: 88
          }
        }, {
          start: {
            line: 41,
            column: 91
          },
          end: {
            line: 41,
            column: 95
          }
        }],
        line: 41
      },
      "12": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 42
      },
      "13": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 33
          }
        }, {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 45
          }
        }],
        line: 42
      },
      "14": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "15": {
        loc: {
          start: {
            line: 74,
            column: 34
          },
          end: {
            line: 74,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 46
          },
          end: {
            line: 74,
            column: 51
          }
        }, {
          start: {
            line: 74,
            column: 54
          },
          end: {
            line: 74,
            column: 59
          }
        }],
        line: 74
      },
      "16": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "17": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 141,
            column: 13
          }
        }],
        line: 136
      },
      "18": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 24
          }
        }, {
          start: {
            line: 136,
            column: 28
          },
          end: {
            line: 136,
            column: 47
          }
        }],
        line: 136
      },
      "19": {
        loc: {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 63
          },
          end: {
            line: 156,
            column: 66
          }
        }, {
          start: {
            line: 156,
            column: 69
          },
          end: {
            line: 156,
            column: 72
          }
        }],
        line: 156
      },
      "20": {
        loc: {
          start: {
            line: 159,
            column: 43
          },
          end: {
            line: 159,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 43
          },
          end: {
            line: 159,
            column: 52
          }
        }, {
          start: {
            line: 159,
            column: 56
          },
          end: {
            line: 159,
            column: 61
          }
        }],
        line: 159
      },
      "21": {
        loc: {
          start: {
            line: 162,
            column: 29
          },
          end: {
            line: 162,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 29
          },
          end: {
            line: 162,
            column: 36
          }
        }, {
          start: {
            line: 162,
            column: 40
          },
          end: {
            line: 162,
            column: 45
          }
        }],
        line: 162
      },
      "22": {
        loc: {
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 164,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 164,
            column: 39
          }
        }, {
          start: {
            line: 164,
            column: 43
          },
          end: {
            line: 164,
            column: 48
          }
        }],
        line: 164
      },
      "23": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "24": {
        loc: {
          start: {
            line: 169,
            column: 47
          },
          end: {
            line: 169,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 47
          },
          end: {
            line: 169,
            column: 56
          }
        }, {
          start: {
            line: 169,
            column: 60
          },
          end: {
            line: 169,
            column: 65
          }
        }],
        line: 169
      },
      "25": {
        loc: {
          start: {
            line: 192,
            column: 34
          },
          end: {
            line: 192,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 49
          },
          end: {
            line: 192,
            column: 57
          }
        }, {
          start: {
            line: 192,
            column: 60
          },
          end: {
            line: 192,
            column: 66
          }
        }],
        line: 192
      },
      "26": {
        loc: {
          start: {
            line: 203,
            column: 26
          },
          end: {
            line: 209,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 203,
            column: 65
          },
          end: {
            line: 206,
            column: 18
          }
        }, {
          start: {
            line: 206,
            column: 21
          },
          end: {
            line: 209,
            column: 30
          }
        }],
        line: 203
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/components/wallet/WalletConnectDebug.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\n\n/**\n * WalletConnect \u8C03\u8BD5\u7EC4\u4EF6\n * \u7528\u4E8E\u6D4B\u8BD5\u548C\u8C03\u8BD5WalletConnect\u8FDE\u63A5\u95EE\u9898\n */\nconst WalletConnectDebug = () => {\n  const [debugInfo, setDebugInfo] = useState<string[]>([]);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  const addDebugInfo = (info: string) => {\n    setDebugInfo(prev => [...prev, `${new Date().toLocaleTimeString()}: ${info}`]);\n  };\n\n  const testWalletConnect = async () => {\n    setIsConnecting(true);\n    setDebugInfo([]);\n    \n    try {\n      addDebugInfo('\u5F00\u59CB\u6D4B\u8BD5WalletConnect\u8FDE\u63A5...');\n      \n      // \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\n      const projectId = process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID;\n      addDebugInfo(`\u9879\u76EEID: ${projectId ? '\u5DF2\u914D\u7F6E' : '\u672A\u914D\u7F6E'}`);\n      \n      if (!projectId) {\n        addDebugInfo('\u9519\u8BEF: \u672A\u627E\u5230WalletConnect\u9879\u76EEID');\n        return;\n      }\n\n      // \u52A8\u6001\u5BFC\u5165WalletConnect\n      addDebugInfo('\u6B63\u5728\u52A0\u8F7DWalletConnect\u5E93...');\n      const { EthereumProvider } = await import('@walletconnect/ethereum-provider');\n      addDebugInfo('WalletConnect\u5E93\u52A0\u8F7D\u6210\u529F');\n\n      // \u521B\u5EFA\u63D0\u4F9B\u8005\n      addDebugInfo('\u6B63\u5728\u521B\u5EFAEthereumProvider...');\n      const provider = await EthereumProvider.init({\n        projectId,\n        showQrModal: true,\n        chains: [56], // BSC Mainnet\n        optionalChains: [1, 97], // Ethereum Mainnet, BSC Testnet\n        methods: [\n          'eth_sendTransaction',\n          'eth_sign',\n          'personal_sign',\n          'eth_signTypedData',\n        ],\n        events: [\n          'chainChanged',\n          'accountsChanged',\n        ],\n        qrModalOptions: {\n          themeMode: 'dark',\n          themeVariables: {\n            '--wcm-z-index': '99999999',\n            '--wcm-font-family': '\"Inter\", system-ui, sans-serif',\n            '--wcm-background-color': '#1a1a1a',\n            '--wcm-accent-color': '#0de5ff',\n            '--wcm-text-color': '#ffffff',\n            '--wcm-border-radius-master': '12px',\n          },\n        }\n      });\n      \n      addDebugInfo('EthereumProvider\u521B\u5EFA\u6210\u529F');\n\n      // \u8BBE\u7F6E\u4E8B\u4EF6\u76D1\u542C\u5668\n      provider.on('connect', (info: { chainId: number }) => {\n        addDebugInfo(`\u8FDE\u63A5\u6210\u529F\uFF0C\u94FEID: ${info.chainId}`);\n      });\n\n      provider.on('disconnect', () => {\n        addDebugInfo('\u8FDE\u63A5\u65AD\u5F00');\n      });\n\n      provider.on('accountsChanged', (accounts: string[]) => {\n        addDebugInfo(`\u8D26\u6237\u53D8\u66F4: ${accounts.length} \u4E2A\u8D26\u6237`);\n      });\n\n      provider.on('chainChanged', (chainId: number) => {\n        addDebugInfo(`\u94FE\u53D8\u66F4: ${chainId}`);\n      });\n\n      // \u8BF7\u6C42\u8FDE\u63A5\n      addDebugInfo('\u6B63\u5728\u8BF7\u6C42\u8FDE\u63A5...');\n      await provider.enable();\n      \n      const accounts = await provider.getAccounts();\n      addDebugInfo(`\u83B7\u53D6\u5230\u8D26\u6237: ${accounts.length} \u4E2A`);\n      \n      if (accounts && accounts.length > 0) {\n        addDebugInfo(`\u8FDE\u63A5\u6210\u529F! \u5730\u5740: ${accounts[0]}`);\n        addDebugInfo(`\u94FEID: ${provider.chainId}`);\n      } else {\n        addDebugInfo('\u8B66\u544A: \u672A\u83B7\u53D6\u5230\u8D26\u6237');\n      }\n\n    } catch (error: any) {\n      addDebugInfo(`\u9519\u8BEF: ${error.message}`);\n      console.error('WalletConnect\u6D4B\u8BD5\u5931\u8D25:', error);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const clearDebugInfo = () => {\n    setDebugInfo([]);\n  };\n\n  const checkEnvironment = () => {\n    setDebugInfo([]);\n    addDebugInfo('=== \u73AF\u5883\u68C0\u67E5 ===');\n    \n    // \u68C0\u67E5\u6D4F\u89C8\u5668\u73AF\u5883\n    addDebugInfo(`\u6D4F\u89C8\u5668\u73AF\u5883: ${typeof window !== 'undefined' ? '\u662F' : '\u5426'}`);\n    \n    // \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\n    const projectId = process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID;\n    addDebugInfo(`WalletConnect\u9879\u76EEID: ${projectId || '\u672A\u8BBE\u7F6E'}`);\n    \n    // \u68C0\u67E5\u5176\u4ED6\u76F8\u5173\u73AF\u5883\u53D8\u91CF\n    const chainId = process.env.NEXT_PUBLIC_CHAIN_ID;\n    addDebugInfo(`\u94FEID: ${chainId || '\u672A\u8BBE\u7F6E'}`);\n    \n    const rpcUrl = process.env.NEXT_PUBLIC_RPC_URL;\n    addDebugInfo(`RPC URL: ${rpcUrl || '\u672A\u8BBE\u7F6E'}`);\n    \n    // \u68C0\u67E5CSS\u53D8\u91CF\n    if (typeof window !== 'undefined') {\n      const root = getComputedStyle(document.documentElement);\n      const wcmZIndex = root.getPropertyValue('--wcm-z-index');\n      addDebugInfo(`CSS --wcm-z-index: ${wcmZIndex || '\u672A\u8BBE\u7F6E'}`);\n    }\n    \n    addDebugInfo('=== \u68C0\u67E5\u5B8C\u6210 ===');\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-gray-900 border border-gray-700 rounded-lg p-4 max-w-md z-50\">\n      <h3 className=\"text-white font-bold mb-3\">WalletConnect \u8C03\u8BD5</h3>\n      \n      <div className=\"flex gap-2 mb-3\">\n        <button\n          onClick={checkEnvironment}\n          className=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\n        >\n          \u68C0\u67E5\u73AF\u5883\n        </button>\n        <button\n          onClick={testWalletConnect}\n          disabled={isConnecting}\n          className=\"px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700 disabled:opacity-50\"\n        >\n          {isConnecting ? '\u8FDE\u63A5\u4E2D...' : '\u6D4B\u8BD5\u8FDE\u63A5'}\n        </button>\n        <button\n          onClick={clearDebugInfo}\n          className=\"px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700\"\n        >\n          \u6E05\u9664\n        </button>\n      </div>\n\n      <div className=\"bg-black rounded p-2 max-h-40 overflow-y-auto\">\n        {debugInfo.length === 0 ? (\n          <div className=\"text-gray-400 text-sm\">\u70B9\u51FB\u6309\u94AE\u5F00\u59CB\u8C03\u8BD5...</div>\n        ) : (\n          debugInfo.map((info, index) => (\n            <div key={index} className=\"text-green-400 text-xs mb-1 font-mono\">\n              {info}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WalletConnectDebug;\n"],
      names: ["WalletConnectDebug", "debugInfo", "setDebugInfo", "useState", "isConnecting", "setIsConnecting", "addDebugInfo", "info", "prev", "Date", "toLocaleTimeString", "testWalletConnect", "projectId", "process", "env", "NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID", "EthereumProvider", "provider", "init", "showQrModal", "chains", "optionalChains", "methods", "events", "qrModalOptions", "themeMode", "themeVariables", "on", "chainId", "accounts", "length", "enable", "getAccounts", "error", "message", "console", "clearDebugInfo", "checkEnvironment", "window", "NEXT_PUBLIC_CHAIN_ID", "rpcUrl", "NEXT_PUBLIC_RPC_URL", "root", "getComputedStyle", "document", "documentElement", "wcmZIndex", "getPropertyValue", "div", "className", "h3", "button", "onClick", "disabled", "map", "index"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1d9e9a077a25ba9b52b34ed346d64bb215c24cab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17kmtahuli = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17kmtahuli();
cov_17kmtahuli().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17kmtahuli().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_17kmtahuli().f[0]++;
    cov_17kmtahuli().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_17kmtahuli().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_17kmtahuli().s[4]++, require("react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_17kmtahuli().f[1]++;
  cov_17kmtahuli().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_17kmtahuli().b[0][0]++;
    cov_17kmtahuli().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_17kmtahuli().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_17kmtahuli().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_17kmtahuli().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_17kmtahuli().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_17kmtahuli().f[2]++;
    cov_17kmtahuli().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_17kmtahuli().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_17kmtahuli().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_17kmtahuli().f[3]++;
  cov_17kmtahuli().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_17kmtahuli().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_17kmtahuli().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_17kmtahuli().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_17kmtahuli().b[2][0]++;
    cov_17kmtahuli().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_17kmtahuli().b[2][1]++;
  }
  cov_17kmtahuli().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_17kmtahuli().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_17kmtahuli().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_17kmtahuli().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_17kmtahuli().b[4][0]++;
    cov_17kmtahuli().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_17kmtahuli().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_17kmtahuli().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_17kmtahuli().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_17kmtahuli().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_17kmtahuli().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_17kmtahuli().b[6][0]++;
    cov_17kmtahuli().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_17kmtahuli().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_17kmtahuli().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_17kmtahuli().s[19]++,
  /* istanbul ignore next */
  (cov_17kmtahuli().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_17kmtahuli().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_17kmtahuli().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_17kmtahuli().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_17kmtahuli().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_17kmtahuli().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_17kmtahuli().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_17kmtahuli().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_17kmtahuli().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_17kmtahuli().b[11][1]++, null));
      /* istanbul ignore next */
      cov_17kmtahuli().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_17kmtahuli().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_17kmtahuli().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_17kmtahuli().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_17kmtahuli().b[12][0]++;
        cov_17kmtahuli().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_17kmtahuli().b[12][1]++;
        cov_17kmtahuli().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_17kmtahuli().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_17kmtahuli().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_17kmtahuli().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_17kmtahuli().b[14][0]++;
    cov_17kmtahuli().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_17kmtahuli().b[14][1]++;
  }
  cov_17kmtahuli().s[29]++;
  return newObj;
}
/**
 * WalletConnect 调试组件
 * 用于测试和调试WalletConnect连接问题
 */
/* istanbul ignore next */
cov_17kmtahuli().s[30]++;
const WalletConnectDebug = () => {
  /* istanbul ignore next */
  cov_17kmtahuli().f[4]++;
  const [debugInfo, setDebugInfo] =
  /* istanbul ignore next */
  (cov_17kmtahuli().s[31]++, (0, _react.useState)([]));
  const [isConnecting, setIsConnecting] =
  /* istanbul ignore next */
  (cov_17kmtahuli().s[32]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_17kmtahuli().s[33]++;
  const addDebugInfo = info => {
    /* istanbul ignore next */
    cov_17kmtahuli().f[5]++;
    cov_17kmtahuli().s[34]++;
    setDebugInfo(prev => {
      /* istanbul ignore next */
      cov_17kmtahuli().f[6]++;
      cov_17kmtahuli().s[35]++;
      return [...prev, `${new Date().toLocaleTimeString()}: ${info}`];
    });
  };
  /* istanbul ignore next */
  cov_17kmtahuli().s[36]++;
  const testWalletConnect = async () => {
    /* istanbul ignore next */
    cov_17kmtahuli().f[7]++;
    cov_17kmtahuli().s[37]++;
    setIsConnecting(true);
    /* istanbul ignore next */
    cov_17kmtahuli().s[38]++;
    setDebugInfo([]);
    /* istanbul ignore next */
    cov_17kmtahuli().s[39]++;
    try {
      /* istanbul ignore next */
      cov_17kmtahuli().s[40]++;
      addDebugInfo('开始测试WalletConnect连接...');
      // 检查环境变量
      const projectId =
      /* istanbul ignore next */
      (cov_17kmtahuli().s[41]++, process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID);
      /* istanbul ignore next */
      cov_17kmtahuli().s[42]++;
      addDebugInfo(`项目ID: ${projectId ?
      /* istanbul ignore next */
      (cov_17kmtahuli().b[15][0]++, '已配置') :
      /* istanbul ignore next */
      (cov_17kmtahuli().b[15][1]++, '未配置')}`);
      /* istanbul ignore next */
      cov_17kmtahuli().s[43]++;
      if (!projectId) {
        /* istanbul ignore next */
        cov_17kmtahuli().b[16][0]++;
        cov_17kmtahuli().s[44]++;
        addDebugInfo('错误: 未找到WalletConnect项目ID');
        /* istanbul ignore next */
        cov_17kmtahuli().s[45]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_17kmtahuli().b[16][1]++;
      }
      // 动态导入WalletConnect
      cov_17kmtahuli().s[46]++;
      addDebugInfo('正在加载WalletConnect库...');
      const {
        EthereumProvider
      } =
      /* istanbul ignore next */
      (cov_17kmtahuli().s[47]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_17kmtahuli().f[8]++;
        cov_17kmtahuli().s[48]++;
        return /*#__PURE__*/_interop_require_wildcard(require("@walletconnect/ethereum-provider"));
      }));
      /* istanbul ignore next */
      cov_17kmtahuli().s[49]++;
      addDebugInfo('WalletConnect库加载成功');
      // 创建提供者
      /* istanbul ignore next */
      cov_17kmtahuli().s[50]++;
      addDebugInfo('正在创建EthereumProvider...');
      const provider =
      /* istanbul ignore next */
      (cov_17kmtahuli().s[51]++, await EthereumProvider.init({
        projectId,
        showQrModal: true,
        chains: [56],
        optionalChains: [1, 97],
        methods: ['eth_sendTransaction', 'eth_sign', 'personal_sign', 'eth_signTypedData'],
        events: ['chainChanged', 'accountsChanged'],
        qrModalOptions: {
          themeMode: 'dark',
          themeVariables: {
            '--wcm-z-index': '99999999',
            '--wcm-font-family': '"Inter", system-ui, sans-serif',
            '--wcm-background-color': '#1a1a1a',
            '--wcm-accent-color': '#0de5ff',
            '--wcm-text-color': '#ffffff',
            '--wcm-border-radius-master': '12px'
          }
        }
      }));
      /* istanbul ignore next */
      cov_17kmtahuli().s[52]++;
      addDebugInfo('EthereumProvider创建成功');
      // 设置事件监听器
      /* istanbul ignore next */
      cov_17kmtahuli().s[53]++;
      provider.on('connect', info => {
        /* istanbul ignore next */
        cov_17kmtahuli().f[9]++;
        cov_17kmtahuli().s[54]++;
        addDebugInfo(`连接成功，链ID: ${info.chainId}`);
      });
      /* istanbul ignore next */
      cov_17kmtahuli().s[55]++;
      provider.on('disconnect', () => {
        /* istanbul ignore next */
        cov_17kmtahuli().f[10]++;
        cov_17kmtahuli().s[56]++;
        addDebugInfo('连接断开');
      });
      /* istanbul ignore next */
      cov_17kmtahuli().s[57]++;
      provider.on('accountsChanged', accounts => {
        /* istanbul ignore next */
        cov_17kmtahuli().f[11]++;
        cov_17kmtahuli().s[58]++;
        addDebugInfo(`账户变更: ${accounts.length} 个账户`);
      });
      /* istanbul ignore next */
      cov_17kmtahuli().s[59]++;
      provider.on('chainChanged', chainId => {
        /* istanbul ignore next */
        cov_17kmtahuli().f[12]++;
        cov_17kmtahuli().s[60]++;
        addDebugInfo(`链变更: ${chainId}`);
      });
      // 请求连接
      /* istanbul ignore next */
      cov_17kmtahuli().s[61]++;
      addDebugInfo('正在请求连接...');
      /* istanbul ignore next */
      cov_17kmtahuli().s[62]++;
      await provider.enable();
      const accounts =
      /* istanbul ignore next */
      (cov_17kmtahuli().s[63]++, await provider.getAccounts());
      /* istanbul ignore next */
      cov_17kmtahuli().s[64]++;
      addDebugInfo(`获取到账户: ${accounts.length} 个`);
      /* istanbul ignore next */
      cov_17kmtahuli().s[65]++;
      if (
      /* istanbul ignore next */
      (cov_17kmtahuli().b[18][0]++, accounts) &&
      /* istanbul ignore next */
      (cov_17kmtahuli().b[18][1]++, accounts.length > 0)) {
        /* istanbul ignore next */
        cov_17kmtahuli().b[17][0]++;
        cov_17kmtahuli().s[66]++;
        addDebugInfo(`连接成功! 地址: ${accounts[0]}`);
        /* istanbul ignore next */
        cov_17kmtahuli().s[67]++;
        addDebugInfo(`链ID: ${provider.chainId}`);
      } else {
        /* istanbul ignore next */
        cov_17kmtahuli().b[17][1]++;
        cov_17kmtahuli().s[68]++;
        addDebugInfo('警告: 未获取到账户');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_17kmtahuli().s[69]++;
      addDebugInfo(`错误: ${error.message}`);
      /* istanbul ignore next */
      cov_17kmtahuli().s[70]++;
      console.error('WalletConnect测试失败:', error);
    } finally {
      /* istanbul ignore next */
      cov_17kmtahuli().s[71]++;
      setIsConnecting(false);
    }
  };
  /* istanbul ignore next */
  cov_17kmtahuli().s[72]++;
  const clearDebugInfo = () => {
    /* istanbul ignore next */
    cov_17kmtahuli().f[13]++;
    cov_17kmtahuli().s[73]++;
    setDebugInfo([]);
  };
  /* istanbul ignore next */
  cov_17kmtahuli().s[74]++;
  const checkEnvironment = () => {
    /* istanbul ignore next */
    cov_17kmtahuli().f[14]++;
    cov_17kmtahuli().s[75]++;
    setDebugInfo([]);
    /* istanbul ignore next */
    cov_17kmtahuli().s[76]++;
    addDebugInfo('=== 环境检查 ===');
    // 检查浏览器环境
    /* istanbul ignore next */
    cov_17kmtahuli().s[77]++;
    addDebugInfo(`浏览器环境: ${typeof window !== 'undefined' ?
    /* istanbul ignore next */
    (cov_17kmtahuli().b[19][0]++, '是') :
    /* istanbul ignore next */
    (cov_17kmtahuli().b[19][1]++, '否')}`);
    // 检查环境变量
    const projectId =
    /* istanbul ignore next */
    (cov_17kmtahuli().s[78]++, process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID);
    /* istanbul ignore next */
    cov_17kmtahuli().s[79]++;
    addDebugInfo(`WalletConnect项目ID: ${
    /* istanbul ignore next */
    (cov_17kmtahuli().b[20][0]++, projectId) ||
    /* istanbul ignore next */
    (cov_17kmtahuli().b[20][1]++, '未设置')}`);
    // 检查其他相关环境变量
    const chainId =
    /* istanbul ignore next */
    (cov_17kmtahuli().s[80]++, process.env.NEXT_PUBLIC_CHAIN_ID);
    /* istanbul ignore next */
    cov_17kmtahuli().s[81]++;
    addDebugInfo(`链ID: ${
    /* istanbul ignore next */
    (cov_17kmtahuli().b[21][0]++, chainId) ||
    /* istanbul ignore next */
    (cov_17kmtahuli().b[21][1]++, '未设置')}`);
    const rpcUrl =
    /* istanbul ignore next */
    (cov_17kmtahuli().s[82]++, process.env.NEXT_PUBLIC_RPC_URL);
    /* istanbul ignore next */
    cov_17kmtahuli().s[83]++;
    addDebugInfo(`RPC URL: ${
    /* istanbul ignore next */
    (cov_17kmtahuli().b[22][0]++, rpcUrl) ||
    /* istanbul ignore next */
    (cov_17kmtahuli().b[22][1]++, '未设置')}`);
    // 检查CSS变量
    /* istanbul ignore next */
    cov_17kmtahuli().s[84]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_17kmtahuli().b[23][0]++;
      const root =
      /* istanbul ignore next */
      (cov_17kmtahuli().s[85]++, getComputedStyle(document.documentElement));
      const wcmZIndex =
      /* istanbul ignore next */
      (cov_17kmtahuli().s[86]++, root.getPropertyValue('--wcm-z-index'));
      /* istanbul ignore next */
      cov_17kmtahuli().s[87]++;
      addDebugInfo(`CSS --wcm-z-index: ${
      /* istanbul ignore next */
      (cov_17kmtahuli().b[24][0]++, wcmZIndex) ||
      /* istanbul ignore next */
      (cov_17kmtahuli().b[24][1]++, '未设置')}`);
    } else
    /* istanbul ignore next */
    {
      cov_17kmtahuli().b[23][1]++;
    }
    cov_17kmtahuli().s[88]++;
    addDebugInfo('=== 检查完成 ===');
  };
  /* istanbul ignore next */
  cov_17kmtahuli().s[89]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "fixed bottom-4 right-4 bg-gray-900 border border-gray-700 rounded-lg p-4 max-w-md z-50",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
      className: "text-white font-bold mb-3",
      children: "WalletConnect 调试"
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex gap-2 mb-3",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: checkEnvironment,
        className: "px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700",
        children: "检查环境"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: testWalletConnect,
        disabled: isConnecting,
        className: "px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700 disabled:opacity-50",
        children: isConnecting ?
        /* istanbul ignore next */
        (cov_17kmtahuli().b[25][0]++, '连接中...') :
        /* istanbul ignore next */
        (cov_17kmtahuli().b[25][1]++, '测试连接')
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: clearDebugInfo,
        className: "px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700",
        children: "清除"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-black rounded p-2 max-h-40 overflow-y-auto",
      children: debugInfo.length === 0 ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_17kmtahuli().b[26][0]++, (0, _jsxruntime.jsx)("div", {
        className: "text-gray-400 text-sm",
        children: "点击按钮开始调试..."
      })) :
      /* istanbul ignore next */
      (cov_17kmtahuli().b[26][1]++, debugInfo.map((info, index) => {
        /* istanbul ignore next */
        cov_17kmtahuli().f[15]++;
        cov_17kmtahuli().s[90]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-green-400 text-xs mb-1 font-mono",
          children: info
        }, index);
      }))
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_17kmtahuli().s[91]++, WalletConnectDebug);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,