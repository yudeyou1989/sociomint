{"version":3,"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/__tests__/social/SocialTaskList.test.tsx"],"sourcesContent":["/**\n * 社交任务列表功能测试\n * 测试社交任务的显示、参与、提交等功能\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { jest } from '@jest/globals';\n\n// Mock相关hooks\njest.mock('@/hooks/useSocialTasks', () => ({\n  useSocialTasks: jest.fn()\n}));\n\njest.mock('@/hooks/useWallet', () => ({\n  useWallet: jest.fn()\n}));\n\n// Mock任务数据\nconst mockTasks = [\n  {\n    id: '1',\n    type: 'twitter',\n    title: '关注官方Twitter',\n    description: '关注@SocioMint官方Twitter账号',\n    requirements: {\n      action: 'follow',\n      target: '@SocioMint'\n    },\n    reward: {\n      amount: '100',\n      token: 'FLOWER'\n    },\n    isActive: true,\n    startDate: Date.now() - 86400000,\n    endDate: Date.now() + 86400000,\n    maxParticipants: 1000,\n    currentParticipants: 150,\n    createdBy: 'admin'\n  },\n  {\n    id: '2',\n    type: 'telegram',\n    title: '加入Telegram群组',\n    description: '加入SocioMint官方Telegram群组',\n    requirements: {\n      action: 'join',\n      target: 'https://t.me/sociomint'\n    },\n    reward: {\n      amount: '50',\n      token: 'FLOWER'\n    },\n    isActive: true,\n    startDate: Date.now() - 86400000,\n    endDate: Date.now() + 86400000,\n    maxParticipants: 500,\n    currentParticipants: 200,\n    createdBy: 'admin'\n  }\n];\n\n// Mock组件\nconst MockSocialTaskList = () => {\n  const tasks = require('@/hooks/useSocialTasks').useSocialTasks();\n  const wallet = require('@/hooks/useWallet').useWallet();\n  \n  if (!wallet.isConnected) {\n    return <div>请先连接钱包</div>;\n  }\n  \n  if (tasks.isLoading) {\n    return <div>加载中...</div>;\n  }\n  \n  if (tasks.error) {\n    return <div className=\"error\">加载失败: {tasks.error}</div>;\n  }\n  \n  return (\n    <div>\n      <h2>社交任务列表</h2>\n      {tasks.data?.length === 0 ? (\n        <div>暂无可用任务</div>\n      ) : (\n        <div className=\"task-list\">\n          {tasks.data?.map((task: any) => (\n            <div key={task.id} className=\"task-item\">\n              <h3>{task.title}</h3>\n              <p>{task.description}</p>\n              <div className=\"task-info\">\n                <span>奖励: {task.reward.amount} {task.reward.token}</span>\n                <span>参与人数: {task.currentParticipants}/{task.maxParticipants}</span>\n              </div>\n              <button\n                onClick={() => tasks.participateTask(task.id)}\n                disabled={task.currentParticipants >= task.maxParticipants}\n              >\n                {task.currentParticipants >= task.maxParticipants ? '已满员' : '参与任务'}\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n      <button onClick={tasks.refreshTasks}>刷新任务</button>\n    </div>\n  );\n};\n\ndescribe('SocialTaskList', () => {\n  const mockUseSocialTasks = require('@/hooks/useSocialTasks').useSocialTasks;\n  const mockUseWallet = require('@/hooks/useWallet').useWallet;\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // 默认钱包状态\n    mockUseWallet.mockReturnValue({\n      address: '0x1234567890123456789012345678901234567890',\n      isConnected: true,\n      chainId: 56\n    });\n    \n    // 默认任务状态\n    mockUseSocialTasks.mockReturnValue({\n      data: mockTasks,\n      isLoading: false,\n      error: null,\n      participateTask: jest.fn(),\n      submitTask: jest.fn(),\n      refreshTasks: jest.fn()\n    });\n  });\n\n  describe('基本渲染', () => {\n    it('应该显示任务列表标题', () => {\n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('社交任务列表')).toBeInTheDocument();\n    });\n\n    it('应该显示所有任务', () => {\n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('关注官方Twitter')).toBeInTheDocument();\n      expect(screen.getByText('加入Telegram群组')).toBeInTheDocument();\n    });\n\n    it('应该显示任务详细信息', () => {\n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('关注@SocioMint官方Twitter账号')).toBeInTheDocument();\n      expect(screen.getByText('奖励: 100 FLOWER')).toBeInTheDocument();\n      expect(screen.getByText('参与人数: 150/1000')).toBeInTheDocument();\n    });\n\n    it('未连接钱包时应该显示提示', () => {\n      mockUseWallet.mockReturnValue({\n        isConnected: false\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('请先连接钱包')).toBeInTheDocument();\n    });\n  });\n\n  describe('加载状态', () => {\n    it('加载中时应该显示加载提示', () => {\n      mockUseSocialTasks.mockReturnValue({\n        data: null,\n        isLoading: true,\n        error: null,\n        participateTask: jest.fn(),\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('加载中...')).toBeInTheDocument();\n    });\n\n    it('加载失败时应该显示错误信息', () => {\n      mockUseSocialTasks.mockReturnValue({\n        data: null,\n        isLoading: false,\n        error: '网络连接失败',\n        participateTask: jest.fn(),\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('加载失败: 网络连接失败')).toBeInTheDocument();\n    });\n\n    it('没有任务时应该显示空状态', () => {\n      mockUseSocialTasks.mockReturnValue({\n        data: [],\n        isLoading: false,\n        error: null,\n        participateTask: jest.fn(),\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('暂无可用任务')).toBeInTheDocument();\n    });\n  });\n\n  describe('任务参与', () => {\n    it('点击参与按钮应该调用参与函数', () => {\n      const mockParticipateTask = jest.fn();\n      mockUseSocialTasks.mockReturnValue({\n        data: mockTasks,\n        isLoading: false,\n        error: null,\n        participateTask: mockParticipateTask,\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      const participateButtons = screen.getAllByText('参与任务');\n      fireEvent.click(participateButtons[0]);\n      \n      expect(mockParticipateTask).toHaveBeenCalledWith('1');\n    });\n\n    it('任务满员时按钮应该被禁用', () => {\n      const fullTask = {\n        ...mockTasks[0],\n        currentParticipants: 1000,\n        maxParticipants: 1000\n      };\n      \n      mockUseSocialTasks.mockReturnValue({\n        data: [fullTask],\n        isLoading: false,\n        error: null,\n        participateTask: jest.fn(),\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      const button = screen.getByText('已满员');\n      expect(button).toBeDisabled();\n    });\n  });\n\n  describe('任务刷新', () => {\n    it('点击刷新按钮应该调用刷新函数', () => {\n      const mockRefreshTasks = jest.fn();\n      mockUseSocialTasks.mockReturnValue({\n        data: mockTasks,\n        isLoading: false,\n        error: null,\n        participateTask: jest.fn(),\n        submitTask: jest.fn(),\n        refreshTasks: mockRefreshTasks\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      const refreshButton = screen.getByText('刷新任务');\n      fireEvent.click(refreshButton);\n      \n      expect(mockRefreshTasks).toHaveBeenCalled();\n    });\n  });\n\n  describe('任务类型显示', () => {\n    it('应该正确显示不同类型的任务', () => {\n      const mixedTasks = [\n        { ...mockTasks[0], type: 'twitter' },\n        { ...mockTasks[1], type: 'telegram' },\n        {\n          ...mockTasks[0],\n          id: '3',\n          type: 'discord',\n          title: '加入Discord服务器',\n          description: '加入SocioMint Discord服务器'\n        }\n      ];\n      \n      mockUseSocialTasks.mockReturnValue({\n        data: mixedTasks,\n        isLoading: false,\n        error: null,\n        participateTask: jest.fn(),\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('关注官方Twitter')).toBeInTheDocument();\n      expect(screen.getByText('加入Telegram群组')).toBeInTheDocument();\n      expect(screen.getByText('加入Discord服务器')).toBeInTheDocument();\n    });\n  });\n\n  describe('奖励显示', () => {\n    it('应该正确显示不同类型的奖励', () => {\n      const tasksWithDifferentRewards = [\n        { ...mockTasks[0], reward: { amount: '100', token: 'FLOWER' } },\n        { ...mockTasks[1], reward: { amount: '0.1', token: 'SM' } }\n      ];\n      \n      mockUseSocialTasks.mockReturnValue({\n        data: tasksWithDifferentRewards,\n        isLoading: false,\n        error: null,\n        participateTask: jest.fn(),\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('奖励: 100 FLOWER')).toBeInTheDocument();\n      expect(screen.getByText('奖励: 0.1 SM')).toBeInTheDocument();\n    });\n  });\n\n  describe('任务状态', () => {\n    it('应该只显示活跃的任务', () => {\n      const tasksWithInactive = [\n        { ...mockTasks[0], isActive: true },\n        { ...mockTasks[1], isActive: false, title: '已结束的任务' }\n      ];\n      \n      mockUseSocialTasks.mockReturnValue({\n        data: tasksWithInactive.filter(task => task.isActive),\n        isLoading: false,\n        error: null,\n        participateTask: jest.fn(),\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      expect(screen.getByText('关注官方Twitter')).toBeInTheDocument();\n      expect(screen.queryByText('已结束的任务')).not.toBeInTheDocument();\n    });\n  });\n\n  describe('可访问性', () => {\n    it('任务项应该有正确的结构', () => {\n      render(<MockSocialTaskList />);\n      \n      const taskItems = screen.getAllByRole('button', { name: /参与任务/ });\n      expect(taskItems).toHaveLength(2);\n    });\n\n    it('按钮应该有正确的状态', () => {\n      render(<MockSocialTaskList />);\n      \n      const buttons = screen.getAllByRole('button');\n      buttons.forEach(button => {\n        expect(button).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('错误处理', () => {\n    it('应该处理参与任务失败', async () => {\n      const mockParticipateTask = jest.fn().mockRejectedValue(new Error('参与失败'));\n      mockUseSocialTasks.mockReturnValue({\n        data: mockTasks,\n        isLoading: false,\n        error: null,\n        participateTask: mockParticipateTask,\n        submitTask: jest.fn(),\n        refreshTasks: jest.fn()\n      });\n      \n      render(<MockSocialTaskList />);\n      \n      const participateButton = screen.getAllByText('参与任务')[0];\n      fireEvent.click(participateButton);\n      \n      await waitFor(() => {\n        expect(mockParticipateTask).toHaveBeenCalled();\n      });\n    });\n  });\n});\n"],"names":["jest","mock","useSocialTasks","fn","useWallet","mockTasks","id","type","title","description","requirements","action","target","reward","amount","token","isActive","startDate","Date","now","endDate","maxParticipants","currentParticipants","createdBy","MockSocialTaskList","tasks","require","wallet","isConnected","div","isLoading","error","className","h2","data","length","map","task","h3","p","span","button","onClick","participateTask","disabled","refreshTasks","describe","mockUseSocialTasks","mockUseWallet","beforeEach","clearAllMocks","mockReturnValue","address","chainId","submitTask","it","render","expect","screen","getByText","toBeInTheDocument","mockParticipateTask","participateButtons","getAllByText","fireEvent","click","toHaveBeenCalledWith","fullTask","toBeDisabled","mockRefreshTasks","refreshButton","toHaveBeenCalled","mixedTasks","tasksWithDifferentRewards","tasksWithInactive","filter","queryByText","not","taskItems","getAllByRole","name","toHaveLength","buttons","forEach","mockRejectedValue","Error","participateButton","waitFor"],"mappings":"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"}