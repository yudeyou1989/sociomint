{"version":3,"names":["cov_1ubdu6lcnl","actualCoverage","s","BOX_CONTRACT_ADDRESSES","f","CONTRACTS","CONTRACT_ADDRESSES","SM_EXCHANGE_ABI","SM_TOKEN_ABI","contractAbis","contractAddresses","getBoxContractAddress","MAINNET","SM_TOKEN","SM_EXCHANGE","TESTNET","SM_TOKEN_TEST","LOCAL","networkId","b","token","process","env","NEXT_PUBLIC_SM_TOKEN_ADDRESS","exchange","NEXT_PUBLIC_SM_EXCHANGE_ADDRESS","tokenTest","smToken","smTokenExchange"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/config/contracts.ts"],"sourcesContent":["// 合约地址配置\nexport const CONTRACTS = {\n  // 主网\n  MAINNET: {\n    SM_TOKEN: \"0x8A791620dd6260079BF849Dc5567aDC3F2FdC318\", // 生产环境SMToken合约地址\n    SM_EXCHANGE: \"0x9B73F7d66d4aa53B073A5178CCd5FB381052EfeA\", // 生产环境SMTokenExchange合约地址\n  },\n  // 测试网\n  TESTNET: {\n    SM_TOKEN: \"0xd7d7dd989642222B6f685aF0220dc0065F489ae0\", // SMToken测试网合约地址\n    SM_EXCHANGE: \"0xF0c4729f07d7B2F03E2E2F2feED36386Dc8bFb8E\", // SMTokenExchange测试网合约地址\n    SM_TOKEN_TEST: \"0xa1f5Fba244B0030bbc6fD115E0351a731521DfD9\", // SMToken_test测试网合约地址 (1分钟时间锁)\n  },\n  // 本地开发环境\n  LOCAL: {\n    SM_TOKEN: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\", // SMToken本地合约地址\n    SM_EXCHANGE: \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\", // SMTokenExchange本地合约地址\n  }\n};\n\n// 宝箱系统合约地址\ninterface BoxContractAddresses {\n  [networkId: number]: string;\n}\n\nexport const BOX_CONTRACT_ADDRESSES: BoxContractAddresses = {\n  97: '0x5FbDB2315678afecb367f032d93F642f64180aa3', // BSC Testnet\n  56: '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318'  // BSC Mainnet\n}\n\n/**\n * 获取当前网络的宝箱合约地址\n * @param networkId 网络ID\n * @returns 宝箱合约地址\n */\nexport const getBoxContractAddress = (networkId: number): string => {\n  return BOX_CONTRACT_ADDRESSES[networkId] || BOX_CONTRACT_ADDRESSES[97]; // 默认返回测试网地址\n};\n\n// 导出合约地址常量，用于前端组件\nexport const CONTRACT_ADDRESSES = {\n  token: process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS || CONTRACTS.TESTNET.SM_TOKEN_TEST, // 使用测试代币\n  exchange: process.env.NEXT_PUBLIC_SM_EXCHANGE_ADDRESS || CONTRACTS.TESTNET.SM_EXCHANGE,\n  tokenTest: CONTRACTS.TESTNET.SM_TOKEN_TEST,\n};\n\n// SMToken ABI\nconst SM_TOKEN_ABI = [\n  {\n    \"inputs\": [],\n    \"name\": \"MINTER_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"PAUSER_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"DEFAULT_ADMIN_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"scheduleMint\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"actionHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"executeMint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"hasRole\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\n// SMTokenExchange ABI\nconst SM_EXCHANGE_ABI = [\n  {\n    \"inputs\": [],\n    \"name\": \"exchangeTokens\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getExchangeStats\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalTokensSold\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalTokensRemaining\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalBnbRaised\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"currentPrice\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"nextRoundPrice\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"userData\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint128\",\n        \"name\": \"totalPurchases\",\n        \"type\": \"uint128\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isVerified\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"lastPurchaseTime\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"hasRefundRequest\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\n// 为了向后兼容，添加这些导出\nexport const contractAddresses = CONTRACT_ADDRESSES;\nexport const contractAbis = {\n  smToken: SM_TOKEN_ABI,\n  smTokenExchange: SM_EXCHANGE_ABI,\n};\n\n// 导出ABI常量\nexport { SM_TOKEN_ABI, SM_EXCHANGE_ABI };\n\n// 导出类型定义\nexport interface ExchangeStats {\n  totalTokensSold: bigint;\n  totalTokensRemaining: bigint;\n  totalBnbRaised: bigint;\n  currentPrice: bigint;\n  nextRoundPrice: bigint;\n  isActive: boolean;\n  currentRound: number;\n}\n"],"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","ignoreList":[]}