{"version":3,"names":["cov_2qcldeyohj","actualCoverage","s","OptimizedAvatar","f","OptimizedBackgroundImage","OptimizedImage","default","_default","src","alt","width","height","className","b","priority","quality","placeholder","blurDataURL","onLoad","onError","lazy","sizes","isLoading","setIsLoading","_react","useState","hasError","setHasError","isInView","setIsInView","imgRef","useRef","observerRef","useEffect","current","IntersectionObserver","entries","forEach","entry","isIntersecting","disconnect","rootMargin","threshold","observe","handleLoad","useCallback","handleError","generateSrcSet","baseSrc","map","size","join","_jsxruntime","jsx","_material","Box","ref","sx","display","alignItems","justifyContent","backgroundColor","Skeleton","variant","animation","color","fontSize","jsxs","position","overflow","top","left","zIndex","style","objectFit","filter","srcSet","loading","decoding","transition","opacity","children","overlay","right","bottom"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/common/OptimizedImage.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useRef, useEffect } from 'react';\nimport { Box, Skeleton } from '@mui/material';\n\ninterface OptimizedImageProps {\n  src: string;\n  alt: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  priority?: boolean;\n  quality?: number;\n  placeholder?: 'blur' | 'empty';\n  blurDataURL?: string;\n  onLoad?: () => void;\n  onError?: () => void;\n  lazy?: boolean;\n  sizes?: string;\n}\n\nexport const OptimizedImage: React.FC<OptimizedImageProps> = ({\n  src,\n  alt,\n  width,\n  height,\n  className = '',\n  priority = false,\n  quality = 75,\n  placeholder = 'empty',\n  blurDataURL,\n  onLoad,\n  onError,\n  lazy = true,\n  sizes = '100vw',\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [isInView, setIsInView] = useState(!lazy || priority);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n\n  // 懒加载观察器\n  useEffect(() => {\n    if (!lazy || priority || isInView) return;\n\n    observerRef.current = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsInView(true);\n            observerRef.current?.disconnect();\n          }\n        });\n      },\n      {\n        rootMargin: '50px',\n        threshold: 0.1,\n      }\n    );\n\n    if (imgRef.current) {\n      observerRef.current.observe(imgRef.current);\n    }\n\n    return () => {\n      observerRef.current?.disconnect();\n    };\n  }, [lazy, priority, isInView]);\n\n  // 图片加载处理\n  const handleLoad = useCallback(() => {\n    setIsLoading(false);\n    onLoad?.();\n  }, [onLoad]);\n\n  const handleError = useCallback(() => {\n    setIsLoading(false);\n    setHasError(true);\n    onError?.();\n  }, [onError]);\n\n  // 生成响应式图片URL\n  const generateSrcSet = (baseSrc: string) => {\n    const sizes = [640, 750, 828, 1080, 1200, 1920, 2048, 3840];\n    return sizes\n      .map((size) => `${baseSrc}?w=${size}&q=${quality} ${size}w`)\n      .join(', ');\n  };\n\n  // 如果还没有进入视口且启用了懒加载，显示占位符\n  if (!isInView && lazy && !priority) {\n    return (\n      <Box\n        ref={imgRef}\n        sx={{\n          width: width || '100%',\n          height: height || 'auto',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'grey.100',\n        }}\n        className={className}\n      >\n        <Skeleton\n          variant=\"rectangular\"\n          width={width || '100%'}\n          height={height || 200}\n          animation=\"wave\"\n        />\n      </Box>\n    );\n  }\n\n  // 错误状态\n  if (hasError) {\n    return (\n      <Box\n        sx={{\n          width: width || '100%',\n          height: height || 200,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'grey.100',\n          color: 'text.secondary',\n          fontSize: '0.875rem',\n        }}\n        className={className}\n      >\n        图片加载失败\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        width: width || '100%',\n        height: height || 'auto',\n        overflow: 'hidden',\n      }}\n      className={className}\n    >\n      {/* 加载状态 */}\n      {isLoading && (\n        <Skeleton\n          variant=\"rectangular\"\n          width=\"100%\"\n          height={height || 200}\n          animation=\"wave\"\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            zIndex: 1,\n          }}\n        />\n      )}\n\n      {/* 模糊占位符 */}\n      {placeholder === 'blur' && blurDataURL && isLoading && (\n        <img\n          src={blurDataURL}\n          alt=\"\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            filter: 'blur(10px)',\n            zIndex: 0,\n          }}\n        />\n      )}\n\n      {/* 主图片 */}\n      <img\n        ref={imgRef}\n        src={`${src}?w=${width || 1200}&q=${quality}`}\n        srcSet={generateSrcSet(src)}\n        sizes={sizes}\n        alt={alt}\n        width={width}\n        height={height}\n        loading={priority ? 'eager' : 'lazy'}\n        decoding=\"async\"\n        onLoad={handleLoad}\n        onError={handleError}\n        style={{\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n          transition: 'opacity 0.3s ease-in-out',\n          opacity: isLoading ? 0 : 1,\n        }}\n      />\n    </Box>\n  );\n};\n\n// 头像组件优化版本\nexport const OptimizedAvatar: React.FC<{\n  src: string;\n  alt: string;\n  size?: number;\n  className?: string;\n}> = ({ src, alt, size = 40, className = '' }) => {\n  return (\n    <OptimizedImage\n      src={src}\n      alt={alt}\n      width={size}\n      height={size}\n      className={`rounded-full ${className}`}\n      quality={90}\n      priority={false}\n      lazy={true}\n    />\n  );\n};\n\n// 背景图片组件\nexport const OptimizedBackgroundImage: React.FC<{\n  src: string;\n  alt: string;\n  children: React.ReactNode;\n  className?: string;\n  overlay?: boolean;\n}> = ({ src, alt, children, className = '', overlay = false }) => {\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n      }}\n      className={className}\n    >\n      <OptimizedImage\n        src={src}\n        alt={alt}\n        priority={true}\n        quality={80}\n        lazy={false}\n        className=\"absolute inset-0 w-full h-full object-cover\"\n      />\n      \n      {overlay && (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0, 0, 0, 0.4)',\n            zIndex: 1,\n          }}\n        />\n      )}\n      \n      <Box\n        sx={{\n          position: 'relative',\n          zIndex: 2,\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default OptimizedImage;\n"],"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","ignoreList":[]}