e13a1d945ccd7f6f8c431d9b2995bda7
/**
 * 区块链监控模块
 * 监控智能合约事件和交易状态
 */"use strict";

/* istanbul ignore next */
function cov_1zie7tvuxg() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/lib/monitoring/blockchainMonitor.ts";
  var hash = "c36e1d86da555ba963471c5536180aa4a8e16701";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/lib/monitoring/blockchainMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "8": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "9": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 52
        }
      },
      "10": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "11": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "12": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "13": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 34,
          column: 57
        }
      },
      "14": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "15": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 59
        }
      },
      "16": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 37,
          column: 73
        }
      },
      "17": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "18": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 60
        }
      },
      "19": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 82
        }
      },
      "20": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "21": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "22": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 105
        }
      },
      "23": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 93
        }
      },
      "24": {
        start: {
          line: 58,
          column: 19
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "25": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "27": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "28": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "29": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 38
        }
      },
      "30": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 44
        }
      },
      "31": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 36
        }
      },
      "32": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 71
        }
      },
      "33": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 57
        }
      },
      "34": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 73
        }
      },
      "35": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "36": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 30
        }
      },
      "37": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 57
        }
      },
      "38": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "39": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 70
        }
      },
      "40": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "41": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 39
        }
      },
      "42": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 20
        }
      },
      "43": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "44": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 60
        }
      },
      "45": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "46": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "47": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 39
        }
      },
      "48": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 49
        }
      },
      "49": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "50": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 53
        }
      },
      "51": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 57
        }
      },
      "52": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 82
        }
      },
      "53": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 69
        }
      },
      "54": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "55": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "56": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 65
        }
      },
      "57": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 63
        }
      },
      "58": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 59
        }
      },
      "59": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 75
        }
      },
      "60": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 73
        }
      },
      "61": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 56
        }
      },
      "62": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 45
        }
      },
      "63": {
        start: {
          line: 134,
          column: 35
        },
        end: {
          line: 163,
          column: 1
        }
      },
      "64": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "65": {
        start: {
          line: 136,
          column: 42
        },
        end: {
          line: 136,
          column: 58
        }
      },
      "66": {
        start: {
          line: 137,
          column: 32
        },
        end: {
          line: 137,
          column: 66
        }
      },
      "67": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 95
        }
      },
      "68": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "69": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 138
        }
      },
      "70": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 103
        }
      },
      "71": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 73
        }
      },
      "72": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "73": {
        start: {
          line: 166,
          column: 32
        },
        end: {
          line: 195,
          column: 1
        }
      },
      "74": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "75": {
        start: {
          line: 168,
          column: 42
        },
        end: {
          line: 168,
          column: 58
        }
      },
      "76": {
        start: {
          line: 169,
          column: 32
        },
        end: {
          line: 169,
          column: 66
        }
      },
      "77": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 97
        }
      },
      "78": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 184,
          column: 11
        }
      },
      "79": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 142
        }
      },
      "80": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 100
        }
      },
      "81": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 70
        }
      },
      "82": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 193,
          column: 11
        }
      },
      "83": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 225,
          column: 1
        }
      },
      "84": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "85": {
        start: {
          line: 200,
          column: 48
        },
        end: {
          line: 200,
          column: 64
        }
      },
      "86": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 52
        }
      },
      "87": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 213,
          column: 11
        }
      },
      "88": {
        start: {
          line: 215,
          column: 26
        },
        end: {
          line: 215,
          column: 60
        }
      },
      "89": {
        start: {
          line: 216,
          column: 24
        },
        end: {
          line: 216,
          column: 56
        }
      },
      "90": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 139
        }
      },
      "91": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 69
        }
      },
      "92": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 223,
          column: 11
        }
      },
      "93": {
        start: {
          line: 228,
          column: 29
        },
        end: {
          line: 242,
          column: 1
        }
      },
      "94": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "95": {
        start: {
          line: 230,
          column: 61
        },
        end: {
          line: 230,
          column: 77
        }
      },
      "96": {
        start: {
          line: 231,
          column: 39
        },
        end: {
          line: 231,
          column: 80
        }
      },
      "97": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 93
        }
      },
      "98": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 132
        }
      },
      "99": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 67
        }
      },
      "100": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "101": {
        start: {
          line: 245,
          column: 37
        },
        end: {
          line: 259,
          column: 1
        }
      },
      "102": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "103": {
        start: {
          line: 247,
          column: 42
        },
        end: {
          line: 247,
          column: 58
        }
      },
      "104": {
        start: {
          line: 248,
          column: 38
        },
        end: {
          line: 248,
          column: 78
        }
      },
      "105": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 96
        }
      },
      "106": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 117
        }
      },
      "107": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 75
        }
      },
      "108": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 257,
          column: 11
        }
      },
      "109": {
        start: {
          line: 262,
          column: 36
        },
        end: {
          line: 281,
          column: 1
        }
      },
      "110": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "111": {
        start: {
          line: 264,
          column: 33
        },
        end: {
          line: 264,
          column: 49
        }
      },
      "112": {
        start: {
          line: 265,
          column: 32
        },
        end: {
          line: 265,
          column: 66
        }
      },
      "113": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 76
        }
      },
      "114": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 120
        }
      },
      "115": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "116": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 74
        }
      },
      "117": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 279,
          column: 11
        }
      },
      "118": {
        start: {
          line: 284,
          column: 32
        },
        end: {
          line: 300,
          column: 1
        }
      },
      "119": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 299,
          column: 5
        }
      },
      "120": {
        start: {
          line: 286,
          column: 36
        },
        end: {
          line: 286,
          column: 52
        }
      },
      "121": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "122": {
        start: {
          line: 289,
          column: 36
        },
        end: {
          line: 289,
          column: 69
        }
      },
      "123": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 90
        }
      },
      "124": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 106
        }
      },
      "125": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 65
        }
      },
      "126": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 298,
          column: 11
        }
      },
      "127": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 327,
          column: 14
        }
      },
      "128": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 44
        }
      },
      "129": {
        start: {
          line: 305,
          column: 37
        },
        end: {
          line: 305,
          column: 44
        }
      },
      "130": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "131": {
        start: {
          line: 308,
          column: 33
        },
        end: {
          line: 308,
          column: 64
        }
      },
      "132": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 312,
          column: 13
        }
      },
      "133": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 60
        }
      },
      "134": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 65
        }
      },
      "135": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 40
        }
      },
      "136": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 38
        }
      },
      "137": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 90
        }
      },
      "138": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 325,
          column: 13
        }
      },
      "139": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 319,
          column: 103
        }
      },
      "140": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 324,
          column: 19
        }
      },
      "141": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 332,
          column: 37
        }
      },
      "142": {
        start: {
          line: 332,
          column: 30
        },
        end: {
          line: 332,
          column: 37
        }
      },
      "143": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "144": {
        start: {
          line: 334,
          column: 23
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "145": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "146": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 351,
          column: 11
        }
      },
      "147": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 71
        }
      },
      "148": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 360,
          column: 6
        }
      },
      "149": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 383,
          column: 5
        }
      },
      "150": {
        start: {
          line: 364,
          column: 49
        },
        end: {
          line: 368,
          column: 10
        }
      },
      "151": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 374,
          column: 10
        }
      },
      "152": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 382,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 23
          }
        },
        loc: {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 21,
            column: 29
          }
        },
        loc: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 27
          },
          end: {
            line: 24,
            column: 28
          }
        },
        loc: {
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "startBlockchainMonitor",
        decl: {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 37
          }
        },
        loc: {
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 64
      },
      "6": {
        name: "stopBlockchainMonitor",
        decl: {
          start: {
            line: 96,
            column: 15
          },
          end: {
            line: 96,
            column: 36
          }
        },
        loc: {
          start: {
            line: 96,
            column: 39
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 96
      },
      "7": {
        name: "setupEventListeners",
        decl: {
          start: {
            line: 120,
            column: 13
          },
          end: {
            line: 120,
            column: 32
          }
        },
        loc: {
          start: {
            line: 120,
            column: 35
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 120
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 134,
            column: 35
          },
          end: {
            line: 134,
            column: 36
          }
        },
        loc: {
          start: {
            line: 134,
            column: 63
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 134
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 166,
            column: 32
          },
          end: {
            line: 166,
            column: 33
          }
        },
        loc: {
          start: {
            line: 166,
            column: 60
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 166
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 32
          }
        },
        loc: {
          start: {
            line: 198,
            column: 59
          },
          end: {
            line: 225,
            column: 1
          }
        },
        line: 198
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 228,
            column: 29
          },
          end: {
            line: 228,
            column: 30
          }
        },
        loc: {
          start: {
            line: 228,
            column: 57
          },
          end: {
            line: 242,
            column: 1
          }
        },
        line: 228
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 245,
            column: 37
          },
          end: {
            line: 245,
            column: 38
          }
        },
        loc: {
          start: {
            line: 245,
            column: 65
          },
          end: {
            line: 259,
            column: 1
          }
        },
        line: 245
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 262,
            column: 36
          },
          end: {
            line: 262,
            column: 37
          }
        },
        loc: {
          start: {
            line: 262,
            column: 64
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 262
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 284,
            column: 32
          },
          end: {
            line: 284,
            column: 33
          }
        },
        loc: {
          start: {
            line: 284,
            column: 60
          },
          end: {
            line: 300,
            column: 1
          }
        },
        line: 284
      },
      "15": {
        name: "startPeriodicChecks",
        decl: {
          start: {
            line: 303,
            column: 13
          },
          end: {
            line: 303,
            column: 32
          }
        },
        loc: {
          start: {
            line: 303,
            column: 35
          },
          end: {
            line: 328,
            column: 1
          }
        },
        line: 303
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 304,
            column: 17
          }
        },
        loc: {
          start: {
            line: 304,
            column: 26
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 304
      },
      "17": {
        name: "sendNotification",
        decl: {
          start: {
            line: 331,
            column: 19
          },
          end: {
            line: 331,
            column: 35
          }
        },
        loc: {
          start: {
            line: 331,
            column: 51
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 331
      },
      "18": {
        name: "getMonitorStatus",
        decl: {
          start: {
            line: 356,
            column: 9
          },
          end: {
            line: 356,
            column: 25
          }
        },
        loc: {
          start: {
            line: 356,
            column: 28
          },
          end: {
            line: 361,
            column: 1
          }
        },
        line: 356
      },
      "19": {
        name: "healthCheck",
        decl: {
          start: {
            line: 362,
            column: 15
          },
          end: {
            line: 362,
            column: 26
          }
        },
        loc: {
          start: {
            line: 362,
            column: 29
          },
          end: {
            line: 384,
            column: 1
          }
        },
        line: 362
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "1": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "2": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "3": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 41
          }
        }, {
          start: {
            line: 288,
            column: 45
          },
          end: {
            line: 288,
            column: 72
          }
        }],
        line: 288
      },
      "4": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 305,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 305,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "5": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "6": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "7": {
        loc: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "8": {
        loc: {
          start: {
            line: 359,
            column: 16
          },
          end: {
            line: 359,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 359,
            column: 41
          },
          end: {
            line: 359,
            column: 86
          }
        }, {
          start: {
            line: 359,
            column: 89
          },
          end: {
            line: 359,
            column: 90
          }
        }],
        line: 359
      },
      "9": {
        loc: {
          start: {
            line: 373,
            column: 22
          },
          end: {
            line: 373,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 373,
            column: 42
          },
          end: {
            line: 373,
            column: 95
          }
        }, {
          start: {
            line: 373,
            column: 98
          },
          end: {
            line: 373,
            column: 101
          }
        }],
        line: 373
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/lib/monitoring/blockchainMonitor.ts"],
      sourcesContent: ["/**\n * \u533A\u5757\u94FE\u76D1\u63A7\u6A21\u5757\n * \u76D1\u63A7\u667A\u80FD\u5408\u7EA6\u4E8B\u4EF6\u548C\u4EA4\u6613\u72B6\u6001\n */\n\nimport { ethers } from 'ethers';\nimport { createClient } from '@supabase/supabase-js';\nimport { sendWebhookMessage } from '@/lib/social/discordAPI';\nimport { reportError, trackTransaction, addBreadcrumb } from './sentryConfig';\nimport type { Database } from '@/types/supabase';\n\n// \u73AF\u5883\u53D8\u91CF\nconst RPC_URL = process.env.NEXT_PUBLIC_RPC_URL!;\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY!;\nconst DISCORD_WEBHOOK_URL = process.env.DISCORD_WEBHOOK_URL;\nconst AIRDROP_POOL_ADDRESS = process.env.NEXT_PUBLIC_AIRDROP_POOL_ADDRESS!;\nconst SM_TOKEN_ADDRESS = process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS!;\n\n// \u521D\u59CB\u5316\u5BA2\u6237\u7AEF\nconst provider = new ethers.JsonRpcProvider(RPC_URL);\nconst supabase = createClient<Database>(SUPABASE_URL, SUPABASE_SERVICE_KEY);\n\n// \u5408\u7EA6 ABI\uFF08\u7B80\u5316\u7248\uFF09\nconst AIRDROP_POOL_ABI = [\n  'event FlowersDeposited(address indexed user, uint256 amount, uint256 roundId)',\n  'event RewardClaimed(address indexed user, uint256 amount, uint256 roundId)',\n  'event RoundStarted(uint256 indexed roundId, uint256 startTime, uint256 endTime)',\n  'event RoundEnded(uint256 indexed roundId, uint256 totalDeposits, uint256 participantCount)',\n  'event RewardsDistributed(uint256 indexed roundId, uint256 totalRewards)',\n  'event EmergencyWithdraw(address indexed user, uint256 amount)'\n];\n\nconst SM_TOKEN_ABI = [\n  'event Transfer(address indexed from, address indexed to, uint256 value)',\n  'event Approval(address indexed owner, address indexed spender, uint256 value)'\n];\n\n// \u5408\u7EA6\u5B9E\u4F8B\nconst airdropPoolContract = new ethers.Contract(AIRDROP_POOL_ADDRESS, AIRDROP_POOL_ABI, provider);\nconst smTokenContract = new ethers.Contract(SM_TOKEN_ADDRESS, SM_TOKEN_ABI, provider);\n\n// \u76D1\u63A7\u72B6\u6001\ninterface MonitorState {\n  isRunning: boolean;\n  lastBlockNumber: number;\n  errorCount: number;\n  startTime: Date;\n}\n\nlet monitorState: MonitorState = {\n  isRunning: false,\n  lastBlockNumber: 0,\n  errorCount: 0,\n  startTime: new Date()\n};\n\n// \u4E8B\u4EF6\u5904\u7406\u5668\u7C7B\u578B\ntype EventHandler = (event: ethers.Log, parsedEvent: ethers.LogDescription) => Promise<void>;\n\n/**\n * \u542F\u52A8\u533A\u5757\u94FE\u76D1\u63A7\n */\nexport async function startBlockchainMonitor(): Promise<void> {\n  if (monitorState.isRunning) {\n    console.log('\u26A0\uFE0F Blockchain monitor is already running');\n    return;\n  }\n\n  try {\n    monitorState.isRunning = true;\n    monitorState.startTime = new Date();\n    monitorState.errorCount = 0;\n\n    // \u83B7\u53D6\u5F53\u524D\u533A\u5757\u53F7\n    monitorState.lastBlockNumber = await provider.getBlockNumber();\n    \n    console.log('\uD83D\uDE80 Starting blockchain monitor...');\n    console.log(`\uD83D\uDCCA Current block: ${monitorState.lastBlockNumber}`);\n\n    // \u8BBE\u7F6E\u4E8B\u4EF6\u76D1\u542C\u5668\n    setupEventListeners();\n\n    // \u542F\u52A8\u5B9A\u671F\u68C0\u67E5\n    startPeriodicChecks();\n\n    // \u53D1\u9001\u542F\u52A8\u901A\u77E5\n    await sendNotification('\uD83D\uDE80 \u533A\u5757\u94FE\u76D1\u63A7\u5DF2\u542F\u52A8', 'success');\n\n    addBreadcrumb('Blockchain monitor started', 'monitor', {\n      blockNumber: monitorState.lastBlockNumber\n    });\n\n  } catch (error: any) {\n    console.error('\u274C Failed to start blockchain monitor:', error);\n    reportError(error, { component: 'blockchainMonitor', action: 'start' });\n    monitorState.isRunning = false;\n    throw error;\n  }\n}\n\n/**\n * \u505C\u6B62\u533A\u5757\u94FE\u76D1\u63A7\n */\nexport async function stopBlockchainMonitor(): Promise<void> {\n  if (!monitorState.isRunning) {\n    console.log('\u26A0\uFE0F Blockchain monitor is not running');\n    return;\n  }\n\n  try {\n    monitorState.isRunning = false;\n\n    // \u79FB\u9664\u6240\u6709\u4E8B\u4EF6\u76D1\u542C\u5668\n    airdropPoolContract.removeAllListeners();\n    smTokenContract.removeAllListeners();\n\n    console.log('\uD83D\uDED1 Blockchain monitor stopped');\n    \n    // \u53D1\u9001\u505C\u6B62\u901A\u77E5\n    await sendNotification('\uD83D\uDED1 \u533A\u5757\u94FE\u76D1\u63A7\u5DF2\u505C\u6B62', 'warning');\n\n    addBreadcrumb('Blockchain monitor stopped', 'monitor');\n\n  } catch (error: any) {\n    console.error('\u274C Failed to stop blockchain monitor:', error);\n    reportError(error, { component: 'blockchainMonitor', action: 'stop' });\n  }\n}\n\n/**\n * \u8BBE\u7F6E\u4E8B\u4EF6\u76D1\u542C\u5668\n */\nfunction setupEventListeners(): void {\n  // \u7A7A\u6295\u6C60\u4E8B\u4EF6\u76D1\u542C\n  airdropPoolContract.on('FlowersDeposited', handleFlowersDeposited);\n  airdropPoolContract.on('RewardClaimed', handleRewardClaimed);\n  airdropPoolContract.on('RoundStarted', handleRoundStarted);\n  airdropPoolContract.on('RoundEnded', handleRoundEnded);\n  airdropPoolContract.on('RewardsDistributed', handleRewardsDistributed);\n  airdropPoolContract.on('EmergencyWithdraw', handleEmergencyWithdraw);\n\n  // SM \u4EE3\u5E01\u4E8B\u4EF6\u76D1\u542C\uFF08\u4EC5\u76D1\u63A7\u4E0E\u7A7A\u6295\u6C60\u76F8\u5173\u7684\u8F6C\u8D26\uFF09\n  smTokenContract.on('Transfer', handleTokenTransfer);\n\n  console.log('\uD83D\uDC42 Event listeners set up');\n}\n\n/**\n * \u5904\u7406\u5C0F\u7EA2\u82B1\u6295\u5165\u4E8B\u4EF6\n */\nconst handleFlowersDeposited: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { user, amount, roundId } = parsedEvent.args;\n    const amountFormatted = ethers.formatEther(amount);\n\n    console.log(`\uD83C\uDF38 Flowers deposited: ${amountFormatted} by ${user} in round ${roundId}`);\n\n    // \u8BB0\u5F55\u5230\u6570\u636E\u5E93\n    await supabase\n      .from('airdrop_events')\n      .insert({\n        event_type: 'deposit',\n        user_id: user,\n        round_id: Number(roundId),\n        amount: amountFormatted,\n        tx_hash: event.transactionHash,\n        block_number: event.blockNumber,\n        event_data: {\n          user,\n          amount: amount.toString(),\n          roundId: roundId.toString()\n        }\n      });\n\n    // \u53D1\u9001\u901A\u77E5\n    await sendNotification(\n      `\uD83C\uDF38 \u65B0\u7684\u5C0F\u7EA2\u82B1\u6295\u5165\\n\u7528\u6237: ${user.slice(0, 6)}...${user.slice(-4)}\\n\u6570\u91CF: ${amountFormatted}\\n\u8F6E\u6B21: ${roundId}`,\n      'info'\n    );\n\n    trackTransaction(event.transactionHash, 'flowers_deposit', amountFormatted);\n\n  } catch (error: any) {\n    console.error('\u274C Error handling FlowersDeposited event:', error);\n    reportError(error, { event: 'FlowersDeposited', txHash: event.transactionHash });\n  }\n};\n\n/**\n * \u5904\u7406\u5956\u52B1\u9886\u53D6\u4E8B\u4EF6\n */\nconst handleRewardClaimed: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { user, amount, roundId } = parsedEvent.args;\n    const amountFormatted = ethers.formatEther(amount);\n\n    console.log(`\uD83C\uDFC6 Reward claimed: ${amountFormatted} SM by ${user} from round ${roundId}`);\n\n    // \u8BB0\u5F55\u5230\u6570\u636E\u5E93\n    await supabase\n      .from('airdrop_events')\n      .insert({\n        event_type: 'claim',\n        user_id: user,\n        round_id: Number(roundId),\n        amount: amountFormatted,\n        tx_hash: event.transactionHash,\n        block_number: event.blockNumber,\n        event_data: {\n          user,\n          amount: amount.toString(),\n          roundId: roundId.toString()\n        }\n      });\n\n    // \u53D1\u9001\u901A\u77E5\n    await sendNotification(\n      `\uD83C\uDFC6 \u5956\u52B1\u5DF2\u9886\u53D6\\n\u7528\u6237: ${user.slice(0, 6)}...${user.slice(-4)}\\n\u6570\u91CF: ${amountFormatted} SM\\n\u8F6E\u6B21: ${roundId}`,\n      'success'\n    );\n\n    trackTransaction(event.transactionHash, 'reward_claim', amountFormatted);\n\n  } catch (error: any) {\n    console.error('\u274C Error handling RewardClaimed event:', error);\n    reportError(error, { event: 'RewardClaimed', txHash: event.transactionHash });\n  }\n};\n\n/**\n * \u5904\u7406\u8F6E\u6B21\u5F00\u59CB\u4E8B\u4EF6\n */\nconst handleRoundStarted: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { roundId, startTime, endTime } = parsedEvent.args;\n\n    console.log(`\uD83D\uDE80 Round started: ${roundId}`);\n\n    // \u8BB0\u5F55\u5230\u6570\u636E\u5E93\n    await supabase\n      .from('airdrop_events')\n      .insert({\n        event_type: 'round_start',\n        round_id: Number(roundId),\n        tx_hash: event.transactionHash,\n        block_number: event.blockNumber,\n        event_data: {\n          roundId: roundId.toString(),\n          startTime: startTime.toString(),\n          endTime: endTime.toString()\n        }\n      });\n\n    // \u53D1\u9001\u901A\u77E5\n    const startDate = new Date(Number(startTime) * 1000);\n    const endDate = new Date(Number(endTime) * 1000);\n    \n    await sendNotification(\n      `\uD83D\uDE80 \u65B0\u8F6E\u6B21\u5F00\u59CB\\n\u8F6E\u6B21: ${roundId}\\n\u5F00\u59CB\u65F6\u95F4: ${startDate.toLocaleString()}\\n\u7ED3\u675F\u65F6\u95F4: ${endDate.toLocaleString()}`,\n      'info'\n    );\n\n  } catch (error: any) {\n    console.error('\u274C Error handling RoundStarted event:', error);\n    reportError(error, { event: 'RoundStarted', txHash: event.transactionHash });\n  }\n};\n\n/**\n * \u5904\u7406\u8F6E\u6B21\u7ED3\u675F\u4E8B\u4EF6\n */\nconst handleRoundEnded: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { roundId, totalDeposits, participantCount } = parsedEvent.args;\n    const totalDepositsFormatted = ethers.formatEther(totalDeposits);\n\n    console.log(`\uD83C\uDFC1 Round ended: ${roundId}, Total deposits: ${totalDepositsFormatted}`);\n\n    // \u53D1\u9001\u901A\u77E5\n    await sendNotification(\n      `\uD83C\uDFC1 \u8F6E\u6B21\u7ED3\u675F\\n\u8F6E\u6B21: ${roundId}\\n\u603B\u6295\u5165: ${totalDepositsFormatted} \u5C0F\u7EA2\u82B1\\n\u53C2\u4E0E\u4EBA\u6570: ${participantCount}`,\n      'warning'\n    );\n\n  } catch (error: any) {\n    console.error('\u274C Error handling RoundEnded event:', error);\n    reportError(error, { event: 'RoundEnded', txHash: event.transactionHash });\n  }\n};\n\n/**\n * \u5904\u7406\u5956\u52B1\u5206\u914D\u4E8B\u4EF6\n */\nconst handleRewardsDistributed: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { roundId, totalRewards } = parsedEvent.args;\n    const totalRewardsFormatted = ethers.formatEther(totalRewards);\n\n    console.log(`\uD83D\uDCB0 Rewards distributed: ${totalRewardsFormatted} SM for round ${roundId}`);\n\n    // \u53D1\u9001\u901A\u77E5\n    await sendNotification(\n      `\uD83D\uDCB0 \u5956\u52B1\u5DF2\u5206\u914D\\n\u8F6E\u6B21: ${roundId}\\n\u603B\u5956\u52B1: ${totalRewardsFormatted} SM\\n\u7528\u6237\u73B0\u5728\u53EF\u4EE5\u9886\u53D6\u5956\u52B1\uFF01`,\n      'success'\n    );\n\n  } catch (error: any) {\n    console.error('\u274C Error handling RewardsDistributed event:', error);\n    reportError(error, { event: 'RewardsDistributed', txHash: event.transactionHash });\n  }\n};\n\n/**\n * \u5904\u7406\u7D27\u6025\u63D0\u53D6\u4E8B\u4EF6\n */\nconst handleEmergencyWithdraw: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { user, amount } = parsedEvent.args;\n    const amountFormatted = ethers.formatEther(amount);\n\n    console.log(`\uD83D\uDEA8 Emergency withdraw: ${amountFormatted} by ${user}`);\n\n    // \u53D1\u9001\u7D27\u6025\u901A\u77E5\n    await sendNotification(\n      `\uD83D\uDEA8 \u7D27\u6025\u63D0\u53D6\u8B66\u544A\\n\u7528\u6237: ${user}\\n\u6570\u91CF: ${amountFormatted}\\n\u4EA4\u6613: ${event.transactionHash}`,\n      'error'\n    );\n\n    reportError(new Error('Emergency withdraw detected'), {\n      user,\n      amount: amountFormatted,\n      txHash: event.transactionHash\n    });\n\n  } catch (error: any) {\n    console.error('\u274C Error handling EmergencyWithdraw event:', error);\n    reportError(error, { event: 'EmergencyWithdraw', txHash: event.transactionHash });\n  }\n};\n\n/**\n * \u5904\u7406\u4EE3\u5E01\u8F6C\u8D26\u4E8B\u4EF6\n */\nconst handleTokenTransfer: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { from, to, value } = parsedEvent.args;\n    \n    // \u53EA\u76D1\u63A7\u4E0E\u7A7A\u6295\u6C60\u76F8\u5173\u7684\u8F6C\u8D26\n    if (from === AIRDROP_POOL_ADDRESS || to === AIRDROP_POOL_ADDRESS) {\n      const amountFormatted = ethers.formatEther(value);\n      \n      console.log(`\uD83D\uDCB8 SM Token transfer: ${amountFormatted} from ${from} to ${to}`);\n      \n      trackTransaction(event.transactionHash, 'token_transfer', amountFormatted);\n    }\n\n  } catch (error: any) {\n    console.error('\u274C Error handling Transfer event:', error);\n    reportError(error, { event: 'Transfer', txHash: event.transactionHash });\n  }\n};\n\n/**\n * \u542F\u52A8\u5B9A\u671F\u68C0\u67E5\n */\nfunction startPeriodicChecks(): void {\n  setInterval(async () => {\n    if (!monitorState.isRunning) return;\n\n    try {\n      // \u68C0\u67E5\u7F51\u7EDC\u8FDE\u63A5\n      const currentBlock = await provider.getBlockNumber();\n      \n      if (currentBlock > monitorState.lastBlockNumber) {\n        monitorState.lastBlockNumber = currentBlock;\n        console.log(`\uD83D\uDCCA Current block: ${currentBlock}`);\n      }\n\n      // \u91CD\u7F6E\u9519\u8BEF\u8BA1\u6570\n      monitorState.errorCount = 0;\n\n    } catch (error: any) {\n      monitorState.errorCount++;\n      console.error(`\u274C Periodic check failed (${monitorState.errorCount}):`, error);\n\n      if (monitorState.errorCount >= 5) {\n        await sendNotification(\n          `\uD83D\uDEA8 \u533A\u5757\u94FE\u76D1\u63A7\u8FDE\u7EED\u5931\u8D25 ${monitorState.errorCount} \u6B21\\n\u53EF\u80FD\u5B58\u5728\u7F51\u7EDC\u95EE\u9898`,\n          'error'\n        );\n        \n        reportError(error, { \n          component: 'blockchainMonitor', \n          action: 'periodicCheck',\n          errorCount: monitorState.errorCount \n        });\n      }\n    }\n  }, 30000); // \u6BCF30\u79D2\u68C0\u67E5\u4E00\u6B21\n}\n\n/**\n * \u53D1\u9001\u901A\u77E5\u5230 Discord\n */\nasync function sendNotification(message: string, type: 'info' | 'success' | 'warning' | 'error'): Promise<void> {\n  if (!DISCORD_WEBHOOK_URL) return;\n\n  try {\n    const colors = {\n      info: 0x3498db,\n      success: 0x2ecc71,\n      warning: 0xf39c12,\n      error: 0xe74c3c\n    };\n\n    const embed = {\n      title: 'SocioMint \u533A\u5757\u94FE\u76D1\u63A7',\n      description: message,\n      color: colors[type],\n      timestamp: new Date().toISOString(),\n      footer: {\n        text: 'SocioMint Blockchain Monitor'\n      }\n    };\n\n    await sendWebhookMessage(DISCORD_WEBHOOK_URL, '', [embed]);\n\n  } catch (error: any) {\n    console.error('\u274C Failed to send Discord notification:', error);\n  }\n}\n\n/**\n * \u83B7\u53D6\u76D1\u63A7\u72B6\u6001\n */\nexport function getMonitorStatus(): MonitorState & { uptime: number } {\n  return {\n    ...monitorState,\n    uptime: monitorState.isRunning ? Date.now() - monitorState.startTime.getTime() : 0\n  };\n}\n\n/**\n * \u624B\u52A8\u89E6\u53D1\u5065\u5EB7\u68C0\u67E5\n */\nexport async function healthCheck(): Promise<{\n  healthy: boolean;\n  blockNumber: number;\n  networkId: number;\n  gasPrice: string;\n  error?: string;\n}> {\n  try {\n    const [blockNumber, network, gasPrice] = await Promise.all([\n      provider.getBlockNumber(),\n      provider.getNetwork(),\n      provider.getFeeData()\n    ]);\n\n    return {\n      healthy: true,\n      blockNumber,\n      networkId: Number(network.chainId),\n      gasPrice: gasPrice.gasPrice ? ethers.formatUnits(gasPrice.gasPrice, 'gwei') : '0'\n    };\n\n  } catch (error: any) {\n    return {\n      healthy: false,\n      blockNumber: 0,\n      networkId: 0,\n      gasPrice: '0',\n      error: error.message\n    };\n  }\n}\n"],
      names: ["getMonitorStatus", "healthCheck", "startBlockchainMonitor", "stopBlockchainMonitor", "RPC_URL", "process", "env", "NEXT_PUBLIC_RPC_URL", "SUPABASE_URL", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_SERVICE_KEY", "SUPABASE_SERVICE_ROLE_KEY", "DISCORD_WEBHOOK_URL", "AIRDROP_POOL_ADDRESS", "NEXT_PUBLIC_AIRDROP_POOL_ADDRESS", "SM_TOKEN_ADDRESS", "NEXT_PUBLIC_SM_TOKEN_ADDRESS", "provider", "ethers", "JsonRpcProvider", "supabase", "createClient", "AIRDROP_POOL_ABI", "SM_TOKEN_ABI", "airdropPoolContract", "Contract", "smTokenContract", "monitorState", "isRunning", "lastBlockNumber", "errorCount", "startTime", "Date", "console", "log", "getBlockNumber", "setupEventListeners", "startPeriodicChecks", "sendNotification", "addBreadcrumb", "blockNumber", "error", "reportError", "component", "action", "removeAllListeners", "on", "handleFlowersDeposited", "handleRewardClaimed", "handleRoundStarted", "handleRoundEnded", "handleRewardsDistributed", "handleEmergencyWithdraw", "handleTokenTransfer", "event", "parsedEvent", "user", "amount", "roundId", "args", "amountFormatted", "formatEther", "from", "insert", "event_type", "user_id", "round_id", "Number", "tx_hash", "transactionHash", "block_number", "event_data", "toString", "slice", "trackTransaction", "txHash", "endTime", "startDate", "endDate", "toLocaleString", "totalDeposits", "participantCount", "totalDepositsFormatted", "totalRewards", "totalRewardsFormatted", "Error", "to", "value", "setInterval", "currentBlock", "message", "type", "colors", "info", "success", "warning", "embed", "title", "description", "color", "timestamp", "toISOString", "footer", "text", "sendWebhookMessage", "uptime", "now", "getTime", "network", "gasPrice", "Promise", "all", "getNetwork", "getFeeData", "healthy", "networkId", "chainId", "formatUnits"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c36e1d86da555ba963471c5536180aa4a8e16701"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zie7tvuxg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zie7tvuxg();
cov_1zie7tvuxg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[0]++;
  cov_1zie7tvuxg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1zie7tvuxg().s[3]++;
_export(exports, {
  getMonitorStatus: function () {
    /* istanbul ignore next */
    cov_1zie7tvuxg().f[1]++;
    cov_1zie7tvuxg().s[4]++;
    return getMonitorStatus;
  },
  healthCheck: function () {
    /* istanbul ignore next */
    cov_1zie7tvuxg().f[2]++;
    cov_1zie7tvuxg().s[5]++;
    return healthCheck;
  },
  startBlockchainMonitor: function () {
    /* istanbul ignore next */
    cov_1zie7tvuxg().f[3]++;
    cov_1zie7tvuxg().s[6]++;
    return startBlockchainMonitor;
  },
  stopBlockchainMonitor: function () {
    /* istanbul ignore next */
    cov_1zie7tvuxg().f[4]++;
    cov_1zie7tvuxg().s[7]++;
    return stopBlockchainMonitor;
  }
});
const _ethers =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[8]++, require("ethers"));
const _supabasejs =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[9]++, require("@supabase/supabase-js"));
const _discordAPI =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[10]++, require("../social/discordAPI"));
const _sentryConfig =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[11]++, require("./sentryConfig"));
// 环境变量
const RPC_URL =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[12]++, process.env.NEXT_PUBLIC_RPC_URL);
const SUPABASE_URL =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[13]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const SUPABASE_SERVICE_KEY =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[14]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
const DISCORD_WEBHOOK_URL =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[15]++, process.env.DISCORD_WEBHOOK_URL);
const AIRDROP_POOL_ADDRESS =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[16]++, process.env.NEXT_PUBLIC_AIRDROP_POOL_ADDRESS);
const SM_TOKEN_ADDRESS =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[17]++, process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS);
// 初始化客户端
const provider =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[18]++, new _ethers.ethers.JsonRpcProvider(RPC_URL));
const supabase =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[19]++, (0, _supabasejs.createClient)(SUPABASE_URL, SUPABASE_SERVICE_KEY));
// 合约 ABI（简化版）
const AIRDROP_POOL_ABI =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[20]++, ['event FlowersDeposited(address indexed user, uint256 amount, uint256 roundId)', 'event RewardClaimed(address indexed user, uint256 amount, uint256 roundId)', 'event RoundStarted(uint256 indexed roundId, uint256 startTime, uint256 endTime)', 'event RoundEnded(uint256 indexed roundId, uint256 totalDeposits, uint256 participantCount)', 'event RewardsDistributed(uint256 indexed roundId, uint256 totalRewards)', 'event EmergencyWithdraw(address indexed user, uint256 amount)']);
const SM_TOKEN_ABI =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[21]++, ['event Transfer(address indexed from, address indexed to, uint256 value)', 'event Approval(address indexed owner, address indexed spender, uint256 value)']);
// 合约实例
const airdropPoolContract =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[22]++, new _ethers.ethers.Contract(AIRDROP_POOL_ADDRESS, AIRDROP_POOL_ABI, provider));
const smTokenContract =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[23]++, new _ethers.ethers.Contract(SM_TOKEN_ADDRESS, SM_TOKEN_ABI, provider));
let monitorState =
/* istanbul ignore next */
(cov_1zie7tvuxg().s[24]++, {
  isRunning: false,
  lastBlockNumber: 0,
  errorCount: 0,
  startTime: new Date()
});
async function startBlockchainMonitor() {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[5]++;
  cov_1zie7tvuxg().s[25]++;
  if (monitorState.isRunning) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().b[0][0]++;
    cov_1zie7tvuxg().s[26]++;
    console.log('⚠️ Blockchain monitor is already running');
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[27]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1zie7tvuxg().b[0][1]++;
  }
  cov_1zie7tvuxg().s[28]++;
  try {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[29]++;
    monitorState.isRunning = true;
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[30]++;
    monitorState.startTime = new Date();
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[31]++;
    monitorState.errorCount = 0;
    // 获取当前区块号
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[32]++;
    monitorState.lastBlockNumber = await provider.getBlockNumber();
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[33]++;
    console.log('🚀 Starting blockchain monitor...');
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[34]++;
    console.log(`📊 Current block: ${monitorState.lastBlockNumber}`);
    // 设置事件监听器
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[35]++;
    setupEventListeners();
    // 启动定期检查
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[36]++;
    startPeriodicChecks();
    // 发送启动通知
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[37]++;
    await sendNotification('🚀 区块链监控已启动', 'success');
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[38]++;
    (0, _sentryConfig.addBreadcrumb)('Blockchain monitor started', 'monitor', {
      blockNumber: monitorState.lastBlockNumber
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[39]++;
    console.error('❌ Failed to start blockchain monitor:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[40]++;
    (0, _sentryConfig.reportError)(error, {
      component: 'blockchainMonitor',
      action: 'start'
    });
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[41]++;
    monitorState.isRunning = false;
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[42]++;
    throw error;
  }
}
async function stopBlockchainMonitor() {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[6]++;
  cov_1zie7tvuxg().s[43]++;
  if (!monitorState.isRunning) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().b[1][0]++;
    cov_1zie7tvuxg().s[44]++;
    console.log('⚠️ Blockchain monitor is not running');
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[45]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1zie7tvuxg().b[1][1]++;
  }
  cov_1zie7tvuxg().s[46]++;
  try {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[47]++;
    monitorState.isRunning = false;
    // 移除所有事件监听器
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[48]++;
    airdropPoolContract.removeAllListeners();
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[49]++;
    smTokenContract.removeAllListeners();
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[50]++;
    console.log('🛑 Blockchain monitor stopped');
    // 发送停止通知
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[51]++;
    await sendNotification('🛑 区块链监控已停止', 'warning');
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[52]++;
    (0, _sentryConfig.addBreadcrumb)('Blockchain monitor stopped', 'monitor');
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[53]++;
    console.error('❌ Failed to stop blockchain monitor:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[54]++;
    (0, _sentryConfig.reportError)(error, {
      component: 'blockchainMonitor',
      action: 'stop'
    });
  }
}
/**
 * 设置事件监听器
 */
function setupEventListeners() {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[7]++;
  cov_1zie7tvuxg().s[55]++;
  // 空投池事件监听
  airdropPoolContract.on('FlowersDeposited', handleFlowersDeposited);
  /* istanbul ignore next */
  cov_1zie7tvuxg().s[56]++;
  airdropPoolContract.on('RewardClaimed', handleRewardClaimed);
  /* istanbul ignore next */
  cov_1zie7tvuxg().s[57]++;
  airdropPoolContract.on('RoundStarted', handleRoundStarted);
  /* istanbul ignore next */
  cov_1zie7tvuxg().s[58]++;
  airdropPoolContract.on('RoundEnded', handleRoundEnded);
  /* istanbul ignore next */
  cov_1zie7tvuxg().s[59]++;
  airdropPoolContract.on('RewardsDistributed', handleRewardsDistributed);
  /* istanbul ignore next */
  cov_1zie7tvuxg().s[60]++;
  airdropPoolContract.on('EmergencyWithdraw', handleEmergencyWithdraw);
  // SM 代币事件监听（仅监控与空投池相关的转账）
  /* istanbul ignore next */
  cov_1zie7tvuxg().s[61]++;
  smTokenContract.on('Transfer', handleTokenTransfer);
  /* istanbul ignore next */
  cov_1zie7tvuxg().s[62]++;
  console.log('👂 Event listeners set up');
}
/**
 * 处理小红花投入事件
 */
/* istanbul ignore next */
cov_1zie7tvuxg().s[63]++;
const handleFlowersDeposited = async (event, parsedEvent) => {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[8]++;
  cov_1zie7tvuxg().s[64]++;
  try {
    const {
      user,
      amount,
      roundId
    } =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[65]++, parsedEvent.args);
    const amountFormatted =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[66]++, _ethers.ethers.formatEther(amount));
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[67]++;
    console.log(`🌸 Flowers deposited: ${amountFormatted} by ${user} in round ${roundId}`);
    // 记录到数据库
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[68]++;
    await supabase.from('airdrop_events').insert({
      event_type: 'deposit',
      user_id: user,
      round_id: Number(roundId),
      amount: amountFormatted,
      tx_hash: event.transactionHash,
      block_number: event.blockNumber,
      event_data: {
        user,
        amount: amount.toString(),
        roundId: roundId.toString()
      }
    });
    // 发送通知
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[69]++;
    await sendNotification(`🌸 新的小红花投入\n用户: ${user.slice(0, 6)}...${user.slice(-4)}\n数量: ${amountFormatted}\n轮次: ${roundId}`, 'info');
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[70]++;
    (0, _sentryConfig.trackTransaction)(event.transactionHash, 'flowers_deposit', amountFormatted);
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[71]++;
    console.error('❌ Error handling FlowersDeposited event:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[72]++;
    (0, _sentryConfig.reportError)(error, {
      event: 'FlowersDeposited',
      txHash: event.transactionHash
    });
  }
};
/**
 * 处理奖励领取事件
 */
/* istanbul ignore next */
cov_1zie7tvuxg().s[73]++;
const handleRewardClaimed = async (event, parsedEvent) => {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[9]++;
  cov_1zie7tvuxg().s[74]++;
  try {
    const {
      user,
      amount,
      roundId
    } =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[75]++, parsedEvent.args);
    const amountFormatted =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[76]++, _ethers.ethers.formatEther(amount));
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[77]++;
    console.log(`🏆 Reward claimed: ${amountFormatted} SM by ${user} from round ${roundId}`);
    // 记录到数据库
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[78]++;
    await supabase.from('airdrop_events').insert({
      event_type: 'claim',
      user_id: user,
      round_id: Number(roundId),
      amount: amountFormatted,
      tx_hash: event.transactionHash,
      block_number: event.blockNumber,
      event_data: {
        user,
        amount: amount.toString(),
        roundId: roundId.toString()
      }
    });
    // 发送通知
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[79]++;
    await sendNotification(`🏆 奖励已领取\n用户: ${user.slice(0, 6)}...${user.slice(-4)}\n数量: ${amountFormatted} SM\n轮次: ${roundId}`, 'success');
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[80]++;
    (0, _sentryConfig.trackTransaction)(event.transactionHash, 'reward_claim', amountFormatted);
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[81]++;
    console.error('❌ Error handling RewardClaimed event:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[82]++;
    (0, _sentryConfig.reportError)(error, {
      event: 'RewardClaimed',
      txHash: event.transactionHash
    });
  }
};
/**
 * 处理轮次开始事件
 */
/* istanbul ignore next */
cov_1zie7tvuxg().s[83]++;
const handleRoundStarted = async (event, parsedEvent) => {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[10]++;
  cov_1zie7tvuxg().s[84]++;
  try {
    const {
      roundId,
      startTime,
      endTime
    } =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[85]++, parsedEvent.args);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[86]++;
    console.log(`🚀 Round started: ${roundId}`);
    // 记录到数据库
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[87]++;
    await supabase.from('airdrop_events').insert({
      event_type: 'round_start',
      round_id: Number(roundId),
      tx_hash: event.transactionHash,
      block_number: event.blockNumber,
      event_data: {
        roundId: roundId.toString(),
        startTime: startTime.toString(),
        endTime: endTime.toString()
      }
    });
    // 发送通知
    const startDate =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[88]++, new Date(Number(startTime) * 1000));
    const endDate =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[89]++, new Date(Number(endTime) * 1000));
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[90]++;
    await sendNotification(`🚀 新轮次开始\n轮次: ${roundId}\n开始时间: ${startDate.toLocaleString()}\n结束时间: ${endDate.toLocaleString()}`, 'info');
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[91]++;
    console.error('❌ Error handling RoundStarted event:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[92]++;
    (0, _sentryConfig.reportError)(error, {
      event: 'RoundStarted',
      txHash: event.transactionHash
    });
  }
};
/**
 * 处理轮次结束事件
 */
/* istanbul ignore next */
cov_1zie7tvuxg().s[93]++;
const handleRoundEnded = async (event, parsedEvent) => {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[11]++;
  cov_1zie7tvuxg().s[94]++;
  try {
    const {
      roundId,
      totalDeposits,
      participantCount
    } =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[95]++, parsedEvent.args);
    const totalDepositsFormatted =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[96]++, _ethers.ethers.formatEther(totalDeposits));
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[97]++;
    console.log(`🏁 Round ended: ${roundId}, Total deposits: ${totalDepositsFormatted}`);
    // 发送通知
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[98]++;
    await sendNotification(`🏁 轮次结束\n轮次: ${roundId}\n总投入: ${totalDepositsFormatted} 小红花\n参与人数: ${participantCount}`, 'warning');
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[99]++;
    console.error('❌ Error handling RoundEnded event:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[100]++;
    (0, _sentryConfig.reportError)(error, {
      event: 'RoundEnded',
      txHash: event.transactionHash
    });
  }
};
/**
 * 处理奖励分配事件
 */
/* istanbul ignore next */
cov_1zie7tvuxg().s[101]++;
const handleRewardsDistributed = async (event, parsedEvent) => {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[12]++;
  cov_1zie7tvuxg().s[102]++;
  try {
    const {
      roundId,
      totalRewards
    } =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[103]++, parsedEvent.args);
    const totalRewardsFormatted =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[104]++, _ethers.ethers.formatEther(totalRewards));
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[105]++;
    console.log(`💰 Rewards distributed: ${totalRewardsFormatted} SM for round ${roundId}`);
    // 发送通知
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[106]++;
    await sendNotification(`💰 奖励已分配\n轮次: ${roundId}\n总奖励: ${totalRewardsFormatted} SM\n用户现在可以领取奖励！`, 'success');
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[107]++;
    console.error('❌ Error handling RewardsDistributed event:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[108]++;
    (0, _sentryConfig.reportError)(error, {
      event: 'RewardsDistributed',
      txHash: event.transactionHash
    });
  }
};
/**
 * 处理紧急提取事件
 */
/* istanbul ignore next */
cov_1zie7tvuxg().s[109]++;
const handleEmergencyWithdraw = async (event, parsedEvent) => {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[13]++;
  cov_1zie7tvuxg().s[110]++;
  try {
    const {
      user,
      amount
    } =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[111]++, parsedEvent.args);
    const amountFormatted =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[112]++, _ethers.ethers.formatEther(amount));
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[113]++;
    console.log(`🚨 Emergency withdraw: ${amountFormatted} by ${user}`);
    // 发送紧急通知
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[114]++;
    await sendNotification(`🚨 紧急提取警告\n用户: ${user}\n数量: ${amountFormatted}\n交易: ${event.transactionHash}`, 'error');
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[115]++;
    (0, _sentryConfig.reportError)(new Error('Emergency withdraw detected'), {
      user,
      amount: amountFormatted,
      txHash: event.transactionHash
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[116]++;
    console.error('❌ Error handling EmergencyWithdraw event:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[117]++;
    (0, _sentryConfig.reportError)(error, {
      event: 'EmergencyWithdraw',
      txHash: event.transactionHash
    });
  }
};
/**
 * 处理代币转账事件
 */
/* istanbul ignore next */
cov_1zie7tvuxg().s[118]++;
const handleTokenTransfer = async (event, parsedEvent) => {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[14]++;
  cov_1zie7tvuxg().s[119]++;
  try {
    const {
      from,
      to,
      value
    } =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[120]++, parsedEvent.args);
    // 只监控与空投池相关的转账
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[121]++;
    if (
    /* istanbul ignore next */
    (cov_1zie7tvuxg().b[3][0]++, from === AIRDROP_POOL_ADDRESS) ||
    /* istanbul ignore next */
    (cov_1zie7tvuxg().b[3][1]++, to === AIRDROP_POOL_ADDRESS)) {
      /* istanbul ignore next */
      cov_1zie7tvuxg().b[2][0]++;
      const amountFormatted =
      /* istanbul ignore next */
      (cov_1zie7tvuxg().s[122]++, _ethers.ethers.formatEther(value));
      /* istanbul ignore next */
      cov_1zie7tvuxg().s[123]++;
      console.log(`💸 SM Token transfer: ${amountFormatted} from ${from} to ${to}`);
      /* istanbul ignore next */
      cov_1zie7tvuxg().s[124]++;
      (0, _sentryConfig.trackTransaction)(event.transactionHash, 'token_transfer', amountFormatted);
    } else
    /* istanbul ignore next */
    {
      cov_1zie7tvuxg().b[2][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[125]++;
    console.error('❌ Error handling Transfer event:', error);
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[126]++;
    (0, _sentryConfig.reportError)(error, {
      event: 'Transfer',
      txHash: event.transactionHash
    });
  }
};
/**
 * 启动定期检查
 */
function startPeriodicChecks() {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[15]++;
  cov_1zie7tvuxg().s[127]++;
  setInterval(async () => {
    /* istanbul ignore next */
    cov_1zie7tvuxg().f[16]++;
    cov_1zie7tvuxg().s[128]++;
    if (!monitorState.isRunning) {
      /* istanbul ignore next */
      cov_1zie7tvuxg().b[4][0]++;
      cov_1zie7tvuxg().s[129]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1zie7tvuxg().b[4][1]++;
    }
    cov_1zie7tvuxg().s[130]++;
    try {
      // 检查网络连接
      const currentBlock =
      /* istanbul ignore next */
      (cov_1zie7tvuxg().s[131]++, await provider.getBlockNumber());
      /* istanbul ignore next */
      cov_1zie7tvuxg().s[132]++;
      if (currentBlock > monitorState.lastBlockNumber) {
        /* istanbul ignore next */
        cov_1zie7tvuxg().b[5][0]++;
        cov_1zie7tvuxg().s[133]++;
        monitorState.lastBlockNumber = currentBlock;
        /* istanbul ignore next */
        cov_1zie7tvuxg().s[134]++;
        console.log(`📊 Current block: ${currentBlock}`);
      } else
      /* istanbul ignore next */
      {
        cov_1zie7tvuxg().b[5][1]++;
      }
      // 重置错误计数
      cov_1zie7tvuxg().s[135]++;
      monitorState.errorCount = 0;
    } catch (error) {
      /* istanbul ignore next */
      cov_1zie7tvuxg().s[136]++;
      monitorState.errorCount++;
      /* istanbul ignore next */
      cov_1zie7tvuxg().s[137]++;
      console.error(`❌ Periodic check failed (${monitorState.errorCount}):`, error);
      /* istanbul ignore next */
      cov_1zie7tvuxg().s[138]++;
      if (monitorState.errorCount >= 5) {
        /* istanbul ignore next */
        cov_1zie7tvuxg().b[6][0]++;
        cov_1zie7tvuxg().s[139]++;
        await sendNotification(`🚨 区块链监控连续失败 ${monitorState.errorCount} 次\n可能存在网络问题`, 'error');
        /* istanbul ignore next */
        cov_1zie7tvuxg().s[140]++;
        (0, _sentryConfig.reportError)(error, {
          component: 'blockchainMonitor',
          action: 'periodicCheck',
          errorCount: monitorState.errorCount
        });
      } else
      /* istanbul ignore next */
      {
        cov_1zie7tvuxg().b[6][1]++;
      }
    }
  }, 30000); // 每30秒检查一次
}
/**
 * 发送通知到 Discord
 */
async function sendNotification(message, type) {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[17]++;
  cov_1zie7tvuxg().s[141]++;
  if (!DISCORD_WEBHOOK_URL) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().b[7][0]++;
    cov_1zie7tvuxg().s[142]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1zie7tvuxg().b[7][1]++;
  }
  cov_1zie7tvuxg().s[143]++;
  try {
    const colors =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[144]++, {
      info: 0x3498db,
      success: 0x2ecc71,
      warning: 0xf39c12,
      error: 0xe74c3c
    });
    const embed =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[145]++, {
      title: 'SocioMint 区块链监控',
      description: message,
      color: colors[type],
      timestamp: new Date().toISOString(),
      footer: {
        text: 'SocioMint Blockchain Monitor'
      }
    });
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[146]++;
    await (0, _discordAPI.sendWebhookMessage)(DISCORD_WEBHOOK_URL, '', [embed]);
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[147]++;
    console.error('❌ Failed to send Discord notification:', error);
  }
}
function getMonitorStatus() {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[18]++;
  cov_1zie7tvuxg().s[148]++;
  return {
    ...monitorState,
    uptime: monitorState.isRunning ?
    /* istanbul ignore next */
    (cov_1zie7tvuxg().b[8][0]++, Date.now() - monitorState.startTime.getTime()) :
    /* istanbul ignore next */
    (cov_1zie7tvuxg().b[8][1]++, 0)
  };
}
async function healthCheck() {
  /* istanbul ignore next */
  cov_1zie7tvuxg().f[19]++;
  cov_1zie7tvuxg().s[149]++;
  try {
    const [blockNumber, network, gasPrice] =
    /* istanbul ignore next */
    (cov_1zie7tvuxg().s[150]++, await Promise.all([provider.getBlockNumber(), provider.getNetwork(), provider.getFeeData()]));
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[151]++;
    return {
      healthy: true,
      blockNumber,
      networkId: Number(network.chainId),
      gasPrice: gasPrice.gasPrice ?
      /* istanbul ignore next */
      (cov_1zie7tvuxg().b[9][0]++, _ethers.ethers.formatUnits(gasPrice.gasPrice, 'gwei')) :
      /* istanbul ignore next */
      (cov_1zie7tvuxg().b[9][1]++, '0')
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1zie7tvuxg().s[152]++;
    return {
      healthy: false,
      blockNumber: 0,
      networkId: 0,
      gasPrice: '0',
      error: error.message
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,