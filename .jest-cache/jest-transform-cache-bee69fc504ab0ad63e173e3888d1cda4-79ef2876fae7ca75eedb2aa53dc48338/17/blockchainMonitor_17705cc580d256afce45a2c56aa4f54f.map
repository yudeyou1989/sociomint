{"version":3,"names":["cov_bioa9xxy","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","EventType","default","_default","monitorExchangeEvents","monitorTokenEvents","ENVIRONMENT","process","env","NEXT_PUBLIC_APP_ENV","CHAIN_ID","parseInt","NEXT_PUBLIC_CHAIN_ID","SM_TOKEN_ADDRESS","NEXT_PUBLIC_SM_TOKEN_ADDRESS","SM_TOKEN_EXCHANGE_ADDRESS","NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS","SUPABASE_URL","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_ANON_KEY","NEXT_PUBLIC_SUPABASE_ANON_KEY","supabase","_supabasejs","createClient","logger","_logger","createContextLogger","component","chain","_chains","bsc","bscTestnet","publicClient","_viem","createPublicClient","transport","http","eventAbis","TimelockActionEvent","parseAbiItem","TokenOperation","Transfer","ExchangeAction","UserAction","saveEventToDatabase","eventData","from","insert","error","action","additionalData","handleTransferEvent","event","blockNumber","timestamp","to","value","args","eventType","transactionHash","contractAddress","eventName","toString","info","handleUserActionEvent","user","actionType","amount","handleExchangeActionEvent","round","warn","address","unwatch","watchContractEvent","abi","onLogs","logs","log","block","getBlock","Number","unwatchUserAction","unwatchExchangeAction","BlockchainMonitor"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/services/blockchainMonitor.ts"],"sourcesContent":["/**\n * 区块链事件监控服务\n * \n * 该服务负责监控智能合约事件，并将事件记录到日志系统中。\n * 它支持监控SMToken和SMTokenExchange合约的各种事件。\n */\n\nimport { createPublicClient, http, parseAbiItem } from 'viem';\nimport { bsc, bscTestnet } from 'viem/chains';\nimport Logger from './logger';\nimport { createClient } from '@supabase/supabase-js';\n\n// 环境变量\nconst ENVIRONMENT = process.env.NEXT_PUBLIC_APP_ENV || 'development';\nconst CHAIN_ID = parseInt(process.env.NEXT_PUBLIC_CHAIN_ID || '97');\nconst SM_TOKEN_ADDRESS = process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS || '';\nconst SM_TOKEN_EXCHANGE_ADDRESS = process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS || '';\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || '';\nconst SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';\n\n// 创建Supabase客户端\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\n// 创建日志记录器\nconst logger = Logger.createContextLogger({ component: 'BlockchainMonitor' });\n\n// 选择链\nconst chain = CHAIN_ID === 56 ? bsc : bscTestnet;\n\n// 创建公共客户端\nconst publicClient = createPublicClient({\n  chain,\n  transport: http(),\n});\n\n// 事件ABI\nconst eventAbis = {\n  // SMToken事件\n  TimelockActionEvent: parseAbiItem('event TimelockActionEvent(bytes32 indexed actionHash, uint8 actionType, uint64 scheduledTime)'),\n  TokenOperation: parseAbiItem('event TokenOperation(address indexed account, uint256 amount, uint8 operationType)'),\n  Transfer: parseAbiItem('event Transfer(address indexed from, address indexed to, uint256 value)'),\n  \n  // SMTokenExchange事件\n  ExchangeAction: parseAbiItem('event ExchangeAction(uint8 actionType, uint8 round, uint256 amount)'),\n  UserAction: parseAbiItem('event UserAction(address indexed user, uint8 actionType, uint256 amount)'),\n};\n\n// 事件类型\nexport enum EventType {\n  TOKEN_TRANSFER = 'token_transfer',\n  TOKEN_MINT = 'token_mint',\n  TOKEN_BURN = 'token_burn',\n  EXCHANGE_PURCHASE = 'exchange_purchase',\n  EXCHANGE_ROUND_CHANGE = 'exchange_round_change',\n  EXCHANGE_CONFIG_CHANGE = 'exchange_config_change',\n}\n\n// 事件数据接口\nexport interface EventData {\n  eventType: EventType;\n  transactionHash: string;\n  blockNumber: number;\n  timestamp: number;\n  contractAddress: string;\n  eventName: string;\n  eventData: Record<string, any>;\n}\n\n/**\n * 将事件数据保存到数据库\n */\nconst saveEventToDatabase = async (eventData: EventData): Promise<void> => {\n  try {\n    await supabase.from('blockchain_events').insert([eventData]);\n  } catch (error) {\n    logger.error('Failed to save event to database', {\n      action: 'saveEventToDatabase',\n      additionalData: { error, eventData },\n    });\n  }\n};\n\n/**\n * 处理SMToken的Transfer事件\n */\nconst handleTransferEvent = async (\n  event: any,\n  blockNumber: number,\n  timestamp: number\n): Promise<void> => {\n  const { from, to, value } = event.args;\n  \n  // 确定事件类型\n  let eventType = EventType.TOKEN_TRANSFER;\n  if (from === '0x0000000000000000000000000000000000000000') {\n    eventType = EventType.TOKEN_MINT;\n  } else if (to === '0x0000000000000000000000000000000000000000') {\n    eventType = EventType.TOKEN_BURN;\n  }\n  \n  // 创建事件数据\n  const eventData: EventData = {\n    eventType,\n    transactionHash: event.transactionHash,\n    blockNumber,\n    timestamp,\n    contractAddress: SM_TOKEN_ADDRESS,\n    eventName: 'Transfer',\n    eventData: {\n      from,\n      to,\n      value: value.toString(),\n    },\n  };\n  \n  // 记录日志\n  logger.info(`Token ${eventType}: ${from} -> ${to}, ${value.toString()}`, {\n    action: 'handleTransferEvent',\n    additionalData: eventData,\n  });\n  \n  // 保存到数据库\n  await saveEventToDatabase(eventData);\n};\n\n/**\n * 处理SMTokenExchange的UserAction事件\n */\nconst handleUserActionEvent = async (\n  event: any,\n  blockNumber: number,\n  timestamp: number\n): Promise<void> => {\n  const { user, actionType, amount } = event.args;\n  \n  // 确定事件类型\n  let eventType = EventType.EXCHANGE_CONFIG_CHANGE;\n  if (actionType === 1) {\n    eventType = EventType.EXCHANGE_PURCHASE;\n  }\n  \n  // 创建事件数据\n  const eventData: EventData = {\n    eventType,\n    transactionHash: event.transactionHash,\n    blockNumber,\n    timestamp,\n    contractAddress: SM_TOKEN_EXCHANGE_ADDRESS,\n    eventName: 'UserAction',\n    eventData: {\n      user,\n      actionType: actionType.toString(),\n      amount: amount.toString(),\n    },\n  };\n  \n  // 记录日志\n  logger.info(`Exchange UserAction: ${user}, type=${actionType}, amount=${amount.toString()}`, {\n    action: 'handleUserActionEvent',\n    additionalData: eventData,\n  });\n  \n  // 保存到数据库\n  await saveEventToDatabase(eventData);\n};\n\n/**\n * 处理SMTokenExchange的ExchangeAction事件\n */\nconst handleExchangeActionEvent = async (\n  event: any,\n  blockNumber: number,\n  timestamp: number\n): Promise<void> => {\n  const { actionType, round, amount } = event.args;\n  \n  // 确定事件类型\n  let eventType = EventType.EXCHANGE_CONFIG_CHANGE;\n  if (actionType === 6) {\n    eventType = EventType.EXCHANGE_ROUND_CHANGE;\n  }\n  \n  // 创建事件数据\n  const eventData: EventData = {\n    eventType,\n    transactionHash: event.transactionHash,\n    blockNumber,\n    timestamp,\n    contractAddress: SM_TOKEN_EXCHANGE_ADDRESS,\n    eventName: 'ExchangeAction',\n    eventData: {\n      actionType: actionType.toString(),\n      round: round.toString(),\n      amount: amount.toString(),\n    },\n  };\n  \n  // 记录日志\n  logger.info(`Exchange Action: type=${actionType}, round=${round}, amount=${amount.toString()}`, {\n    action: 'handleExchangeActionEvent',\n    additionalData: eventData,\n  });\n  \n  // 保存到数据库\n  await saveEventToDatabase(eventData);\n};\n\n/**\n * 监控SMToken合约事件\n */\nexport const monitorTokenEvents = async (): Promise<void> => {\n  if (!SM_TOKEN_ADDRESS) {\n    logger.warn('SMToken address not configured, skipping event monitoring');\n    return;\n  }\n  \n  logger.info('Starting SMToken event monitoring', {\n    action: 'monitorTokenEvents',\n    additionalData: { address: SM_TOKEN_ADDRESS },\n  });\n  \n  // 监控Transfer事件\n  const unwatch = publicClient.watchContractEvent({\n    address: SM_TOKEN_ADDRESS as `0x${string}`,\n    abi: [eventAbis.Transfer],\n    eventName: 'Transfer',\n    onLogs: async (logs) => {\n      for (const log of logs) {\n        const block = await publicClient.getBlock({\n          blockNumber: log.blockNumber,\n        });\n        \n        await handleTransferEvent(log, Number(log.blockNumber), Number(block.timestamp));\n      }\n    },\n  });\n  \n  return unwatch;\n};\n\n/**\n * 监控SMTokenExchange合约事件\n */\nexport const monitorExchangeEvents = async (): Promise<void> => {\n  if (!SM_TOKEN_EXCHANGE_ADDRESS) {\n    logger.warn('SMTokenExchange address not configured, skipping event monitoring');\n    return;\n  }\n  \n  logger.info('Starting SMTokenExchange event monitoring', {\n    action: 'monitorExchangeEvents',\n    additionalData: { address: SM_TOKEN_EXCHANGE_ADDRESS },\n  });\n  \n  // 监控UserAction事件\n  const unwatchUserAction = publicClient.watchContractEvent({\n    address: SM_TOKEN_EXCHANGE_ADDRESS as `0x${string}`,\n    abi: [eventAbis.UserAction],\n    eventName: 'UserAction',\n    onLogs: async (logs) => {\n      for (const log of logs) {\n        const block = await publicClient.getBlock({\n          blockNumber: log.blockNumber,\n        });\n        \n        await handleUserActionEvent(log, Number(log.blockNumber), Number(block.timestamp));\n      }\n    },\n  });\n  \n  // 监控ExchangeAction事件\n  const unwatchExchangeAction = publicClient.watchContractEvent({\n    address: SM_TOKEN_EXCHANGE_ADDRESS as `0x${string}`,\n    abi: [eventAbis.ExchangeAction],\n    eventName: 'ExchangeAction',\n    onLogs: async (logs) => {\n      for (const log of logs) {\n        const block = await publicClient.getBlock({\n          blockNumber: log.blockNumber,\n        });\n        \n        await handleExchangeActionEvent(log, Number(log.blockNumber), Number(block.timestamp));\n      }\n    },\n  });\n  \n  return () => {\n    unwatchUserAction();\n    unwatchExchangeAction();\n  };\n};\n\n/**\n * 区块链监控服务\n */\nconst BlockchainMonitor = {\n  monitorTokenEvents,\n  monitorExchangeEvents,\n  EventType,\n};\n\nexport default BlockchainMonitor;\n"],"mappings":"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","ignoreList":[]}