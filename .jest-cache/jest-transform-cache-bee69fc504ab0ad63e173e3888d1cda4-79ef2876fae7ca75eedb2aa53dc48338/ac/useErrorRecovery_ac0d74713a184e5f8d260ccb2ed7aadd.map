{"version":3,"names":["cov_1es35t68rp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","useErrorRecovery","useNetworkErrorRecovery","useTransactionErrorRecovery","useWalletErrorRecovery","options","maxRetries","retryDelay","exponentialBackoff","onError","onRecovery","state","setState","_react","useState","error","isRetrying","retryCount","canRetry","retryTimeoutRef","useRef","clearError","useCallback","current","clearTimeout","handleError","context","appError","_errorHandler","globalErrorHandler","prev","message","retryable","retry","operation","delay","Math","pow","Promise","resolve","setTimeout","result","executeWithRecovery","autoRetry","lastError","attempt"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useErrorRecovery.ts"],"sourcesContent":["/**\n * 错误恢复Hook\n * 提供自动错误恢复和重试机制\n */\n\nimport { useState, useCallback, useRef } from 'react';\nimport { ErrorType, ErrorSeverity, AppError, globalErrorHandler } from '@/lib/errorHandler';\n\ninterface ErrorRecoveryOptions {\n  maxRetries?: number;\n  retryDelay?: number;\n  exponentialBackoff?: boolean;\n  onError?: (error: AppError) => void;\n  onRecovery?: () => void;\n}\n\ninterface ErrorRecoveryState {\n  error: AppError | null;\n  isRetrying: boolean;\n  retryCount: number;\n  canRetry: boolean;\n}\n\nexport function useErrorRecovery(options: ErrorRecoveryOptions = {}) {\n  const {\n    maxRetries = 3,\n    retryDelay = 1000,\n    exponentialBackoff = true,\n    onError,\n    onRecovery,\n  } = options;\n\n  const [state, setState] = useState<ErrorRecoveryState>({\n    error: null,\n    isRetrying: false,\n    retryCount: 0,\n    canRetry: false,\n  });\n\n  const retryTimeoutRef = useRef<NodeJS.Timeout>();\n\n  const clearError = useCallback(() => {\n    setState({\n      error: null,\n      isRetrying: false,\n      retryCount: 0,\n      canRetry: false,\n    });\n    \n    if (retryTimeoutRef.current) {\n      clearTimeout(retryTimeoutRef.current);\n    }\n  }, []);\n\n  const handleError = useCallback(async (error: Error | AppError, context?: string) => {\n    // 转换为AppError\n    const appError = await globalErrorHandler.handleError(error, context);\n    \n    // 更新状态\n    setState(prev => ({\n      error: appError,\n      isRetrying: false,\n      retryCount: prev.error?.message === appError.message ? prev.retryCount : 0,\n      canRetry: appError.retryable && prev.retryCount < maxRetries,\n    }));\n\n    // 调用错误回调\n    onError?.(appError);\n\n    return appError;\n  }, [maxRetries, onError]);\n\n  const retry = useCallback(async (operation: () => Promise<any>) => {\n    if (!state.canRetry || state.isRetrying) {\n      return;\n    }\n\n    setState(prev => ({\n      ...prev,\n      isRetrying: true,\n      retryCount: prev.retryCount + 1,\n    }));\n\n    try {\n      // 计算延迟时间\n      const delay = exponentialBackoff \n        ? retryDelay * Math.pow(2, state.retryCount)\n        : retryDelay;\n\n      // 等待延迟\n      await new Promise(resolve => {\n        retryTimeoutRef.current = setTimeout(resolve, delay);\n      });\n\n      // 执行操作\n      const result = await operation();\n      \n      // 成功恢复\n      clearError();\n      onRecovery?.();\n      \n      return result;\n    } catch (error) {\n      // 重试失败\n      const appError = await handleError(error as Error, 'retry');\n      \n      setState(prev => ({\n        ...prev,\n        isRetrying: false,\n        canRetry: appError.retryable && prev.retryCount < maxRetries,\n      }));\n\n      throw appError;\n    }\n  }, [state.canRetry, state.isRetrying, state.retryCount, exponentialBackoff, retryDelay, maxRetries, clearError, handleError, onRecovery]);\n\n  const executeWithRecovery = useCallback(async <T>(\n    operation: () => Promise<T>,\n    context?: string\n  ): Promise<T> => {\n    try {\n      const result = await operation();\n      \n      // 如果之前有错误，现在成功了，清除错误\n      if (state.error) {\n        clearError();\n        onRecovery?.();\n      }\n      \n      return result;\n    } catch (error) {\n      await handleError(error as Error, context);\n      throw error;\n    }\n  }, [state.error, clearError, handleError, onRecovery]);\n\n  const autoRetry = useCallback(async (operation: () => Promise<any>, context?: string) => {\n    let lastError: AppError | null = null;\n    \n    for (let attempt = 0; attempt <= maxRetries; attempt++) {\n      try {\n        const result = await operation();\n        \n        // 成功，清除错误\n        if (lastError) {\n          clearError();\n          onRecovery?.();\n        }\n        \n        return result;\n      } catch (error) {\n        lastError = await handleError(error as Error, context);\n        \n        // 如果不可重试或达到最大重试次数，抛出错误\n        if (!lastError.retryable || attempt >= maxRetries) {\n          throw lastError;\n        }\n        \n        // 计算延迟时间\n        const delay = exponentialBackoff \n          ? retryDelay * Math.pow(2, attempt)\n          : retryDelay;\n\n        // 等待后重试\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n    }\n    \n    throw lastError;\n  }, [maxRetries, exponentialBackoff, retryDelay, clearError, handleError, onRecovery]);\n\n  return {\n    // 状态\n    error: state.error,\n    isRetrying: state.isRetrying,\n    retryCount: state.retryCount,\n    canRetry: state.canRetry,\n    \n    // 方法\n    handleError,\n    retry,\n    clearError,\n    executeWithRecovery,\n    autoRetry,\n  };\n}\n\n// 专门用于网络请求的Hook\nexport function useNetworkErrorRecovery() {\n  return useErrorRecovery({\n    maxRetries: 3,\n    retryDelay: 2000,\n    exponentialBackoff: true,\n  });\n}\n\n// 专门用于钱包操作的Hook\nexport function useWalletErrorRecovery() {\n  return useErrorRecovery({\n    maxRetries: 2,\n    retryDelay: 1000,\n    exponentialBackoff: false,\n  });\n}\n\n// 专门用于区块链交易的Hook\nexport function useTransactionErrorRecovery() {\n  return useErrorRecovery({\n    maxRetries: 1,\n    retryDelay: 5000,\n    exponentialBackoff: false,\n  });\n}\n"],"mappings":"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","ignoreList":[]}