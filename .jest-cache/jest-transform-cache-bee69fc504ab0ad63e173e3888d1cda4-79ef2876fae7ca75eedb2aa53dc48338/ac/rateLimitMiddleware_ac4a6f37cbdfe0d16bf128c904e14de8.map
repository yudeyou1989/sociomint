{"version":3,"names":["cov_1w77g1py46","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","AdaptiveRateLimit","createAdaptiveRateLimitMiddleware","createRateLimitMiddleware","default","_default","getAdaptiveRateLimit","rateLimit","rateLimitMiddlewares","withRateLimit","getClientIP","req","forwarded","headers","get","realIP","cfConnectingIP","split","trim","getUserIdentifier","authHeader","error","config","middleware","_rateLimiter","rateLimitMiddleware","keyGenerator","Headers","mockRes","setHeader","value","set","toString","status","code","json","data","_server","NextResponse","result","success","response","message","includes","strict","RATE_LIMIT_CONFIGS","moderate","lenient","walletConnect","transaction","socialTask","handler","limitType","limitResult","forEach","key","target","propertyName","descriptor","method","args","apply","constructor","baseConfig","currentMultiplier","lastAdjustment","Date","now","errorRate","requestCount","errorCount","recordRequest","isError","adjustLimits","Math","max","min","getCurrentConfig","maxRequests","floor","adaptiveLimiters","Map","has","adaptiveLimiter","currentConfig"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/middleware/rateLimitMiddleware.ts"],"sourcesContent":["/**\n * API路由速率限制中间件\n * 为Next.js API路由提供速率限制保护\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { rateLimitMiddleware, RATE_LIMIT_CONFIGS, RateLimitConfig } from '@/utils/rateLimiter';\n\n// 获取客户端IP地址\nconst getClientIP = (req: NextRequest): string => {\n  const forwarded = req.headers.get('x-forwarded-for');\n  const realIP = req.headers.get('x-real-ip');\n  const cfConnectingIP = req.headers.get('cf-connecting-ip');\n  \n  if (cfConnectingIP) return cfConnectingIP;\n  if (realIP) return realIP;\n  if (forwarded) return forwarded.split(',')[0].trim();\n  \n  return 'unknown';\n};\n\n// 获取用户标识符\nconst getUserIdentifier = (req: NextRequest): string => {\n  // 优先使用用户ID（如果已认证）\n  const authHeader = req.headers.get('authorization');\n  if (authHeader) {\n    try {\n      // 这里可以解析JWT token获取用户ID\n      // const token = authHeader.replace('Bearer ', '');\n      // const decoded = jwt.verify(token, process.env.JWT_SECRET);\n      // return `user:${decoded.userId}`;\n    } catch (error) {\n      // Token无效，使用IP\n    }\n  }\n  \n  // 使用IP地址作为标识符\n  return `ip:${getClientIP(req)}`;\n};\n\n// 创建速率限制中间件\nexport const createRateLimitMiddleware = (config: RateLimitConfig) => {\n  const middleware = rateLimitMiddleware({\n    ...config,\n    keyGenerator: (req: NextRequest) => getUserIdentifier(req)\n  });\n\n  return async (req: NextRequest) => {\n    try {\n      // 创建模拟的响应对象\n      const headers = new Headers();\n      const mockRes = {\n        setHeader: (name: string, value: string | number) => {\n          headers.set(name, value.toString());\n        },\n        status: (code: number) => ({\n          json: (data: any) => {\n            return NextResponse.json(data, { status: code, headers });\n          }\n        })\n      };\n\n      // 执行速率限制检查\n      const result = middleware(req, mockRes);\n      \n      if (result === true) {\n        // 通过检查，返回headers\n        return { success: true, headers };\n      } else {\n        // 被限制，返回错误响应\n        return { success: false, response: result };\n      }\n    } catch (error: any) {\n      if (error.message.includes('请求过于频繁')) {\n        return {\n          success: false,\n          response: NextResponse.json(\n            {\n              error: 'Too Many Requests',\n              message: error.message,\n              code: 'RATE_LIMIT_EXCEEDED'\n            },\n            { status: 429 }\n          )\n        };\n      }\n      throw error;\n    }\n  };\n};\n\n// 预定义的中间件\nexport const rateLimitMiddlewares = {\n  // 严格限制（登录、注册等）\n  strict: createRateLimitMiddleware(RATE_LIMIT_CONFIGS.strict),\n  \n  // 中等限制（API调用）\n  moderate: createRateLimitMiddleware(RATE_LIMIT_CONFIGS.moderate),\n  \n  // 宽松限制（一般请求）\n  lenient: createRateLimitMiddleware(RATE_LIMIT_CONFIGS.lenient),\n  \n  // 钱包连接限制\n  walletConnect: createRateLimitMiddleware(RATE_LIMIT_CONFIGS.walletConnect),\n  \n  // 交易提交限制\n  transaction: createRateLimitMiddleware(RATE_LIMIT_CONFIGS.transaction),\n  \n  // 社交任务限制\n  socialTask: createRateLimitMiddleware(RATE_LIMIT_CONFIGS.socialTask)\n};\n\n// 高阶函数：为API路由添加速率限制\nexport const withRateLimit = (\n  handler: (req: NextRequest) => Promise<NextResponse>,\n  limitType: keyof typeof rateLimitMiddlewares = 'moderate'\n) => {\n  const middleware = rateLimitMiddlewares[limitType];\n  \n  return async (req: NextRequest) => {\n    // 执行速率限制检查\n    const limitResult = await middleware(req);\n    \n    if (!limitResult.success) {\n      return limitResult.response;\n    }\n    \n    // 执行原始处理器\n    const response = await handler(req);\n    \n    // 添加速率限制头部\n    if (limitResult.headers) {\n      limitResult.headers.forEach((value, key) => {\n        response.headers.set(key, value);\n      });\n    }\n    \n    return response;\n  };\n};\n\n// 路由级别的速率限制装饰器\nexport const rateLimit = (limitType: keyof typeof rateLimitMiddlewares = 'moderate') => {\n  return (target: any, propertyName: string, descriptor: PropertyDescriptor) => {\n    const method = descriptor.value;\n    \n    descriptor.value = async function (req: NextRequest, ...args: any[]) {\n      const middleware = rateLimitMiddlewares[limitType];\n      const limitResult = await middleware(req);\n      \n      if (!limitResult.success) {\n        return limitResult.response;\n      }\n      \n      const response = await method.apply(this, [req, ...args]);\n      \n      // 添加速率限制头部\n      if (limitResult.headers && response instanceof NextResponse) {\n        limitResult.headers.forEach((value, key) => {\n          response.headers.set(key, value);\n        });\n      }\n      \n      return response;\n    };\n    \n    return descriptor;\n  };\n};\n\n// 自适应速率限制（根据负载调整）\nexport class AdaptiveRateLimit {\n  private baseConfig: RateLimitConfig;\n  private currentMultiplier: number = 1;\n  private lastAdjustment: number = Date.now();\n  private errorRate: number = 0;\n  private requestCount: number = 0;\n  private errorCount: number = 0;\n\n  constructor(baseConfig: RateLimitConfig) {\n    this.baseConfig = baseConfig;\n  }\n\n  // 记录请求结果\n  recordRequest(isError: boolean) {\n    this.requestCount++;\n    if (isError) {\n      this.errorCount++;\n    }\n\n    // 每分钟调整一次\n    const now = Date.now();\n    if (now - this.lastAdjustment > 60000) {\n      this.adjustLimits();\n      this.lastAdjustment = now;\n      this.requestCount = 0;\n      this.errorCount = 0;\n    }\n  }\n\n  // 调整限制\n  private adjustLimits() {\n    if (this.requestCount === 0) return;\n\n    this.errorRate = this.errorCount / this.requestCount;\n\n    // 如果错误率高，降低限制\n    if (this.errorRate > 0.1) {\n      this.currentMultiplier = Math.max(0.5, this.currentMultiplier * 0.8);\n    } \n    // 如果错误率低，逐渐恢复限制\n    else if (this.errorRate < 0.05) {\n      this.currentMultiplier = Math.min(1, this.currentMultiplier * 1.1);\n    }\n  }\n\n  // 获取当前配置\n  getCurrentConfig(): RateLimitConfig {\n    return {\n      ...this.baseConfig,\n      maxRequests: Math.floor(this.baseConfig.maxRequests * this.currentMultiplier)\n    };\n  }\n}\n\n// 全局自适应限制器\nconst adaptiveLimiters = new Map<string, AdaptiveRateLimit>();\n\n// 获取自适应限制器\nexport const getAdaptiveRateLimit = (name: string, baseConfig: RateLimitConfig) => {\n  if (!adaptiveLimiters.has(name)) {\n    adaptiveLimiters.set(name, new AdaptiveRateLimit(baseConfig));\n  }\n  return adaptiveLimiters.get(name)!;\n};\n\n// 自适应速率限制中间件\nexport const createAdaptiveRateLimitMiddleware = (name: string, baseConfig: RateLimitConfig) => {\n  const adaptiveLimiter = getAdaptiveRateLimit(name, baseConfig);\n  \n  return async (req: NextRequest) => {\n    const currentConfig = adaptiveLimiter.getCurrentConfig();\n    const middleware = createRateLimitMiddleware(currentConfig);\n    \n    try {\n      const result = await middleware(req);\n      adaptiveLimiter.recordRequest(false);\n      return result;\n    } catch (error) {\n      adaptiveLimiter.recordRequest(true);\n      throw error;\n    }\n  };\n};\n\nexport default {\n  createRateLimitMiddleware,\n  rateLimitMiddlewares,\n  withRateLimit,\n  rateLimit,\n  AdaptiveRateLimit,\n  getAdaptiveRateLimit,\n  createAdaptiveRateLimitMiddleware\n};\n"],"mappings":"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","ignoreList":[]}