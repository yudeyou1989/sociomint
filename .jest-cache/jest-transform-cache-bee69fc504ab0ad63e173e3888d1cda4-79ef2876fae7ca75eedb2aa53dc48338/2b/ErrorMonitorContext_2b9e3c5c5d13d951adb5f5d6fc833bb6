2b6331c5ac97452082389f4c363c67a1
"use client";
"use strict";

/* istanbul ignore next */
function cov_2nnm4j4nh4() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/ErrorMonitorContext.tsx";
  var hash = "a697e433cc7d348172a190368cff7a8f82e21d3f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/ErrorMonitorContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 37
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "9": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "10": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 72
        }
      },
      "11": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "12": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "14": {
        start: {
          line: 34,
          column: 39
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "15": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 41
        }
      },
      "16": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 36,
          column: 40
        }
      },
      "17": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 20
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 66
        }
      },
      "19": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "20": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 19
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 10
        }
      },
      "23": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 53
        }
      },
      "24": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "25": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "26": {
        start: {
          line: 54,
          column: 17
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "27": {
        start: {
          line: 57,
          column: 32
        },
        end: {
          line: 57,
          column: 88
        }
      },
      "28": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "29": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "30": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 95
        }
      },
      "31": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "32": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 57
        }
      },
      "33": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 39
        }
      },
      "34": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 25
        }
      },
      "35": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "36": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 31
        }
      },
      "37": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 18
        }
      },
      "38": {
        start: {
          line: 75,
          column: 42
        },
        end: {
          line: 75,
          column: 78
        }
      },
      "39": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "40": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 63
        }
      },
      "41": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "42": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 87
        }
      },
      "43": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "44": {
        start: {
          line: 84,
          column: 18
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "45": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "46": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "47": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 87,
          column: 60
        }
      },
      "48": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "49": {
        start: {
          line: 89,
          column: 33
        },
        end: {
          line: 89,
          column: 56
        }
      },
      "50": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "51": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 64
        }
      },
      "52": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 21
        }
      },
      "53": {
        start: {
          line: 98,
          column: 29
        },
        end: {
          line: 445,
          column: 1
        }
      },
      "54": {
        start: {
          line: 99,
          column: 32
        },
        end: {
          line: 99,
          column: 56
        }
      },
      "55": {
        start: {
          line: 100,
          column: 42
        },
        end: {
          line: 100,
          column: 66
        }
      },
      "56": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 102,
          column: 66
        }
      },
      "57": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "58": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 111,
          column: 10
        }
      },
      "59": {
        start: {
          line: 107,
          column: 41
        },
        end: {
          line: 107,
          column: 66
        }
      },
      "60": {
        start: {
          line: 108,
          column: 38
        },
        end: {
          line: 108,
          column: 60
        }
      },
      "61": {
        start: {
          line: 109,
          column: 40
        },
        end: {
          line: 109,
          column: 64
        }
      },
      "62": {
        start: {
          line: 110,
          column: 37
        },
        end: {
          line: 110,
          column: 58
        }
      },
      "63": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 120,
          column: 6
        }
      },
      "64": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 52
        }
      },
      "65": {
        start: {
          line: 117,
          column: 36
        },
        end: {
          line: 117,
          column: 50
        }
      },
      "66": {
        start: {
          line: 122,
          column: 23
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "67": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 83
        }
      },
      "68": {
        start: {
          line: 126,
          column: 26
        },
        end: {
          line: 149,
          column: 6
        }
      },
      "69": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 40
        }
      },
      "70": {
        start: {
          line: 127,
          column: 33
        },
        end: {
          line: 127,
          column: 40
        }
      },
      "71": {
        start: {
          line: 128,
          column: 30
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "72": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "73": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "74": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "75": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 56
        }
      },
      "76": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 27
        }
      },
      "77": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "78": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 98
        }
      },
      "79": {
        start: {
          line: 151,
          column: 29
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "80": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 27
        }
      },
      "81": {
        start: {
          line: 155,
          column: 21
        },
        end: {
          line: 183,
          column: 6
        }
      },
      "82": {
        start: {
          line: 156,
          column: 24
        },
        end: {
          line: 156,
          column: 36
        }
      },
      "83": {
        start: {
          line: 157,
          column: 25
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "84": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "85": {
        start: {
          line: 165,
          column: 28
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "86": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "87": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "88": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 27
        }
      },
      "89": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "90": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 167
        }
      },
      "91": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 23
        }
      },
      "92": {
        start: {
          line: 185,
          column: 27
        },
        end: {
          line: 223,
          column: 6
        }
      },
      "93": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 192,
          column: 10
        }
      },
      "94": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "95": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 48
        }
      },
      "96": {
        start: {
          line: 196,
          column: 15
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "97": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 200,
          column: 15
        }
      },
      "98": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 47
        }
      },
      "99": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "100": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "101": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 214,
          column: 19
        }
      },
      "102": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 69
        }
      },
      "103": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 23
        }
      },
      "104": {
        start: {
          line: 225,
          column: 28
        },
        end: {
          line: 253,
          column: 6
        }
      },
      "105": {
        start: {
          line: 227,
          column: 23
        },
        end: {
          line: 227,
          column: 30
        }
      },
      "106": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 57
        }
      },
      "107": {
        start: {
          line: 228,
          column: 31
        },
        end: {
          line: 228,
          column: 53
        }
      },
      "108": {
        start: {
          line: 229,
          column: 13
        },
        end: {
          line: 230,
          column: 57
        }
      },
      "109": {
        start: {
          line: 229,
          column: 36
        },
        end: {
          line: 229,
          column: 55
        }
      },
      "110": {
        start: {
          line: 230,
          column: 13
        },
        end: {
          line: 230,
          column: 57
        }
      },
      "111": {
        start: {
          line: 230,
          column: 36
        },
        end: {
          line: 230,
          column: 57
        }
      },
      "112": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 243,
          column: 10
        }
      },
      "113": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "114": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 118
        }
      },
      "115": {
        start: {
          line: 247,
          column: 15
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "116": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 54
        }
      },
      "117": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 23
        }
      },
      "118": {
        start: {
          line: 255,
          column: 25
        },
        end: {
          line: 303,
          column: 6
        }
      },
      "119": {
        start: {
          line: 256,
          column: 29
        },
        end: {
          line: 256,
          column: 78
        }
      },
      "120": {
        start: {
          line: 257,
          column: 27
        },
        end: {
          line: 257,
          column: 78
        }
      },
      "121": {
        start: {
          line: 258,
          column: 120
        },
        end: {
          line: 258,
          column: 127
        }
      },
      "122": {
        start: {
          line: 260,
          column: 23
        },
        end: {
          line: 260,
          column: 34
        }
      },
      "123": {
        start: {
          line: 261,
          column: 24
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "124": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "125": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "126": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 111
        }
      },
      "127": {
        start: {
          line: 275,
          column: 19
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "128": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 279,
          column: 19
        }
      },
      "129": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 56
        }
      },
      "130": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "131": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 296,
          column: 17
        }
      },
      "132": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 293,
          column: 23
        }
      },
      "133": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 73
        }
      },
      "134": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 23
        }
      },
      "135": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 307,
          column: 10
        }
      },
      "136": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 22
        }
      },
      "137": {
        start: {
          line: 309,
          column: 24
        },
        end: {
          line: 352,
          column: 6
        }
      },
      "138": {
        start: {
          line: 310,
          column: 22
        },
        end: {
          line: 310,
          column: 56
        }
      },
      "139": {
        start: {
          line: 310,
          column: 39
        },
        end: {
          line: 310,
          column: 55
        }
      },
      "140": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 27
        }
      },
      "141": {
        start: {
          line: 311,
          column: 20
        },
        end: {
          line: 311,
          column: 27
        }
      },
      "142": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "143": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 320,
          column: 15
        }
      },
      "144": {
        start: {
          line: 322,
          column: 29
        },
        end: {
          line: 328,
          column: 14
        }
      },
      "145": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 331,
          column: 13
        }
      },
      "146": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 58
        }
      },
      "147": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 336,
          column: 28
        }
      },
      "148": {
        start: {
          line: 333,
          column: 36
        },
        end: {
          line: 336,
          column: 26
        }
      },
      "149": {
        start: {
          line: 333,
          column: 56
        },
        end: {
          line: 336,
          column: 25
        }
      },
      "150": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 57
        }
      },
      "151": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 61
        }
      },
      "152": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 344,
          column: 15
        }
      },
      "153": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 51
        }
      },
      "154": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 414,
          column: 7
        }
      },
      "155": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 38
        }
      },
      "156": {
        start: {
          line: 355,
          column: 31
        },
        end: {
          line: 355,
          column: 38
        }
      },
      "157": {
        start: {
          line: 357,
          column: 34
        },
        end: {
          line: 365,
          column: 9
        }
      },
      "158": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 362,
          column: 15
        }
      },
      "159": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 35
        }
      },
      "160": {
        start: {
          line: 366,
          column: 32
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "161": {
        start: {
          line: 367,
          column: 26
        },
        end: {
          line: 367,
          column: 104
        }
      },
      "162": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 372,
          column: 15
        }
      },
      "163": {
        start: {
          line: 374,
          column: 35
        },
        end: {
          line: 376,
          column: 9
        }
      },
      "164": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 49
        }
      },
      "165": {
        start: {
          line: 377,
          column: 38
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "166": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 46
        }
      },
      "167": {
        start: {
          line: 380,
          column: 33
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "168": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 384,
          column: 15
        }
      },
      "169": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 60
        }
      },
      "170": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 71
        }
      },
      "171": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 63
        }
      },
      "172": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 65
        }
      },
      "173": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "174": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 31
        }
      },
      "175": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 66
        }
      },
      "176": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 407,
          column: 10
        }
      },
      "177": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 67
        }
      },
      "178": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 78
        }
      },
      "179": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 70
        }
      },
      "180": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 72
        }
      },
      "181": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 406,
          column: 13
        }
      },
      "182": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 405,
          column: 73
        }
      },
      "183": {
        start: {
          line: 416,
          column: 25
        },
        end: {
          line: 440,
          column: 6
        }
      },
      "184": {
        start: {
          line: 416,
          column: 50
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "185": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 444,
          column: 7
        }
      },
      "186": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 47
        }
      },
      "187": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 456,
          column: 10
        }
      },
      "188": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 455,
          column: 15
        }
      },
      "189": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 460,
          column: 10
        }
      },
      "190": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 466,
          column: 10
        }
      },
      "191": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 472,
          column: 9
        }
      },
      "192": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 49
        }
      },
      "193": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 484,
          column: 9
        }
      },
      "194": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 481,
          column: 15
        }
      },
      "195": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 89
        }
      },
      "196": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "197": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 491,
          column: 13
        }
      },
      "198": {
        start: {
          line: 490,
          column: 16
        },
        end: {
          line: 490,
          column: 78
        }
      },
      "199": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 495,
          column: 13
        }
      },
      "200": {
        start: {
          line: 494,
          column: 16
        },
        end: {
          line: 494,
          column: 43
        }
      },
      "201": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 518,
          column: 15
        }
      },
      "202": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 35
        }
      },
      "203": {
        start: {
          line: 524,
          column: 30
        },
        end: {
          line: 529,
          column: 10
        }
      },
      "204": {
        start: {
          line: 524,
          column: 53
        },
        end: {
          line: 529,
          column: 10
        }
      },
      "205": {
        start: {
          line: 530,
          column: 4
        },
        end: {
          line: 530,
          column: 115
        }
      },
      "206": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 531,
          column: 29
        }
      },
      "207": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 544,
          column: 6
        }
      },
      "208": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 543,
          column: 9
        }
      },
      "209": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 536,
          column: 33
        }
      },
      "210": {
        start: {
          line: 539,
          column: 27
        },
        end: {
          line: 539,
          column: 74
        }
      },
      "211": {
        start: {
          line: 540,
          column: 29
        },
        end: {
          line: 540,
          column: 74
        }
      },
      "212": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 102
        }
      },
      "213": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 542,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 27
          }
        },
        loc: {
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 19,
            column: 28
          }
        },
        loc: {
          start: {
            line: 19,
            column: 38
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 22
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 25,
            column: 24
          }
        },
        loc: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 33
          }
        },
        loc: {
          start: {
            line: 33,
            column: 47
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 33
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 37,
            column: 40
          }
        },
        loc: {
          start: {
            line: 37,
            column: 61
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "8": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 34
          }
        },
        loc: {
          start: {
            line: 41,
            column: 53
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 41
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 25
          }
        },
        loc: {
          start: {
            line: 76,
            column: 28
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 76
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 84,
            column: 18
          },
          end: {
            line: 84,
            column: 19
          }
        },
        loc: {
          start: {
            line: 84,
            column: 22
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 84
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 98,
            column: 29
          },
          end: {
            line: 98,
            column: 30
          }
        },
        loc: {
          start: {
            line: 98,
            column: 187
          },
          end: {
            line: 445,
            column: 1
          }
        },
        line: 98
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 104,
            column: 43
          },
          end: {
            line: 104,
            column: 44
          }
        },
        loc: {
          start: {
            line: 104,
            column: 47
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 104
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 107,
            column: 37
          }
        },
        loc: {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 107,
            column: 66
          }
        },
        line: 107
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 108,
            column: 33
          },
          end: {
            line: 108,
            column: 34
          }
        },
        loc: {
          start: {
            line: 108,
            column: 38
          },
          end: {
            line: 108,
            column: 60
          }
        },
        line: 108
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 109,
            column: 35
          },
          end: {
            line: 109,
            column: 36
          }
        },
        loc: {
          start: {
            line: 109,
            column: 40
          },
          end: {
            line: 109,
            column: 64
          }
        },
        line: 109
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 33
          }
        },
        loc: {
          start: {
            line: 110,
            column: 37
          },
          end: {
            line: 110,
            column: 58
          }
        },
        line: 110
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 116,
            column: 51
          },
          end: {
            line: 116,
            column: 52
          }
        },
        loc: {
          start: {
            line: 116,
            column: 55
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 116
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 117,
            column: 27
          },
          end: {
            line: 117,
            column: 28
          }
        },
        loc: {
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 117,
            column: 50
          }
        },
        line: 117
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 122,
            column: 23
          },
          end: {
            line: 122,
            column: 24
          }
        },
        loc: {
          start: {
            line: 122,
            column: 27
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 122
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 126,
            column: 50
          },
          end: {
            line: 126,
            column: 51
          }
        },
        loc: {
          start: {
            line: 126,
            column: 64
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 126
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 132,
            column: 24
          }
        },
        loc: {
          start: {
            line: 132,
            column: 31
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 132
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 151,
            column: 53
          },
          end: {
            line: 151,
            column: 54
          }
        },
        loc: {
          start: {
            line: 151,
            column: 57
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 151
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 155,
            column: 45
          },
          end: {
            line: 155,
            column: 46
          }
        },
        loc: {
          start: {
            line: 155,
            column: 57
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 155
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 164,
            column: 18
          },
          end: {
            line: 164,
            column: 19
          }
        },
        loc: {
          start: {
            line: 164,
            column: 26
          },
          end: {
            line: 173,
            column: 9
          }
        },
        line: 164
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 185,
            column: 51
          },
          end: {
            line: 185,
            column: 52
          }
        },
        loc: {
          start: {
            line: 185,
            column: 81
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 185
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 225,
            column: 52
          },
          end: {
            line: 225,
            column: 53
          }
        },
        loc: {
          start: {
            line: 225,
            column: 102
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 225
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 255,
            column: 49
          },
          end: {
            line: 255,
            column: 50
          }
        },
        loc: {
          start: {
            line: 255,
            column: 72
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 255
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 305,
            column: 48
          },
          end: {
            line: 305,
            column: 49
          }
        },
        loc: {
          start: {
            line: 305,
            column: 52
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 305
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 309,
            column: 48
          },
          end: {
            line: 309,
            column: 49
          }
        },
        loc: {
          start: {
            line: 309,
            column: 65
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 309
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 310,
            column: 34
          },
          end: {
            line: 310,
            column: 35
          }
        },
        loc: {
          start: {
            line: 310,
            column: 39
          },
          end: {
            line: 310,
            column: 55
          }
        },
        line: 310
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 333,
            column: 22
          },
          end: {
            line: 333,
            column: 23
          }
        },
        loc: {
          start: {
            line: 333,
            column: 36
          },
          end: {
            line: 336,
            column: 26
          }
        },
        line: 333
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 333,
            column: 51
          },
          end: {
            line: 333,
            column: 52
          }
        },
        loc: {
          start: {
            line: 333,
            column: 56
          },
          end: {
            line: 336,
            column: 25
          }
        },
        line: 333
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 354,
            column: 26
          },
          end: {
            line: 354,
            column: 27
          }
        },
        loc: {
          start: {
            line: 354,
            column: 30
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 354
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 357,
            column: 34
          },
          end: {
            line: 357,
            column: 35
          }
        },
        loc: {
          start: {
            line: 357,
            column: 43
          },
          end: {
            line: 365,
            column: 9
          }
        },
        line: 357
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 366,
            column: 32
          },
          end: {
            line: 366,
            column: 33
          }
        },
        loc: {
          start: {
            line: 366,
            column: 41
          },
          end: {
            line: 373,
            column: 9
          }
        },
        line: 366
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 374,
            column: 35
          },
          end: {
            line: 374,
            column: 36
          }
        },
        loc: {
          start: {
            line: 374,
            column: 39
          },
          end: {
            line: 376,
            column: 9
          }
        },
        line: 374
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 377,
            column: 38
          },
          end: {
            line: 377,
            column: 39
          }
        },
        loc: {
          start: {
            line: 377,
            column: 42
          },
          end: {
            line: 379,
            column: 9
          }
        },
        line: 377
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 380,
            column: 33
          },
          end: {
            line: 380,
            column: 34
          }
        },
        loc: {
          start: {
            line: 380,
            column: 37
          },
          end: {
            line: 385,
            column: 9
          }
        },
        line: 380
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 399,
            column: 15
          },
          end: {
            line: 399,
            column: 16
          }
        },
        loc: {
          start: {
            line: 399,
            column: 19
          },
          end: {
            line: 407,
            column: 9
          }
        },
        line: 399
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 416,
            column: 45
          },
          end: {
            line: 416,
            column: 46
          }
        },
        loc: {
          start: {
            line: 416,
            column: 50
          },
          end: {
            line: 428,
            column: 9
          }
        },
        line: 416
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 22
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 450
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 451,
            column: 40
          },
          end: {
            line: 451,
            column: 41
          }
        },
        loc: {
          start: {
            line: 451,
            column: 44
          },
          end: {
            line: 456,
            column: 9
          }
        },
        line: 451
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 462,
            column: 4
          },
          end: {
            line: 462,
            column: 5
          }
        },
        loc: {
          start: {
            line: 462,
            column: 43
          },
          end: {
            line: 467,
            column: 5
          }
        },
        line: 462
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        },
        loc: {
          start: {
            line: 468,
            column: 40
          },
          end: {
            line: 485,
            column: 5
          }
        },
        line: 468
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 486,
            column: 5
          }
        },
        loc: {
          start: {
            line: 486,
            column: 13
          },
          end: {
            line: 521,
            column: 5
          }
        },
        line: 486
      },
      "46": {
        name: "withErrorBoundary",
        decl: {
          start: {
            line: 523,
            column: 9
          },
          end: {
            line: 523,
            column: 26
          }
        },
        loc: {
          start: {
            line: 523,
            column: 52
          },
          end: {
            line: 532,
            column: 1
          }
        },
        line: 523
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 524,
            column: 30
          },
          end: {
            line: 524,
            column: 31
          }
        },
        loc: {
          start: {
            line: 524,
            column: 53
          },
          end: {
            line: 529,
            column: 10
          }
        },
        line: 524
      },
      "48": {
        name: "createApiErrorHandler",
        decl: {
          start: {
            line: 533,
            column: 9
          },
          end: {
            line: 533,
            column: 30
          }
        },
        loc: {
          start: {
            line: 533,
            column: 45
          },
          end: {
            line: 545,
            column: 1
          }
        },
        line: 533
      },
      "49": {
        name: "apiErrorHandler",
        decl: {
          start: {
            line: 534,
            column: 26
          },
          end: {
            line: 534,
            column: 41
          }
        },
        loc: {
          start: {
            line: 534,
            column: 60
          },
          end: {
            line: 544,
            column: 5
          }
        },
        line: 534
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 38,
            column: 45
          }
        }, {
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 38,
            column: 65
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 27
          }
        }, {
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 42,
            column: 45
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 20
          }
        }, {
          start: {
            line: 45,
            column: 24
          },
          end: {
            line: 45,
            column: 47
          }
        }, {
          start: {
            line: 45,
            column: 51
          },
          end: {
            line: 45,
            column: 76
          }
        }],
        line: 45
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 51,
            column: 31
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 32
          },
          end: {
            line: 57,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 32
          },
          end: {
            line: 57,
            column: 53
          }
        }, {
          start: {
            line: 57,
            column: 57
          },
          end: {
            line: 57,
            column: 88
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 29
          }
        }, {
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 79
          }
        }],
        line: 59
      },
      "11": {
        loc: {
          start: {
            line: 60,
            column: 23
          },
          end: {
            line: 60,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 47
          },
          end: {
            line: 60,
            column: 88
          }
        }, {
          start: {
            line: 60,
            column: 91
          },
          end: {
            line: 60,
            column: 95
          }
        }],
        line: 60
      },
      "12": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 65,
            column: 13
          }
        }],
        line: 61
      },
      "13": {
        loc: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 20
          }
        }, {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 61,
            column: 33
          }
        }, {
          start: {
            line: 61,
            column: 37
          },
          end: {
            line: 61,
            column: 45
          }
        }],
        line: 61
      },
      "14": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "15": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "16": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "17": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "18": {
        loc: {
          start: {
            line: 98,
            column: 42
          },
          end: {
            line: 98,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 54
          },
          end: {
            line: 98,
            column: 56
          }
        }],
        line: 98
      },
      "19": {
        loc: {
          start: {
            line: 98,
            column: 58
          },
          end: {
            line: 98,
            column: 94
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 75
          },
          end: {
            line: 98,
            column: 94
          }
        }],
        line: 98
      },
      "20": {
        loc: {
          start: {
            line: 98,
            column: 96
          },
          end: {
            line: 98,
            column: 109
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 104
          },
          end: {
            line: 98,
            column: 109
          }
        }],
        line: 98
      },
      "21": {
        loc: {
          start: {
            line: 98,
            column: 111
          },
          end: {
            line: 98,
            column: 134
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 130
          },
          end: {
            line: 98,
            column: 134
          }
        }],
        line: 98
      },
      "22": {
        loc: {
          start: {
            line: 98,
            column: 136
          },
          end: {
            line: 98,
            column: 161
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 157
          },
          end: {
            line: 98,
            column: 161
          }
        }],
        line: 98
      },
      "23": {
        loc: {
          start: {
            line: 98,
            column: 163
          },
          end: {
            line: 98,
            column: 182
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 180
          },
          end: {
            line: 98,
            column: 182
          }
        }],
        line: 98
      },
      "24": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "25": {
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "26": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "27": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "28": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "29": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 175,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 175,
            column: 17
          }
        }, {
          start: {
            line: 175,
            column: 21
          },
          end: {
            line: 175,
            column: 53
          }
        }, {
          start: {
            line: 175,
            column: 57
          },
          end: {
            line: 175,
            column: 86
          }
        }],
        line: 175
      },
      "30": {
        loc: {
          start: {
            line: 176,
            column: 82
          },
          end: {
            line: 176,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 82
          },
          end: {
            line: 176,
            column: 104
          }
        }, {
          start: {
            line: 176,
            column: 108
          },
          end: {
            line: 176,
            column: 117
          }
        }],
        line: 176
      },
      "31": {
        loc: {
          start: {
            line: 176,
            column: 142
          },
          end: {
            line: 176,
            column: 165
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 142
          },
          end: {
            line: 176,
            column: 159
          }
        }, {
          start: {
            line: 176,
            column: 163
          },
          end: {
            line: 176,
            column: 165
          }
        }],
        line: 176
      },
      "32": {
        loc: {
          start: {
            line: 185,
            column: 61
          },
          end: {
            line: 185,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 185,
            column: 72
          },
          end: {
            line: 185,
            column: 78
          }
        }],
        line: 185
      },
      "33": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 203,
            column: 9
          }
        }],
        line: 194
      },
      "34": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 194,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 194,
            column: 32
          }
        }, {
          start: {
            line: 194,
            column: 36
          },
          end: {
            line: 194,
            column: 59
          }
        }],
        line: 194
      },
      "35": {
        loc: {
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: 201,
            column: 15
          },
          end: {
            line: 203,
            column: 9
          }
        }],
        line: 196
      },
      "36": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "37": {
        loc: {
          start: {
            line: 210,
            column: 30
          },
          end: {
            line: 210,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 52
          },
          end: {
            line: 210,
            column: 58
          }
        }, {
          start: {
            line: 210,
            column: 61
          },
          end: {
            line: 210,
            column: 105
          }
        }],
        line: 210
      },
      "38": {
        loc: {
          start: {
            line: 210,
            column: 61
          },
          end: {
            line: 210,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 86
          },
          end: {
            line: 210,
            column: 95
          }
        }, {
          start: {
            line: 210,
            column: 98
          },
          end: {
            line: 210,
            column: 105
          }
        }],
        line: 210
      },
      "39": {
        loc: {
          start: {
            line: 212,
            column: 35
          },
          end: {
            line: 212,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 35
          },
          end: {
            line: 212,
            column: 54
          }
        }, {
          start: {
            line: 212,
            column: 58
          },
          end: {
            line: 212,
            column: 80
          }
        }],
        line: 212
      },
      "40": {
        loc: {
          start: {
            line: 225,
            column: 85
          },
          end: {
            line: 225,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 225,
            column: 94
          },
          end: {
            line: 225,
            column: 99
          }
        }],
        line: 225
      },
      "41": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 57
          }
        }, {
          start: {
            line: 229,
            column: 13
          },
          end: {
            line: 230,
            column: 57
          }
        }],
        line: 228
      },
      "42": {
        loc: {
          start: {
            line: 229,
            column: 13
          },
          end: {
            line: 230,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 13
          },
          end: {
            line: 230,
            column: 57
          }
        }, {
          start: {
            line: 230,
            column: 13
          },
          end: {
            line: 230,
            column: 57
          }
        }],
        line: 229
      },
      "43": {
        loc: {
          start: {
            line: 230,
            column: 13
          },
          end: {
            line: 230,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 13
          },
          end: {
            line: 230,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "44": {
        loc: {
          start: {
            line: 241,
            column: 26
          },
          end: {
            line: 241,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 57
          },
          end: {
            line: 241,
            column: 65
          }
        }, {
          start: {
            line: 241,
            column: 68
          },
          end: {
            line: 241,
            column: 92
          }
        }],
        line: 241
      },
      "45": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: 247,
            column: 15
          },
          end: {
            line: 249,
            column: 9
          }
        }],
        line: 245
      },
      "46": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 245,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 245,
            column: 29
          }
        }, {
          start: {
            line: 245,
            column: 33
          },
          end: {
            line: 245,
            column: 49
          }
        }],
        line: 245
      },
      "47": {
        loc: {
          start: {
            line: 246,
            column: 48
          },
          end: {
            line: 246,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 79
          },
          end: {
            line: 246,
            column: 87
          }
        }, {
          start: {
            line: 246,
            column: 90
          },
          end: {
            line: 246,
            column: 114
          }
        }],
        line: 246
      },
      "48": {
        loc: {
          start: {
            line: 247,
            column: 15
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 15
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "49": {
        loc: {
          start: {
            line: 255,
            column: 57
          },
          end: {
            line: 255,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 255,
            column: 67
          },
          end: {
            line: 255,
            column: 69
          }
        }],
        line: 255
      },
      "50": {
        loc: {
          start: {
            line: 256,
            column: 29
          },
          end: {
            line: 256,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 57
          },
          end: {
            line: 256,
            column: 62
          }
        }, {
          start: {
            line: 256,
            column: 65
          },
          end: {
            line: 256,
            column: 78
          }
        }],
        line: 256
      },
      "51": {
        loc: {
          start: {
            line: 257,
            column: 27
          },
          end: {
            line: 257,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 257,
            column: 55
          },
          end: {
            line: 257,
            column: 64
          }
        }, {
          start: {
            line: 257,
            column: 67
          },
          end: {
            line: 257,
            column: 78
          }
        }],
        line: 257
      },
      "52": {
        loc: {
          start: {
            line: 258,
            column: 41
          },
          end: {
            line: 258,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 258,
            column: 52
          },
          end: {
            line: 258,
            column: 59
          }
        }],
        line: 258
      },
      "53": {
        loc: {
          start: {
            line: 258,
            column: 61
          },
          end: {
            line: 258,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 258,
            column: 71
          },
          end: {
            line: 258,
            column: 76
          }
        }],
        line: 258
      },
      "54": {
        loc: {
          start: {
            line: 258,
            column: 78
          },
          end: {
            line: 258,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 258,
            column: 87
          },
          end: {
            line: 258,
            column: 99
          }
        }],
        line: 258
      },
      "55": {
        loc: {
          start: {
            line: 258,
            column: 101
          },
          end: {
            line: 258,
            column: 115
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 258,
            column: 110
          },
          end: {
            line: 258,
            column: 115
          }
        }],
        line: 258
      },
      "56": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "57": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        }, {
          start: {
            line: 275,
            column: 19
          },
          end: {
            line: 282,
            column: 13
          }
        }],
        line: 273
      },
      "58": {
        loc: {
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 273,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 273,
            column: 39
          }
        }, {
          start: {
            line: 273,
            column: 43
          },
          end: {
            line: 273,
            column: 63
          }
        }],
        line: 273
      },
      "59": {
        loc: {
          start: {
            line: 274,
            column: 43
          },
          end: {
            line: 274,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 59
          },
          end: {
            line: 274,
            column: 94
          }
        }, {
          start: {
            line: 274,
            column: 97
          },
          end: {
            line: 274,
            column: 109
          }
        }],
        line: 274
      },
      "60": {
        loc: {
          start: {
            line: 275,
            column: 19
          },
          end: {
            line: 282,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 19
          },
          end: {
            line: 282,
            column: 13
          }
        }, {
          start: {
            line: 280,
            column: 19
          },
          end: {
            line: 282,
            column: 13
          }
        }],
        line: 275
      },
      "61": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "62": {
        loc: {
          start: {
            line: 289,
            column: 34
          },
          end: {
            line: 289,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 289,
            column: 56
          },
          end: {
            line: 289,
            column: 62
          }
        }, {
          start: {
            line: 289,
            column: 65
          },
          end: {
            line: 289,
            column: 109
          }
        }],
        line: 289
      },
      "63": {
        loc: {
          start: {
            line: 289,
            column: 65
          },
          end: {
            line: 289,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 289,
            column: 90
          },
          end: {
            line: 289,
            column: 99
          }
        }, {
          start: {
            line: 289,
            column: 102
          },
          end: {
            line: 289,
            column: 109
          }
        }],
        line: 289
      },
      "64": {
        loc: {
          start: {
            line: 291,
            column: 39
          },
          end: {
            line: 291,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 39
          },
          end: {
            line: 291,
            column: 58
          }
        }, {
          start: {
            line: 291,
            column: 62
          },
          end: {
            line: 291,
            column: 84
          }
        }],
        line: 291
      },
      "65": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 311,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 311,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "66": {
        loc: {
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 331,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 331,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "67": {
        loc: {
          start: {
            line: 333,
            column: 56
          },
          end: {
            line: 336,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 75
          },
          end: {
            line: 336,
            column: 21
          }
        }, {
          start: {
            line: 336,
            column: 24
          },
          end: {
            line: 336,
            column: 25
          }
        }],
        line: 333
      },
      "68": {
        loc: {
          start: {
            line: 340,
            column: 25
          },
          end: {
            line: 340,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 340,
            column: 46
          },
          end: {
            line: 340,
            column: 47
          }
        }, {
          start: {
            line: 340,
            column: 50
          },
          end: {
            line: 340,
            column: 59
          }
        }],
        line: 340
      },
      "69": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 355,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 355,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "70": {
        loc: {
          start: {
            line: 358,
            column: 25
          },
          end: {
            line: 358,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 25
          },
          end: {
            line: 358,
            column: 36
          }
        }, {
          start: {
            line: 358,
            column: 40
          },
          end: {
            line: 358,
            column: 64
          }
        }],
        line: 358
      },
      "71": {
        loc: {
          start: {
            line: 367,
            column: 26
          },
          end: {
            line: 367,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 367,
            column: 58
          },
          end: {
            line: 367,
            column: 70
          }
        }, {
          start: {
            line: 367,
            column: 73
          },
          end: {
            line: 367,
            column: 104
          }
        }],
        line: 367
      },
      "72": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "73": {
        loc: {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 392,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 392,
            column: 30
          }
        }, {
          start: {
            line: 392,
            column: 34
          },
          end: {
            line: 392,
            column: 63
          }
        }],
        line: 392
      },
      "74": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 406,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 406,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "75": {
        loc: {
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 404,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 404,
            column: 34
          }
        }, {
          start: {
            line: 404,
            column: 38
          },
          end: {
            line: 404,
            column: 67
          }
        }],
        line: 404
      },
      "76": {
        loc: {
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 472,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 472,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "77": {
        loc: {
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 484,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 484,
            column: 9
          }
        }, {
          start: {
            line: 482,
            column: 15
          },
          end: {
            line: 484,
            column: 9
          }
        }],
        line: 474
      },
      "78": {
        loc: {
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 487
      },
      "79": {
        loc: {
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "80": {
        loc: {
          start: {
            line: 489,
            column: 16
          },
          end: {
            line: 489,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 489,
            column: 16
          },
          end: {
            line: 489,
            column: 57
          }
        }, {
          start: {
            line: 489,
            column: 61
          },
          end: {
            line: 489,
            column: 77
          }
        }],
        line: 489
      },
      "81": {
        loc: {
          start: {
            line: 493,
            column: 12
          },
          end: {
            line: 495,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 12
          },
          end: {
            line: 495,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "82": {
        loc: {
          start: {
            line: 506,
            column: 34
          },
          end: {
            line: 506,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 506,
            column: 34
          },
          end: {
            line: 506,
            column: 59
          }
        }, {
          start: {
            line: 506,
            column: 63
          },
          end: {
            line: 506,
            column: 74
          }
        }],
        line: 506
      },
      "83": {
        loc: {
          start: {
            line: 523,
            column: 38
          },
          end: {
            line: 523,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 523,
            column: 48
          },
          end: {
            line: 523,
            column: 50
          }
        }],
        line: 523
      },
      "84": {
        loc: {
          start: {
            line: 530,
            column: 57
          },
          end: {
            line: 530,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 530,
            column: 57
          },
          end: {
            line: 530,
            column: 78
          }
        }, {
          start: {
            line: 530,
            column: 82
          },
          end: {
            line: 530,
            column: 96
          }
        }, {
          start: {
            line: 530,
            column: 100
          },
          end: {
            line: 530,
            column: 111
          }
        }],
        line: 530
      },
      "85": {
        loc: {
          start: {
            line: 539,
            column: 27
          },
          end: {
            line: 539,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 539,
            column: 27
          },
          end: {
            line: 539,
            column: 50
          }
        }, {
          start: {
            line: 539,
            column: 54
          },
          end: {
            line: 539,
            column: 67
          }
        }, {
          start: {
            line: 539,
            column: 71
          },
          end: {
            line: 539,
            column: 74
          }
        }],
        line: 539
      },
      "86": {
        loc: {
          start: {
            line: 540,
            column: 29
          },
          end: {
            line: 540,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 540,
            column: 29
          },
          end: {
            line: 540,
            column: 50
          }
        }, {
          start: {
            line: 540,
            column: 54
          },
          end: {
            line: 540,
            column: 65
          }
        }, {
          start: {
            line: 540,
            column: 69
          },
          end: {
            line: 540,
            column: 74
          }
        }],
        line: 540
      },
      "87": {
        loc: {
          start: {
            line: 541,
            column: 77
          },
          end: {
            line: 541,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 541,
            column: 77
          },
          end: {
            line: 541,
            column: 91
          }
        }, {
          start: {
            line: 541,
            column: 95
          },
          end: {
            line: 541,
            column: 100
          }
        }],
        line: 541
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0],
      "53": [0],
      "54": [0],
      "55": [0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0],
      "84": [0, 0, 0],
      "85": [0, 0, 0],
      "86": [0, 0, 0],
      "87": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/contexts/ErrorMonitorContext.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode, useCallback, useMemo } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useGlobalState } from './GlobalStateContext';\n\n// \u9519\u8BEF\u65E5\u5FD7\u63A5\u53E3\ninterface ErrorLog {\n  id: string;\n  message: string;\n  stack?: string;\n  timestamp: number;\n  componentName?: string;\n  userId?: string;\n  severity: 'info' | 'warning' | 'error' | 'critical';\n  metadata?: Record<string, any>;\n  networkInfo?: {\n    url?: string;\n    method?: string;\n    status?: number;\n    response?: string;\n  };\n  handled: boolean;\n  source: 'javascript' | 'api' | 'react' | 'promise' | 'custom';\n  breadcrumbs: Breadcrumb[];\n}\n\n// \u7528\u6237\u64CD\u4F5C\u8BB0\u5F55\ninterface Breadcrumb {\n  type: 'navigation' | 'ui' | 'network' | 'log' | 'error';\n  timestamp: number;\n  message: string;\n  data?: Record<string, any>;\n}\n\n// \u5B8C\u6574\u7684\u9519\u8BEF\u76D1\u63A7\u4E0A\u4E0B\u6587\u7C7B\u578B\ninterface ErrorMonitorContextType {\n  errors: ErrorLog[];\n  breadcrumbs: Breadcrumb[];\n  captureError: (error: Error | string, options?: CaptureErrorOptions) => string;\n  captureApiError: (endpoint: string, statusCode: number, response: any, method?: string) => string;\n  captureMessage: (message: string, severity?: 'info' | 'warning' | 'error' | 'critical') => string;\n  clearErrors: () => void;\n  reportError: (errorId: string) => Promise<void>;\n  addBreadcrumb: (breadcrumb: Omit<Breadcrumb, 'timestamp'>) => void;\n  clearBreadcrumbs: () => void;\n  hasUnhandledErrors: boolean;\n  errorCount: {\n    total: number;\n    critical: number;\n    error: number;\n    warning: number;\n    info: number;\n  };\n}\n\n// \u6355\u83B7\u9519\u8BEF\u7684\u9009\u9879\ninterface CaptureErrorOptions {\n  componentName?: string;\n  metadata?: Record<string, any>;\n  severity?: 'info' | 'warning' | 'error' | 'critical';\n  handled?: boolean;\n  source?: 'javascript' | 'api' | 'react' | 'promise' | 'custom';\n  silent?: boolean; // \u662F\u5426\u4E0D\u663E\u793AUI\u63D0\u793A\n}\n\n// \u521B\u5EFA\u4E0A\u4E0B\u6587\nconst ErrorMonitorContext = createContext<ErrorMonitorContextType | undefined>(undefined);\n\n// Hook\u7528\u4E8E\u7EC4\u4EF6\u4E2D\u8BBF\u95EE\u9519\u8BEF\u76D1\u63A7\nexport const useErrorMonitor = () => {\n  const context = useContext(ErrorMonitorContext);\n  if (!context) {\n    throw new Error('useErrorMonitor must be used within an ErrorMonitorProvider');\n  }\n  return context;\n};\n\n// \u83B7\u53D6\u7528\u6237ID\u7684\u8F85\u52A9\u51FD\u6570\nconst getUserId = (): string | undefined => {\n  try {\n    if (typeof window !== 'undefined') {\n      const userDataStr = localStorage.getItem('user');\n      if (userDataStr) {\n        const userData = JSON.parse(userDataStr);\n        return userData.id;\n      }\n    }\n  } catch (e) {\n    console.warn('Failed to get user ID from localStorage');\n  }\n  return undefined;\n};\n\n// \u9519\u8BEF\u76D1\u63A7\u63D0\u4F9B\u8005\u7EC4\u4EF6\ninterface Props {\n  children: ReactNode;\n  maxErrors?: number; // \u6700\u5927\u5B58\u50A8\u9519\u8BEF\u6570\n  reportEndpoint?: string; // \u62A5\u544A\u9519\u8BEF\u7684\u7AEF\u70B9\n  debug?: boolean; // \u662F\u5426\u663E\u793A\u8C03\u8BD5\u4FE1\u606F\n  captureUnhandled?: boolean; // \u662F\u5426\u6355\u83B7\u672A\u5904\u7406\u7684\u9519\u8BEF\n  captureBreadcrumbs?: boolean; // \u662F\u5426\u6355\u83B7\u7528\u6237\u64CD\u4F5C\n  maxBreadcrumbs?: number; // \u6700\u5927\u5B58\u50A8\u7684\u7528\u6237\u64CD\u4F5C\u6570\n}\n\nexport const ErrorMonitorProvider: React.FC<Props> = ({ \n  children,\n  maxErrors = 50,\n  reportEndpoint = '/api/error-report',\n  debug = false,\n  captureUnhandled = true,\n  captureBreadcrumbs = true,\n  maxBreadcrumbs = 50\n}) => {\n  const [errors, setErrors] = useState<ErrorLog[]>([]);\n  const [breadcrumbs, setBreadcrumbs] = useState<Breadcrumb[]>([]);\n  \n  // \u4ECEGlobalState\u83B7\u53D6\u6DFB\u52A0\u901A\u77E5\u7684\u529F\u80FD\n  const { dispatch } = useGlobalState();\n  \n  // \u7EDF\u8BA1\u9519\u8BEF\u8BA1\u6570\n  const errorCount = useMemo(() => {\n    return {\n      total: errors.length,\n      critical: errors.filter(e => e.severity === 'critical').length,\n      error: errors.filter(e => e.severity === 'error').length,\n      warning: errors.filter(e => e.severity === 'warning').length,\n      info: errors.filter(e => e.severity === 'info').length,\n    };\n  }, [errors]);\n  \n  // \u68C0\u67E5\u662F\u5426\u6709\u672A\u5904\u7406\u7684\u9519\u8BEF\n  const hasUnhandledErrors = useMemo(() => {\n    return errors.some(error => !error.handled);\n  }, [errors]);\n  \n  // \u751F\u6210\u552F\u4E00ID\n  const generateId = () => {\n    return `error_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n  };\n  \n  // \u6DFB\u52A0\u7528\u6237\u64CD\u4F5C\u8BB0\u5F55\n  const addBreadcrumb = useCallback((breadcrumb: Omit<Breadcrumb, 'timestamp'>) => {\n    if (!captureBreadcrumbs) return;\n    \n    const newBreadcrumb: Breadcrumb = {\n      ...breadcrumb,\n      timestamp: Date.now()\n    };\n    \n    setBreadcrumbs(prev => {\n      const updated = [newBreadcrumb, ...prev];\n      if (updated.length > maxBreadcrumbs) {\n        return updated.slice(0, maxBreadcrumbs);\n      }\n      return updated;\n    });\n    \n    if (debug) {\n      console.log(`[Error Monitor] Breadcrumb: ${breadcrumb.type} - ${breadcrumb.message}`);\n    }\n  }, [captureBreadcrumbs, debug, maxBreadcrumbs]);\n  \n  // \u6E05\u9664\u6240\u6709\u7528\u6237\u64CD\u4F5C\u8BB0\u5F55\n  const clearBreadcrumbs = useCallback(() => {\n    setBreadcrumbs([]);\n  }, []);\n  \n  // \u8BB0\u5F55\u9519\u8BEF\n  const logError = useCallback((\n    newError: Omit<ErrorLog, 'id' | 'timestamp' | 'breadcrumbs'>\n  ): string => {\n    const errorId = generateId();\n    \n    const errorLog: ErrorLog = {\n      id: errorId,\n      timestamp: Date.now(),\n      breadcrumbs: breadcrumbs.slice(),\n      ...newError\n    };\n    \n    // \u5C06\u9519\u8BEF\u6DFB\u52A0\u5230\u72B6\u6001\n    setErrors(prev => {\n      const updated = [errorLog, ...prev];\n      if (updated.length > maxErrors) {\n        return updated.slice(0, maxErrors);\n      }\n      return updated;\n    });\n    \n    // \u8BB0\u5F55\u5230\u63A7\u5236\u53F0\n    if (debug || newError.severity === 'critical' || newError.severity === 'error') {\n      console.error(\n        `[Error Monitor] ${newError.severity.toUpperCase()} - ${newError.componentName || 'Unknown'}: ${newError.message}`,\n        newError.metadata || {}\n      );\n    }\n    \n    return errorId;\n  }, [breadcrumbs, debug, maxErrors]);\n  \n  // \u6355\u83B7\u9519\u8BEF\u6D88\u606F\n  const captureMessage = useCallback((\n    message: string, \n    severity: 'info' | 'warning' | 'error' | 'critical' = 'info'\n  ): string => {\n    const errorId = logError({\n      message,\n      severity,\n      handled: true,\n      source: 'custom',\n      userId: getUserId()\n    });\n    \n    // \u6839\u636E\u4E25\u91CD\u7A0B\u5EA6\u51B3\u5B9A\u662F\u5426\u663E\u793A\u901A\u77E5\n    if (severity === 'error' || severity === 'critical') {\n      toast.error(message);\n    } else if (severity === 'warning') {\n      // \u7531\u4E8Ereact-hot-toast\u6CA1\u6709\u5185\u7F6Ewarning\u65B9\u6CD5\uFF0C\u4F7F\u7528\u81EA\u5B9A\u4E49\u56FE\u6807\n      toast(message, { icon: '\u26A0\uFE0F' });\n    } else {\n      toast(message);\n    }\n    \n    // \u6DFB\u52A0\u5230\u5168\u5C40\u72B6\u6001\u7684\u901A\u77E5\u7CFB\u7EDF\n    if (dispatch) {\n      try {\n        dispatch({\n          type: 'ADD_NOTIFICATION',\n          payload: {\n            type: severity === 'info' ? 'info' : severity === 'warning' ? 'warning' : 'error',\n            message,\n            autoClose: severity === 'info' || severity === 'warning'\n          }\n        });\n      } catch (e) {\n        console.error('Failed to dispatch notification:', e);\n      }\n    }\n    \n    return errorId;\n  }, [logError, dispatch]);\n  \n  // \u6355\u83B7API\u9519\u8BEF\n  const captureApiError = useCallback((\n    endpoint: string,\n    statusCode: number,\n    response: any,\n    method: string = 'GET'\n  ): string => {\n    // \u786E\u5B9A\u4E25\u91CD\u7A0B\u5EA6\n    let severity: 'info' | 'warning' | 'error' | 'critical' = 'error';\n    if (statusCode >= 500) severity = 'critical';\n    else if (statusCode >= 400) severity = 'error';\n    else if (statusCode >= 300) severity = 'warning';\n    \n    const errorId = logError({\n      message: `API ${method} \u8BF7\u6C42\u9519\u8BEF: ${endpoint} (${statusCode})`,\n      severity,\n      handled: true,\n      source: 'api',\n      userId: getUserId(),\n      networkInfo: {\n        url: endpoint,\n        method,\n        status: statusCode,\n        response: typeof response === 'string' ? response : JSON.stringify(response),\n      }\n    });\n    \n    // \u53EA\u5BF9\u5BA2\u6237\u7AEF\u9519\u8BEF\u663E\u793A\u6D88\u606F\n    if (statusCode >= 400 && statusCode < 500) {\n      toast.error(`\u8BF7\u6C42\u9519\u8BEF: ${typeof response === 'string' ? response : JSON.stringify(response)}`);\n    } else if (statusCode >= 500) {\n      toast.error('\u670D\u52A1\u5668\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5');\n    }\n    \n    return errorId;\n  }, [logError]);\n  \n  // \u6355\u83B7\u4E00\u822C\u9519\u8BEF\n  const captureError = useCallback((\n    error: Error | string,\n    options: CaptureErrorOptions = {}\n  ): string => {\n    const errorMessage = typeof error === 'string' ? error : error.message;\n    const errorStack = typeof error === 'string' ? undefined : error.stack;\n    \n    const {\n      componentName,\n      metadata,\n      severity = 'error',\n      handled = false,\n      source = 'javascript',\n      silent = false\n    } = options;\n    \n    // \u83B7\u53D6\u5F53\u524D\u7528\u6237ID\n    const userId = getUserId();\n    \n    const errorId = logError({\n      message: errorMessage,\n      stack: errorStack,\n      componentName,\n      metadata,\n      severity,\n      handled,\n      source,\n      userId\n    });\n    \n    // \u5728UI\u4E0A\u663E\u793A\u9519\u8BEF\u901A\u77E5\uFF0C\u9664\u975E\u8BBE\u7F6E\u4E86silent\n    if (!silent) {\n      if (severity === 'critical' || severity === 'error') {\n        toast.error(componentName ? `${componentName}: ${errorMessage}` : errorMessage);\n      } else if (severity === 'warning') {\n        // \u4F7F\u7528\u81EA\u5B9A\u4E49\u56FE\u6807\u663E\u793A\u8B66\u544A\n        toast(errorMessage, { icon: '\u26A0\uFE0F' });\n      } else {\n        toast(errorMessage);\n      }\n      \n      // \u6DFB\u52A0\u5230\u5168\u5C40\u72B6\u6001\u7684\u901A\u77E5\u7CFB\u7EDF\n      if (dispatch) {\n        try {\n          dispatch({\n            type: 'ADD_NOTIFICATION',\n            payload: {\n              type: severity === 'info' ? 'info' : severity === 'warning' ? 'warning' : 'error',\n              message: errorMessage,\n              autoClose: severity === 'info' || severity === 'warning'\n            }\n          });\n        } catch (e) {\n          console.error('Failed to dispatch notification:', e);\n        }\n      }\n    }\n    \n    return errorId;\n  }, [logError, dispatch]);\n  \n  // \u6E05\u9664\u9519\u8BEF\n  const clearErrors = useCallback(() => {\n    setErrors([]);\n  }, []);\n  \n  // \u5C06\u9519\u8BEF\u62A5\u544A\u5230\u540E\u7AEF\n  const reportError = useCallback(async (errorId: string): Promise<void> => {\n    const error = errors.find(e => e.id === errorId);\n    if (!error) return;\n    \n    try {\n      // \u6DFB\u52A0\u7528\u6237\u64CD\u4F5C\n      addBreadcrumb({\n        type: 'log',\n        message: `Reporting error: ${error.message}`,\n        data: { errorId }\n      });\n      \n      // \u53D1\u9001\u5230API\u7AEF\u70B9\n      const response = await fetch(reportEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(error),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to report error');\n      }\n      \n      // \u6807\u8BB0\u9519\u8BEF\u4E3A\u5DF2\u5904\u7406\n      setErrors(prevErrors => \n        prevErrors.map(e => \n          e.id === errorId ? { ...e, handled: true } : e\n        )\n      );\n      \n      toast.success('\u9519\u8BEF\u5DF2\u62A5\u544A\uFF0C\u611F\u8C22\u60A8\u7684\u53CD\u9988');\n    } catch (e) {\n      console.error('Failed to send error report:', e);\n      captureError(e instanceof Error ? e : String(e), {\n        componentName: 'ErrorReporter',\n        severity: 'warning',\n        source: 'api'\n      });\n      toast.error('\u65E0\u6CD5\u53D1\u9001\u9519\u8BEF\u62A5\u544A');\n    }\n  }, [errors, addBreadcrumb, reportEndpoint, captureError]);\n  \n  // \u5168\u5C40\u9519\u8BEF\u5904\u7406\n  useEffect(() => {\n    if (!captureUnhandled) return;\n    \n    // \u5B9A\u4E49\u6240\u6709\u5904\u7406\u51FD\u6570\n    const handleGlobalError = (event: ErrorEvent) => {\n      captureError(event.error || new Error(event.message), {\n        componentName: 'Window',\n        source: 'javascript',\n        handled: false\n      });\n      \n      // \u963B\u6B62\u9ED8\u8BA4\u5904\u7406\n      event.preventDefault();\n    };\n    \n    const handleRejection = (event: PromiseRejectionEvent) => {\n      const error = event.reason instanceof Error \n        ? event.reason \n        : new Error(String(event.reason));\n      \n      captureError(error, {\n        componentName: 'Promise',\n        source: 'promise',\n        handled: false\n      });\n    };\n    \n    const handleNetworkError = () => {\n      captureMessage('\u7F51\u7EDC\u8FDE\u63A5\u5DF2\u65AD\u5F00', 'warning');\n    };\n    \n    const handleNetworkRecovery = () => {\n      captureMessage('\u7F51\u7EDC\u8FDE\u63A5\u5DF2\u6062\u590D', 'info');\n    };\n    \n    const recordNavigation = () => {\n      addBreadcrumb({\n        type: 'navigation',\n        message: `Navigated to: ${window.location.pathname}${window.location.search}`\n      });\n    };\n    \n    // \u6DFB\u52A0\u5168\u5C40\u9519\u8BEF\u76D1\u542C\u5668\n    window.addEventListener('error', handleGlobalError);\n    window.addEventListener('unhandledrejection', handleRejection);\n    window.addEventListener('offline', handleNetworkError);\n    window.addEventListener('online', handleNetworkRecovery);\n    \n    // \u6DFB\u52A0\u5BFC\u822A\u76D1\u542C\n    if (captureBreadcrumbs && typeof window !== 'undefined') {\n      // \u8BB0\u5F55\u521D\u59CB\u5BFC\u822A\n      recordNavigation();\n      \n      // \u76D1\u542C\u8DEF\u7531\u53D8\u5316\n      window.addEventListener('popstate', recordNavigation);\n    }\n    \n    // \u6E05\u7406\u51FD\u6570\n    return () => {\n      window.removeEventListener('error', handleGlobalError);\n      window.removeEventListener('unhandledrejection', handleRejection);\n      window.removeEventListener('offline', handleNetworkError);\n      window.removeEventListener('online', handleNetworkRecovery);\n      \n      if (captureBreadcrumbs && typeof window !== 'undefined') {\n        window.removeEventListener('popstate', recordNavigation);\n      }\n    };\n  }, [captureUnhandled, captureError, captureBreadcrumbs, addBreadcrumb, captureMessage]);\n  \n  // \u63D0\u4F9B\u4E0A\u4E0B\u6587\u503C\n  const contextValue = useMemo<ErrorMonitorContextType>(() => ({\n    errors,\n    breadcrumbs,\n    captureError,\n    captureApiError,\n    captureMessage,\n    clearErrors,\n    reportError,\n    addBreadcrumb,\n    clearBreadcrumbs,\n    hasUnhandledErrors,\n    errorCount\n  }), [\n    errors, \n    breadcrumbs, \n    captureError,\n    captureApiError, \n    captureMessage,\n    clearErrors, \n    reportError, \n    addBreadcrumb,\n    clearBreadcrumbs,\n    hasUnhandledErrors,\n    errorCount\n  ]);\n  \n  return (\n    <ErrorMonitorContext.Provider value={contextValue}>\n      {children}\n    </ErrorMonitorContext.Provider>\n  );\n};\n\n// \u9519\u8BEF\u8FB9\u754C\u7EC4\u4EF6\u7528\u4E8E\u5305\u88F9React\u7EC4\u4EF6\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n  fallback?: ReactNode | ((error: Error, resetError: () => void) => React.ReactNode);\n  componentName?: string;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  static contextType = ErrorMonitorContext;\n  context!: React.ContextType<typeof ErrorMonitorContext>;\n  \n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // \u8C03\u7528\u81EA\u5B9A\u4E49\u9519\u8BEF\u5904\u7406\u7A0B\u5E8F\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n    \n    // \u83B7\u53D6\u9519\u8BEF\u76D1\u63A7\u4E0A\u4E0B\u6587\n    if (this.context) {\n      this.context.captureError(error, {\n        componentName: this.props.componentName,\n        source: 'react',\n        metadata: { componentStack: errorInfo.componentStack }\n      });\n    } else {\n      console.error('Error occurred but no ErrorMonitorContext available:', error);\n    }\n  }\n  \n  resetError = () => {\n    this.setState({ hasError: false, error: null });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // \u5982\u679C\u63D0\u4F9B\u4E86fallback\u51FD\u6570\uFF0C\u5219\u8C03\u7528\u5B83\n      if (typeof this.props.fallback === 'function' && this.state.error) {\n        return (this.props.fallback as Function)(this.state.error, this.resetError);\n      }\n      \n      // \u5982\u679C\u63D0\u4F9B\u4E86fallback\u7EC4\u4EF6\uFF0C\u5219\u4F7F\u7528\u5B83\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n      \n      // \u9ED8\u8BA4\u9519\u8BEFUI\n      return (\n        <div className=\"error-fallback bg-red-100 dark:bg-red-900/20 p-4 rounded-md border border-red-300 dark:border-red-800 my-4\">\n          <h2 className=\"text-lg font-bold text-red-800 dark:text-red-300\">\u7EC4\u4EF6\u53D1\u751F\u9519\u8BEF</h2>\n          <p className=\"text-red-600 dark:text-red-400 mb-2\">\n            {this.state.error?.message || '\u53D1\u751F\u4E86\u4E00\u4E2A\u672A\u77E5\u9519\u8BEF'}\n          </p>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\u6211\u4EEC\u5DF2\u8BB0\u5F55\u6B64\u95EE\u9898\u5E76\u5C06\u5C3D\u5FEB\u4FEE\u590D\u3002</p>\n          <button \n            onClick={this.resetError}\n            className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n          >\n            \u91CD\u8BD5\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// \u521B\u5EFA\u4E00\u4E2A\u9AD8\u9636\u7EC4\u4EF6\uFF0C\u65B9\u4FBF\u5305\u88C5\u7EC4\u4EF6\nexport function withErrorBoundary<P extends object>(\n  Component: React.ComponentType<P>,\n  options: Omit<ErrorBoundaryProps, 'children'> = {}\n): React.FC<P> {\n  const WithErrorBoundary: React.FC<P> = (props) => (\n    <ErrorBoundary {...options}>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n  \n  WithErrorBoundary.displayName = `WithErrorBoundary(${Component.displayName || Component.name || 'Component'})`;\n  \n  return WithErrorBoundary;\n}\n\n// \u521B\u5EFAAPI\u9519\u8BEF\u5904\u7406\u5305\u88C5\u5668\nexport function createApiErrorHandler(errorMonitor: ErrorMonitorContextType) {\n  return async function apiErrorHandler<T>(\n    promise: Promise<T>, \n    options: {\n      endpoint: string;\n      method?: string;\n      silent?: boolean;\n    }\n  ): Promise<T> {\n    try {\n      return await promise;\n    } catch (error) {\n      // \u5904\u7406Fetch API\u6216Axios\u9519\u8BEF\n      const status = (error as any)?.response?.status || (error as any)?.status || 500;\n      const response = (error as any)?.response?.data || (error as any)?.data || error;\n      \n      errorMonitor.captureApiError(\n        options.endpoint,\n        status,\n        response,\n        options.method || 'GET'\n      );\n      \n      throw error; // \u7EE7\u7EED\u629B\u51FA\u9519\u8BEF\u4EE5\u4FBF\u8C03\u7528\u8005\u53EF\u4EE5\u5904\u7406\n    }\n  };\n} "],
      names: ["ErrorBoundary", "ErrorMonitorProvider", "createApiErrorHandler", "useErrorMonitor", "withErrorBoundary", "ErrorMonitorContext", "createContext", "undefined", "context", "useContext", "Error", "getUserId", "window", "userDataStr", "localStorage", "getItem", "userData", "JSON", "parse", "id", "e", "console", "warn", "children", "maxErrors", "reportEndpoint", "debug", "captureUnhandled", "captureBreadcrumbs", "maxBreadcrumbs", "errors", "setErrors", "useState", "breadcrumbs", "setBreadcrumbs", "dispatch", "useGlobalState", "errorCount", "useMemo", "total", "length", "critical", "filter", "severity", "error", "warning", "info", "hasUnhandledErrors", "some", "handled", "generateId", "Date", "now", "Math", "random", "toString", "substring", "addBreadcrumb", "useCallback", "breadcrumb", "newBreadcrumb", "timestamp", "prev", "updated", "slice", "log", "type", "message", "clearBreadcrumbs", "logError", "newError", "errorId", "errorLog", "toUpperCase", "componentName", "metadata", "captureMessage", "source", "userId", "toast", "icon", "payload", "autoClose", "captureApiError", "endpoint", "statusCode", "response", "method", "networkInfo", "url", "status", "stringify", "captureError", "options", "errorMessage", "errorStack", "stack", "silent", "clearErrors", "reportError", "find", "data", "fetch", "headers", "body", "ok", "prevErrors", "map", "success", "String", "useEffect", "handleGlobalError", "event", "preventDefault", "handleRejection", "reason", "handleNetworkError", "handleNetworkRecovery", "recordNavigation", "location", "pathname", "search", "addEventListener", "removeEventListener", "contextValue", "Provider", "value", "React", "Component", "contextType", "constructor", "props", "resetError", "setState", "hasError", "state", "getDerivedStateFromError", "componentDidCatch", "errorInfo", "onError", "componentStack", "render", "fallback", "div", "className", "h2", "p", "button", "onClick", "WithErrorBoundary", "displayName", "name", "errorMonitor", "apiErrorHandler", "promise"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a697e433cc7d348172a190368cff7a8f82e21d3f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2nnm4j4nh4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nnm4j4nh4();
cov_2nnm4j4nh4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2nnm4j4nh4().f[0]++;
  cov_2nnm4j4nh4().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2nnm4j4nh4().s[3]++;
_export(exports, {
  ErrorBoundary: function () {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[1]++;
    cov_2nnm4j4nh4().s[4]++;
    return ErrorBoundary;
  },
  ErrorMonitorProvider: function () {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[2]++;
    cov_2nnm4j4nh4().s[5]++;
    return ErrorMonitorProvider;
  },
  createApiErrorHandler: function () {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[3]++;
    cov_2nnm4j4nh4().s[6]++;
    return createApiErrorHandler;
  },
  useErrorMonitor: function () {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[4]++;
    cov_2nnm4j4nh4().s[7]++;
    return useErrorMonitor;
  },
  withErrorBoundary: function () {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[5]++;
    cov_2nnm4j4nh4().s[8]++;
    return withErrorBoundary;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2nnm4j4nh4().s[9]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2nnm4j4nh4().s[10]++, _interop_require_wildcard(require("react")));
const _reacthottoast =
/* istanbul ignore next */
(cov_2nnm4j4nh4().s[11]++, require("react-hot-toast"));
const _GlobalStateContext =
/* istanbul ignore next */
(cov_2nnm4j4nh4().s[12]++, require("./GlobalStateContext"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2nnm4j4nh4().f[6]++;
  cov_2nnm4j4nh4().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().b[0][0]++;
    cov_2nnm4j4nh4().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2nnm4j4nh4().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[7]++;
    cov_2nnm4j4nh4().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2nnm4j4nh4().f[8]++;
  cov_2nnm4j4nh4().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().b[2][0]++;
    cov_2nnm4j4nh4().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2nnm4j4nh4().b[2][1]++;
  }
  cov_2nnm4j4nh4().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().b[4][0]++;
    cov_2nnm4j4nh4().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2nnm4j4nh4().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().b[6][0]++;
    cov_2nnm4j4nh4().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2nnm4j4nh4().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[27]++,
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[12][0]++;
        cov_2nnm4j4nh4().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[12][1]++;
        cov_2nnm4j4nh4().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().b[14][0]++;
    cov_2nnm4j4nh4().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2nnm4j4nh4().b[14][1]++;
  }
  cov_2nnm4j4nh4().s[37]++;
  return newObj;
}
// 创建上下文
const ErrorMonitorContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_2nnm4j4nh4().s[38]++, (0, _react.createContext)(undefined));
/* istanbul ignore next */
cov_2nnm4j4nh4().s[39]++;
const useErrorMonitor = () => {
  /* istanbul ignore next */
  cov_2nnm4j4nh4().f[9]++;
  const context =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[40]++, (0, _react.useContext)(ErrorMonitorContext));
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[41]++;
  if (!context) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().b[15][0]++;
    cov_2nnm4j4nh4().s[42]++;
    throw new Error('useErrorMonitor must be used within an ErrorMonitorProvider');
  } else
  /* istanbul ignore next */
  {
    cov_2nnm4j4nh4().b[15][1]++;
  }
  cov_2nnm4j4nh4().s[43]++;
  return context;
};
// 获取用户ID的辅助函数
/* istanbul ignore next */
cov_2nnm4j4nh4().s[44]++;
const getUserId = () => {
  /* istanbul ignore next */
  cov_2nnm4j4nh4().f[10]++;
  cov_2nnm4j4nh4().s[45]++;
  try {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[46]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[16][0]++;
      const userDataStr =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().s[47]++, localStorage.getItem('user'));
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[48]++;
      if (userDataStr) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[17][0]++;
        const userData =
        /* istanbul ignore next */
        (cov_2nnm4j4nh4().s[49]++, JSON.parse(userDataStr));
        /* istanbul ignore next */
        cov_2nnm4j4nh4().s[50]++;
        return userData.id;
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[17][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[16][1]++;
    }
  } catch (e) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[51]++;
    console.warn('Failed to get user ID from localStorage');
  }
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[52]++;
  return undefined;
};
/* istanbul ignore next */
cov_2nnm4j4nh4().s[53]++;
const ErrorMonitorProvider = ({
  children,
  maxErrors =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[18][0]++, 50),
  reportEndpoint =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[19][0]++, '/api/error-report'),
  debug =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[20][0]++, false),
  captureUnhandled =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[21][0]++, true),
  captureBreadcrumbs =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[22][0]++, true),
  maxBreadcrumbs =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[23][0]++, 50)
}) => {
  /* istanbul ignore next */
  cov_2nnm4j4nh4().f[11]++;
  const [errors, setErrors] =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[54]++, (0, _react.useState)([]));
  const [breadcrumbs, setBreadcrumbs] =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[55]++, (0, _react.useState)([]));
  // 从GlobalState获取添加通知的功能
  const {
    dispatch
  } =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[56]++, (0, _GlobalStateContext.useGlobalState)());
  // 统计错误计数
  const errorCount =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[57]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[12]++;
    cov_2nnm4j4nh4().s[58]++;
    return {
      total: errors.length,
      critical: errors.filter(e => {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().f[13]++;
        cov_2nnm4j4nh4().s[59]++;
        return e.severity === 'critical';
      }).length,
      error: errors.filter(e => {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().f[14]++;
        cov_2nnm4j4nh4().s[60]++;
        return e.severity === 'error';
      }).length,
      warning: errors.filter(e => {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().f[15]++;
        cov_2nnm4j4nh4().s[61]++;
        return e.severity === 'warning';
      }).length,
      info: errors.filter(e => {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().f[16]++;
        cov_2nnm4j4nh4().s[62]++;
        return e.severity === 'info';
      }).length
    };
  }, [errors]));
  // 检查是否有未处理的错误
  const hasUnhandledErrors =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[63]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[17]++;
    cov_2nnm4j4nh4().s[64]++;
    return errors.some(error => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[18]++;
      cov_2nnm4j4nh4().s[65]++;
      return !error.handled;
    });
  }, [errors]));
  // 生成唯一ID
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[66]++;
  const generateId = () => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[19]++;
    cov_2nnm4j4nh4().s[67]++;
    return `error_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;
  };
  // 添加用户操作记录
  const addBreadcrumb =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[68]++, (0, _react.useCallback)(breadcrumb => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[20]++;
    cov_2nnm4j4nh4().s[69]++;
    if (!captureBreadcrumbs) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[24][0]++;
      cov_2nnm4j4nh4().s[70]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[24][1]++;
    }
    const newBreadcrumb =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[71]++, {
      ...breadcrumb,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[72]++;
    setBreadcrumbs(prev => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[21]++;
      const updated =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().s[73]++, [newBreadcrumb, ...prev]);
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[74]++;
      if (updated.length > maxBreadcrumbs) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[25][0]++;
        cov_2nnm4j4nh4().s[75]++;
        return updated.slice(0, maxBreadcrumbs);
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[25][1]++;
      }
      cov_2nnm4j4nh4().s[76]++;
      return updated;
    });
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[77]++;
    if (debug) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[26][0]++;
      cov_2nnm4j4nh4().s[78]++;
      console.log(`[Error Monitor] Breadcrumb: ${breadcrumb.type} - ${breadcrumb.message}`);
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[26][1]++;
    }
  }, [captureBreadcrumbs, debug, maxBreadcrumbs]));
  // 清除所有用户操作记录
  const clearBreadcrumbs =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[79]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[22]++;
    cov_2nnm4j4nh4().s[80]++;
    setBreadcrumbs([]);
  }, []));
  // 记录错误
  const logError =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[81]++, (0, _react.useCallback)(newError => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[23]++;
    const errorId =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[82]++, generateId());
    const errorLog =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[83]++, {
      id: errorId,
      timestamp: Date.now(),
      breadcrumbs: breadcrumbs.slice(),
      ...newError
    });
    // 将错误添加到状态
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[84]++;
    setErrors(prev => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[24]++;
      const updated =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().s[85]++, [errorLog, ...prev]);
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[86]++;
      if (updated.length > maxErrors) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[27][0]++;
        cov_2nnm4j4nh4().s[87]++;
        return updated.slice(0, maxErrors);
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[27][1]++;
      }
      cov_2nnm4j4nh4().s[88]++;
      return updated;
    });
    // 记录到控制台
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[89]++;
    if (
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[29][0]++, debug) ||
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[29][1]++, newError.severity === 'critical') ||
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[29][2]++, newError.severity === 'error')) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[28][0]++;
      cov_2nnm4j4nh4().s[90]++;
      console.error(`[Error Monitor] ${newError.severity.toUpperCase()} - ${
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[30][0]++, newError.componentName) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[30][1]++, 'Unknown')}: ${newError.message}`,
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[31][0]++, newError.metadata) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[31][1]++, {}));
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[28][1]++;
    }
    cov_2nnm4j4nh4().s[91]++;
    return errorId;
  }, [breadcrumbs, debug, maxErrors]));
  // 捕获错误消息
  const captureMessage =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[92]++, (0, _react.useCallback)((message, severity =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[32][0]++, 'info')) => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[25]++;
    const errorId =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[93]++, logError({
      message,
      severity,
      handled: true,
      source: 'custom',
      userId: getUserId()
    }));
    // 根据严重程度决定是否显示通知
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[94]++;
    if (
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[34][0]++, severity === 'error') ||
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[34][1]++, severity === 'critical')) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[33][0]++;
      cov_2nnm4j4nh4().s[95]++;
      _reacthottoast.toast.error(message);
    } else {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[33][1]++;
      cov_2nnm4j4nh4().s[96]++;
      if (severity === 'warning') {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[35][0]++;
        cov_2nnm4j4nh4().s[97]++;
        // 由于react-hot-toast没有内置warning方法，使用自定义图标
        (0, _reacthottoast.toast)(message, {
          icon: '⚠️'
        });
      } else {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[35][1]++;
        cov_2nnm4j4nh4().s[98]++;
        (0, _reacthottoast.toast)(message);
      }
    }
    // 添加到全局状态的通知系统
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[99]++;
    if (dispatch) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[36][0]++;
      cov_2nnm4j4nh4().s[100]++;
      try {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().s[101]++;
        dispatch({
          type: 'ADD_NOTIFICATION',
          payload: {
            type: severity === 'info' ?
            /* istanbul ignore next */
            (cov_2nnm4j4nh4().b[37][0]++, 'info') :
            /* istanbul ignore next */
            (cov_2nnm4j4nh4().b[37][1]++, severity === 'warning' ?
            /* istanbul ignore next */
            (cov_2nnm4j4nh4().b[38][0]++, 'warning') :
            /* istanbul ignore next */
            (cov_2nnm4j4nh4().b[38][1]++, 'error')),
            message,
            autoClose:
            /* istanbul ignore next */
            (cov_2nnm4j4nh4().b[39][0]++, severity === 'info') ||
            /* istanbul ignore next */
            (cov_2nnm4j4nh4().b[39][1]++, severity === 'warning')
          }
        });
      } catch (e) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().s[102]++;
        console.error('Failed to dispatch notification:', e);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[36][1]++;
    }
    cov_2nnm4j4nh4().s[103]++;
    return errorId;
  }, [logError, dispatch]));
  // 捕获API错误
  const captureApiError =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[104]++, (0, _react.useCallback)((endpoint, statusCode, response, method =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[40][0]++, 'GET')) => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[26]++;
    // 确定严重程度
    let severity =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[105]++, 'error');
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[106]++;
    if (statusCode >= 500) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[41][0]++;
      cov_2nnm4j4nh4().s[107]++;
      severity = 'critical';
    } else {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[41][1]++;
      cov_2nnm4j4nh4().s[108]++;
      if (statusCode >= 400) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[42][0]++;
        cov_2nnm4j4nh4().s[109]++;
        severity = 'error';
      } else {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[42][1]++;
        cov_2nnm4j4nh4().s[110]++;
        if (statusCode >= 300) {
          /* istanbul ignore next */
          cov_2nnm4j4nh4().b[43][0]++;
          cov_2nnm4j4nh4().s[111]++;
          severity = 'warning';
        } else
        /* istanbul ignore next */
        {
          cov_2nnm4j4nh4().b[43][1]++;
        }
      }
    }
    const errorId =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[112]++, logError({
      message: `API ${method} 请求错误: ${endpoint} (${statusCode})`,
      severity,
      handled: true,
      source: 'api',
      userId: getUserId(),
      networkInfo: {
        url: endpoint,
        method,
        status: statusCode,
        response: typeof response === 'string' ?
        /* istanbul ignore next */
        (cov_2nnm4j4nh4().b[44][0]++, response) :
        /* istanbul ignore next */
        (cov_2nnm4j4nh4().b[44][1]++, JSON.stringify(response))
      }
    }));
    // 只对客户端错误显示消息
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[113]++;
    if (
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[46][0]++, statusCode >= 400) &&
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[46][1]++, statusCode < 500)) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[45][0]++;
      cov_2nnm4j4nh4().s[114]++;
      _reacthottoast.toast.error(`请求错误: ${typeof response === 'string' ?
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[47][0]++, response) :
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[47][1]++, JSON.stringify(response))}`);
    } else {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[45][1]++;
      cov_2nnm4j4nh4().s[115]++;
      if (statusCode >= 500) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[48][0]++;
        cov_2nnm4j4nh4().s[116]++;
        _reacthottoast.toast.error('服务器错误，请稍后再试');
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[48][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[117]++;
    return errorId;
  }, [logError]));
  // 捕获一般错误
  const captureError =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[118]++, (0, _react.useCallback)((error, options =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[49][0]++, {})) => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[27]++;
    const errorMessage =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[119]++, typeof error === 'string' ?
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[50][0]++, error) :
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[50][1]++, error.message));
    const errorStack =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[120]++, typeof error === 'string' ?
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[51][0]++, undefined) :
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[51][1]++, error.stack));
    const {
      componentName,
      metadata,
      severity =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[52][0]++, 'error'),
      handled =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[53][0]++, false),
      source =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[54][0]++, 'javascript'),
      silent =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[55][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[121]++, options);
    // 获取当前用户ID
    const userId =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[122]++, getUserId());
    const errorId =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[123]++, logError({
      message: errorMessage,
      stack: errorStack,
      componentName,
      metadata,
      severity,
      handled,
      source,
      userId
    }));
    // 在UI上显示错误通知，除非设置了silent
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[124]++;
    if (!silent) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[56][0]++;
      cov_2nnm4j4nh4().s[125]++;
      if (
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[58][0]++, severity === 'critical') ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[58][1]++, severity === 'error')) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[57][0]++;
        cov_2nnm4j4nh4().s[126]++;
        _reacthottoast.toast.error(componentName ?
        /* istanbul ignore next */
        (cov_2nnm4j4nh4().b[59][0]++, `${componentName}: ${errorMessage}`) :
        /* istanbul ignore next */
        (cov_2nnm4j4nh4().b[59][1]++, errorMessage));
      } else {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[57][1]++;
        cov_2nnm4j4nh4().s[127]++;
        if (severity === 'warning') {
          /* istanbul ignore next */
          cov_2nnm4j4nh4().b[60][0]++;
          cov_2nnm4j4nh4().s[128]++;
          // 使用自定义图标显示警告
          (0, _reacthottoast.toast)(errorMessage, {
            icon: '⚠️'
          });
        } else {
          /* istanbul ignore next */
          cov_2nnm4j4nh4().b[60][1]++;
          cov_2nnm4j4nh4().s[129]++;
          (0, _reacthottoast.toast)(errorMessage);
        }
      }
      // 添加到全局状态的通知系统
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[130]++;
      if (dispatch) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[61][0]++;
        cov_2nnm4j4nh4().s[131]++;
        try {
          /* istanbul ignore next */
          cov_2nnm4j4nh4().s[132]++;
          dispatch({
            type: 'ADD_NOTIFICATION',
            payload: {
              type: severity === 'info' ?
              /* istanbul ignore next */
              (cov_2nnm4j4nh4().b[62][0]++, 'info') :
              /* istanbul ignore next */
              (cov_2nnm4j4nh4().b[62][1]++, severity === 'warning' ?
              /* istanbul ignore next */
              (cov_2nnm4j4nh4().b[63][0]++, 'warning') :
              /* istanbul ignore next */
              (cov_2nnm4j4nh4().b[63][1]++, 'error')),
              message: errorMessage,
              autoClose:
              /* istanbul ignore next */
              (cov_2nnm4j4nh4().b[64][0]++, severity === 'info') ||
              /* istanbul ignore next */
              (cov_2nnm4j4nh4().b[64][1]++, severity === 'warning')
            }
          });
        } catch (e) {
          /* istanbul ignore next */
          cov_2nnm4j4nh4().s[133]++;
          console.error('Failed to dispatch notification:', e);
        }
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[61][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[56][1]++;
    }
    cov_2nnm4j4nh4().s[134]++;
    return errorId;
  }, [logError, dispatch]));
  // 清除错误
  const clearErrors =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[135]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[28]++;
    cov_2nnm4j4nh4().s[136]++;
    setErrors([]);
  }, []));
  // 将错误报告到后端
  const reportError =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[137]++, (0, _react.useCallback)(async errorId => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[29]++;
    const error =
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().s[138]++, errors.find(e => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[30]++;
      cov_2nnm4j4nh4().s[139]++;
      return e.id === errorId;
    }));
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[140]++;
    if (!error) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[65][0]++;
      cov_2nnm4j4nh4().s[141]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[65][1]++;
    }
    cov_2nnm4j4nh4().s[142]++;
    try {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[143]++;
      // 添加用户操作
      addBreadcrumb({
        type: 'log',
        message: `Reporting error: ${error.message}`,
        data: {
          errorId
        }
      });
      // 发送到API端点
      const response =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().s[144]++, await fetch(reportEndpoint, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(error)
      }));
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[145]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[66][0]++;
        cov_2nnm4j4nh4().s[146]++;
        throw new Error('Failed to report error');
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[66][1]++;
      }
      // 标记错误为已处理
      cov_2nnm4j4nh4().s[147]++;
      setErrors(prevErrors => {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().f[31]++;
        cov_2nnm4j4nh4().s[148]++;
        return prevErrors.map(e => {
          /* istanbul ignore next */
          cov_2nnm4j4nh4().f[32]++;
          cov_2nnm4j4nh4().s[149]++;
          return e.id === errorId ?
          /* istanbul ignore next */
          (cov_2nnm4j4nh4().b[67][0]++, {
            ...e,
            handled: true
          }) :
          /* istanbul ignore next */
          (cov_2nnm4j4nh4().b[67][1]++, e);
        });
      });
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[150]++;
      _reacthottoast.toast.success('错误已报告，感谢您的反馈');
    } catch (e) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[151]++;
      console.error('Failed to send error report:', e);
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[152]++;
      captureError(e instanceof Error ?
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[68][0]++, e) :
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[68][1]++, String(e)), {
        componentName: 'ErrorReporter',
        severity: 'warning',
        source: 'api'
      });
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[153]++;
      _reacthottoast.toast.error('无法发送错误报告');
    }
  }, [errors, addBreadcrumb, reportEndpoint, captureError]));
  // 全局错误处理
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[154]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[33]++;
    cov_2nnm4j4nh4().s[155]++;
    if (!captureUnhandled) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[69][0]++;
      cov_2nnm4j4nh4().s[156]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[69][1]++;
    }
    // 定义所有处理函数
    cov_2nnm4j4nh4().s[157]++;
    const handleGlobalError = event => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[34]++;
      cov_2nnm4j4nh4().s[158]++;
      captureError(
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[70][0]++, event.error) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[70][1]++, new Error(event.message)), {
        componentName: 'Window',
        source: 'javascript',
        handled: false
      });
      // 阻止默认处理
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[159]++;
      event.preventDefault();
    };
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[160]++;
    const handleRejection = event => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[35]++;
      const error =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().s[161]++, event.reason instanceof Error ?
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[71][0]++, event.reason) :
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[71][1]++, new Error(String(event.reason))));
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[162]++;
      captureError(error, {
        componentName: 'Promise',
        source: 'promise',
        handled: false
      });
    };
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[163]++;
    const handleNetworkError = () => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[36]++;
      cov_2nnm4j4nh4().s[164]++;
      captureMessage('网络连接已断开', 'warning');
    };
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[165]++;
    const handleNetworkRecovery = () => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[37]++;
      cov_2nnm4j4nh4().s[166]++;
      captureMessage('网络连接已恢复', 'info');
    };
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[167]++;
    const recordNavigation = () => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[38]++;
      cov_2nnm4j4nh4().s[168]++;
      addBreadcrumb({
        type: 'navigation',
        message: `Navigated to: ${window.location.pathname}${window.location.search}`
      });
    };
    // 添加全局错误监听器
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[169]++;
    window.addEventListener('error', handleGlobalError);
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[170]++;
    window.addEventListener('unhandledrejection', handleRejection);
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[171]++;
    window.addEventListener('offline', handleNetworkError);
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[172]++;
    window.addEventListener('online', handleNetworkRecovery);
    // 添加导航监听
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[173]++;
    if (
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[73][0]++, captureBreadcrumbs) &&
    /* istanbul ignore next */
    (cov_2nnm4j4nh4().b[73][1]++, typeof window !== 'undefined')) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[72][0]++;
      cov_2nnm4j4nh4().s[174]++;
      // 记录初始导航
      recordNavigation();
      // 监听路由变化
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[175]++;
      window.addEventListener('popstate', recordNavigation);
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[72][1]++;
    }
    // 清理函数
    cov_2nnm4j4nh4().s[176]++;
    return () => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[39]++;
      cov_2nnm4j4nh4().s[177]++;
      window.removeEventListener('error', handleGlobalError);
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[178]++;
      window.removeEventListener('unhandledrejection', handleRejection);
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[179]++;
      window.removeEventListener('offline', handleNetworkError);
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[180]++;
      window.removeEventListener('online', handleNetworkRecovery);
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[181]++;
      if (
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[75][0]++, captureBreadcrumbs) &&
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[75][1]++, typeof window !== 'undefined')) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[74][0]++;
        cov_2nnm4j4nh4().s[182]++;
        window.removeEventListener('popstate', recordNavigation);
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[74][1]++;
      }
    };
  }, [captureUnhandled, captureError, captureBreadcrumbs, addBreadcrumb, captureMessage]);
  // 提供上下文值
  const contextValue =
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().s[183]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[40]++;
    cov_2nnm4j4nh4().s[184]++;
    return {
      errors,
      breadcrumbs,
      captureError,
      captureApiError,
      captureMessage,
      clearErrors,
      reportError,
      addBreadcrumb,
      clearBreadcrumbs,
      hasUnhandledErrors,
      errorCount
    };
  }, [errors, breadcrumbs, captureError, captureApiError, captureMessage, clearErrors, reportError, addBreadcrumb, clearBreadcrumbs, hasUnhandledErrors, errorCount]));
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[185]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(ErrorMonitorContext.Provider, {
    value: contextValue,
    children: children
  });
};
class ErrorBoundary extends
/* istanbul ignore next */
(_react.default.Component) {
  static {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[186]++;
    this.contextType = ErrorMonitorContext;
  }
  constructor(props) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[41]++;
    cov_2nnm4j4nh4().s[187]++;
    super(props), this.resetError = () => {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().f[42]++;
      cov_2nnm4j4nh4().s[188]++;
      this.setState({
        hasError: false,
        error: null
      });
    };
    /* istanbul ignore next */
    cov_2nnm4j4nh4().s[189]++;
    this.state = {
      hasError: false,
      error: null
    };
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[43]++;
    cov_2nnm4j4nh4().s[190]++;
    return {
      hasError: true,
      error
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[44]++;
    cov_2nnm4j4nh4().s[191]++;
    // 调用自定义错误处理程序
    if (this.props.onError) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[76][0]++;
      cov_2nnm4j4nh4().s[192]++;
      this.props.onError(error, errorInfo);
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[76][1]++;
    }
    // 获取错误监控上下文
    cov_2nnm4j4nh4().s[193]++;
    if (this.context) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[77][0]++;
      cov_2nnm4j4nh4().s[194]++;
      this.context.captureError(error, {
        componentName: this.props.componentName,
        source: 'react',
        metadata: {
          componentStack: errorInfo.componentStack
        }
      });
    } else {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[77][1]++;
      cov_2nnm4j4nh4().s[195]++;
      console.error('Error occurred but no ErrorMonitorContext available:', error);
    }
  }
  render() {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[45]++;
    cov_2nnm4j4nh4().s[196]++;
    if (this.state.hasError) {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().b[78][0]++;
      cov_2nnm4j4nh4().s[197]++;
      // 如果提供了fallback函数，则调用它
      if (
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[80][0]++, typeof this.props.fallback === 'function') &&
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[80][1]++, this.state.error)) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[79][0]++;
        cov_2nnm4j4nh4().s[198]++;
        return this.props.fallback(this.state.error, this.resetError);
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[79][1]++;
      }
      // 如果提供了fallback组件，则使用它
      cov_2nnm4j4nh4().s[199]++;
      if (this.props.fallback) {
        /* istanbul ignore next */
        cov_2nnm4j4nh4().b[81][0]++;
        cov_2nnm4j4nh4().s[200]++;
        return this.props.fallback;
      } else
      /* istanbul ignore next */
      {
        cov_2nnm4j4nh4().b[81][1]++;
      }
      // 默认错误UI
      cov_2nnm4j4nh4().s[201]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "error-fallback bg-red-100 dark:bg-red-900/20 p-4 rounded-md border border-red-300 dark:border-red-800 my-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-bold text-red-800 dark:text-red-300",
          children: "组件发生错误"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-red-600 dark:text-red-400 mb-2",
          children:
          /* istanbul ignore next */
          (cov_2nnm4j4nh4().b[82][0]++, this.state.error?.message) ||
          /* istanbul ignore next */
          (cov_2nnm4j4nh4().b[82][1]++, '发生了一个未知错误')
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-sm text-gray-600 dark:text-gray-400",
          children: "我们已记录此问题并将尽快修复。"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: this.resetError,
          className: "mt-4 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors",
          children: "重试"
        })]
      });
    } else
    /* istanbul ignore next */
    {
      cov_2nnm4j4nh4().b[78][1]++;
    }
    cov_2nnm4j4nh4().s[202]++;
    return this.props.children;
  }
}
function withErrorBoundary(Component, options =
/* istanbul ignore next */
(cov_2nnm4j4nh4().b[83][0]++, {})) {
  /* istanbul ignore next */
  cov_2nnm4j4nh4().f[46]++;
  cov_2nnm4j4nh4().s[203]++;
  const WithErrorBoundary = props => {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[47]++;
    cov_2nnm4j4nh4().s[204]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(ErrorBoundary, {
      ...options,
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(Component, {
        ...props
      })
    });
  };
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[205]++;
  WithErrorBoundary.displayName = `WithErrorBoundary(${
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[84][0]++, Component.displayName) ||
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[84][1]++, Component.name) ||
  /* istanbul ignore next */
  (cov_2nnm4j4nh4().b[84][2]++, 'Component')})`;
  /* istanbul ignore next */
  cov_2nnm4j4nh4().s[206]++;
  return WithErrorBoundary;
}
function createApiErrorHandler(errorMonitor) {
  /* istanbul ignore next */
  cov_2nnm4j4nh4().f[48]++;
  cov_2nnm4j4nh4().s[207]++;
  return async function apiErrorHandler(promise, options) {
    /* istanbul ignore next */
    cov_2nnm4j4nh4().f[49]++;
    cov_2nnm4j4nh4().s[208]++;
    try {
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[209]++;
      return await promise;
    } catch (error) {
      // 处理Fetch API或Axios错误
      const status =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().s[210]++,
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[85][0]++, error?.response?.status) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[85][1]++, error?.status) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[85][2]++, 500));
      const response =
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().s[211]++,
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[86][0]++, error?.response?.data) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[86][1]++, error?.data) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[86][2]++, error));
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[212]++;
      errorMonitor.captureApiError(options.endpoint, status, response,
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[87][0]++, options.method) ||
      /* istanbul ignore next */
      (cov_2nnm4j4nh4().b[87][1]++, 'GET'));
      /* istanbul ignore next */
      cov_2nnm4j4nh4().s[213]++;
      throw error; // 继续抛出错误以便调用者可以处理
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm5ubTRqNG5oNCIsImFjdHVhbENvdmVyYWdlIiwicyIsIkVycm9yQm91bmRhcnkiLCJmIiwiRXJyb3JNb25pdG9yUHJvdmlkZXIiLCJjcmVhdGVBcGlFcnJvckhhbmRsZXIiLCJ1c2VFcnJvck1vbml0b3IiLCJ3aXRoRXJyb3JCb3VuZGFyeSIsIkVycm9yTW9uaXRvckNvbnRleHQiLCJfcmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidW5kZWZpbmVkIiwiY29udGV4dCIsInVzZUNvbnRleHQiLCJiIiwiRXJyb3IiLCJnZXRVc2VySWQiLCJ3aW5kb3ciLCJ1c2VyRGF0YVN0ciIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJ1c2VyRGF0YSIsIkpTT04iLCJwYXJzZSIsImlkIiwiZSIsImNvbnNvbGUiLCJ3YXJuIiwiY2hpbGRyZW4iLCJtYXhFcnJvcnMiLCJyZXBvcnRFbmRwb2ludCIsImRlYnVnIiwiY2FwdHVyZVVuaGFuZGxlZCIsImNhcHR1cmVCcmVhZGNydW1icyIsIm1heEJyZWFkY3J1bWJzIiwiZXJyb3JzIiwic2V0RXJyb3JzIiwidXNlU3RhdGUiLCJicmVhZGNydW1icyIsInNldEJyZWFkY3J1bWJzIiwiZGlzcGF0Y2giLCJfR2xvYmFsU3RhdGVDb250ZXh0IiwidXNlR2xvYmFsU3RhdGUiLCJlcnJvckNvdW50IiwidXNlTWVtbyIsInRvdGFsIiwibGVuZ3RoIiwiY3JpdGljYWwiLCJmaWx0ZXIiLCJzZXZlcml0eSIsImVycm9yIiwid2FybmluZyIsImluZm8iLCJoYXNVbmhhbmRsZWRFcnJvcnMiLCJzb21lIiwiaGFuZGxlZCIsImdlbmVyYXRlSWQiLCJEYXRlIiwibm93IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyaW5nIiwiYWRkQnJlYWRjcnVtYiIsInVzZUNhbGxiYWNrIiwiYnJlYWRjcnVtYiIsIm5ld0JyZWFkY3J1bWIiLCJ0aW1lc3RhbXAiLCJwcmV2IiwidXBkYXRlZCIsInNsaWNlIiwibG9nIiwidHlwZSIsIm1lc3NhZ2UiLCJjbGVhckJyZWFkY3J1bWJzIiwibG9nRXJyb3IiLCJuZXdFcnJvciIsImVycm9ySWQiLCJlcnJvckxvZyIsInRvVXBwZXJDYXNlIiwiY29tcG9uZW50TmFtZSIsIm1ldGFkYXRhIiwiY2FwdHVyZU1lc3NhZ2UiLCJzb3VyY2UiLCJ1c2VySWQiLCJfcmVhY3Rob3R0b2FzdCIsInRvYXN0IiwiaWNvbiIsInBheWxvYWQiLCJhdXRvQ2xvc2UiLCJjYXB0dXJlQXBpRXJyb3IiLCJlbmRwb2ludCIsInN0YXR1c0NvZGUiLCJyZXNwb25zZSIsIm1ldGhvZCIsIm5ldHdvcmtJbmZvIiwidXJsIiwic3RhdHVzIiwic3RyaW5naWZ5IiwiY2FwdHVyZUVycm9yIiwib3B0aW9ucyIsImVycm9yTWVzc2FnZSIsImVycm9yU3RhY2siLCJzdGFjayIsInNpbGVudCIsImNsZWFyRXJyb3JzIiwicmVwb3J0RXJyb3IiLCJmaW5kIiwiZGF0YSIsImZldGNoIiwiaGVhZGVycyIsImJvZHkiLCJvayIsInByZXZFcnJvcnMiLCJtYXAiLCJzdWNjZXNzIiwiU3RyaW5nIiwidXNlRWZmZWN0IiwiaGFuZGxlR2xvYmFsRXJyb3IiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiaGFuZGxlUmVqZWN0aW9uIiwicmVhc29uIiwiaGFuZGxlTmV0d29ya0Vycm9yIiwiaGFuZGxlTmV0d29ya1JlY292ZXJ5IiwicmVjb3JkTmF2aWdhdGlvbiIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzZWFyY2giLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImNvbnRleHRWYWx1ZSIsIl9qc3hydW50aW1lIiwianN4IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImRlZmF1bHQiLCJDb21wb25lbnQiLCJjb250ZXh0VHlwZSIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJyZXNldEVycm9yIiwic2V0U3RhdGUiLCJoYXNFcnJvciIsInN0YXRlIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJlcnJvckluZm8iLCJvbkVycm9yIiwiY29tcG9uZW50U3RhY2siLCJyZW5kZXIiLCJmYWxsYmFjayIsImpzeHMiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwiV2l0aEVycm9yQm91bmRhcnkiLCJkaXNwbGF5TmFtZSIsIm5hbWUiLCJlcnJvck1vbml0b3IiLCJhcGlFcnJvckhhbmRsZXIiLCJwcm9taXNlIl0sInNvdXJjZXMiOlsiL1VzZXJzL3l1ZGV5b3UvRGVza3RvcC9zbS9zb2Npb21pbnQvc3JjL2NvbnRleHRzL0Vycm9yTW9uaXRvckNvbnRleHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdCwgUmVhY3ROb2RlLCB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHRvYXN0IH0gZnJvbSAncmVhY3QtaG90LXRvYXN0JztcbmltcG9ydCB7IHVzZUdsb2JhbFN0YXRlIH0gZnJvbSAnLi9HbG9iYWxTdGF0ZUNvbnRleHQnO1xuXG4vLyDplJnor6/ml6Xlv5fmjqXlj6NcbmludGVyZmFjZSBFcnJvckxvZyB7XG4gIGlkOiBzdHJpbmc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgc3RhY2s/OiBzdHJpbmc7XG4gIHRpbWVzdGFtcDogbnVtYmVyO1xuICBjb21wb25lbnROYW1lPzogc3RyaW5nO1xuICB1c2VySWQ/OiBzdHJpbmc7XG4gIHNldmVyaXR5OiAnaW5mbycgfCAnd2FybmluZycgfCAnZXJyb3InIHwgJ2NyaXRpY2FsJztcbiAgbWV0YWRhdGE/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuICBuZXR3b3JrSW5mbz86IHtcbiAgICB1cmw/OiBzdHJpbmc7XG4gICAgbWV0aG9kPzogc3RyaW5nO1xuICAgIHN0YXR1cz86IG51bWJlcjtcbiAgICByZXNwb25zZT86IHN0cmluZztcbiAgfTtcbiAgaGFuZGxlZDogYm9vbGVhbjtcbiAgc291cmNlOiAnamF2YXNjcmlwdCcgfCAnYXBpJyB8ICdyZWFjdCcgfCAncHJvbWlzZScgfCAnY3VzdG9tJztcbiAgYnJlYWRjcnVtYnM6IEJyZWFkY3J1bWJbXTtcbn1cblxuLy8g55So5oi35pON5L2c6K6w5b2VXG5pbnRlcmZhY2UgQnJlYWRjcnVtYiB7XG4gIHR5cGU6ICduYXZpZ2F0aW9uJyB8ICd1aScgfCAnbmV0d29yaycgfCAnbG9nJyB8ICdlcnJvcic7XG4gIHRpbWVzdGFtcDogbnVtYmVyO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGRhdGE/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xufVxuXG4vLyDlrozmlbTnmoTplJnor6/nm5HmjqfkuIrkuIvmlofnsbvlnotcbmludGVyZmFjZSBFcnJvck1vbml0b3JDb250ZXh0VHlwZSB7XG4gIGVycm9yczogRXJyb3JMb2dbXTtcbiAgYnJlYWRjcnVtYnM6IEJyZWFkY3J1bWJbXTtcbiAgY2FwdHVyZUVycm9yOiAoZXJyb3I6IEVycm9yIHwgc3RyaW5nLCBvcHRpb25zPzogQ2FwdHVyZUVycm9yT3B0aW9ucykgPT4gc3RyaW5nO1xuICBjYXB0dXJlQXBpRXJyb3I6IChlbmRwb2ludDogc3RyaW5nLCBzdGF0dXNDb2RlOiBudW1iZXIsIHJlc3BvbnNlOiBhbnksIG1ldGhvZD86IHN0cmluZykgPT4gc3RyaW5nO1xuICBjYXB0dXJlTWVzc2FnZTogKG1lc3NhZ2U6IHN0cmluZywgc2V2ZXJpdHk/OiAnaW5mbycgfCAnd2FybmluZycgfCAnZXJyb3InIHwgJ2NyaXRpY2FsJykgPT4gc3RyaW5nO1xuICBjbGVhckVycm9yczogKCkgPT4gdm9pZDtcbiAgcmVwb3J0RXJyb3I6IChlcnJvcklkOiBzdHJpbmcpID0+IFByb21pc2U8dm9pZD47XG4gIGFkZEJyZWFkY3J1bWI6IChicmVhZGNydW1iOiBPbWl0PEJyZWFkY3J1bWIsICd0aW1lc3RhbXAnPikgPT4gdm9pZDtcbiAgY2xlYXJCcmVhZGNydW1iczogKCkgPT4gdm9pZDtcbiAgaGFzVW5oYW5kbGVkRXJyb3JzOiBib29sZWFuO1xuICBlcnJvckNvdW50OiB7XG4gICAgdG90YWw6IG51bWJlcjtcbiAgICBjcml0aWNhbDogbnVtYmVyO1xuICAgIGVycm9yOiBudW1iZXI7XG4gICAgd2FybmluZzogbnVtYmVyO1xuICAgIGluZm86IG51bWJlcjtcbiAgfTtcbn1cblxuLy8g5o2V6I636ZSZ6K+v55qE6YCJ6aG5XG5pbnRlcmZhY2UgQ2FwdHVyZUVycm9yT3B0aW9ucyB7XG4gIGNvbXBvbmVudE5hbWU/OiBzdHJpbmc7XG4gIG1ldGFkYXRhPzogUmVjb3JkPHN0cmluZywgYW55PjtcbiAgc2V2ZXJpdHk/OiAnaW5mbycgfCAnd2FybmluZycgfCAnZXJyb3InIHwgJ2NyaXRpY2FsJztcbiAgaGFuZGxlZD86IGJvb2xlYW47XG4gIHNvdXJjZT86ICdqYXZhc2NyaXB0JyB8ICdhcGknIHwgJ3JlYWN0JyB8ICdwcm9taXNlJyB8ICdjdXN0b20nO1xuICBzaWxlbnQ/OiBib29sZWFuOyAvLyDmmK/lkKbkuI3mmL7npLpVSeaPkOekulxufVxuXG4vLyDliJvlu7rkuIrkuIvmlodcbmNvbnN0IEVycm9yTW9uaXRvckNvbnRleHQgPSBjcmVhdGVDb250ZXh0PEVycm9yTW9uaXRvckNvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG4vLyBIb29r55So5LqO57uE5Lu25Lit6K6/6Zeu6ZSZ6K+v55uR5o6nXG5leHBvcnQgY29uc3QgdXNlRXJyb3JNb25pdG9yID0gKCkgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChFcnJvck1vbml0b3JDb250ZXh0KTtcbiAgaWYgKCFjb250ZXh0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VFcnJvck1vbml0b3IgbXVzdCBiZSB1c2VkIHdpdGhpbiBhbiBFcnJvck1vbml0b3JQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxuLy8g6I635Y+W55So5oi3SUTnmoTovoXliqnlh73mlbBcbmNvbnN0IGdldFVzZXJJZCA9ICgpOiBzdHJpbmcgfCB1bmRlZmluZWQgPT4ge1xuICB0cnkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc3QgdXNlckRhdGFTdHIgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcicpO1xuICAgICAgaWYgKHVzZXJEYXRhU3RyKSB7XG4gICAgICAgIGNvbnN0IHVzZXJEYXRhID0gSlNPTi5wYXJzZSh1c2VyRGF0YVN0cik7XG4gICAgICAgIHJldHVybiB1c2VyRGF0YS5pZDtcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBnZXQgdXNlciBJRCBmcm9tIGxvY2FsU3RvcmFnZScpO1xuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG4vLyDplJnor6/nm5Hmjqfmj5DkvpvogIXnu4Tku7ZcbmludGVyZmFjZSBQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG4gIG1heEVycm9ycz86IG51bWJlcjsgLy8g5pyA5aSn5a2Y5YKo6ZSZ6K+v5pWwXG4gIHJlcG9ydEVuZHBvaW50Pzogc3RyaW5nOyAvLyDmiqXlkYrplJnor6/nmoTnq6/ngrlcbiAgZGVidWc/OiBib29sZWFuOyAvLyDmmK/lkKbmmL7npLrosIPor5Xkv6Hmga9cbiAgY2FwdHVyZVVuaGFuZGxlZD86IGJvb2xlYW47IC8vIOaYr+WQpuaNleiOt+acquWkhOeQhueahOmUmeivr1xuICBjYXB0dXJlQnJlYWRjcnVtYnM/OiBib29sZWFuOyAvLyDmmK/lkKbmjZXojrfnlKjmiLfmk43kvZxcbiAgbWF4QnJlYWRjcnVtYnM/OiBudW1iZXI7IC8vIOacgOWkp+WtmOWCqOeahOeUqOaIt+aTjeS9nOaVsFxufVxuXG5leHBvcnQgY29uc3QgRXJyb3JNb25pdG9yUHJvdmlkZXI6IFJlYWN0LkZDPFByb3BzPiA9ICh7IFxuICBjaGlsZHJlbixcbiAgbWF4RXJyb3JzID0gNTAsXG4gIHJlcG9ydEVuZHBvaW50ID0gJy9hcGkvZXJyb3ItcmVwb3J0JyxcbiAgZGVidWcgPSBmYWxzZSxcbiAgY2FwdHVyZVVuaGFuZGxlZCA9IHRydWUsXG4gIGNhcHR1cmVCcmVhZGNydW1icyA9IHRydWUsXG4gIG1heEJyZWFkY3J1bWJzID0gNTBcbn0pID0+IHtcbiAgY29uc3QgW2Vycm9ycywgc2V0RXJyb3JzXSA9IHVzZVN0YXRlPEVycm9yTG9nW10+KFtdKTtcbiAgY29uc3QgW2JyZWFkY3J1bWJzLCBzZXRCcmVhZGNydW1ic10gPSB1c2VTdGF0ZTxCcmVhZGNydW1iW10+KFtdKTtcbiAgXG4gIC8vIOS7jkdsb2JhbFN0YXRl6I635Y+W5re75Yqg6YCa55+l55qE5Yqf6IO9XG4gIGNvbnN0IHsgZGlzcGF0Y2ggfSA9IHVzZUdsb2JhbFN0YXRlKCk7XG4gIFxuICAvLyDnu5/orqHplJnor6/orqHmlbBcbiAgY29uc3QgZXJyb3JDb3VudCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICB0b3RhbDogZXJyb3JzLmxlbmd0aCxcbiAgICAgIGNyaXRpY2FsOiBlcnJvcnMuZmlsdGVyKGUgPT4gZS5zZXZlcml0eSA9PT0gJ2NyaXRpY2FsJykubGVuZ3RoLFxuICAgICAgZXJyb3I6IGVycm9ycy5maWx0ZXIoZSA9PiBlLnNldmVyaXR5ID09PSAnZXJyb3InKS5sZW5ndGgsXG4gICAgICB3YXJuaW5nOiBlcnJvcnMuZmlsdGVyKGUgPT4gZS5zZXZlcml0eSA9PT0gJ3dhcm5pbmcnKS5sZW5ndGgsXG4gICAgICBpbmZvOiBlcnJvcnMuZmlsdGVyKGUgPT4gZS5zZXZlcml0eSA9PT0gJ2luZm8nKS5sZW5ndGgsXG4gICAgfTtcbiAgfSwgW2Vycm9yc10pO1xuICBcbiAgLy8g5qOA5p+l5piv5ZCm5pyJ5pyq5aSE55CG55qE6ZSZ6K+vXG4gIGNvbnN0IGhhc1VuaGFuZGxlZEVycm9ycyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiBlcnJvcnMuc29tZShlcnJvciA9PiAhZXJyb3IuaGFuZGxlZCk7XG4gIH0sIFtlcnJvcnNdKTtcbiAgXG4gIC8vIOeUn+aIkOWUr+S4gElEXG4gIGNvbnN0IGdlbmVyYXRlSWQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGBlcnJvcl8ke0RhdGUubm93KCl9XyR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDkpfWA7XG4gIH07XG4gIFxuICAvLyDmt7vliqDnlKjmiLfmk43kvZzorrDlvZVcbiAgY29uc3QgYWRkQnJlYWRjcnVtYiA9IHVzZUNhbGxiYWNrKChicmVhZGNydW1iOiBPbWl0PEJyZWFkY3J1bWIsICd0aW1lc3RhbXAnPikgPT4ge1xuICAgIGlmICghY2FwdHVyZUJyZWFkY3J1bWJzKSByZXR1cm47XG4gICAgXG4gICAgY29uc3QgbmV3QnJlYWRjcnVtYjogQnJlYWRjcnVtYiA9IHtcbiAgICAgIC4uLmJyZWFkY3J1bWIsXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KClcbiAgICB9O1xuICAgIFxuICAgIHNldEJyZWFkY3J1bWJzKHByZXYgPT4ge1xuICAgICAgY29uc3QgdXBkYXRlZCA9IFtuZXdCcmVhZGNydW1iLCAuLi5wcmV2XTtcbiAgICAgIGlmICh1cGRhdGVkLmxlbmd0aCA+IG1heEJyZWFkY3J1bWJzKSB7XG4gICAgICAgIHJldHVybiB1cGRhdGVkLnNsaWNlKDAsIG1heEJyZWFkY3J1bWJzKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB1cGRhdGVkO1xuICAgIH0pO1xuICAgIFxuICAgIGlmIChkZWJ1Zykge1xuICAgICAgY29uc29sZS5sb2coYFtFcnJvciBNb25pdG9yXSBCcmVhZGNydW1iOiAke2JyZWFkY3J1bWIudHlwZX0gLSAke2JyZWFkY3J1bWIubWVzc2FnZX1gKTtcbiAgICB9XG4gIH0sIFtjYXB0dXJlQnJlYWRjcnVtYnMsIGRlYnVnLCBtYXhCcmVhZGNydW1ic10pO1xuICBcbiAgLy8g5riF6Zmk5omA5pyJ55So5oi35pON5L2c6K6w5b2VXG4gIGNvbnN0IGNsZWFyQnJlYWRjcnVtYnMgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0QnJlYWRjcnVtYnMoW10pO1xuICB9LCBbXSk7XG4gIFxuICAvLyDorrDlvZXplJnor69cbiAgY29uc3QgbG9nRXJyb3IgPSB1c2VDYWxsYmFjaygoXG4gICAgbmV3RXJyb3I6IE9taXQ8RXJyb3JMb2csICdpZCcgfCAndGltZXN0YW1wJyB8ICdicmVhZGNydW1icyc+XG4gICk6IHN0cmluZyA9PiB7XG4gICAgY29uc3QgZXJyb3JJZCA9IGdlbmVyYXRlSWQoKTtcbiAgICBcbiAgICBjb25zdCBlcnJvckxvZzogRXJyb3JMb2cgPSB7XG4gICAgICBpZDogZXJyb3JJZCxcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgIGJyZWFkY3J1bWJzOiBicmVhZGNydW1icy5zbGljZSgpLFxuICAgICAgLi4ubmV3RXJyb3JcbiAgICB9O1xuICAgIFxuICAgIC8vIOWwhumUmeivr+a3u+WKoOWIsOeKtuaAgVxuICAgIHNldEVycm9ycyhwcmV2ID0+IHtcbiAgICAgIGNvbnN0IHVwZGF0ZWQgPSBbZXJyb3JMb2csIC4uLnByZXZdO1xuICAgICAgaWYgKHVwZGF0ZWQubGVuZ3RoID4gbWF4RXJyb3JzKSB7XG4gICAgICAgIHJldHVybiB1cGRhdGVkLnNsaWNlKDAsIG1heEVycm9ycyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdXBkYXRlZDtcbiAgICB9KTtcbiAgICBcbiAgICAvLyDorrDlvZXliLDmjqfliLblj7BcbiAgICBpZiAoZGVidWcgfHwgbmV3RXJyb3Iuc2V2ZXJpdHkgPT09ICdjcml0aWNhbCcgfHwgbmV3RXJyb3Iuc2V2ZXJpdHkgPT09ICdlcnJvcicpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIGBbRXJyb3IgTW9uaXRvcl0gJHtuZXdFcnJvci5zZXZlcml0eS50b1VwcGVyQ2FzZSgpfSAtICR7bmV3RXJyb3IuY29tcG9uZW50TmFtZSB8fCAnVW5rbm93bid9OiAke25ld0Vycm9yLm1lc3NhZ2V9YCxcbiAgICAgICAgbmV3RXJyb3IubWV0YWRhdGEgfHwge31cbiAgICAgICk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBlcnJvcklkO1xuICB9LCBbYnJlYWRjcnVtYnMsIGRlYnVnLCBtYXhFcnJvcnNdKTtcbiAgXG4gIC8vIOaNleiOt+mUmeivr+a2iOaBr1xuICBjb25zdCBjYXB0dXJlTWVzc2FnZSA9IHVzZUNhbGxiYWNrKChcbiAgICBtZXNzYWdlOiBzdHJpbmcsIFxuICAgIHNldmVyaXR5OiAnaW5mbycgfCAnd2FybmluZycgfCAnZXJyb3InIHwgJ2NyaXRpY2FsJyA9ICdpbmZvJ1xuICApOiBzdHJpbmcgPT4ge1xuICAgIGNvbnN0IGVycm9ySWQgPSBsb2dFcnJvcih7XG4gICAgICBtZXNzYWdlLFxuICAgICAgc2V2ZXJpdHksXG4gICAgICBoYW5kbGVkOiB0cnVlLFxuICAgICAgc291cmNlOiAnY3VzdG9tJyxcbiAgICAgIHVzZXJJZDogZ2V0VXNlcklkKClcbiAgICB9KTtcbiAgICBcbiAgICAvLyDmoLnmja7kuKXph43nqIvluqblhrPlrprmmK/lkKbmmL7npLrpgJrnn6VcbiAgICBpZiAoc2V2ZXJpdHkgPT09ICdlcnJvcicgfHwgc2V2ZXJpdHkgPT09ICdjcml0aWNhbCcpIHtcbiAgICAgIHRvYXN0LmVycm9yKG1lc3NhZ2UpO1xuICAgIH0gZWxzZSBpZiAoc2V2ZXJpdHkgPT09ICd3YXJuaW5nJykge1xuICAgICAgLy8g55Sx5LqOcmVhY3QtaG90LXRvYXN05rKh5pyJ5YaF572ud2FybmluZ+aWueazle+8jOS9v+eUqOiHquWumuS5ieWbvuagh1xuICAgICAgdG9hc3QobWVzc2FnZSwgeyBpY29uOiAn4pqg77iPJyB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdG9hc3QobWVzc2FnZSk7XG4gICAgfVxuICAgIFxuICAgIC8vIOa3u+WKoOWIsOWFqOWxgOeKtuaAgeeahOmAmuefpeezu+e7n1xuICAgIGlmIChkaXNwYXRjaCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6ICdBRERfTk9USUZJQ0FUSU9OJyxcbiAgICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgICB0eXBlOiBzZXZlcml0eSA9PT0gJ2luZm8nID8gJ2luZm8nIDogc2V2ZXJpdHkgPT09ICd3YXJuaW5nJyA/ICd3YXJuaW5nJyA6ICdlcnJvcicsXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgYXV0b0Nsb3NlOiBzZXZlcml0eSA9PT0gJ2luZm8nIHx8IHNldmVyaXR5ID09PSAnd2FybmluZydcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZGlzcGF0Y2ggbm90aWZpY2F0aW9uOicsIGUpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gZXJyb3JJZDtcbiAgfSwgW2xvZ0Vycm9yLCBkaXNwYXRjaF0pO1xuICBcbiAgLy8g5o2V6I63QVBJ6ZSZ6K+vXG4gIGNvbnN0IGNhcHR1cmVBcGlFcnJvciA9IHVzZUNhbGxiYWNrKChcbiAgICBlbmRwb2ludDogc3RyaW5nLFxuICAgIHN0YXR1c0NvZGU6IG51bWJlcixcbiAgICByZXNwb25zZTogYW55LFxuICAgIG1ldGhvZDogc3RyaW5nID0gJ0dFVCdcbiAgKTogc3RyaW5nID0+IHtcbiAgICAvLyDnoa7lrprkuKXph43nqIvluqZcbiAgICBsZXQgc2V2ZXJpdHk6ICdpbmZvJyB8ICd3YXJuaW5nJyB8ICdlcnJvcicgfCAnY3JpdGljYWwnID0gJ2Vycm9yJztcbiAgICBpZiAoc3RhdHVzQ29kZSA+PSA1MDApIHNldmVyaXR5ID0gJ2NyaXRpY2FsJztcbiAgICBlbHNlIGlmIChzdGF0dXNDb2RlID49IDQwMCkgc2V2ZXJpdHkgPSAnZXJyb3InO1xuICAgIGVsc2UgaWYgKHN0YXR1c0NvZGUgPj0gMzAwKSBzZXZlcml0eSA9ICd3YXJuaW5nJztcbiAgICBcbiAgICBjb25zdCBlcnJvcklkID0gbG9nRXJyb3Ioe1xuICAgICAgbWVzc2FnZTogYEFQSSAke21ldGhvZH0g6K+35rGC6ZSZ6K+vOiAke2VuZHBvaW50fSAoJHtzdGF0dXNDb2RlfSlgLFxuICAgICAgc2V2ZXJpdHksXG4gICAgICBoYW5kbGVkOiB0cnVlLFxuICAgICAgc291cmNlOiAnYXBpJyxcbiAgICAgIHVzZXJJZDogZ2V0VXNlcklkKCksXG4gICAgICBuZXR3b3JrSW5mbzoge1xuICAgICAgICB1cmw6IGVuZHBvaW50LFxuICAgICAgICBtZXRob2QsXG4gICAgICAgIHN0YXR1czogc3RhdHVzQ29kZSxcbiAgICAgICAgcmVzcG9uc2U6IHR5cGVvZiByZXNwb25zZSA9PT0gJ3N0cmluZycgPyByZXNwb25zZSA6IEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSxcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICAvLyDlj6rlr7nlrqLmiLfnq6/plJnor6/mmL7npLrmtojmga9cbiAgICBpZiAoc3RhdHVzQ29kZSA+PSA0MDAgJiYgc3RhdHVzQ29kZSA8IDUwMCkge1xuICAgICAgdG9hc3QuZXJyb3IoYOivt+axgumUmeivrzogJHt0eXBlb2YgcmVzcG9uc2UgPT09ICdzdHJpbmcnID8gcmVzcG9uc2UgOiBKU09OLnN0cmluZ2lmeShyZXNwb25zZSl9YCk7XG4gICAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID49IDUwMCkge1xuICAgICAgdG9hc3QuZXJyb3IoJ+acjeWKoeWZqOmUmeivr++8jOivt+eojeWQjuWGjeivlScpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gZXJyb3JJZDtcbiAgfSwgW2xvZ0Vycm9yXSk7XG4gIFxuICAvLyDmjZXojrfkuIDoiKzplJnor69cbiAgY29uc3QgY2FwdHVyZUVycm9yID0gdXNlQ2FsbGJhY2soKFxuICAgIGVycm9yOiBFcnJvciB8IHN0cmluZyxcbiAgICBvcHRpb25zOiBDYXB0dXJlRXJyb3JPcHRpb25zID0ge31cbiAgKTogc3RyaW5nID0+IHtcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSB0eXBlb2YgZXJyb3IgPT09ICdzdHJpbmcnID8gZXJyb3IgOiBlcnJvci5tZXNzYWdlO1xuICAgIGNvbnN0IGVycm9yU3RhY2sgPSB0eXBlb2YgZXJyb3IgPT09ICdzdHJpbmcnID8gdW5kZWZpbmVkIDogZXJyb3Iuc3RhY2s7XG4gICAgXG4gICAgY29uc3Qge1xuICAgICAgY29tcG9uZW50TmFtZSxcbiAgICAgIG1ldGFkYXRhLFxuICAgICAgc2V2ZXJpdHkgPSAnZXJyb3InLFxuICAgICAgaGFuZGxlZCA9IGZhbHNlLFxuICAgICAgc291cmNlID0gJ2phdmFzY3JpcHQnLFxuICAgICAgc2lsZW50ID0gZmFsc2VcbiAgICB9ID0gb3B0aW9ucztcbiAgICBcbiAgICAvLyDojrflj5blvZPliY3nlKjmiLdJRFxuICAgIGNvbnN0IHVzZXJJZCA9IGdldFVzZXJJZCgpO1xuICAgIFxuICAgIGNvbnN0IGVycm9ySWQgPSBsb2dFcnJvcih7XG4gICAgICBtZXNzYWdlOiBlcnJvck1lc3NhZ2UsXG4gICAgICBzdGFjazogZXJyb3JTdGFjayxcbiAgICAgIGNvbXBvbmVudE5hbWUsXG4gICAgICBtZXRhZGF0YSxcbiAgICAgIHNldmVyaXR5LFxuICAgICAgaGFuZGxlZCxcbiAgICAgIHNvdXJjZSxcbiAgICAgIHVzZXJJZFxuICAgIH0pO1xuICAgIFxuICAgIC8vIOWcqFVJ5LiK5pi+56S66ZSZ6K+v6YCa55+l77yM6Zmk6Z2e6K6+572u5LqGc2lsZW50XG4gICAgaWYgKCFzaWxlbnQpIHtcbiAgICAgIGlmIChzZXZlcml0eSA9PT0gJ2NyaXRpY2FsJyB8fCBzZXZlcml0eSA9PT0gJ2Vycm9yJykge1xuICAgICAgICB0b2FzdC5lcnJvcihjb21wb25lbnROYW1lID8gYCR7Y29tcG9uZW50TmFtZX06ICR7ZXJyb3JNZXNzYWdlfWAgOiBlcnJvck1lc3NhZ2UpO1xuICAgICAgfSBlbHNlIGlmIChzZXZlcml0eSA9PT0gJ3dhcm5pbmcnKSB7XG4gICAgICAgIC8vIOS9v+eUqOiHquWumuS5ieWbvuagh+aYvuekuuitpuWRilxuICAgICAgICB0b2FzdChlcnJvck1lc3NhZ2UsIHsgaWNvbjogJ+KaoO+4jycgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0b2FzdChlcnJvck1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyDmt7vliqDliLDlhajlsYDnirbmgIHnmoTpgJrnn6Xns7vnu59cbiAgICAgIGlmIChkaXNwYXRjaCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdBRERfTk9USUZJQ0FUSU9OJyxcbiAgICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgICAgdHlwZTogc2V2ZXJpdHkgPT09ICdpbmZvJyA/ICdpbmZvJyA6IHNldmVyaXR5ID09PSAnd2FybmluZycgPyAnd2FybmluZycgOiAnZXJyb3InLFxuICAgICAgICAgICAgICBtZXNzYWdlOiBlcnJvck1lc3NhZ2UsXG4gICAgICAgICAgICAgIGF1dG9DbG9zZTogc2V2ZXJpdHkgPT09ICdpbmZvJyB8fCBzZXZlcml0eSA9PT0gJ3dhcm5pbmcnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZGlzcGF0Y2ggbm90aWZpY2F0aW9uOicsIGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBlcnJvcklkO1xuICB9LCBbbG9nRXJyb3IsIGRpc3BhdGNoXSk7XG4gIFxuICAvLyDmuIXpmaTplJnor69cbiAgY29uc3QgY2xlYXJFcnJvcnMgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0RXJyb3JzKFtdKTtcbiAgfSwgW10pO1xuICBcbiAgLy8g5bCG6ZSZ6K+v5oql5ZGK5Yiw5ZCO56uvXG4gIGNvbnN0IHJlcG9ydEVycm9yID0gdXNlQ2FsbGJhY2soYXN5bmMgKGVycm9ySWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgIGNvbnN0IGVycm9yID0gZXJyb3JzLmZpbmQoZSA9PiBlLmlkID09PSBlcnJvcklkKTtcbiAgICBpZiAoIWVycm9yKSByZXR1cm47XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIC8vIOa3u+WKoOeUqOaIt+aTjeS9nFxuICAgICAgYWRkQnJlYWRjcnVtYih7XG4gICAgICAgIHR5cGU6ICdsb2cnLFxuICAgICAgICBtZXNzYWdlOiBgUmVwb3J0aW5nIGVycm9yOiAke2Vycm9yLm1lc3NhZ2V9YCxcbiAgICAgICAgZGF0YTogeyBlcnJvcklkIH1cbiAgICAgIH0pO1xuICAgICAgXG4gICAgICAvLyDlj5HpgIHliLBBUEnnq6/ngrlcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2gocmVwb3J0RW5kcG9pbnQsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShlcnJvciksXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byByZXBvcnQgZXJyb3InKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8g5qCH6K6w6ZSZ6K+v5Li65bey5aSE55CGXG4gICAgICBzZXRFcnJvcnMocHJldkVycm9ycyA9PiBcbiAgICAgICAgcHJldkVycm9ycy5tYXAoZSA9PiBcbiAgICAgICAgICBlLmlkID09PSBlcnJvcklkID8geyAuLi5lLCBoYW5kbGVkOiB0cnVlIH0gOiBlXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgICBcbiAgICAgIHRvYXN0LnN1Y2Nlc3MoJ+mUmeivr+W3suaKpeWRiu+8jOaEn+iwouaCqOeahOWPjemmiCcpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBzZW5kIGVycm9yIHJlcG9ydDonLCBlKTtcbiAgICAgIGNhcHR1cmVFcnJvcihlIGluc3RhbmNlb2YgRXJyb3IgPyBlIDogU3RyaW5nKGUpLCB7XG4gICAgICAgIGNvbXBvbmVudE5hbWU6ICdFcnJvclJlcG9ydGVyJyxcbiAgICAgICAgc2V2ZXJpdHk6ICd3YXJuaW5nJyxcbiAgICAgICAgc291cmNlOiAnYXBpJ1xuICAgICAgfSk7XG4gICAgICB0b2FzdC5lcnJvcign5peg5rOV5Y+R6YCB6ZSZ6K+v5oql5ZGKJyk7XG4gICAgfVxuICB9LCBbZXJyb3JzLCBhZGRCcmVhZGNydW1iLCByZXBvcnRFbmRwb2ludCwgY2FwdHVyZUVycm9yXSk7XG4gIFxuICAvLyDlhajlsYDplJnor6/lpITnkIZcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWNhcHR1cmVVbmhhbmRsZWQpIHJldHVybjtcbiAgICBcbiAgICAvLyDlrprkuYnmiYDmnInlpITnkIblh73mlbBcbiAgICBjb25zdCBoYW5kbGVHbG9iYWxFcnJvciA9IChldmVudDogRXJyb3JFdmVudCkgPT4ge1xuICAgICAgY2FwdHVyZUVycm9yKGV2ZW50LmVycm9yIHx8IG5ldyBFcnJvcihldmVudC5tZXNzYWdlKSwge1xuICAgICAgICBjb21wb25lbnROYW1lOiAnV2luZG93JyxcbiAgICAgICAgc291cmNlOiAnamF2YXNjcmlwdCcsXG4gICAgICAgIGhhbmRsZWQ6IGZhbHNlXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8g6Zi75q2i6buY6K6k5aSE55CGXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG4gICAgXG4gICAgY29uc3QgaGFuZGxlUmVqZWN0aW9uID0gKGV2ZW50OiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IGVycm9yID0gZXZlbnQucmVhc29uIGluc3RhbmNlb2YgRXJyb3IgXG4gICAgICAgID8gZXZlbnQucmVhc29uIFxuICAgICAgICA6IG5ldyBFcnJvcihTdHJpbmcoZXZlbnQucmVhc29uKSk7XG4gICAgICBcbiAgICAgIGNhcHR1cmVFcnJvcihlcnJvciwge1xuICAgICAgICBjb21wb25lbnROYW1lOiAnUHJvbWlzZScsXG4gICAgICAgIHNvdXJjZTogJ3Byb21pc2UnLFxuICAgICAgICBoYW5kbGVkOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfTtcbiAgICBcbiAgICBjb25zdCBoYW5kbGVOZXR3b3JrRXJyb3IgPSAoKSA9PiB7XG4gICAgICBjYXB0dXJlTWVzc2FnZSgn572R57uc6L+e5o6l5bey5pat5byAJywgJ3dhcm5pbmcnKTtcbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IGhhbmRsZU5ldHdvcmtSZWNvdmVyeSA9ICgpID0+IHtcbiAgICAgIGNhcHR1cmVNZXNzYWdlKCfnvZHnu5zov57mjqXlt7LmgaLlpI0nLCAnaW5mbycpO1xuICAgIH07XG4gICAgXG4gICAgY29uc3QgcmVjb3JkTmF2aWdhdGlvbiA9ICgpID0+IHtcbiAgICAgIGFkZEJyZWFkY3J1bWIoe1xuICAgICAgICB0eXBlOiAnbmF2aWdhdGlvbicsXG4gICAgICAgIG1lc3NhZ2U6IGBOYXZpZ2F0ZWQgdG86ICR7d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lfSR7d2luZG93LmxvY2F0aW9uLnNlYXJjaH1gXG4gICAgICB9KTtcbiAgICB9O1xuICAgIFxuICAgIC8vIOa3u+WKoOWFqOWxgOmUmeivr+ebkeWQrOWZqFxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGhhbmRsZUdsb2JhbEVycm9yKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndW5oYW5kbGVkcmVqZWN0aW9uJywgaGFuZGxlUmVqZWN0aW9uKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb2ZmbGluZScsIGhhbmRsZU5ldHdvcmtFcnJvcik7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29ubGluZScsIGhhbmRsZU5ldHdvcmtSZWNvdmVyeSk7XG4gICAgXG4gICAgLy8g5re75Yqg5a+86Iiq55uR5ZCsXG4gICAgaWYgKGNhcHR1cmVCcmVhZGNydW1icyAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8g6K6w5b2V5Yid5aeL5a+86IiqXG4gICAgICByZWNvcmROYXZpZ2F0aW9uKCk7XG4gICAgICBcbiAgICAgIC8vIOebkeWQrOi3r+eUseWPmOWMllxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3BvcHN0YXRlJywgcmVjb3JkTmF2aWdhdGlvbik7XG4gICAgfVxuICAgIFxuICAgIC8vIOa4heeQhuWHveaVsFxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXJyb3InLCBoYW5kbGVHbG9iYWxFcnJvcik7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndW5oYW5kbGVkcmVqZWN0aW9uJywgaGFuZGxlUmVqZWN0aW9uKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdvZmZsaW5lJywgaGFuZGxlTmV0d29ya0Vycm9yKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdvbmxpbmUnLCBoYW5kbGVOZXR3b3JrUmVjb3ZlcnkpO1xuICAgICAgXG4gICAgICBpZiAoY2FwdHVyZUJyZWFkY3J1bWJzICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIHJlY29yZE5hdmlnYXRpb24pO1xuICAgICAgfVxuICAgIH07XG4gIH0sIFtjYXB0dXJlVW5oYW5kbGVkLCBjYXB0dXJlRXJyb3IsIGNhcHR1cmVCcmVhZGNydW1icywgYWRkQnJlYWRjcnVtYiwgY2FwdHVyZU1lc3NhZ2VdKTtcbiAgXG4gIC8vIOaPkOS+m+S4iuS4i+aWh+WAvFxuICBjb25zdCBjb250ZXh0VmFsdWUgPSB1c2VNZW1vPEVycm9yTW9uaXRvckNvbnRleHRUeXBlPigoKSA9PiAoe1xuICAgIGVycm9ycyxcbiAgICBicmVhZGNydW1icyxcbiAgICBjYXB0dXJlRXJyb3IsXG4gICAgY2FwdHVyZUFwaUVycm9yLFxuICAgIGNhcHR1cmVNZXNzYWdlLFxuICAgIGNsZWFyRXJyb3JzLFxuICAgIHJlcG9ydEVycm9yLFxuICAgIGFkZEJyZWFkY3J1bWIsXG4gICAgY2xlYXJCcmVhZGNydW1icyxcbiAgICBoYXNVbmhhbmRsZWRFcnJvcnMsXG4gICAgZXJyb3JDb3VudFxuICB9KSwgW1xuICAgIGVycm9ycywgXG4gICAgYnJlYWRjcnVtYnMsIFxuICAgIGNhcHR1cmVFcnJvcixcbiAgICBjYXB0dXJlQXBpRXJyb3IsIFxuICAgIGNhcHR1cmVNZXNzYWdlLFxuICAgIGNsZWFyRXJyb3JzLCBcbiAgICByZXBvcnRFcnJvciwgXG4gICAgYWRkQnJlYWRjcnVtYixcbiAgICBjbGVhckJyZWFkY3J1bWJzLFxuICAgIGhhc1VuaGFuZGxlZEVycm9ycyxcbiAgICBlcnJvckNvdW50XG4gIF0pO1xuICBcbiAgcmV0dXJuIChcbiAgICA8RXJyb3JNb25pdG9yQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dFZhbHVlfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0Vycm9yTW9uaXRvckNvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG4vLyDplJnor6/ovrnnlYznu4Tku7bnlKjkuo7ljIXoo7lSZWFjdOe7hOS7tlxuaW50ZXJmYWNlIEVycm9yQm91bmRhcnlQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG4gIGZhbGxiYWNrPzogUmVhY3ROb2RlIHwgKChlcnJvcjogRXJyb3IsIHJlc2V0RXJyb3I6ICgpID0+IHZvaWQpID0+IFJlYWN0LlJlYWN0Tm9kZSk7XG4gIGNvbXBvbmVudE5hbWU/OiBzdHJpbmc7XG4gIG9uRXJyb3I/OiAoZXJyb3I6IEVycm9yLCBlcnJvckluZm86IFJlYWN0LkVycm9ySW5mbykgPT4gdm9pZDtcbn1cblxuaW50ZXJmYWNlIEVycm9yQm91bmRhcnlTdGF0ZSB7XG4gIGhhc0Vycm9yOiBib29sZWFuO1xuICBlcnJvcjogRXJyb3IgfCBudWxsO1xufVxuXG5leHBvcnQgY2xhc3MgRXJyb3JCb3VuZGFyeSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxFcnJvckJvdW5kYXJ5UHJvcHMsIEVycm9yQm91bmRhcnlTdGF0ZT4ge1xuICBzdGF0aWMgY29udGV4dFR5cGUgPSBFcnJvck1vbml0b3JDb250ZXh0O1xuICBjb250ZXh0ITogUmVhY3QuQ29udGV4dFR5cGU8dHlwZW9mIEVycm9yTW9uaXRvckNvbnRleHQ+O1xuICBcbiAgY29uc3RydWN0b3IocHJvcHM6IEVycm9yQm91bmRhcnlQcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0geyBoYXNFcnJvcjogZmFsc2UsIGVycm9yOiBudWxsIH07XG4gIH1cblxuICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yKGVycm9yOiBFcnJvcikge1xuICAgIHJldHVybiB7IGhhc0Vycm9yOiB0cnVlLCBlcnJvciB9O1xuICB9XG5cbiAgY29tcG9uZW50RGlkQ2F0Y2goZXJyb3I6IEVycm9yLCBlcnJvckluZm86IFJlYWN0LkVycm9ySW5mbykge1xuICAgIC8vIOiwg+eUqOiHquWumuS5iemUmeivr+WkhOeQhueoi+W6j1xuICAgIGlmICh0aGlzLnByb3BzLm9uRXJyb3IpIHtcbiAgICAgIHRoaXMucHJvcHMub25FcnJvcihlcnJvciwgZXJyb3JJbmZvKTtcbiAgICB9XG4gICAgXG4gICAgLy8g6I635Y+W6ZSZ6K+v55uR5o6n5LiK5LiL5paHXG4gICAgaWYgKHRoaXMuY29udGV4dCkge1xuICAgICAgdGhpcy5jb250ZXh0LmNhcHR1cmVFcnJvcihlcnJvciwge1xuICAgICAgICBjb21wb25lbnROYW1lOiB0aGlzLnByb3BzLmNvbXBvbmVudE5hbWUsXG4gICAgICAgIHNvdXJjZTogJ3JlYWN0JyxcbiAgICAgICAgbWV0YWRhdGE6IHsgY29tcG9uZW50U3RhY2s6IGVycm9ySW5mby5jb21wb25lbnRTdGFjayB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQgYnV0IG5vIEVycm9yTW9uaXRvckNvbnRleHQgYXZhaWxhYmxlOicsIGVycm9yKTtcbiAgICB9XG4gIH1cbiAgXG4gIHJlc2V0RXJyb3IgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGhhc0Vycm9yOiBmYWxzZSwgZXJyb3I6IG51bGwgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUuaGFzRXJyb3IpIHtcbiAgICAgIC8vIOWmguaenOaPkOS+m+S6hmZhbGxiYWNr5Ye95pWw77yM5YiZ6LCD55So5a6DXG4gICAgICBpZiAodHlwZW9mIHRoaXMucHJvcHMuZmFsbGJhY2sgPT09ICdmdW5jdGlvbicgJiYgdGhpcy5zdGF0ZS5lcnJvcikge1xuICAgICAgICByZXR1cm4gKHRoaXMucHJvcHMuZmFsbGJhY2sgYXMgRnVuY3Rpb24pKHRoaXMuc3RhdGUuZXJyb3IsIHRoaXMucmVzZXRFcnJvcik7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIOWmguaenOaPkOS+m+S6hmZhbGxiYWNr57uE5Lu277yM5YiZ5L2/55So5a6DXG4gICAgICBpZiAodGhpcy5wcm9wcy5mYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9wcy5mYWxsYmFjaztcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8g6buY6K6k6ZSZ6K+vVUlcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXJyb3ItZmFsbGJhY2sgYmctcmVkLTEwMCBkYXJrOmJnLXJlZC05MDAvMjAgcC00IHJvdW5kZWQtbWQgYm9yZGVyIGJvcmRlci1yZWQtMzAwIGRhcms6Ym9yZGVyLXJlZC04MDAgbXktNFwiPlxuICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtYm9sZCB0ZXh0LXJlZC04MDAgZGFyazp0ZXh0LXJlZC0zMDBcIj7nu4Tku7blj5HnlJ/plJnor688L2gyPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtcmVkLTYwMCBkYXJrOnRleHQtcmVkLTQwMCBtYi0yXCI+XG4gICAgICAgICAgICB7dGhpcy5zdGF0ZS5lcnJvcj8ubWVzc2FnZSB8fCAn5Y+R55Sf5LqG5LiA5Liq5pyq55+l6ZSZ6K+vJ31cbiAgICAgICAgICA8L3A+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwIGRhcms6dGV4dC1ncmF5LTQwMFwiPuaIkeS7rOW3suiusOW9leatpOmXrumimOW5tuWwhuWwveW/q+S/ruWkjeOAgjwvcD5cbiAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgb25DbGljaz17dGhpcy5yZXNldEVycm9yfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwibXQtNCBweC00IHB5LTIgYmctcmVkLTYwMCB0ZXh0LXdoaXRlIHJvdW5kZWQgaG92ZXI6YmctcmVkLTcwMCB0cmFuc2l0aW9uLWNvbG9yc1wiXG4gICAgICAgICAgPlxuICAgICAgICAgICAg6YeN6K+VXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgfVxufVxuXG4vLyDliJvlu7rkuIDkuKrpq5jpmLbnu4Tku7bvvIzmlrnkvr/ljIXoo4Xnu4Tku7ZcbmV4cG9ydCBmdW5jdGlvbiB3aXRoRXJyb3JCb3VuZGFyeTxQIGV4dGVuZHMgb2JqZWN0PihcbiAgQ29tcG9uZW50OiBSZWFjdC5Db21wb25lbnRUeXBlPFA+LFxuICBvcHRpb25zOiBPbWl0PEVycm9yQm91bmRhcnlQcm9wcywgJ2NoaWxkcmVuJz4gPSB7fVxuKTogUmVhY3QuRkM8UD4ge1xuICBjb25zdCBXaXRoRXJyb3JCb3VuZGFyeTogUmVhY3QuRkM8UD4gPSAocHJvcHMpID0+IChcbiAgICA8RXJyb3JCb3VuZGFyeSB7Li4ub3B0aW9uc30+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wcm9wc30gLz5cbiAgICA8L0Vycm9yQm91bmRhcnk+XG4gICk7XG4gIFxuICBXaXRoRXJyb3JCb3VuZGFyeS5kaXNwbGF5TmFtZSA9IGBXaXRoRXJyb3JCb3VuZGFyeSgke0NvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50J30pYDtcbiAgXG4gIHJldHVybiBXaXRoRXJyb3JCb3VuZGFyeTtcbn1cblxuLy8g5Yib5bu6QVBJ6ZSZ6K+v5aSE55CG5YyF6KOF5ZmoXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQXBpRXJyb3JIYW5kbGVyKGVycm9yTW9uaXRvcjogRXJyb3JNb25pdG9yQ29udGV4dFR5cGUpIHtcbiAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uIGFwaUVycm9ySGFuZGxlcjxUPihcbiAgICBwcm9taXNlOiBQcm9taXNlPFQ+LCBcbiAgICBvcHRpb25zOiB7XG4gICAgICBlbmRwb2ludDogc3RyaW5nO1xuICAgICAgbWV0aG9kPzogc3RyaW5nO1xuICAgICAgc2lsZW50PzogYm9vbGVhbjtcbiAgICB9XG4gICk6IFByb21pc2U8VD4ge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYXdhaXQgcHJvbWlzZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8g5aSE55CGRmV0Y2ggQVBJ5oiWQXhpb3PplJnor69cbiAgICAgIGNvbnN0IHN0YXR1cyA9IChlcnJvciBhcyBhbnkpPy5yZXNwb25zZT8uc3RhdHVzIHx8IChlcnJvciBhcyBhbnkpPy5zdGF0dXMgfHwgNTAwO1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSAoZXJyb3IgYXMgYW55KT8ucmVzcG9uc2U/LmRhdGEgfHwgKGVycm9yIGFzIGFueSk/LmRhdGEgfHwgZXJyb3I7XG4gICAgICBcbiAgICAgIGVycm9yTW9uaXRvci5jYXB0dXJlQXBpRXJyb3IoXG4gICAgICAgIG9wdGlvbnMuZW5kcG9pbnQsXG4gICAgICAgIHN0YXR1cyxcbiAgICAgICAgcmVzcG9uc2UsXG4gICAgICAgIG9wdGlvbnMubWV0aG9kIHx8ICdHRVQnXG4gICAgICApO1xuICAgICAgXG4gICAgICB0aHJvdyBlcnJvcjsgLy8g57un57ut5oqb5Ye66ZSZ6K+v5Lul5L6/6LCD55So6ICF5Y+v5Lul5aSE55CGXG4gICAgfVxuICB9O1xufSAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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