512eaae09acb38396c7c1bd63fbd7dbc
"use strict";

/* istanbul ignore next */
function cov_n04x43rcn() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useSMToken.ts";
  var hash = "65d94f8232aeb3ff0e4f1ae38374b3a11347113c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useSMToken.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 26
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "6": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 49
        }
      },
      "7": {
        start: {
          line: 16,
          column: 37
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "8": {
        start: {
          line: 17,
          column: 42
        },
        end: {
          line: 17,
          column: 73
        }
      },
      "9": {
        start: {
          line: 18,
          column: 36
        },
        end: {
          line: 18,
          column: 60
        }
      },
      "10": {
        start: {
          line: 19,
          column: 38
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "11": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 56
        }
      },
      "12": {
        start: {
          line: 21,
          column: 52
        },
        end: {
          line: 21,
          column: 77
        }
      },
      "13": {
        start: {
          line: 23,
          column: 36
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "14": {
        start: {
          line: 30,
          column: 60
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "15": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "17": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 47
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 60,
          column: 7
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "20": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "21": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "22": {
        start: {
          line: 53,
          column: 34
        },
        end: {
          line: 53,
          column: 80
        }
      },
      "23": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "24": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "25": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 25
        }
      },
      "26": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 71,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "useSMToken",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 19
          }
        },
        loc: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 40,
            column: 27
          }
        },
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 27
          }
        },
        loc: {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 21
          }
        },
        loc: {
          start: {
            line: 62,
            column: 24
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 28
          }
        }, {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 41
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useSMToken.ts"],
      sourcesContent: ["import { useState, useEffect } from 'react';\nimport { formatUnits } from 'viem';\nimport { useAccount, useReadContract } from 'wagmi';\nimport { contractAbis, contractAddresses } from '../config/contracts';\n\nexport function useSMToken() {\n  const { address, isConnected } = useAccount();\n  const [balanceData, setBalanceData] = useState<bigint | undefined>(undefined);\n  const [decimals, setDecimals] = useState<number>(18); // \u9ED8\u8BA4\u5C0F\u6570\u4F4D\u6570\u4E3A18\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [formattedBalance, setFormattedBalance] = useState('0');\n\n  // \u4F7F\u7528 wagmi \u7684 useReadContract \u94A9\u5B50\u8BFB\u53D6\u4EE3\u5E01\u5C0F\u6570\u4F4D\u6570\n  const { data: tokenDecimals } = useReadContract({\n    address: contractAddresses.smToken,\n    abi: contractAbis.smToken,\n    functionName: 'decimals',\n    enabled: isConnected,\n  });\n\n  // \u4F7F\u7528 wagmi \u7684 useReadContract \u94A9\u5B50\u8BFB\u53D6\u4EE3\u5E01\u4F59\u989D\n  const { data: tokenBalance, refetch: refetchBalance } = useReadContract({\n    address: contractAddresses.smToken,\n    abi: contractAbis.smToken,\n    functionName: 'balanceOf',\n    args: [address],\n    enabled: isConnected && !!address,\n  });\n\n  // \u5F53\u83B7\u53D6\u5230\u5C0F\u6570\u4F4D\u6570\u65F6\u66F4\u65B0\u72B6\u6001\n  useEffect(() => {\n    if (tokenDecimals !== undefined) {\n      setDecimals(Number(tokenDecimals));\n    }\n  }, [tokenDecimals]);\n\n  // \u5F53\u83B7\u53D6\u5230\u4F59\u989D\u65F6\u66F4\u65B0\u72B6\u6001\n  useEffect(() => {\n    if (tokenBalance !== undefined) {\n      setBalanceData(tokenBalance);\n      \n      // \u683C\u5F0F\u5316\u4F59\u989D\n      if (decimals !== undefined) {\n        const formatted = formatUnits(tokenBalance, decimals);\n        setFormattedBalance(formatted);\n      }\n    }\n  }, [tokenBalance, decimals]);\n\n  // \u624B\u52A8\u5237\u65B0\u529F\u80FD\n  const refetch = () => {\n    refetchBalance();\n  };\n\n  return {\n    balance: balanceData,\n    formattedBalance,\n    isLoading,\n    error,\n    refetch,\n  };\n}\n"],
      names: ["useSMToken", "address", "isConnected", "useAccount", "balanceData", "setBalanceData", "useState", "undefined", "decimals", "setDecimals", "isLoading", "setIsLoading", "error", "setError", "formattedBalance", "setFormattedBalance", "data", "tokenDecimals", "useReadContract", "contractAddresses", "smToken", "abi", "contractAbis", "functionName", "enabled", "tokenBalance", "refetch", "refetchBalance", "args", "useEffect", "Number", "formatted", "formatUnits", "balance"],
      mappings: ";;;;+BAKgBA;;;eAAAA;;;uBALoB;sBACR;uBACgB;2BACI;AAEzC,SAASA;IACd,MAAM,EAAEC,OAAO,EAAEC,WAAW,EAAE,GAAGC,IAAAA,iBAAU;IAC3C,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAqBC;IACnE,MAAM,CAACC,UAAUC,YAAY,GAAGH,IAAAA,eAAQ,EAAS,KAAK,YAAY;IAClE,MAAM,CAACI,WAAWC,aAAa,GAAGL,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACM,OAAOC,SAAS,GAAGP,IAAAA,eAAQ,EAAe;IACjD,MAAM,CAACQ,kBAAkBC,oBAAoB,GAAGT,IAAAA,eAAQ,EAAC;IAEzD,wCAAwC;IACxC,MAAM,EAAEU,MAAMC,aAAa,EAAE,GAAGC,IAAAA,sBAAe,EAAC;QAC9CjB,SAASkB,4BAAiB,CAACC,OAAO;QAClCC,KAAKC,uBAAY,CAACF,OAAO;QACzBG,cAAc;QACdC,SAAStB;IACX;IAEA,sCAAsC;IACtC,MAAM,EAAEc,MAAMS,YAAY,EAAEC,SAASC,cAAc,EAAE,GAAGT,IAAAA,sBAAe,EAAC;QACtEjB,SAASkB,4BAAiB,CAACC,OAAO;QAClCC,KAAKC,uBAAY,CAACF,OAAO;QACzBG,cAAc;QACdK,MAAM;YAAC3B;SAAQ;QACfuB,SAAStB,eAAe,CAAC,CAACD;IAC5B;IAEA,gBAAgB;IAChB4B,IAAAA,gBAAS,EAAC;QACR,IAAIZ,kBAAkBV,WAAW;YAC/BE,YAAYqB,OAAOb;QACrB;IACF,GAAG;QAACA;KAAc;IAElB,cAAc;IACdY,IAAAA,gBAAS,EAAC;QACR,IAAIJ,iBAAiBlB,WAAW;YAC9BF,eAAeoB;YAEf,QAAQ;YACR,IAAIjB,aAAaD,WAAW;gBAC1B,MAAMwB,YAAYC,IAAAA,iBAAW,EAACP,cAAcjB;gBAC5CO,oBAAoBgB;YACtB;QACF;IACF,GAAG;QAACN;QAAcjB;KAAS;IAE3B,SAAS;IACT,MAAMkB,UAAU;QACdC;IACF;IAEA,OAAO;QACLM,SAAS7B;QACTU;QACAJ;QACAE;QACAc;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "65d94f8232aeb3ff0e4f1ae38374b3a11347113c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_n04x43rcn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_n04x43rcn();
cov_n04x43rcn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_n04x43rcn().s[1]++;
Object.defineProperty(exports, "useSMToken", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_n04x43rcn().f[0]++;
    cov_n04x43rcn().s[2]++;
    return useSMToken;
  }
});
const _react =
/* istanbul ignore next */
(cov_n04x43rcn().s[3]++, require("react"));
const _viem =
/* istanbul ignore next */
(cov_n04x43rcn().s[4]++, require("viem"));
const _wagmi =
/* istanbul ignore next */
(cov_n04x43rcn().s[5]++, require("wagmi"));
const _contracts =
/* istanbul ignore next */
(cov_n04x43rcn().s[6]++, require("../config/contracts"));
function useSMToken() {
  /* istanbul ignore next */
  cov_n04x43rcn().f[1]++;
  const {
    address,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[7]++, (0, _wagmi.useAccount)());
  const [balanceData, setBalanceData] =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[8]++, (0, _react.useState)(undefined));
  const [decimals, setDecimals] =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[9]++, (0, _react.useState)(18)); // 默认小数位数为18
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[10]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[11]++, (0, _react.useState)(null));
  const [formattedBalance, setFormattedBalance] =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[12]++, (0, _react.useState)('0'));
  // 使用 wagmi 的 useReadContract 钩子读取代币小数位数
  const {
    data: tokenDecimals
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[13]++, (0, _wagmi.useReadContract)({
    address: _contracts.contractAddresses.smToken,
    abi: _contracts.contractAbis.smToken,
    functionName: 'decimals',
    enabled: isConnected
  }));
  // 使用 wagmi 的 useReadContract 钩子读取代币余额
  const {
    data: tokenBalance,
    refetch: refetchBalance
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[14]++, (0, _wagmi.useReadContract)({
    address: _contracts.contractAddresses.smToken,
    abi: _contracts.contractAbis.smToken,
    functionName: 'balanceOf',
    args: [address],
    enabled:
    /* istanbul ignore next */
    (cov_n04x43rcn().b[0][0]++, isConnected) &&
    /* istanbul ignore next */
    (cov_n04x43rcn().b[0][1]++, !!address)
  }));
  // 当获取到小数位数时更新状态
  /* istanbul ignore next */
  cov_n04x43rcn().s[15]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_n04x43rcn().f[2]++;
    cov_n04x43rcn().s[16]++;
    if (tokenDecimals !== undefined) {
      /* istanbul ignore next */
      cov_n04x43rcn().b[1][0]++;
      cov_n04x43rcn().s[17]++;
      setDecimals(Number(tokenDecimals));
    } else
    /* istanbul ignore next */
    {
      cov_n04x43rcn().b[1][1]++;
    }
  }, [tokenDecimals]);
  // 当获取到余额时更新状态
  /* istanbul ignore next */
  cov_n04x43rcn().s[18]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_n04x43rcn().f[3]++;
    cov_n04x43rcn().s[19]++;
    if (tokenBalance !== undefined) {
      /* istanbul ignore next */
      cov_n04x43rcn().b[2][0]++;
      cov_n04x43rcn().s[20]++;
      setBalanceData(tokenBalance);
      // 格式化余额
      /* istanbul ignore next */
      cov_n04x43rcn().s[21]++;
      if (decimals !== undefined) {
        /* istanbul ignore next */
        cov_n04x43rcn().b[3][0]++;
        const formatted =
        /* istanbul ignore next */
        (cov_n04x43rcn().s[22]++, (0, _viem.formatUnits)(tokenBalance, decimals));
        /* istanbul ignore next */
        cov_n04x43rcn().s[23]++;
        setFormattedBalance(formatted);
      } else
      /* istanbul ignore next */
      {
        cov_n04x43rcn().b[3][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_n04x43rcn().b[2][1]++;
    }
  }, [tokenBalance, decimals]);
  // 手动刷新功能
  /* istanbul ignore next */
  cov_n04x43rcn().s[24]++;
  const refetch = () => {
    /* istanbul ignore next */
    cov_n04x43rcn().f[4]++;
    cov_n04x43rcn().s[25]++;
    refetchBalance();
  };
  /* istanbul ignore next */
  cov_n04x43rcn().s[26]++;
  return {
    balance: balanceData,
    formattedBalance,
    isLoading,
    error,
    refetch
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbjA0eDQzcmNuIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwidXNlU01Ub2tlbiIsImYiLCJhZGRyZXNzIiwiaXNDb25uZWN0ZWQiLCJfd2FnbWkiLCJ1c2VBY2NvdW50IiwiYmFsYW5jZURhdGEiLCJzZXRCYWxhbmNlRGF0YSIsIl9yZWFjdCIsInVzZVN0YXRlIiwidW5kZWZpbmVkIiwiZGVjaW1hbHMiLCJzZXREZWNpbWFscyIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJmb3JtYXR0ZWRCYWxhbmNlIiwic2V0Rm9ybWF0dGVkQmFsYW5jZSIsImRhdGEiLCJ0b2tlbkRlY2ltYWxzIiwidXNlUmVhZENvbnRyYWN0IiwiX2NvbnRyYWN0cyIsImNvbnRyYWN0QWRkcmVzc2VzIiwic21Ub2tlbiIsImFiaSIsImNvbnRyYWN0QWJpcyIsImZ1bmN0aW9uTmFtZSIsImVuYWJsZWQiLCJ0b2tlbkJhbGFuY2UiLCJyZWZldGNoIiwicmVmZXRjaEJhbGFuY2UiLCJhcmdzIiwiYiIsInVzZUVmZmVjdCIsIk51bWJlciIsImZvcm1hdHRlZCIsIl92aWVtIiwiZm9ybWF0VW5pdHMiLCJiYWxhbmNlIl0sInNvdXJjZXMiOlsiL1VzZXJzL3l1ZGV5b3UvRGVza3RvcC9zbS9zb2Npb21pbnQvc3JjL2hvb2tzL3VzZVNNVG9rZW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGZvcm1hdFVuaXRzIH0gZnJvbSAndmllbSc7XG5pbXBvcnQgeyB1c2VBY2NvdW50LCB1c2VSZWFkQ29udHJhY3QgfSBmcm9tICd3YWdtaSc7XG5pbXBvcnQgeyBjb250cmFjdEFiaXMsIGNvbnRyYWN0QWRkcmVzc2VzIH0gZnJvbSAnLi4vY29uZmlnL2NvbnRyYWN0cyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VTTVRva2VuKCkge1xuICBjb25zdCB7IGFkZHJlc3MsIGlzQ29ubmVjdGVkIH0gPSB1c2VBY2NvdW50KCk7XG4gIGNvbnN0IFtiYWxhbmNlRGF0YSwgc2V0QmFsYW5jZURhdGFdID0gdXNlU3RhdGU8YmlnaW50IHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuICBjb25zdCBbZGVjaW1hbHMsIHNldERlY2ltYWxzXSA9IHVzZVN0YXRlPG51bWJlcj4oMTgpOyAvLyDpu5jorqTlsI/mlbDkvY3mlbDkuLoxOFxuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPEVycm9yIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtmb3JtYXR0ZWRCYWxhbmNlLCBzZXRGb3JtYXR0ZWRCYWxhbmNlXSA9IHVzZVN0YXRlKCcwJyk7XG5cbiAgLy8g5L2/55SoIHdhZ21pIOeahCB1c2VSZWFkQ29udHJhY3Qg6ZKp5a2Q6K+75Y+W5Luj5biB5bCP5pWw5L2N5pWwXG4gIGNvbnN0IHsgZGF0YTogdG9rZW5EZWNpbWFscyB9ID0gdXNlUmVhZENvbnRyYWN0KHtcbiAgICBhZGRyZXNzOiBjb250cmFjdEFkZHJlc3Nlcy5zbVRva2VuLFxuICAgIGFiaTogY29udHJhY3RBYmlzLnNtVG9rZW4sXG4gICAgZnVuY3Rpb25OYW1lOiAnZGVjaW1hbHMnLFxuICAgIGVuYWJsZWQ6IGlzQ29ubmVjdGVkLFxuICB9KTtcblxuICAvLyDkvb/nlKggd2FnbWkg55qEIHVzZVJlYWRDb250cmFjdCDpkqnlrZDor7vlj5bku6PluIHkvZnpop1cbiAgY29uc3QgeyBkYXRhOiB0b2tlbkJhbGFuY2UsIHJlZmV0Y2g6IHJlZmV0Y2hCYWxhbmNlIH0gPSB1c2VSZWFkQ29udHJhY3Qoe1xuICAgIGFkZHJlc3M6IGNvbnRyYWN0QWRkcmVzc2VzLnNtVG9rZW4sXG4gICAgYWJpOiBjb250cmFjdEFiaXMuc21Ub2tlbixcbiAgICBmdW5jdGlvbk5hbWU6ICdiYWxhbmNlT2YnLFxuICAgIGFyZ3M6IFthZGRyZXNzXSxcbiAgICBlbmFibGVkOiBpc0Nvbm5lY3RlZCAmJiAhIWFkZHJlc3MsXG4gIH0pO1xuXG4gIC8vIOW9k+iOt+WPluWIsOWwj+aVsOS9jeaVsOaXtuabtOaWsOeKtuaAgVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh0b2tlbkRlY2ltYWxzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHNldERlY2ltYWxzKE51bWJlcih0b2tlbkRlY2ltYWxzKSk7XG4gICAgfVxuICB9LCBbdG9rZW5EZWNpbWFsc10pO1xuXG4gIC8vIOW9k+iOt+WPluWIsOS9memineaXtuabtOaWsOeKtuaAgVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh0b2tlbkJhbGFuY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgc2V0QmFsYW5jZURhdGEodG9rZW5CYWxhbmNlKTtcbiAgICAgIFxuICAgICAgLy8g5qC85byP5YyW5L2Z6aKdXG4gICAgICBpZiAoZGVjaW1hbHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBmb3JtYXR0ZWQgPSBmb3JtYXRVbml0cyh0b2tlbkJhbGFuY2UsIGRlY2ltYWxzKTtcbiAgICAgICAgc2V0Rm9ybWF0dGVkQmFsYW5jZShmb3JtYXR0ZWQpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3Rva2VuQmFsYW5jZSwgZGVjaW1hbHNdKTtcblxuICAvLyDmiYvliqjliLfmlrDlip/og71cbiAgY29uc3QgcmVmZXRjaCA9ICgpID0+IHtcbiAgICByZWZldGNoQmFsYW5jZSgpO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgYmFsYW5jZTogYmFsYW5jZURhdGEsXG4gICAgZm9ybWF0dGVkQmFsYW5jZSxcbiAgICBpc0xvYWRpbmcsXG4gICAgZXJyb3IsXG4gICAgcmVmZXRjaCxcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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