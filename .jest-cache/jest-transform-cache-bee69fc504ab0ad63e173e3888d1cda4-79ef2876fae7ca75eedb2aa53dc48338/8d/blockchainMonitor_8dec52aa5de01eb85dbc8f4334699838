97d17c70520ad7b6e12889f9ed043ab0
/**
 * 区块链事件监控服务
 * 
 * 该服务负责监控智能合约事件，并将事件记录到日志系统中。
 * 它支持监控SMToken和SMTokenExchange合约的各种事件。
 */"use strict";

/* istanbul ignore next */
function cov_bioa9xxy() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/services/blockchainMonitor.ts";
  var hash = "f3855d6fbef9c3489795653834495ffeec18870d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/services/blockchainMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 25
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 37
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "8": {
        start: {
          line: 30,
          column: 14
        },
        end: {
          line: 30,
          column: 29
        }
      },
      "9": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 38
        }
      },
      "10": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 32,
          column: 75
        }
      },
      "11": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 52
        }
      },
      "12": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "13": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 68
        }
      },
      "14": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 67
        }
      },
      "15": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 42,
          column: 71
        }
      },
      "16": {
        start: {
          line: 43,
          column: 34
        },
        end: {
          line: 43,
          column: 89
        }
      },
      "17": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 63
        }
      },
      "18": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 45,
          column: 73
        }
      },
      "19": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 47,
          column: 79
        }
      },
      "20": {
        start: {
          line: 49,
          column: 15
        },
        end: {
          line: 51,
          column: 2
        }
      },
      "21": {
        start: {
          line: 53,
          column: 14
        },
        end: {
          line: 53,
          column: 64
        }
      },
      "22": {
        start: {
          line: 55,
          column: 21
        },
        end: {
          line: 58,
          column: 2
        }
      },
      "23": {
        start: {
          line: 60,
          column: 18
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "24": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "25": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 51
        }
      },
      "26": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 43
        }
      },
      "27": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 43
        }
      },
      "28": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 57
        }
      },
      "29": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 65
        }
      },
      "30": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 67
        }
      },
      "31": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 21
        }
      },
      "32": {
        start: {
          line: 80,
          column: 32
        },
        end: {
          line: 94,
          column: 1
        }
      },
      "33": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "34": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "35": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "36": {
        start: {
          line: 97,
          column: 32
        },
        end: {
          line: 127,
          column: 1
        }
      },
      "37": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 98,
          column: 42
        }
      },
      "38": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 36
        }
      },
      "39": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "40": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 33
        }
      },
      "41": {
        start: {
          line: 103,
          column: 11
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "42": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 33
        }
      },
      "43": {
        start: {
          line: 107,
          column: 22
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "44": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 124,
          column: 7
        }
      },
      "45": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 41
        }
      },
      "46": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 158,
          column: 1
        }
      },
      "47": {
        start: {
          line: 131,
          column: 41
        },
        end: {
          line: 131,
          column: 51
        }
      },
      "48": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 44
        }
      },
      "49": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "50": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 40
        }
      },
      "51": {
        start: {
          line: 138,
          column: 22
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "52": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "53": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 41
        }
      },
      "54": {
        start: {
          line: 161,
          column: 38
        },
        end: {
          line: 189,
          column: 1
        }
      },
      "55": {
        start: {
          line: 162,
          column: 42
        },
        end: {
          line: 162,
          column: 52
        }
      },
      "56": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 44
        }
      },
      "57": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "58": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 44
        }
      },
      "59": {
        start: {
          line: 169,
          column: 22
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "60": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 186,
          column: 7
        }
      },
      "61": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 41
        }
      },
      "62": {
        start: {
          line: 190,
          column: 27
        },
        end: {
          line: 218,
          column: 1
        }
      },
      "63": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "64": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 81
        }
      },
      "65": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 15
        }
      },
      "66": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 200,
          column: 7
        }
      },
      "67": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 216,
          column: 6
        }
      },
      "68": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "69": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 212,
          column: 18
        }
      },
      "70": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 97
        }
      },
      "71": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 19
        }
      },
      "72": {
        start: {
          line: 219,
          column: 30
        },
        end: {
          line: 266,
          column: 1
        }
      },
      "73": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "74": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 89
        }
      },
      "75": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "76": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 229,
          column: 7
        }
      },
      "77": {
        start: {
          line: 231,
          column: 30
        },
        end: {
          line: 245,
          column: 6
        }
      },
      "78": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "79": {
        start: {
          line: 239,
          column: 30
        },
        end: {
          line: 241,
          column: 18
        }
      },
      "80": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 99
        }
      },
      "81": {
        start: {
          line: 247,
          column: 34
        },
        end: {
          line: 261,
          column: 6
        }
      },
      "82": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "83": {
        start: {
          line: 255,
          column: 30
        },
        end: {
          line: 257,
          column: 18
        }
      },
      "84": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 103
        }
      },
      "85": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 265,
          column: 6
        }
      },
      "86": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 28
        }
      },
      "87": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 32
        }
      },
      "88": {
        start: {
          line: 269,
          column: 30
        },
        end: {
          line: 273,
          column: 1
        }
      },
      "89": {
        start: {
          line: 274,
          column: 17
        },
        end: {
          line: 274,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 16
          }
        },
        loc: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 20,
            column: 14
          }
        },
        loc: {
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 28
          }
        },
        loc: {
          start: {
            line: 23,
            column: 38
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 25
          }
        },
        loc: {
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 33
          }
        },
        loc: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 69,
            column: 31
          }
        },
        loc: {
          start: {
            line: 69,
            column: 50
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 69
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 33
          }
        },
        loc: {
          start: {
            line: 80,
            column: 51
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 80
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 97,
            column: 32
          },
          end: {
            line: 97,
            column: 33
          }
        },
        loc: {
          start: {
            line: 97,
            column: 71
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 97
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 130,
            column: 34
          },
          end: {
            line: 130,
            column: 35
          }
        },
        loc: {
          start: {
            line: 130,
            column: 73
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 130
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 161,
            column: 38
          },
          end: {
            line: 161,
            column: 39
          }
        },
        loc: {
          start: {
            line: 161,
            column: 77
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 161
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 190,
            column: 27
          },
          end: {
            line: 190,
            column: 28
          }
        },
        loc: {
          start: {
            line: 190,
            column: 37
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 190
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        },
        loc: {
          start: {
            line: 208,
            column: 30
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 208
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 219,
            column: 30
          },
          end: {
            line: 219,
            column: 31
          }
        },
        loc: {
          start: {
            line: 219,
            column: 40
          },
          end: {
            line: 266,
            column: 1
          }
        },
        line: 219
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 237,
            column: 17
          }
        },
        loc: {
          start: {
            line: 237,
            column: 30
          },
          end: {
            line: 244,
            column: 9
          }
        },
        line: 237
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 253,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        },
        loc: {
          start: {
            line: 253,
            column: 30
          },
          end: {
            line: 260,
            column: 9
          }
        },
        line: 253
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 262,
            column: 11
          },
          end: {
            line: 262,
            column: 12
          }
        },
        loc: {
          start: {
            line: 262,
            column: 15
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 262
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 35,
            column: 38
          }
        }, {
          start: {
            line: 35,
            column: 41
          },
          end: {
            line: 37,
            column: 5
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 14
          }
        }, {
          start: {
            line: 35,
            column: 18
          },
          end: {
            line: 35,
            column: 32
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 40,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 40,
            column: 51
          }
        }, {
          start: {
            line: 40,
            column: 55
          },
          end: {
            line: 40,
            column: 68
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 58
          }
        }, {
          start: {
            line: 41,
            column: 62
          },
          end: {
            line: 41,
            column: 66
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 65
          }
        }, {
          start: {
            line: 42,
            column: 69
          },
          end: {
            line: 42,
            column: 71
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 83
          }
        }, {
          start: {
            line: 43,
            column: 87
          },
          end: {
            line: 43,
            column: 89
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 21
          },
          end: {
            line: 44,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 21
          },
          end: {
            line: 44,
            column: 57
          }
        }, {
          start: {
            line: 44,
            column: 61
          },
          end: {
            line: 44,
            column: 63
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 26
          },
          end: {
            line: 45,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 26
          },
          end: {
            line: 45,
            column: 67
          }
        }, {
          start: {
            line: 45,
            column: 71
          },
          end: {
            line: 45,
            column: 73
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 14
          },
          end: {
            line: 53,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 43
          }
        }, {
          start: {
            line: 53,
            column: 46
          },
          end: {
            line: 53,
            column: 64
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: 103,
            column: 11
          },
          end: {
            line: 105,
            column: 5
          }
        }],
        line: 101
      },
      "10": {
        loc: {
          start: {
            line: 103,
            column: 11
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 11
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "13": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "14": {
        loc: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/services/blockchainMonitor.ts"],
      sourcesContent: ["/**\n * \u533A\u5757\u94FE\u4E8B\u4EF6\u76D1\u63A7\u670D\u52A1\n * \n * \u8BE5\u670D\u52A1\u8D1F\u8D23\u76D1\u63A7\u667A\u80FD\u5408\u7EA6\u4E8B\u4EF6\uFF0C\u5E76\u5C06\u4E8B\u4EF6\u8BB0\u5F55\u5230\u65E5\u5FD7\u7CFB\u7EDF\u4E2D\u3002\n * \u5B83\u652F\u6301\u76D1\u63A7SMToken\u548CSMTokenExchange\u5408\u7EA6\u7684\u5404\u79CD\u4E8B\u4EF6\u3002\n */\n\nimport { createPublicClient, http, parseAbiItem } from 'viem';\nimport { bsc, bscTestnet } from 'viem/chains';\nimport Logger from './logger';\nimport { createClient } from '@supabase/supabase-js';\n\n// \u73AF\u5883\u53D8\u91CF\nconst ENVIRONMENT = process.env.NEXT_PUBLIC_APP_ENV || 'development';\nconst CHAIN_ID = parseInt(process.env.NEXT_PUBLIC_CHAIN_ID || '97');\nconst SM_TOKEN_ADDRESS = process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS || '';\nconst SM_TOKEN_EXCHANGE_ADDRESS = process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS || '';\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || '';\nconst SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';\n\n// \u521B\u5EFASupabase\u5BA2\u6237\u7AEF\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\n// \u521B\u5EFA\u65E5\u5FD7\u8BB0\u5F55\u5668\nconst logger = Logger.createContextLogger({ component: 'BlockchainMonitor' });\n\n// \u9009\u62E9\u94FE\nconst chain = CHAIN_ID === 56 ? bsc : bscTestnet;\n\n// \u521B\u5EFA\u516C\u5171\u5BA2\u6237\u7AEF\nconst publicClient = createPublicClient({\n  chain,\n  transport: http(),\n});\n\n// \u4E8B\u4EF6ABI\nconst eventAbis = {\n  // SMToken\u4E8B\u4EF6\n  TimelockActionEvent: parseAbiItem('event TimelockActionEvent(bytes32 indexed actionHash, uint8 actionType, uint64 scheduledTime)'),\n  TokenOperation: parseAbiItem('event TokenOperation(address indexed account, uint256 amount, uint8 operationType)'),\n  Transfer: parseAbiItem('event Transfer(address indexed from, address indexed to, uint256 value)'),\n  \n  // SMTokenExchange\u4E8B\u4EF6\n  ExchangeAction: parseAbiItem('event ExchangeAction(uint8 actionType, uint8 round, uint256 amount)'),\n  UserAction: parseAbiItem('event UserAction(address indexed user, uint8 actionType, uint256 amount)'),\n};\n\n// \u4E8B\u4EF6\u7C7B\u578B\nexport enum EventType {\n  TOKEN_TRANSFER = 'token_transfer',\n  TOKEN_MINT = 'token_mint',\n  TOKEN_BURN = 'token_burn',\n  EXCHANGE_PURCHASE = 'exchange_purchase',\n  EXCHANGE_ROUND_CHANGE = 'exchange_round_change',\n  EXCHANGE_CONFIG_CHANGE = 'exchange_config_change',\n}\n\n// \u4E8B\u4EF6\u6570\u636E\u63A5\u53E3\nexport interface EventData {\n  eventType: EventType;\n  transactionHash: string;\n  blockNumber: number;\n  timestamp: number;\n  contractAddress: string;\n  eventName: string;\n  eventData: Record<string, any>;\n}\n\n/**\n * \u5C06\u4E8B\u4EF6\u6570\u636E\u4FDD\u5B58\u5230\u6570\u636E\u5E93\n */\nconst saveEventToDatabase = async (eventData: EventData): Promise<void> => {\n  try {\n    await supabase.from('blockchain_events').insert([eventData]);\n  } catch (error) {\n    logger.error('Failed to save event to database', {\n      action: 'saveEventToDatabase',\n      additionalData: { error, eventData },\n    });\n  }\n};\n\n/**\n * \u5904\u7406SMToken\u7684Transfer\u4E8B\u4EF6\n */\nconst handleTransferEvent = async (\n  event: any,\n  blockNumber: number,\n  timestamp: number\n): Promise<void> => {\n  const { from, to, value } = event.args;\n  \n  // \u786E\u5B9A\u4E8B\u4EF6\u7C7B\u578B\n  let eventType = EventType.TOKEN_TRANSFER;\n  if (from === '0x0000000000000000000000000000000000000000') {\n    eventType = EventType.TOKEN_MINT;\n  } else if (to === '0x0000000000000000000000000000000000000000') {\n    eventType = EventType.TOKEN_BURN;\n  }\n  \n  // \u521B\u5EFA\u4E8B\u4EF6\u6570\u636E\n  const eventData: EventData = {\n    eventType,\n    transactionHash: event.transactionHash,\n    blockNumber,\n    timestamp,\n    contractAddress: SM_TOKEN_ADDRESS,\n    eventName: 'Transfer',\n    eventData: {\n      from,\n      to,\n      value: value.toString(),\n    },\n  };\n  \n  // \u8BB0\u5F55\u65E5\u5FD7\n  logger.info(`Token ${eventType}: ${from} -> ${to}, ${value.toString()}`, {\n    action: 'handleTransferEvent',\n    additionalData: eventData,\n  });\n  \n  // \u4FDD\u5B58\u5230\u6570\u636E\u5E93\n  await saveEventToDatabase(eventData);\n};\n\n/**\n * \u5904\u7406SMTokenExchange\u7684UserAction\u4E8B\u4EF6\n */\nconst handleUserActionEvent = async (\n  event: any,\n  blockNumber: number,\n  timestamp: number\n): Promise<void> => {\n  const { user, actionType, amount } = event.args;\n  \n  // \u786E\u5B9A\u4E8B\u4EF6\u7C7B\u578B\n  let eventType = EventType.EXCHANGE_CONFIG_CHANGE;\n  if (actionType === 1) {\n    eventType = EventType.EXCHANGE_PURCHASE;\n  }\n  \n  // \u521B\u5EFA\u4E8B\u4EF6\u6570\u636E\n  const eventData: EventData = {\n    eventType,\n    transactionHash: event.transactionHash,\n    blockNumber,\n    timestamp,\n    contractAddress: SM_TOKEN_EXCHANGE_ADDRESS,\n    eventName: 'UserAction',\n    eventData: {\n      user,\n      actionType: actionType.toString(),\n      amount: amount.toString(),\n    },\n  };\n  \n  // \u8BB0\u5F55\u65E5\u5FD7\n  logger.info(`Exchange UserAction: ${user}, type=${actionType}, amount=${amount.toString()}`, {\n    action: 'handleUserActionEvent',\n    additionalData: eventData,\n  });\n  \n  // \u4FDD\u5B58\u5230\u6570\u636E\u5E93\n  await saveEventToDatabase(eventData);\n};\n\n/**\n * \u5904\u7406SMTokenExchange\u7684ExchangeAction\u4E8B\u4EF6\n */\nconst handleExchangeActionEvent = async (\n  event: any,\n  blockNumber: number,\n  timestamp: number\n): Promise<void> => {\n  const { actionType, round, amount } = event.args;\n  \n  // \u786E\u5B9A\u4E8B\u4EF6\u7C7B\u578B\n  let eventType = EventType.EXCHANGE_CONFIG_CHANGE;\n  if (actionType === 6) {\n    eventType = EventType.EXCHANGE_ROUND_CHANGE;\n  }\n  \n  // \u521B\u5EFA\u4E8B\u4EF6\u6570\u636E\n  const eventData: EventData = {\n    eventType,\n    transactionHash: event.transactionHash,\n    blockNumber,\n    timestamp,\n    contractAddress: SM_TOKEN_EXCHANGE_ADDRESS,\n    eventName: 'ExchangeAction',\n    eventData: {\n      actionType: actionType.toString(),\n      round: round.toString(),\n      amount: amount.toString(),\n    },\n  };\n  \n  // \u8BB0\u5F55\u65E5\u5FD7\n  logger.info(`Exchange Action: type=${actionType}, round=${round}, amount=${amount.toString()}`, {\n    action: 'handleExchangeActionEvent',\n    additionalData: eventData,\n  });\n  \n  // \u4FDD\u5B58\u5230\u6570\u636E\u5E93\n  await saveEventToDatabase(eventData);\n};\n\n/**\n * \u76D1\u63A7SMToken\u5408\u7EA6\u4E8B\u4EF6\n */\nexport const monitorTokenEvents = async (): Promise<void> => {\n  if (!SM_TOKEN_ADDRESS) {\n    logger.warn('SMToken address not configured, skipping event monitoring');\n    return;\n  }\n  \n  logger.info('Starting SMToken event monitoring', {\n    action: 'monitorTokenEvents',\n    additionalData: { address: SM_TOKEN_ADDRESS },\n  });\n  \n  // \u76D1\u63A7Transfer\u4E8B\u4EF6\n  const unwatch = publicClient.watchContractEvent({\n    address: SM_TOKEN_ADDRESS as `0x${string}`,\n    abi: [eventAbis.Transfer],\n    eventName: 'Transfer',\n    onLogs: async (logs) => {\n      for (const log of logs) {\n        const block = await publicClient.getBlock({\n          blockNumber: log.blockNumber,\n        });\n        \n        await handleTransferEvent(log, Number(log.blockNumber), Number(block.timestamp));\n      }\n    },\n  });\n  \n  return unwatch;\n};\n\n/**\n * \u76D1\u63A7SMTokenExchange\u5408\u7EA6\u4E8B\u4EF6\n */\nexport const monitorExchangeEvents = async (): Promise<void> => {\n  if (!SM_TOKEN_EXCHANGE_ADDRESS) {\n    logger.warn('SMTokenExchange address not configured, skipping event monitoring');\n    return;\n  }\n  \n  logger.info('Starting SMTokenExchange event monitoring', {\n    action: 'monitorExchangeEvents',\n    additionalData: { address: SM_TOKEN_EXCHANGE_ADDRESS },\n  });\n  \n  // \u76D1\u63A7UserAction\u4E8B\u4EF6\n  const unwatchUserAction = publicClient.watchContractEvent({\n    address: SM_TOKEN_EXCHANGE_ADDRESS as `0x${string}`,\n    abi: [eventAbis.UserAction],\n    eventName: 'UserAction',\n    onLogs: async (logs) => {\n      for (const log of logs) {\n        const block = await publicClient.getBlock({\n          blockNumber: log.blockNumber,\n        });\n        \n        await handleUserActionEvent(log, Number(log.blockNumber), Number(block.timestamp));\n      }\n    },\n  });\n  \n  // \u76D1\u63A7ExchangeAction\u4E8B\u4EF6\n  const unwatchExchangeAction = publicClient.watchContractEvent({\n    address: SM_TOKEN_EXCHANGE_ADDRESS as `0x${string}`,\n    abi: [eventAbis.ExchangeAction],\n    eventName: 'ExchangeAction',\n    onLogs: async (logs) => {\n      for (const log of logs) {\n        const block = await publicClient.getBlock({\n          blockNumber: log.blockNumber,\n        });\n        \n        await handleExchangeActionEvent(log, Number(log.blockNumber), Number(block.timestamp));\n      }\n    },\n  });\n  \n  return () => {\n    unwatchUserAction();\n    unwatchExchangeAction();\n  };\n};\n\n/**\n * \u533A\u5757\u94FE\u76D1\u63A7\u670D\u52A1\n */\nconst BlockchainMonitor = {\n  monitorTokenEvents,\n  monitorExchangeEvents,\n  EventType,\n};\n\nexport default BlockchainMonitor;\n"],
      names: ["EventType", "monitorExchangeEvents", "monitorTokenEvents", "ENVIRONMENT", "process", "env", "NEXT_PUBLIC_APP_ENV", "CHAIN_ID", "parseInt", "NEXT_PUBLIC_CHAIN_ID", "SM_TOKEN_ADDRESS", "NEXT_PUBLIC_SM_TOKEN_ADDRESS", "SM_TOKEN_EXCHANGE_ADDRESS", "NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS", "SUPABASE_URL", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_ANON_KEY", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "supabase", "createClient", "logger", "Logger", "createContextLogger", "component", "chain", "bsc", "bscTestnet", "publicClient", "createPublicClient", "transport", "http", "eventAbis", "TimelockActionEvent", "parseAbiItem", "TokenOperation", "Transfer", "ExchangeAction", "UserAction", "saveEventToDatabase", "eventData", "from", "insert", "error", "action", "additionalData", "handleTransferEvent", "event", "blockNumber", "timestamp", "to", "value", "args", "eventType", "transactionHash", "contractAddress", "eventName", "toString", "info", "handleUserActionEvent", "user", "actionType", "amount", "handleExchangeActionEvent", "round", "warn", "address", "unwatch", "watchContractEvent", "abi", "onLogs", "logs", "log", "block", "getBlock", "Number", "unwatchUserAction", "unwatchExchangeAction", "BlockchainMonitor"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f3855d6fbef9c3489795653834495ffeec18870d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bioa9xxy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bioa9xxy();
cov_bioa9xxy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_bioa9xxy().f[0]++;
  cov_bioa9xxy().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_bioa9xxy().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_bioa9xxy().s[3]++;
_export(exports, {
  EventType: function () {
    /* istanbul ignore next */
    cov_bioa9xxy().f[1]++;
    cov_bioa9xxy().s[4]++;
    return EventType;
  },
  default: function () {
    /* istanbul ignore next */
    cov_bioa9xxy().f[2]++;
    cov_bioa9xxy().s[5]++;
    return _default;
  },
  monitorExchangeEvents: function () {
    /* istanbul ignore next */
    cov_bioa9xxy().f[3]++;
    cov_bioa9xxy().s[6]++;
    return monitorExchangeEvents;
  },
  monitorTokenEvents: function () {
    /* istanbul ignore next */
    cov_bioa9xxy().f[4]++;
    cov_bioa9xxy().s[7]++;
    return monitorTokenEvents;
  }
});
const _viem =
/* istanbul ignore next */
(cov_bioa9xxy().s[8]++, require("viem"));
const _chains =
/* istanbul ignore next */
(cov_bioa9xxy().s[9]++, require("viem/chains"));
const _logger =
/* istanbul ignore next */
(/*#__PURE__*/cov_bioa9xxy().s[10]++, _interop_require_default(require("./logger")));
const _supabasejs =
/* istanbul ignore next */
(cov_bioa9xxy().s[11]++, require("@supabase/supabase-js"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_bioa9xxy().f[5]++;
  cov_bioa9xxy().s[12]++;
  return /* istanbul ignore next */(cov_bioa9xxy().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_bioa9xxy().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_bioa9xxy().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_bioa9xxy().b[0][1]++, {
    default: obj
  });
}
// 环境变量
const ENVIRONMENT =
/* istanbul ignore next */
(cov_bioa9xxy().s[13]++,
/* istanbul ignore next */
(cov_bioa9xxy().b[2][0]++, process.env.NEXT_PUBLIC_APP_ENV) ||
/* istanbul ignore next */
(cov_bioa9xxy().b[2][1]++, 'development'));
const CHAIN_ID =
/* istanbul ignore next */
(cov_bioa9xxy().s[14]++, parseInt(
/* istanbul ignore next */
(cov_bioa9xxy().b[3][0]++, process.env.NEXT_PUBLIC_CHAIN_ID) ||
/* istanbul ignore next */
(cov_bioa9xxy().b[3][1]++, '97')));
const SM_TOKEN_ADDRESS =
/* istanbul ignore next */
(cov_bioa9xxy().s[15]++,
/* istanbul ignore next */
(cov_bioa9xxy().b[4][0]++, process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS) ||
/* istanbul ignore next */
(cov_bioa9xxy().b[4][1]++, ''));
const SM_TOKEN_EXCHANGE_ADDRESS =
/* istanbul ignore next */
(cov_bioa9xxy().s[16]++,
/* istanbul ignore next */
(cov_bioa9xxy().b[5][0]++, process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS) ||
/* istanbul ignore next */
(cov_bioa9xxy().b[5][1]++, ''));
const SUPABASE_URL =
/* istanbul ignore next */
(cov_bioa9xxy().s[17]++,
/* istanbul ignore next */
(cov_bioa9xxy().b[6][0]++, process.env.NEXT_PUBLIC_SUPABASE_URL) ||
/* istanbul ignore next */
(cov_bioa9xxy().b[6][1]++, ''));
const SUPABASE_ANON_KEY =
/* istanbul ignore next */
(cov_bioa9xxy().s[18]++,
/* istanbul ignore next */
(cov_bioa9xxy().b[7][0]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) ||
/* istanbul ignore next */
(cov_bioa9xxy().b[7][1]++, ''));
// 创建Supabase客户端
const supabase =
/* istanbul ignore next */
(cov_bioa9xxy().s[19]++, (0, _supabasejs.createClient)(SUPABASE_URL, SUPABASE_ANON_KEY));
// 创建日志记录器
const logger =
/* istanbul ignore next */
(cov_bioa9xxy().s[20]++, _logger.default.createContextLogger({
  component: 'BlockchainMonitor'
}));
// 选择链
const chain =
/* istanbul ignore next */
(cov_bioa9xxy().s[21]++, CHAIN_ID === 56 ?
/* istanbul ignore next */
(cov_bioa9xxy().b[8][0]++, _chains.bsc) :
/* istanbul ignore next */
(cov_bioa9xxy().b[8][1]++, _chains.bscTestnet));
// 创建公共客户端
const publicClient =
/* istanbul ignore next */
(cov_bioa9xxy().s[22]++, (0, _viem.createPublicClient)({
  chain,
  transport: (0, _viem.http)()
}));
// 事件ABI
const eventAbis =
/* istanbul ignore next */
(cov_bioa9xxy().s[23]++, {
  // SMToken事件
  TimelockActionEvent: (0, _viem.parseAbiItem)('event TimelockActionEvent(bytes32 indexed actionHash, uint8 actionType, uint64 scheduledTime)'),
  TokenOperation: (0, _viem.parseAbiItem)('event TokenOperation(address indexed account, uint256 amount, uint8 operationType)'),
  Transfer: (0, _viem.parseAbiItem)('event Transfer(address indexed from, address indexed to, uint256 value)'),
  // SMTokenExchange事件
  ExchangeAction: (0, _viem.parseAbiItem)('event ExchangeAction(uint8 actionType, uint8 round, uint256 amount)'),
  UserAction: (0, _viem.parseAbiItem)('event UserAction(address indexed user, uint8 actionType, uint256 amount)')
});
var EventType =
/* istanbul ignore next */
(/*#__PURE__*/cov_bioa9xxy().s[24]++, function (EventType) {
  /* istanbul ignore next */
  cov_bioa9xxy().f[6]++;
  cov_bioa9xxy().s[25]++;
  EventType["TOKEN_TRANSFER"] = "token_transfer";
  /* istanbul ignore next */
  cov_bioa9xxy().s[26]++;
  EventType["TOKEN_MINT"] = "token_mint";
  /* istanbul ignore next */
  cov_bioa9xxy().s[27]++;
  EventType["TOKEN_BURN"] = "token_burn";
  /* istanbul ignore next */
  cov_bioa9xxy().s[28]++;
  EventType["EXCHANGE_PURCHASE"] = "exchange_purchase";
  /* istanbul ignore next */
  cov_bioa9xxy().s[29]++;
  EventType["EXCHANGE_ROUND_CHANGE"] = "exchange_round_change";
  /* istanbul ignore next */
  cov_bioa9xxy().s[30]++;
  EventType["EXCHANGE_CONFIG_CHANGE"] = "exchange_config_change";
  /* istanbul ignore next */
  cov_bioa9xxy().s[31]++;
  return EventType;
}({}));
/**
 * 将事件数据保存到数据库
 */
/* istanbul ignore next */
cov_bioa9xxy().s[32]++;
const saveEventToDatabase = async eventData => {
  /* istanbul ignore next */
  cov_bioa9xxy().f[7]++;
  cov_bioa9xxy().s[33]++;
  try {
    /* istanbul ignore next */
    cov_bioa9xxy().s[34]++;
    await supabase.from('blockchain_events').insert([eventData]);
  } catch (error) {
    /* istanbul ignore next */
    cov_bioa9xxy().s[35]++;
    logger.error('Failed to save event to database', {
      action: 'saveEventToDatabase',
      additionalData: {
        error,
        eventData
      }
    });
  }
};
/**
 * 处理SMToken的Transfer事件
 */
/* istanbul ignore next */
cov_bioa9xxy().s[36]++;
const handleTransferEvent = async (event, blockNumber, timestamp) => {
  /* istanbul ignore next */
  cov_bioa9xxy().f[8]++;
  const {
    from,
    to,
    value
  } =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[37]++, event.args);
  // 确定事件类型
  let eventType =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[38]++, "token_transfer");
  /* istanbul ignore next */
  cov_bioa9xxy().s[39]++;
  if (from === '0x0000000000000000000000000000000000000000') {
    /* istanbul ignore next */
    cov_bioa9xxy().b[9][0]++;
    cov_bioa9xxy().s[40]++;
    eventType = "token_mint";
  } else {
    /* istanbul ignore next */
    cov_bioa9xxy().b[9][1]++;
    cov_bioa9xxy().s[41]++;
    if (to === '0x0000000000000000000000000000000000000000') {
      /* istanbul ignore next */
      cov_bioa9xxy().b[10][0]++;
      cov_bioa9xxy().s[42]++;
      eventType = "token_burn";
    } else
    /* istanbul ignore next */
    {
      cov_bioa9xxy().b[10][1]++;
    }
  }
  // 创建事件数据
  const eventData =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[43]++, {
    eventType,
    transactionHash: event.transactionHash,
    blockNumber,
    timestamp,
    contractAddress: SM_TOKEN_ADDRESS,
    eventName: 'Transfer',
    eventData: {
      from,
      to,
      value: value.toString()
    }
  });
  // 记录日志
  /* istanbul ignore next */
  cov_bioa9xxy().s[44]++;
  logger.info(`Token ${eventType}: ${from} -> ${to}, ${value.toString()}`, {
    action: 'handleTransferEvent',
    additionalData: eventData
  });
  // 保存到数据库
  /* istanbul ignore next */
  cov_bioa9xxy().s[45]++;
  await saveEventToDatabase(eventData);
};
/**
 * 处理SMTokenExchange的UserAction事件
 */
/* istanbul ignore next */
cov_bioa9xxy().s[46]++;
const handleUserActionEvent = async (event, blockNumber, timestamp) => {
  /* istanbul ignore next */
  cov_bioa9xxy().f[9]++;
  const {
    user,
    actionType,
    amount
  } =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[47]++, event.args);
  // 确定事件类型
  let eventType =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[48]++, "exchange_config_change");
  /* istanbul ignore next */
  cov_bioa9xxy().s[49]++;
  if (actionType === 1) {
    /* istanbul ignore next */
    cov_bioa9xxy().b[11][0]++;
    cov_bioa9xxy().s[50]++;
    eventType = "exchange_purchase";
  } else
  /* istanbul ignore next */
  {
    cov_bioa9xxy().b[11][1]++;
  }
  // 创建事件数据
  const eventData =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[51]++, {
    eventType,
    transactionHash: event.transactionHash,
    blockNumber,
    timestamp,
    contractAddress: SM_TOKEN_EXCHANGE_ADDRESS,
    eventName: 'UserAction',
    eventData: {
      user,
      actionType: actionType.toString(),
      amount: amount.toString()
    }
  });
  // 记录日志
  /* istanbul ignore next */
  cov_bioa9xxy().s[52]++;
  logger.info(`Exchange UserAction: ${user}, type=${actionType}, amount=${amount.toString()}`, {
    action: 'handleUserActionEvent',
    additionalData: eventData
  });
  // 保存到数据库
  /* istanbul ignore next */
  cov_bioa9xxy().s[53]++;
  await saveEventToDatabase(eventData);
};
/**
 * 处理SMTokenExchange的ExchangeAction事件
 */
/* istanbul ignore next */
cov_bioa9xxy().s[54]++;
const handleExchangeActionEvent = async (event, blockNumber, timestamp) => {
  /* istanbul ignore next */
  cov_bioa9xxy().f[10]++;
  const {
    actionType,
    round,
    amount
  } =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[55]++, event.args);
  // 确定事件类型
  let eventType =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[56]++, "exchange_config_change");
  /* istanbul ignore next */
  cov_bioa9xxy().s[57]++;
  if (actionType === 6) {
    /* istanbul ignore next */
    cov_bioa9xxy().b[12][0]++;
    cov_bioa9xxy().s[58]++;
    eventType = "exchange_round_change";
  } else
  /* istanbul ignore next */
  {
    cov_bioa9xxy().b[12][1]++;
  }
  // 创建事件数据
  const eventData =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[59]++, {
    eventType,
    transactionHash: event.transactionHash,
    blockNumber,
    timestamp,
    contractAddress: SM_TOKEN_EXCHANGE_ADDRESS,
    eventName: 'ExchangeAction',
    eventData: {
      actionType: actionType.toString(),
      round: round.toString(),
      amount: amount.toString()
    }
  });
  // 记录日志
  /* istanbul ignore next */
  cov_bioa9xxy().s[60]++;
  logger.info(`Exchange Action: type=${actionType}, round=${round}, amount=${amount.toString()}`, {
    action: 'handleExchangeActionEvent',
    additionalData: eventData
  });
  // 保存到数据库
  /* istanbul ignore next */
  cov_bioa9xxy().s[61]++;
  await saveEventToDatabase(eventData);
};
/* istanbul ignore next */
cov_bioa9xxy().s[62]++;
const monitorTokenEvents = async () => {
  /* istanbul ignore next */
  cov_bioa9xxy().f[11]++;
  cov_bioa9xxy().s[63]++;
  if (!SM_TOKEN_ADDRESS) {
    /* istanbul ignore next */
    cov_bioa9xxy().b[13][0]++;
    cov_bioa9xxy().s[64]++;
    logger.warn('SMToken address not configured, skipping event monitoring');
    /* istanbul ignore next */
    cov_bioa9xxy().s[65]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_bioa9xxy().b[13][1]++;
  }
  cov_bioa9xxy().s[66]++;
  logger.info('Starting SMToken event monitoring', {
    action: 'monitorTokenEvents',
    additionalData: {
      address: SM_TOKEN_ADDRESS
    }
  });
  // 监控Transfer事件
  const unwatch =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[67]++, publicClient.watchContractEvent({
    address: SM_TOKEN_ADDRESS,
    abi: [eventAbis.Transfer],
    eventName: 'Transfer',
    onLogs: async logs => {
      /* istanbul ignore next */
      cov_bioa9xxy().f[12]++;
      cov_bioa9xxy().s[68]++;
      for (const log of logs) {
        const block =
        /* istanbul ignore next */
        (cov_bioa9xxy().s[69]++, await publicClient.getBlock({
          blockNumber: log.blockNumber
        }));
        /* istanbul ignore next */
        cov_bioa9xxy().s[70]++;
        await handleTransferEvent(log, Number(log.blockNumber), Number(block.timestamp));
      }
    }
  }));
  /* istanbul ignore next */
  cov_bioa9xxy().s[71]++;
  return unwatch;
};
/* istanbul ignore next */
cov_bioa9xxy().s[72]++;
const monitorExchangeEvents = async () => {
  /* istanbul ignore next */
  cov_bioa9xxy().f[13]++;
  cov_bioa9xxy().s[73]++;
  if (!SM_TOKEN_EXCHANGE_ADDRESS) {
    /* istanbul ignore next */
    cov_bioa9xxy().b[14][0]++;
    cov_bioa9xxy().s[74]++;
    logger.warn('SMTokenExchange address not configured, skipping event monitoring');
    /* istanbul ignore next */
    cov_bioa9xxy().s[75]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_bioa9xxy().b[14][1]++;
  }
  cov_bioa9xxy().s[76]++;
  logger.info('Starting SMTokenExchange event monitoring', {
    action: 'monitorExchangeEvents',
    additionalData: {
      address: SM_TOKEN_EXCHANGE_ADDRESS
    }
  });
  // 监控UserAction事件
  const unwatchUserAction =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[77]++, publicClient.watchContractEvent({
    address: SM_TOKEN_EXCHANGE_ADDRESS,
    abi: [eventAbis.UserAction],
    eventName: 'UserAction',
    onLogs: async logs => {
      /* istanbul ignore next */
      cov_bioa9xxy().f[14]++;
      cov_bioa9xxy().s[78]++;
      for (const log of logs) {
        const block =
        /* istanbul ignore next */
        (cov_bioa9xxy().s[79]++, await publicClient.getBlock({
          blockNumber: log.blockNumber
        }));
        /* istanbul ignore next */
        cov_bioa9xxy().s[80]++;
        await handleUserActionEvent(log, Number(log.blockNumber), Number(block.timestamp));
      }
    }
  }));
  // 监控ExchangeAction事件
  const unwatchExchangeAction =
  /* istanbul ignore next */
  (cov_bioa9xxy().s[81]++, publicClient.watchContractEvent({
    address: SM_TOKEN_EXCHANGE_ADDRESS,
    abi: [eventAbis.ExchangeAction],
    eventName: 'ExchangeAction',
    onLogs: async logs => {
      /* istanbul ignore next */
      cov_bioa9xxy().f[15]++;
      cov_bioa9xxy().s[82]++;
      for (const log of logs) {
        const block =
        /* istanbul ignore next */
        (cov_bioa9xxy().s[83]++, await publicClient.getBlock({
          blockNumber: log.blockNumber
        }));
        /* istanbul ignore next */
        cov_bioa9xxy().s[84]++;
        await handleExchangeActionEvent(log, Number(log.blockNumber), Number(block.timestamp));
      }
    }
  }));
  /* istanbul ignore next */
  cov_bioa9xxy().s[85]++;
  return () => {
    /* istanbul ignore next */
    cov_bioa9xxy().f[16]++;
    cov_bioa9xxy().s[86]++;
    unwatchUserAction();
    /* istanbul ignore next */
    cov_bioa9xxy().s[87]++;
    unwatchExchangeAction();
  };
};
/**
 * 区块链监控服务
 */
const BlockchainMonitor =
/* istanbul ignore next */
(cov_bioa9xxy().s[88]++, {
  monitorTokenEvents,
  monitorExchangeEvents,
  EventType
});
const _default =
/* istanbul ignore next */
(cov_bioa9xxy().s[89]++, BlockchainMonitor);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,