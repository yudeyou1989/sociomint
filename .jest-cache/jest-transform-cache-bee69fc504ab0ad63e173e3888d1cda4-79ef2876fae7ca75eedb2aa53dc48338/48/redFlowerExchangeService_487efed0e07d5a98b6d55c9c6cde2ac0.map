{"version":3,"names":["cov_1h8bmpbjpg","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","RedFlowerExchangeService","default","_default","SUPABASE_URL","process","env","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_ANON_KEY","NEXT_PUBLIC_SUPABASE_ANON_KEY","supabase","_supabasejs","createClient","getUserBalance","userWallet","rpc","p_user_wallet","data","error","from","select","eq","single","console","getUserTier","length","user_wallet","tier_level","tier_points","social_verifications","kyc_status","referral_count","total_sm_held","tier_updated_at","Date","toISOString","getUserExchangeConfig","executeExchange","flowersAmount","description","p_flowers_amount","p_description","success","message","addBalance","amount","sourceType","sourceId","p_amount","p_source_type","p_source_id","getUserTransactions","limit","transactionType","query","order","ascending","getUserDailyStats","statDate","date","split","code","upgradeUserTier","newTier","reason","p_new_tier","p_reason","getExchangeEstimate","balance","config","dailyStats","Promise","all","parseFloat","available_balance","min_exchange_amount","min_required","todayExchanged","flowers_exchanged","max_daily_exchange","daily_limit","already_exchanged","toString","actualRate","base_exchange_rate","bonus_multiplier","feeAmount","fee_percentage","netFlowers","smAmount","estimated_sm","exchange_rate","fee_amount","net_flowers","remaining_daily_limit","getUserInfo","tier","recentTransactions","summary","canExchange","tierLevel","dailyRemaining"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/services/redFlowerExchangeService.ts"],"sourcesContent":["/**\n * 小红花兑换服务（升级版）\n * 实现动态兑换比例、分层奖励、每日限额等新功能\n */\n\nimport { createClient } from '@supabase/supabase-js';\n\n// 环境变量\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\n// 创建Supabase客户端\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\nexport interface RedFlowerBalance {\n  id: string;\n  user_wallet: string;\n  available_balance: string;\n  locked_balance: string;\n  total_earned: string;\n  total_spent: string;\n  last_updated: string;\n}\n\nexport interface RedFlowerTransaction {\n  id: string;\n  user_wallet: string;\n  transaction_type: 'earn' | 'spend' | 'lock' | 'unlock' | 'transfer';\n  amount: string;\n  balance_before: string;\n  balance_after: string;\n  source_type: 'daily_reward' | 'social_task' | 'airdrop' | 'exchange' | 'manual' | 'soft_staking';\n  source_id?: string;\n  description: string;\n  metadata?: any;\n  tx_hash?: string;\n  status: 'pending' | 'completed' | 'failed' | 'cancelled';\n  created_at: string;\n  confirmed_at?: string;\n}\n\nexport interface UserTier {\n  user_wallet: string;\n  tier_level: 'basic' | 'verified' | 'vip' | 'premium';\n  tier_points: number;\n  social_verifications: any;\n  kyc_status: 'none' | 'pending' | 'verified' | 'rejected';\n  referral_count: number;\n  total_sm_held: string;\n  tier_updated_at: string;\n}\n\nexport interface ExchangeConfig {\n  min_exchange_amount: string;\n  max_daily_exchange: string;\n  base_exchange_rate: string;\n  bonus_multiplier: string;\n  fee_percentage: string;\n}\n\nexport interface ExchangeResult {\n  success: boolean;\n  transaction_id?: string;\n  sm_amount?: string;\n  exchange_rate?: string;\n  fee_amount?: string;\n  net_flowers?: string;\n  bonus_multiplier?: string;\n  error?: string;\n  min_required?: string;\n  daily_limit?: string;\n  already_exchanged?: string;\n}\n\nexport interface DailyExchangeStats {\n  stat_date: string;\n  user_wallet: string;\n  flowers_exchanged: string;\n  sm_received: string;\n  exchange_count: number;\n  average_rate: string;\n  total_fees: string;\n}\n\nexport class RedFlowerExchangeService {\n  /**\n   * 获取用户小红花余额\n   */\n  static async getUserBalance(userWallet: string): Promise<RedFlowerBalance | null> {\n    try {\n      // 先确保用户余额记录存在\n      await supabase.rpc('get_or_create_red_flower_balance', {\n        p_user_wallet: userWallet\n      });\n\n      const { data, error } = await supabase\n        .from('red_flower_balances')\n        .select('*')\n        .eq('user_wallet', userWallet)\n        .single();\n\n      if (error) {\n        console.error('获取用户小红花余额失败:', error);\n        return null;\n      }\n\n      return data;\n    } catch (error) {\n      console.error('获取用户小红花余额异常:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取用户等级信息\n   */\n  static async getUserTier(userWallet: string): Promise<UserTier | null> {\n    try {\n      const { data, error } = await supabase.rpc('get_user_tier_info', {\n        p_user_wallet: userWallet\n      });\n\n      if (error) {\n        console.error('获取用户等级信息失败:', error);\n        return null;\n      }\n\n      if (data && data.length > 0) {\n        return {\n          user_wallet: userWallet,\n          tier_level: data[0].tier_level,\n          tier_points: data[0].tier_points,\n          social_verifications: data[0].social_verifications,\n          kyc_status: data[0].kyc_status,\n          referral_count: 0,\n          total_sm_held: '0',\n          tier_updated_at: new Date().toISOString()\n        };\n      }\n\n      return null;\n    } catch (error) {\n      console.error('获取用户等级信息异常:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取用户兑换配置\n   */\n  static async getUserExchangeConfig(userWallet: string): Promise<ExchangeConfig | null> {\n    try {\n      const { data, error } = await supabase.rpc('get_user_exchange_config', {\n        p_user_wallet: userWallet\n      });\n\n      if (error) {\n        console.error('获取用户兑换配置失败:', error);\n        return null;\n      }\n\n      if (data && data.length > 0) {\n        return data[0];\n      }\n\n      return null;\n    } catch (error) {\n      console.error('获取用户兑换配置异常:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 执行小红花兑换\n   */\n  static async executeExchange(\n    userWallet: string,\n    flowersAmount: string,\n    description?: string\n  ): Promise<ExchangeResult> {\n    try {\n      const { data, error } = await supabase.rpc('execute_red_flower_exchange', {\n        p_user_wallet: userWallet,\n        p_flowers_amount: flowersAmount,\n        p_description: description\n      });\n\n      if (error) {\n        console.error('执行小红花兑换失败:', error);\n        return { success: false, error: error.message };\n      }\n\n      return data || { success: false, error: 'unknown_error' };\n    } catch (error) {\n      console.error('执行小红花兑换异常:', error);\n      return { success: false, error: 'exception' };\n    }\n  }\n\n  /**\n   * 添加小红花余额\n   */\n  static async addBalance(\n    userWallet: string,\n    amount: string,\n    sourceType: 'daily_reward' | 'social_task' | 'airdrop' | 'manual' | 'soft_staking',\n    sourceId?: string,\n    description?: string\n  ): Promise<string | null> {\n    try {\n      const { data, error } = await supabase.rpc('add_red_flower_balance', {\n        p_user_wallet: userWallet,\n        p_amount: amount,\n        p_source_type: sourceType,\n        p_source_id: sourceId,\n        p_description: description\n      });\n\n      if (error) {\n        console.error('添加小红花余额失败:', error);\n        return null;\n      }\n\n      return data;\n    } catch (error) {\n      console.error('添加小红花余额异常:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取用户交易记录\n   */\n  static async getUserTransactions(\n    userWallet: string,\n    limit: number = 50,\n    transactionType?: string\n  ): Promise<RedFlowerTransaction[]> {\n    try {\n      let query = supabase\n        .from('red_flower_transactions')\n        .select('*')\n        .eq('user_wallet', userWallet)\n        .order('created_at', { ascending: false })\n        .limit(limit);\n\n      if (transactionType) {\n        query = query.eq('transaction_type', transactionType);\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        console.error('获取用户交易记录失败:', error);\n        return [];\n      }\n\n      return data || [];\n    } catch (error) {\n      console.error('获取用户交易记录异常:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 获取用户每日兑换统计\n   */\n  static async getUserDailyStats(\n    userWallet: string,\n    statDate?: string\n  ): Promise<DailyExchangeStats | null> {\n    try {\n      const date = statDate || new Date().toISOString().split('T')[0];\n\n      const { data, error } = await supabase\n        .from('daily_exchange_stats')\n        .select('*')\n        .eq('user_wallet', userWallet)\n        .eq('stat_date', date)\n        .single();\n\n      if (error && error.code !== 'PGRST116') {\n        console.error('获取用户每日统计失败:', error);\n        return null;\n      }\n\n      return data;\n    } catch (error) {\n      console.error('获取用户每日统计异常:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 升级用户等级\n   */\n  static async upgradeUserTier(\n    userWallet: string,\n    newTier: 'basic' | 'verified' | 'vip' | 'premium',\n    reason?: string\n  ): Promise<boolean> {\n    try {\n      const { data, error } = await supabase.rpc('upgrade_user_tier', {\n        p_user_wallet: userWallet,\n        p_new_tier: newTier,\n        p_reason: reason\n      });\n\n      if (error) {\n        console.error('升级用户等级失败:', error);\n        return false;\n      }\n\n      return data || false;\n    } catch (error) {\n      console.error('升级用户等级异常:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 获取兑换预估\n   */\n  static async getExchangeEstimate(\n    userWallet: string,\n    flowersAmount: string\n  ) {\n    try {\n      const [balance, config, dailyStats] = await Promise.all([\n        this.getUserBalance(userWallet),\n        this.getUserExchangeConfig(userWallet),\n        this.getUserDailyStats(userWallet)\n      ]);\n\n      if (!balance || !config) {\n        return {\n          success: false,\n          error: 'user_data_not_found'\n        };\n      }\n\n      const amount = parseFloat(flowersAmount);\n      \n      // 检查余额\n      if (amount > parseFloat(balance.available_balance)) {\n        return {\n          success: false,\n          error: 'insufficient_balance',\n          available_balance: balance.available_balance\n        };\n      }\n\n      // 检查最小兑换数量\n      if (amount < parseFloat(config.min_exchange_amount)) {\n        return {\n          success: false,\n          error: 'below_minimum',\n          min_required: config.min_exchange_amount\n        };\n      }\n\n      // 检查每日限额\n      const todayExchanged = dailyStats ? parseFloat(dailyStats.flowers_exchanged) : 0;\n      if (todayExchanged + amount > parseFloat(config.max_daily_exchange)) {\n        return {\n          success: false,\n          error: 'exceeds_daily_limit',\n          daily_limit: config.max_daily_exchange,\n          already_exchanged: todayExchanged.toString()\n        };\n      }\n\n      // 计算预估结果\n      const actualRate = parseFloat(config.base_exchange_rate) / parseFloat(config.bonus_multiplier);\n      const feeAmount = amount * parseFloat(config.fee_percentage) / 100;\n      const netFlowers = amount - feeAmount;\n      const smAmount = netFlowers / actualRate;\n\n      return {\n        success: true,\n        estimated_sm: smAmount.toString(),\n        exchange_rate: actualRate.toString(),\n        fee_amount: feeAmount.toString(),\n        net_flowers: netFlowers.toString(),\n        bonus_multiplier: config.bonus_multiplier,\n        remaining_daily_limit: (parseFloat(config.max_daily_exchange) - todayExchanged).toString()\n      };\n    } catch (error) {\n      console.error('获取兑换预估异常:', error);\n      return {\n        success: false,\n        error: 'estimation_failed'\n      };\n    }\n  }\n\n  /**\n   * 获取用户完整信息\n   */\n  static async getUserInfo(userWallet: string) {\n    try {\n      const [balance, tier, config, dailyStats, recentTransactions] = await Promise.all([\n        this.getUserBalance(userWallet),\n        this.getUserTier(userWallet),\n        this.getUserExchangeConfig(userWallet),\n        this.getUserDailyStats(userWallet),\n        this.getUserTransactions(userWallet, 10)\n      ]);\n\n      return {\n        balance,\n        tier,\n        config,\n        dailyStats,\n        recentTransactions,\n        summary: {\n          canExchange: balance && parseFloat(balance.available_balance) > 0,\n          tierLevel: tier?.tier_level || 'basic',\n          dailyRemaining: config && dailyStats \n            ? (parseFloat(config.max_daily_exchange) - parseFloat(dailyStats.flowers_exchanged || '0')).toString()\n            : config?.max_daily_exchange || '0'\n        }\n      };\n    } catch (error) {\n      console.error('获取用户完整信息异常:', error);\n      return null;\n    }\n  }\n}\n\nexport default RedFlowerExchangeService;\n"],"mappings":"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","ignoreList":[]}