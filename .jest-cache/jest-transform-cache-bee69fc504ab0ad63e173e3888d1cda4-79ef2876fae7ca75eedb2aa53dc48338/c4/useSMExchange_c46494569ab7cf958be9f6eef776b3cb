f6768ec82d9a3fc250ff1ddc3dd23012
'use client';
"use strict";

/* istanbul ignore next */
function cov_d4c3s0gg7() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/useSMExchange.ts";
  var hash = "1f779a54d4f89cd06f41efd3b7b116eea3c7a4bf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/useSMExchange.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "5": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "6": {
        start: {
          line: 16,
          column: 37
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "7": {
        start: {
          line: 18,
          column: 113
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "8": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 72
        }
      },
      "9": {
        start: {
          line: 26,
          column: 33
        },
        end: {
          line: 26,
          column: 77
        }
      },
      "10": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 71
        }
      },
      "11": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 69
        }
      },
      "12": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "13": {
        start: {
          line: 31,
          column: 109
        },
        end: {
          line: 39,
          column: 6
        }
      },
      "14": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 61
        }
      },
      "15": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "16": {
        start: {
          line: 43,
          column: 29
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "17": {
        start: {
          line: 44,
          column: 29
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "18": {
        start: {
          line: 46,
          column: 135
        },
        end: {
          line: 50,
          column: 6
        }
      },
      "19": {
        start: {
          line: 52,
          column: 77
        },
        end: {
          line: 54,
          column: 6
        }
      },
      "20": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "22": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 23
        }
      },
      "23": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "24": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 61,
          column: 61
        }
      },
      "25": {
        start: {
          line: 62,
          column: 32
        },
        end: {
          line: 62,
          column: 74
        }
      },
      "26": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "27": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "28": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 23
        }
      },
      "29": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "30": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 37
        }
      },
      "31": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 37
        }
      },
      "32": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "33": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 75,
          column: 15
        }
      },
      "34": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "35": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 44
        }
      },
      "36": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "37": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 111,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useSMExchange",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 22
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 34
          }
        },
        loc: {
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 29
          }
        },
        loc: {
          start: {
            line: 70,
            column: 47
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 70
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 25,
            column: 60
          }
        }, {
          start: {
            line: 25,
            column: 63
          },
          end: {
            line: 25,
            column: 72
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 26,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 49
          },
          end: {
            line: 26,
            column: 65
          }
        }, {
          start: {
            line: 26,
            column: 68
          },
          end: {
            line: 26,
            column: 77
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 27,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 27,
            column: 59
          }
        }, {
          start: {
            line: 27,
            column: 62
          },
          end: {
            line: 27,
            column: 71
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 28,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 28,
            column: 57
          }
        }, {
          start: {
            line: 28,
            column: 60
          },
          end: {
            line: 28,
            column: 69
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 29,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 43
          },
          end: {
            line: 29,
            column: 59
          }
        }, {
          start: {
            line: 29,
            column: 62
          },
          end: {
            line: 29,
            column: 71
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 14
          },
          end: {
            line: 37,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 21
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 28
          }
        }, {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 41
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 49
          }
        }, {
          start: {
            line: 41,
            column: 52
          },
          end: {
            line: 41,
            column: 61
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 42,
            column: 45
          }
        }, {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 42,
            column: 53
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 40
          },
          end: {
            line: 43,
            column: 59
          }
        }, {
          start: {
            line: 43,
            column: 62
          },
          end: {
            line: 43,
            column: 63
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 44,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 40
          },
          end: {
            line: 44,
            column: 51
          }
        }, {
          start: {
            line: 44,
            column: 54
          },
          end: {
            line: 44,
            column: 59
          }
        }],
        line: 44
      },
      "11": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 22
          }
        }, {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 57,
            column: 39
          }
        }, {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 57,
            column: 77
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "14": {
        loc: {
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 34
          }
        }, {
          start: {
            line: 102,
            column: 38
          },
          end: {
            line: 102,
            column: 55
          }
        }],
        line: 102
      },
      "15": {
        loc: {
          start: {
            line: 103,
            column: 27
          },
          end: {
            line: 103,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 27
          },
          end: {
            line: 103,
            column: 44
          }
        }, {
          start: {
            line: 103,
            column: 48
          },
          end: {
            line: 103,
            column: 67
          }
        }],
        line: 103
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/useSMExchange.ts"],
      sourcesContent: ["'use client';\n\nimport { useAccount, useContractRead, useContractWrite, useWaitForTransaction } from 'wagmi';\nimport { parseEther } from 'viem';\nimport { CONTRACT_ADDRESSES, SM_EXCHANGE_ABI } from '@/constants/contracts';\n\nexport function useSMExchange() {\n  const { address, isConnected } = useAccount();\n\n  // \u83B7\u53D6\u4EA4\u6613\u6240\u7EDF\u8BA1\u4FE1\u606F\n  const { \n    data: exchangeStats, \n    refetch: refetchExchangeStats,\n    isLoading: isLoadingStats,\n    error: statsError\n  } = useContractRead({\n    address: CONTRACT_ADDRESSES.exchange as `0x${string}`,\n    abi: SM_EXCHANGE_ABI,\n    functionName: 'getExchangeStats',\n    enabled: isConnected,\n  });\n\n  // \u89E3\u6790\u4EA4\u6613\u6240\u7EDF\u8BA1\u4FE1\u606F\n  const totalTokensSold = exchangeStats ? exchangeStats[0] : BigInt(0);\n  const totalTokensRemaining = exchangeStats ? exchangeStats[1] : BigInt(0);\n  const totalBnbRaised = exchangeStats ? exchangeStats[2] : BigInt(0);\n  const currentPrice = exchangeStats ? exchangeStats[3] : BigInt(0);\n  const nextRoundPrice = exchangeStats ? exchangeStats[4] : BigInt(0);\n\n  // \u83B7\u53D6\u7528\u6237\u6570\u636E\n  const { \n    data: userData, \n    refetch: refetchUserData,\n    isLoading: isLoadingUserData,\n    error: userDataError\n  } = useContractRead({\n    address: CONTRACT_ADDRESSES.exchange as `0x${string}`,\n    abi: SM_EXCHANGE_ABI,\n    functionName: 'userData',\n    args: address ? [address] : undefined,\n    enabled: isConnected && !!address,\n  });\n\n  // \u89E3\u6790\u7528\u6237\u6570\u636E\n  const totalPurchases = userData ? userData[0] : BigInt(0);\n  const isVerified = userData ? userData[1] : false;\n  const lastPurchaseTime = userData ? Number(userData[2]) : 0;\n  const hasRefundRequest = userData ? userData[3] : false;\n\n  // \u5151\u6362\u4EE3\u5E01\u51FD\u6570\n  const { \n    data: exchangeData,\n    write: exchangeTokens,\n    isLoading: isExchanging,\n    isSuccess: isExchangeSuccess,\n    error: exchangeError\n  } = useContractWrite({\n    address: CONTRACT_ADDRESSES.exchange as `0x${string}`,\n    abi: SM_EXCHANGE_ABI,\n    functionName: 'exchangeTokens',\n  });\n\n  // \u7B49\u5F85\u5151\u6362\u4EA4\u6613\u786E\u8BA4\n  const { \n    isLoading: isExchangePending,\n    isSuccess: isExchangeConfirmed\n  } = useWaitForTransaction({\n    hash: exchangeData?.hash,\n  });\n\n  // \u8BA1\u7B97BNB\u53EF\u83B7\u5F97\u7684\u4EE3\u5E01\u6570\u91CF\n  const calculateTokenAmount = (bnbAmount: string) => {\n    if (!bnbAmount || !currentPrice || BigInt(currentPrice) === BigInt(0)) {\n      return '0';\n    }\n    \n    try {\n      const bnbValue = parseEther(bnbAmount);\n      const tokenAmount = bnbValue * BigInt(10**18) / currentPrice;\n      return (Number(tokenAmount) / 10**18).toFixed(2);\n    } catch (error) {\n      console.error('\u8BA1\u7B97\u4EE3\u5E01\u6570\u91CF\u9519\u8BEF:', error);\n      return '0';\n    }\n  };\n\n  // \u6267\u884C\u5151\u6362\u4EE3\u5E01\n  const performExchange = async (bnbAmount: string) => {\n    if (!bnbAmount) return false;\n    \n    try {\n      exchangeTokens({\n        value: parseEther(bnbAmount),\n      });\n      return true;\n    } catch (error) {\n      console.error('\u5151\u6362\u4EE3\u5E01\u9519\u8BEF:', error);\n      return false;\n    }\n  };\n\n  return {\n    // \u4EA4\u6613\u6240\u72B6\u6001\n    totalTokensSold,\n    totalTokensRemaining,\n    totalBnbRaised,\n    currentPrice,\n    nextRoundPrice,\n    refetchExchangeStats,\n    isLoadingStats,\n    statsError,\n    \n    // \u7528\u6237\u6570\u636E\n    totalPurchases,\n    isVerified,\n    lastPurchaseTime,\n    hasRefundRequest,\n    refetchUserData,\n    isLoadingUserData,\n    userDataError,\n    \n    // \u5151\u6362\u529F\u80FD\n    exchangeTokens: performExchange,\n    isExchanging: isExchanging || isExchangePending,\n    isExchangeSuccess: isExchangeSuccess && isExchangeConfirmed,\n    exchangeError,\n    exchangeTxHash: exchangeData?.hash,\n    \n    // \u5DE5\u5177\u51FD\u6570\n    calculateTokenAmount,\n    \n    // \u8FDE\u63A5\u72B6\u6001\n    isConnected,\n    address\n  };\n}\n"],
      names: ["useSMExchange", "address", "isConnected", "useAccount", "data", "exchangeStats", "refetch", "refetchExchangeStats", "isLoading", "isLoadingStats", "error", "statsError", "useContractRead", "CONTRACT_ADDRESSES", "exchange", "abi", "SM_EXCHANGE_ABI", "functionName", "enabled", "totalTokensSold", "BigInt", "totalTokensRemaining", "totalBnbRaised", "currentPrice", "nextRoundPrice", "userData", "refetchUserData", "isLoadingUserData", "userDataError", "args", "undefined", "totalPurchases", "isVerified", "lastPurchaseTime", "Number", "hasRefundRequest", "exchangeData", "write", "exchangeTokens", "isExchanging", "isSuccess", "isExchangeSuccess", "exchangeError", "useContractWrite", "isExchangePending", "isExchangeConfirmed", "useWaitForTransaction", "hash", "calculateTokenAmount", "bnbAmount", "bnbValue", "parseEther", "tokenAmount", "toFixed", "console", "performExchange", "value", "exchangeTxHash"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1f779a54d4f89cd06f41efd3b7b116eea3c7a4bf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_d4c3s0gg7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_d4c3s0gg7();
cov_d4c3s0gg7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_d4c3s0gg7().s[1]++;
Object.defineProperty(exports, "useSMExchange", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_d4c3s0gg7().f[0]++;
    cov_d4c3s0gg7().s[2]++;
    return useSMExchange;
  }
});
const _wagmi =
/* istanbul ignore next */
(cov_d4c3s0gg7().s[3]++, require("wagmi"));
const _viem =
/* istanbul ignore next */
(cov_d4c3s0gg7().s[4]++, require("viem"));
const _contracts =
/* istanbul ignore next */
(cov_d4c3s0gg7().s[5]++, require("./constants/contracts"));
function useSMExchange() {
  /* istanbul ignore next */
  cov_d4c3s0gg7().f[1]++;
  const {
    address,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[6]++, (0, _wagmi.useAccount)());
  // 获取交易所统计信息
  const {
    data: exchangeStats,
    refetch: refetchExchangeStats,
    isLoading: isLoadingStats,
    error: statsError
  } =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[7]++, (0, _wagmi.useContractRead)({
    address: _contracts.CONTRACT_ADDRESSES.exchange,
    abi: _contracts.SM_EXCHANGE_ABI,
    functionName: 'getExchangeStats',
    enabled: isConnected
  }));
  // 解析交易所统计信息
  const totalTokensSold =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[8]++, exchangeStats ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[0][0]++, exchangeStats[0]) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[0][1]++, BigInt(0)));
  const totalTokensRemaining =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[9]++, exchangeStats ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[1][0]++, exchangeStats[1]) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[1][1]++, BigInt(0)));
  const totalBnbRaised =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[10]++, exchangeStats ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[2][0]++, exchangeStats[2]) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[2][1]++, BigInt(0)));
  const currentPrice =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[11]++, exchangeStats ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[3][0]++, exchangeStats[3]) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[3][1]++, BigInt(0)));
  const nextRoundPrice =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[12]++, exchangeStats ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[4][0]++, exchangeStats[4]) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[4][1]++, BigInt(0)));
  // 获取用户数据
  const {
    data: userData,
    refetch: refetchUserData,
    isLoading: isLoadingUserData,
    error: userDataError
  } =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[13]++, (0, _wagmi.useContractRead)({
    address: _contracts.CONTRACT_ADDRESSES.exchange,
    abi: _contracts.SM_EXCHANGE_ABI,
    functionName: 'userData',
    args: address ?
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[5][0]++, [address]) :
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[5][1]++, undefined),
    enabled:
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[6][0]++, isConnected) &&
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[6][1]++, !!address)
  }));
  // 解析用户数据
  const totalPurchases =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[14]++, userData ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[7][0]++, userData[0]) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[7][1]++, BigInt(0)));
  const isVerified =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[15]++, userData ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[8][0]++, userData[1]) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[8][1]++, false));
  const lastPurchaseTime =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[16]++, userData ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[9][0]++, Number(userData[2])) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[9][1]++, 0));
  const hasRefundRequest =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[17]++, userData ?
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[10][0]++, userData[3]) :
  /* istanbul ignore next */
  (cov_d4c3s0gg7().b[10][1]++, false));
  // 兑换代币函数
  const {
    data: exchangeData,
    write: exchangeTokens,
    isLoading: isExchanging,
    isSuccess: isExchangeSuccess,
    error: exchangeError
  } =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[18]++, (0, _wagmi.useContractWrite)({
    address: _contracts.CONTRACT_ADDRESSES.exchange,
    abi: _contracts.SM_EXCHANGE_ABI,
    functionName: 'exchangeTokens'
  }));
  // 等待兑换交易确认
  const {
    isLoading: isExchangePending,
    isSuccess: isExchangeConfirmed
  } =
  /* istanbul ignore next */
  (cov_d4c3s0gg7().s[19]++, (0, _wagmi.useWaitForTransaction)({
    hash: exchangeData?.hash
  }));
  // 计算BNB可获得的代币数量
  /* istanbul ignore next */
  cov_d4c3s0gg7().s[20]++;
  const calculateTokenAmount = bnbAmount => {
    /* istanbul ignore next */
    cov_d4c3s0gg7().f[2]++;
    cov_d4c3s0gg7().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[12][0]++, !bnbAmount) ||
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[12][1]++, !currentPrice) ||
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[12][2]++, BigInt(currentPrice) === BigInt(0))) {
      /* istanbul ignore next */
      cov_d4c3s0gg7().b[11][0]++;
      cov_d4c3s0gg7().s[22]++;
      return '0';
    } else
    /* istanbul ignore next */
    {
      cov_d4c3s0gg7().b[11][1]++;
    }
    cov_d4c3s0gg7().s[23]++;
    try {
      const bnbValue =
      /* istanbul ignore next */
      (cov_d4c3s0gg7().s[24]++, (0, _viem.parseEther)(bnbAmount));
      const tokenAmount =
      /* istanbul ignore next */
      (cov_d4c3s0gg7().s[25]++, bnbValue * BigInt(10 ** 18) / currentPrice);
      /* istanbul ignore next */
      cov_d4c3s0gg7().s[26]++;
      return (Number(tokenAmount) / 10 ** 18).toFixed(2);
    } catch (error) {
      /* istanbul ignore next */
      cov_d4c3s0gg7().s[27]++;
      console.error('计算代币数量错误:', error);
      /* istanbul ignore next */
      cov_d4c3s0gg7().s[28]++;
      return '0';
    }
  };
  // 执行兑换代币
  /* istanbul ignore next */
  cov_d4c3s0gg7().s[29]++;
  const performExchange = async bnbAmount => {
    /* istanbul ignore next */
    cov_d4c3s0gg7().f[3]++;
    cov_d4c3s0gg7().s[30]++;
    if (!bnbAmount) {
      /* istanbul ignore next */
      cov_d4c3s0gg7().b[13][0]++;
      cov_d4c3s0gg7().s[31]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_d4c3s0gg7().b[13][1]++;
    }
    cov_d4c3s0gg7().s[32]++;
    try {
      /* istanbul ignore next */
      cov_d4c3s0gg7().s[33]++;
      exchangeTokens({
        value: (0, _viem.parseEther)(bnbAmount)
      });
      /* istanbul ignore next */
      cov_d4c3s0gg7().s[34]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_d4c3s0gg7().s[35]++;
      console.error('兑换代币错误:', error);
      /* istanbul ignore next */
      cov_d4c3s0gg7().s[36]++;
      return false;
    }
  };
  /* istanbul ignore next */
  cov_d4c3s0gg7().s[37]++;
  return {
    // 交易所状态
    totalTokensSold,
    totalTokensRemaining,
    totalBnbRaised,
    currentPrice,
    nextRoundPrice,
    refetchExchangeStats,
    isLoadingStats,
    statsError,
    // 用户数据
    totalPurchases,
    isVerified,
    lastPurchaseTime,
    hasRefundRequest,
    refetchUserData,
    isLoadingUserData,
    userDataError,
    // 兑换功能
    exchangeTokens: performExchange,
    isExchanging:
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[14][0]++, isExchanging) ||
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[14][1]++, isExchangePending),
    isExchangeSuccess:
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[15][0]++, isExchangeSuccess) &&
    /* istanbul ignore next */
    (cov_d4c3s0gg7().b[15][1]++, isExchangeConfirmed),
    exchangeError,
    exchangeTxHash: exchangeData?.hash,
    // 工具函数
    calculateTokenAmount,
    // 连接状态
    isConnected,
    address
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,