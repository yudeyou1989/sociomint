9185e113b25604ebad1aface0897965d
'use client';
"use strict";

/* istanbul ignore next */
function cov_2e9w7anruz() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx";
  var hash = "5a2832547d1298328bbb9872c703560732db6721";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "9": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 103
        }
      },
      "10": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 85
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "13": {
        start: {
          line: 31,
          column: 39
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "14": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "15": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 19
        }
      },
      "20": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "22": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "23": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "24": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "25": {
        start: {
          line: 51,
          column: 17
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "26": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 54,
          column: 88
        }
      },
      "27": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "28": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "29": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 95
        }
      },
      "30": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "31": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "32": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "33": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "34": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "35": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "36": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "37": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 24
        }
      },
      "38": {
        start: {
          line: 73,
          column: 27
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "39": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 89,
          column: 1
        }
      },
      "40": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 51
        }
      },
      "41": {
        start: {
          line: 75,
          column: 39
        },
        end: {
          line: 75,
          column: 51
        }
      },
      "42": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "43": {
        start: {
          line: 77,
          column: 23
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "44": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 58
        }
      },
      "45": {
        start: {
          line: 79,
          column: 30
        },
        end: {
          line: 79,
          column: 58
        }
      },
      "46": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "47": {
        start: {
          line: 80,
          column: 68
        },
        end: {
          line: 80,
          column: 131
        }
      },
      "48": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 32
        }
      },
      "49": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 23
        }
      },
      "50": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 63
        }
      },
      "51": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 36
        }
      },
      "52": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 20
        }
      },
      "53": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 32
        }
      },
      "54": {
        start: {
          line: 91,
          column: 15
        },
        end: {
          line: 93,
          column: 2
        }
      },
      "55": {
        start: {
          line: 95,
          column: 27
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "56": {
        start: {
          line: 99,
          column: 32
        },
        end: {
          line: 118,
          column: 1
        }
      },
      "57": {
        start: {
          line: 119,
          column: 36
        },
        end: {
          line: 128,
          column: 2
        }
      },
      "58": {
        start: {
          line: 130,
          column: 32
        },
        end: {
          line: 132,
          column: 1
        }
      },
      "59": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 83
        }
      },
      "60": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 139,
          column: 1
        }
      },
      "61": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "62": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 44
        }
      },
      "63": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 63
        }
      },
      "64": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 184,
          column: 1
        }
      },
      "65": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "66": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "67": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 50
        }
      },
      "68": {
        start: {
          line: 147,
          column: 25
        },
        end: {
          line: 147,
          column: 46
        }
      },
      "69": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 55
        }
      },
      "70": {
        start: {
          line: 149,
          column: 23
        },
        end: {
          line: 149,
          column: 49
        }
      },
      "71": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 49
        }
      },
      "72": {
        start: {
          line: 151,
          column: 28
        },
        end: {
          line: 151,
          column: 55
        }
      },
      "73": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 152,
          column: 51
        }
      },
      "74": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 60
        }
      },
      "75": {
        start: {
          line: 156,
          column: 27
        },
        end: {
          line: 156,
          column: 61
        }
      },
      "76": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 27
        }
      },
      "77": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "78": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 80
        }
      },
      "79": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 46
        }
      },
      "80": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "81": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "82": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 40
        }
      },
      "83": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 20
        }
      },
      "84": {
        start: {
          line: 186,
          column: 32
        },
        end: {
          line: 186,
          column: 72
        }
      },
      "85": {
        start: {
          line: 187,
          column: 44
        },
        end: {
          line: 187,
          column: 71
        }
      },
      "86": {
        start: {
          line: 188,
          column: 52
        },
        end: {
          line: 188,
          column: 97
        }
      },
      "87": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "88": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 30
        }
      },
      "89": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "90": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 198,
          column: 15
        }
      },
      "91": {
        start: {
          line: 199,
          column: 36
        },
        end: {
          line: 199,
          column: 59
        }
      },
      "92": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 39
        }
      },
      "93": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "94": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "95": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 35
        }
      },
      "96": {
        start: {
          line: 221,
          column: 26
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "97": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "98": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 226,
          column: 15
        }
      },
      "99": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 19
        }
      },
      "100": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 30
        }
      },
      "101": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "102": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 236,
          column: 15
        }
      },
      "103": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 241,
          column: 14
        }
      },
      "104": {
        start: {
          line: 240,
          column: 41
        },
        end: {
          line: 240,
          column: 93
        }
      },
      "105": {
        start: {
          line: 240,
          column: 56
        },
        end: {
          line: 240,
          column: 85
        }
      },
      "106": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "107": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 44
        }
      },
      "108": {
        start: {
          line: 246,
          column: 27
        },
        end: {
          line: 249,
          column: 14
        }
      },
      "109": {
        start: {
          line: 248,
          column: 41
        },
        end: {
          line: 248,
          column: 91
        }
      },
      "110": {
        start: {
          line: 248,
          column: 56
        },
        end: {
          line: 248,
          column: 83
        }
      },
      "111": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "112": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 51
        }
      },
      "113": {
        start: {
          line: 253,
          column: 41
        },
        end: {
          line: 253,
          column: 47
        }
      },
      "114": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 263,
          column: 13
        }
      },
      "115": {
        start: {
          line: 256,
          column: 33
        },
        end: {
          line: 256,
          column: 62
        }
      },
      "116": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 68
        }
      },
      "117": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 261,
          column: 19
        }
      },
      "118": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 274,
          column: 13
        }
      },
      "119": {
        start: {
          line: 267,
          column: 33
        },
        end: {
          line: 267,
          column: 62
        }
      },
      "120": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 64
        }
      },
      "121": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 272,
          column: 19
        }
      },
      "122": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 32
        }
      },
      "123": {
        start: {
          line: 275,
          column: 28
        },
        end: {
          line: 275,
          column: 31
        }
      },
      "124": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "125": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 84
        }
      },
      "126": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 281,
          column: 19
        }
      },
      "127": {
        start: {
          line: 283,
          column: 28
        },
        end: {
          line: 286,
          column: 13
        }
      },
      "128": {
        start: {
          line: 287,
          column: 36
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "129": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 39
        }
      },
      "130": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 307,
          column: 15
        }
      },
      "131": {
        start: {
          line: 309,
          column: 33
        },
        end: {
          line: 309,
          column: 80
        }
      },
      "132": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 316,
          column: 15
        }
      },
      "133": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 42
        }
      },
      "134": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 62
        }
      },
      "135": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 35
        }
      },
      "136": {
        start: {
          line: 326,
          column: 23
        },
        end: {
          line: 349,
          column: 5
        }
      },
      "137": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "138": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 330,
          column: 15
        }
      },
      "139": {
        start: {
          line: 332,
          column: 31
        },
        end: {
          line: 332,
          column: 55
        }
      },
      "140": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 335,
          column: 13
        }
      },
      "141": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 58
        }
      },
      "142": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 42
        }
      },
      "143": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 340,
          column: 15
        }
      },
      "144": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 347,
          column: 15
        }
      },
      "145": {
        start: {
          line: 351,
          column: 29
        },
        end: {
          line: 353,
          column: 5
        }
      },
      "146": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 28
        }
      },
      "147": {
        start: {
          line: 355,
          column: 27
        },
        end: {
          line: 379,
          column: 5
        }
      },
      "148": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 59
        }
      },
      "149": {
        start: {
          line: 356,
          column: 52
        },
        end: {
          line: 356,
          column: 59
        }
      },
      "150": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "151": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 35
        }
      },
      "152": {
        start: {
          line: 360,
          column: 29
        },
        end: {
          line: 360,
          column: 50
        }
      },
      "153": {
        start: {
          line: 361,
          column: 31
        },
        end: {
          line: 361,
          column: 72
        }
      },
      "154": {
        start: {
          line: 362,
          column: 28
        },
        end: {
          line: 362,
          column: 31
        }
      },
      "155": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 367,
          column: 13
        }
      },
      "156": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 91
        }
      },
      "157": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 50
        }
      },
      "158": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 374,
          column: 20
        }
      },
      "159": {
        start: {
          line: 368,
          column: 31
        },
        end: {
          line: 374,
          column: 17
        }
      },
      "160": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 33
        }
      },
      "161": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 44
        }
      },
      "162": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 392,
          column: 7
        }
      },
      "163": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 395,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 16
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 47
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 40
          }
        },
        loc: {
          start: {
            line: 34,
            column: 61
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 34
          }
        },
        loc: {
          start: {
            line: 38,
            column: 53
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 27
          }
        },
        loc: {
          start: {
            line: 74,
            column: 36
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 74
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 80,
            column: 51
          }
        },
        loc: {
          start: {
            line: 80,
            column: 68
          },
          end: {
            line: 80,
            column: 131
          }
        },
        line: 80
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 80,
            column: 138
          },
          end: {
            line: 80,
            column: 139
          }
        },
        loc: {
          start: {
            line: 80,
            column: 149
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 80
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 83,
            column: 13
          },
          end: {
            line: 83,
            column: 14
          }
        },
        loc: {
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 83
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 121,
            column: 13
          },
          end: {
            line: 121,
            column: 14
          }
        },
        loc: {
          start: {
            line: 121,
            column: 23
          },
          end: {
            line: 121,
            column: 25
          }
        },
        line: 121
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        },
        loc: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 28
          }
        },
        line: 122
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 123,
            column: 20
          },
          end: {
            line: 123,
            column: 21
          }
        },
        loc: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 32
          }
        },
        line: 123
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 20
          }
        },
        loc: {
          start: {
            line: 124,
            column: 29
          },
          end: {
            line: 124,
            column: 31
          }
        },
        line: 124
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 125,
            column: 23
          }
        },
        loc: {
          start: {
            line: 125,
            column: 32
          },
          end: {
            line: 125,
            column: 34
          }
        },
        line: 125
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 33
          }
        },
        loc: {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 130
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 134,
            column: 28
          },
          end: {
            line: 134,
            column: 29
          }
        },
        loc: {
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 134
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 141,
            column: 24
          },
          end: {
            line: 141,
            column: 25
          }
        },
        loc: {
          start: {
            line: 141,
            column: 34
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 141
      },
      "19": {
        name: "WalletProvider",
        decl: {
          start: {
            line: 185,
            column: 9
          },
          end: {
            line: 185,
            column: 23
          }
        },
        loc: {
          start: {
            line: 185,
            column: 38
          },
          end: {
            line: 393,
            column: 1
          }
        },
        line: 185
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 190,
            column: 20
          },
          end: {
            line: 190,
            column: 21
          }
        },
        loc: {
          start: {
            line: 190,
            column: 34
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 190
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 221,
            column: 26
          },
          end: {
            line: 221,
            column: 27
          }
        },
        loc: {
          start: {
            line: 221,
            column: 40
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 221
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 240,
            column: 28
          },
          end: {
            line: 240,
            column: 29
          }
        },
        loc: {
          start: {
            line: 240,
            column: 41
          },
          end: {
            line: 240,
            column: 93
          }
        },
        line: 240
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 240,
            column: 52
          },
          end: {
            line: 240,
            column: 53
          }
        },
        loc: {
          start: {
            line: 240,
            column: 56
          },
          end: {
            line: 240,
            column: 85
          }
        },
        line: 240
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 248,
            column: 28
          },
          end: {
            line: 248,
            column: 29
          }
        },
        loc: {
          start: {
            line: 248,
            column: 41
          },
          end: {
            line: 248,
            column: 91
          }
        },
        line: 248
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 248,
            column: 52
          },
          end: {
            line: 248,
            column: 53
          }
        },
        loc: {
          start: {
            line: 248,
            column: 56
          },
          end: {
            line: 248,
            column: 83
          }
        },
        line: 248
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 326,
            column: 23
          },
          end: {
            line: 326,
            column: 24
          }
        },
        loc: {
          start: {
            line: 326,
            column: 33
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 326
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 351,
            column: 29
          },
          end: {
            line: 351,
            column: 30
          }
        },
        loc: {
          start: {
            line: 351,
            column: 39
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 351
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 355,
            column: 27
          },
          end: {
            line: 355,
            column: 28
          }
        },
        loc: {
          start: {
            line: 355,
            column: 37
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 355
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 368,
            column: 22
          },
          end: {
            line: 368,
            column: 23
          }
        },
        loc: {
          start: {
            line: 368,
            column: 31
          },
          end: {
            line: 374,
            column: 17
          }
        },
        line: 368
      },
      "30": {
        name: "useWallet",
        decl: {
          start: {
            line: 394,
            column: 9
          },
          end: {
            line: 394,
            column: 18
          }
        },
        loc: {
          start: {
            line: 394,
            column: 21
          },
          end: {
            line: 396,
            column: 1
          }
        },
        line: 394
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 45
          }
        }, {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 35,
            column: 65
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 27
          }
        }, {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 45
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 47
          }
        }, {
          start: {
            line: 42,
            column: 51
          },
          end: {
            line: 42,
            column: 76
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 31
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 53
          }
        }, {
          start: {
            line: 54,
            column: 57
          },
          end: {
            line: 54,
            column: 88
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 29
          }
        }, {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 79
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 47
          },
          end: {
            line: 57,
            column: 88
          }
        }, {
          start: {
            line: 57,
            column: 91
          },
          end: {
            line: 57,
            column: 95
          }
        }],
        line: 57
      },
      "14": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 62,
            column: 13
          }
        }],
        line: 58
      },
      "15": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 20
          }
        }, {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 33
          }
        }, {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 45
          }
        }],
        line: 58
      },
      "16": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "17": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "18": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "19": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "20": {
        loc: {
          start: {
            line: 131,
            column: 11
          },
          end: {
            line: 131,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 11
          },
          end: {
            line: 131,
            column: 40
          }
        }, {
          start: {
            line: 131,
            column: 44
          },
          end: {
            line: 131,
            column: 82
          }
        }],
        line: 131
      },
      "21": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "22": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 135,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 135,
            column: 37
          }
        }, {
          start: {
            line: 135,
            column: 41
          },
          end: {
            line: 135,
            column: 57
          }
        }],
        line: 135
      },
      "23": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "24": {
        loc: {
          start: {
            line: 165,
            column: 18
          },
          end: {
            line: 165,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 35
          },
          end: {
            line: 165,
            column: 52
          }
        }, {
          start: {
            line: 165,
            column: 55
          },
          end: {
            line: 165,
            column: 117
          }
        }],
        line: 165
      },
      "25": {
        loc: {
          start: {
            line: 165,
            column: 55
          },
          end: {
            line: 165,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 72
          },
          end: {
            line: 165,
            column: 97
          }
        }, {
          start: {
            line: 165,
            column: 100
          },
          end: {
            line: 165,
            column: 117
          }
        }],
        line: 165
      },
      "26": {
        loc: {
          start: {
            line: 193,
            column: 24
          },
          end: {
            line: 193,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 31
          },
          end: {
            line: 193,
            column: 51
          }
        }, {
          start: {
            line: 193,
            column: 54
          },
          end: {
            line: 193,
            column: 63
          }
        }],
        line: 193
      },
      "27": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "28": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "29": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "30": {
        loc: {
          start: {
            line: 283,
            column: 28
          },
          end: {
            line: 286,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 28
          },
          end: {
            line: 283,
            column: 59
          }
        }, {
          start: {
            line: 283,
            column: 63
          },
          end: {
            line: 286,
            column: 13
          }
        }],
        line: 283
      },
      "31": {
        loc: {
          start: {
            line: 285,
            column: 22
          },
          end: {
            line: 285,
            column: 142
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 39
          },
          end: {
            line: 285,
            column: 52
          }
        }, {
          start: {
            line: 285,
            column: 55
          },
          end: {
            line: 285,
            column: 142
          }
        }],
        line: 285
      },
      "32": {
        loc: {
          start: {
            line: 285,
            column: 55
          },
          end: {
            line: 285,
            column: 142
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 72
          },
          end: {
            line: 285,
            column: 85
          }
        }, {
          start: {
            line: 285,
            column: 88
          },
          end: {
            line: 285,
            column: 142
          }
        }],
        line: 285
      },
      "33": {
        loc: {
          start: {
            line: 285,
            column: 88
          },
          end: {
            line: 285,
            column: 142
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 104
          },
          end: {
            line: 285,
            column: 122
          }
        }, {
          start: {
            line: 285,
            column: 125
          },
          end: {
            line: 285,
            column: 142
          }
        }],
        line: 285
      },
      "34": {
        loc: {
          start: {
            line: 309,
            column: 33
          },
          end: {
            line: 309,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 309,
            column: 58
          },
          end: {
            line: 309,
            column: 71
          }
        }, {
          start: {
            line: 309,
            column: 74
          },
          end: {
            line: 309,
            column: 80
          }
        }],
        line: 309
      },
      "35": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 335,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 335,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "36": {
        loc: {
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 356,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 356,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "37": {
        loc: {
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 31
          }
        }, {
          start: {
            line: 356,
            column: 35
          },
          end: {
            line: 356,
            column: 50
          }
        }],
        line: 356
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx"],
      sourcesContent: ["'use client';\n\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { ethers, formatEther } from 'ethers';\nimport contractService from '@/services/contractService';\nimport Logger from '@/services/logger';\nimport config from '@/lib/config';\n\n// \u52A8\u6001\u5BFC\u5165\u94B1\u5305\u670D\u52A1\u4EE5\u907F\u514DSSR\u95EE\u9898\nlet walletService: any = null;\nlet walletServicePromise: Promise<any> | null = null;\n\nconst loadWalletService = async () => {\n  if (typeof window === 'undefined') return null;\n\n  // \u907F\u514D\u91CD\u590D\u52A0\u8F7D\n  if (walletService) return walletService;\n\n  // \u5982\u679C\u6B63\u5728\u52A0\u8F7D\uFF0C\u8FD4\u56DE\u73B0\u6709\u7684Promise\n  if (walletServicePromise) return walletServicePromise;\n\n  walletServicePromise = import('@/services/walletService').then(service => {\n    walletService = service;\n    return service;\n  }).catch(error => {\n    console.error('Failed to load wallet service:', error);\n    walletServicePromise = null; // \u91CD\u7F6EPromise\u4EE5\u5141\u8BB8\u91CD\u8BD5\n    throw error;\n  });\n\n  return walletServicePromise;\n};\n\n// \u521B\u5EFA\u65E5\u5FD7\u8BB0\u5F55\u5668\nconst logger = Logger.createContextLogger({ component: 'WalletContext' });\n\n// \u94B1\u5305\u72B6\u6001\u63A5\u53E3\nexport interface WalletState {\n  isConnected: boolean;\n  address?: string;\n  chainId?: number;\n  balance?: {\n    bnb: string;\n    sm?: string;\n    flowers?: string;\n  };\n  network?: {\n    id: number;\n    name: string;\n  };\n  account?: {\n    address: string;\n  };\n}\n\n// \u53EF\u7528\u94B1\u5305\u63A5\u53E3\nexport interface AvailableWallet {\n  type: WalletType;\n  name: string;\n  icon: string;\n  installed: boolean;\n}\n\n// \u94B1\u5305\u4E0A\u4E0B\u6587\u63A5\u53E3\ninterface WalletContextType {\n  wallet: WalletState;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  updateBalances: () => Promise<void>;\n  connectWallet: (type: WalletType) => Promise<void>;\n  disconnectWallet: () => Promise<void>;\n  isConnecting: boolean;\n  availableWallets: AvailableWallet[];\n}\n\n// \u521B\u5EFA\u4E0A\u4E0B\u6587\uFF0C\u63D0\u4F9B\u9ED8\u8BA4\u503C\nconst defaultWalletState: WalletState = {\n  isConnected: false,\n};\n\n// \u9ED8\u8BA4\u53EF\u7528\u94B1\u5305\u5217\u8868\nconst defaultAvailableWallets: AvailableWallet[] = [\n  {\n    type: 'metamask',\n    name: 'MetaMask',\n    icon: '/images/wallets/metamask.svg',\n    installed: true\n  },\n  {\n    type: 'coinbase',\n    name: 'Coinbase Wallet',\n    icon: '/images/wallets/coinbase.svg',\n    installed: true\n  },\n  {\n    type: 'walletconnect',\n    name: 'WalletConnect',\n    icon: '/images/wallets/walletconnect.svg',\n    installed: true\n  }\n];\n\nconst WalletContext = createContext<WalletContextType>({\n  wallet: defaultWalletState,\n  connect: async () => {},\n  disconnect: async () => {},\n  updateBalances: async () => {},\n  connectWallet: async () => {},\n  disconnectWallet: async () => {},\n  isConnecting: false,\n  availableWallets: defaultAvailableWallets,\n});\n\n// \u94B1\u5305\u63D0\u4F9B\u8005Props\ninterface WalletProviderProps {\n  children: ReactNode;\n}\n\n// \u68C0\u67E5\u6D4F\u89C8\u5668\u662F\u5426\u6709MetaMask\u6216\u5176\u4ED6\u4EE5\u592A\u574A\u63D0\u4F9B\u8005\nconst checkIfBrowserHasWallet = (): boolean => {\n  return typeof window !== 'undefined' && typeof window.ethereum !== 'undefined';\n};\n\n// \u83B7\u53D6\u4EE5\u592A\u574A\u63D0\u4F9B\u8005\nconst getEthereumProvider = (): ethers.BrowserProvider => {\n  if (typeof window === 'undefined' || !window.ethereum) {\n    throw new Error('\u6CA1\u6709\u68C0\u6D4B\u5230Ethereum\u63D0\u4F9B\u8005');\n  }\n  return new ethers.BrowserProvider(window.ethereum as any);\n};\n\n// \u8FDE\u63A5\u5230\u4EE5\u592A\u574A\u94B1\u5305\nconst connectToWallet = async (): Promise<WalletState> => {\n  try {\n    if (!checkIfBrowserHasWallet()) {\n      throw new Error('\u8BF7\u5B89\u88C5MetaMask\u6216\u5176\u4ED6\u94B1\u5305\u6269\u5C55');\n    }\n\n    // \u8BF7\u6C42\u7528\u6237\u6388\u6743\u8FDE\u63A5\u94B1\u5305\n    const provider = getEthereumProvider();\n    await provider.send('eth_requestAccounts', []);\n\n    const signer = await provider.getSigner();\n    const address = await signer.getAddress();\n    const networkInfo = await provider.getNetwork();\n    const chainId = Number(networkInfo.chainId);\n\n    // \u521D\u59CB\u5316\u5408\u7EA6\u670D\u52A1\n    await contractService.initialize(provider);\n\n    // \u83B7\u53D6\u4F59\u989D\u4FE1\u606F\n    const bnbBalance = await provider.getBalance(address);\n\n    let smBalance = '0';\n    try {\n      smBalance = await contractService.getTokenBalance(address);\n    } catch (error) {\n      console.warn('\u83B7\u53D6SM\u4EE3\u5E01\u4F59\u989D\u5931\u8D25', error);\n    }\n\n    const network = {\n      id: chainId,\n      name: chainId === 56 ? 'BNB Smart Chain' :\n           chainId === 97 ? 'BNB Smart Chain Testnet' :\n           'Unknown Network'\n    };\n\n    return {\n      isConnected: true,\n      address,\n      chainId,\n      balance: {\n        bnb: formatEther(bnbBalance),\n        sm: smBalance\n      },\n      network,\n      account: { address }\n    };\n  } catch (error) {\n    console.error('\u8FDE\u63A5\u94B1\u5305\u5931\u8D25:', error);\n    throw error;\n  }\n};\n\n// \u94B1\u5305\u63D0\u4F9B\u8005\u7EC4\u4EF6\nexport function WalletProvider({ children }: WalletProviderProps) {\n  const [wallet, setWallet] = useState<WalletState>(defaultWalletState);\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const [availableWallets, setAvailableWallets] = useState<AvailableWallet[]>(defaultAvailableWallets);\n\n  // \u8FDE\u63A5\u94B1\u5305 - \u7EDF\u4E00\u7684\u8FDE\u63A5\u51FD\u6570\n  const connect = async (type?: WalletType) => {\n    setIsConnecting(true);\n    try {\n      logger.info(type ? `\u6B63\u5728\u8FDE\u63A5 ${type} \u94B1\u5305...` : '\u8FDE\u63A5\u94B1\u5305...', {\n        action: 'connect',\n        additionalData: { walletType: type }\n      });\n\n      const connectedWallet = await connectToWallet();\n      setWallet(connectedWallet);\n\n      logger.info('\u94B1\u5305\u5DF2\u8FDE\u63A5', {\n        action: 'connect',\n        additionalData: { address: connectedWallet.address, walletType: type }\n      });\n    } catch (error) {\n      logger.error('\u8FDE\u63A5\u94B1\u5305\u5931\u8D25', {\n        action: 'connect',\n        additionalData: { error, walletType: type }\n      });\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // \u6309\u7C7B\u578B\u8FDE\u63A5\u94B1\u5305 - \u4E3A\u4E86\u4FDD\u6301API\u517C\u5BB9\u6027\n  const connectWallet = async (type: WalletType) => {\n    if (isConnecting) {\n      logger.warn('\u94B1\u5305\u8FDE\u63A5\u5DF2\u5728\u8FDB\u884C\u4E2D', { action: 'connectWallet', walletType: type });\n      return;\n    }\n\n    setIsConnecting(true);\n\n    try {\n      logger.info(`\u6B63\u5728\u8FDE\u63A5 ${type} \u94B1\u5305...`, {\n        action: 'connectWallet',\n        additionalData: { walletType: type }\n      });\n\n      // \u52A0\u8F7D\u94B1\u5305\u670D\u52A1\uFF0C\u589E\u52A0\u8D85\u65F6\u5904\u7406\n      const service = await Promise.race([\n        loadWalletService(),\n        new Promise((_, reject) =>\n          setTimeout(() => reject(new Error('\u94B1\u5305\u670D\u52A1\u52A0\u8F7D\u8D85\u65F6')), 10000)\n        )\n      ]);\n\n      if (!service) {\n        throw new Error('\u94B1\u5305\u670D\u52A1\u52A0\u8F7D\u5931\u8D25');\n      }\n\n      // \u4F7F\u7528\u94B1\u5305\u670D\u52A1\u8FDE\u63A5\u6307\u5B9A\u7C7B\u578B\u7684\u94B1\u5305\uFF0C\u589E\u52A0\u8D85\u65F6\u5904\u7406\n      const result = await Promise.race([\n        service.connectWalletByType(type),\n        new Promise((_, reject) =>\n          setTimeout(() => reject(new Error('\u94B1\u5305\u8FDE\u63A5\u8D85\u65F6')), 30000)\n        )\n      ]);\n\n      if (!result) {\n        throw new Error(`\u8FDE\u63A5 ${type} \u94B1\u5305\u5931\u8D25`);\n      }\n\n      const { address, chainId } = result;\n\n      // \u521D\u59CB\u5316\u5408\u7EA6\u670D\u52A1\n      try {\n        const provider = service.getEthereumProvider();\n        await contractService.initialize(provider);\n      } catch (error) {\n        logger.warn('\u5408\u7EA6\u670D\u52A1\u521D\u59CB\u5316\u5931\u8D25', { error });\n        // \u7EE7\u7EED\u6267\u884C\uFF0C\u4E0D\u963B\u65AD\u94B1\u5305\u8FDE\u63A5\n      }\n\n      // \u83B7\u53D6\u4F59\u989D\u4FE1\u606F\uFF0C\u589E\u52A0\u9519\u8BEF\u5904\u7406\n      let bnbBalance;\n      try {\n        const provider = service.getEthereumProvider();\n        bnbBalance = await provider.getBalance(address);\n      } catch (error) {\n        logger.warn('\u83B7\u53D6BNB\u4F59\u989D\u5931\u8D25', { error });\n        bnbBalance = 0n;\n      }\n\n      let smBalance = '0';\n      try {\n        smBalance = await contractService.getTokenBalance(address);\n      } catch (error) {\n        logger.warn('\u83B7\u53D6SM\u4EE3\u5E01\u4F59\u989D\u5931\u8D25', { error });\n      }\n\n      const network = service.getNetworkInfo(chainId) || {\n        id: chainId,\n        name: chainId === 56 ? 'BSC Mainnet' :\n              chainId === 97 ? 'BSC Testnet' :\n              chainId === 1 ? 'Ethereum Mainnet' :\n              'Unknown Network'\n      };\n\n      const connectedWallet: WalletState = {\n        isConnected: true,\n        address,\n        chainId,\n        balance: {\n          bnb: formatEther(bnbBalance),\n          sm: smBalance\n        },\n        network,\n        account: { address }\n      };\n\n      setWallet(connectedWallet);\n\n      logger.info('\u94B1\u5305\u5DF2\u8FDE\u63A5', {\n        action: 'connectWallet',\n        additionalData: { address, walletType: type }\n      });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u672A\u77E5\u9519\u8BEF';\n      logger.error('\u8FDE\u63A5\u94B1\u5305\u5931\u8D25', {\n        action: 'connectWallet',\n        additionalData: { error: errorMessage, walletType: type }\n      });\n\n      // \u91CD\u7F6E\u94B1\u5305\u72B6\u6001\n      setWallet(defaultWalletState);\n\n      // \u91CD\u65B0\u629B\u51FA\u9519\u8BEF\u4F9BUI\u5904\u7406\n      throw new Error(`\u8FDE\u63A5${type}\u94B1\u5305\u5931\u8D25: ${errorMessage}`);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // \u65AD\u5F00\u8FDE\u63A5 - \u7EDF\u4E00\u7684\u65AD\u5F00\u8FDE\u63A5\u51FD\u6570\n  const disconnect = async () => {\n    try {\n      logger.info('\u65AD\u5F00\u94B1\u5305\u8FDE\u63A5...', {\n        action: 'disconnect'\n      });\n\n      // \u5C1D\u8BD5\u65AD\u5F00WalletConnect\u8FDE\u63A5\n      const walletType = getConnectedWalletType();\n      if (walletType) {\n        await disconnectWalletService(walletType);\n      }\n\n      // \u91CD\u7F6E\u72B6\u6001\n      setWallet(defaultWalletState);\n\n      logger.info('\u94B1\u5305\u5DF2\u65AD\u5F00\u8FDE\u63A5', {\n        action: 'disconnect'\n      });\n    } catch (error) {\n      logger.error('\u65AD\u5F00\u94B1\u5305\u8FDE\u63A5\u5931\u8D25', {\n        action: 'disconnect',\n        additionalData: { error }\n      });\n    }\n  };\n\n  // \u65AD\u5F00\u94B1\u5305\u8FDE\u63A5 - \u4E3A\u4E86\u4FDD\u6301API\u517C\u5BB9\u6027\n  const disconnectWallet = async () => {\n    return disconnect();\n  };\n\n  // \u66F4\u65B0\u4F59\u989D\n  const updateBalances = async () => {\n    if (!wallet.isConnected || !wallet.address) return;\n\n    try {\n      console.log('\u66F4\u65B0\u4F59\u989D...');\n\n      // \u83B7\u53D6\u771F\u5B9E\u4F59\u989D\n      const provider = getEthereumProvider();\n      const bnbBalance = await provider.getBalance(wallet.address);\n\n      let smBalance = '0';\n      try {\n        smBalance = await contractService.getTokenBalance(wallet.address);\n      } catch (error) {\n        console.warn('\u83B7\u53D6SM\u4EE3\u5E01\u4F59\u989D\u5931\u8D25', error);\n      }\n\n      setWallet(prev => ({\n        ...prev,\n        balance: {\n          bnb: formatEther(bnbBalance),\n          sm: smBalance\n        }\n      }));\n\n      console.log('\u4F59\u989D\u5DF2\u66F4\u65B0');\n    } catch (error) {\n      console.error('\u66F4\u65B0\u4F59\u989D\u5931\u8D25:', error);\n    }\n  };\n\n  return (\n    <WalletContext.Provider value={{\n      wallet,\n      connect,\n      disconnect,\n      updateBalances,\n      connectWallet,\n      disconnectWallet,\n      isConnecting,\n      availableWallets\n    }}>\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\n// \u94B1\u5305\u94A9\u5B50\nexport function useWallet() {\n  return useContext(WalletContext);\n}"],
      names: ["WalletProvider", "useWallet", "walletService", "walletServicePromise", "loadWalletService", "window", "then", "service", "catch", "error", "console", "logger", "Logger", "createContextLogger", "component", "defaultWalletState", "isConnected", "defaultAvailableWallets", "type", "name", "icon", "installed", "WalletContext", "createContext", "wallet", "connect", "disconnect", "updateBalances", "connectWallet", "disconnectWallet", "isConnecting", "availableWallets", "checkIfBrowserHasWallet", "ethereum", "getEthereumProvider", "Error", "ethers", "BrowserProvider", "connectToWallet", "provider", "send", "signer", "getSigner", "address", "getAddress", "networkInfo", "getNetwork", "chainId", "Number", "contractService", "initialize", "bnbBalance", "getBalance", "smBalance", "getTokenBalance", "warn", "network", "id", "balance", "bnb", "formatEther", "sm", "account", "children", "setWallet", "useState", "setIsConnecting", "setAvailableWallets", "info", "action", "additionalData", "walletType", "connectedWallet", "Promise", "race", "_", "reject", "setTimeout", "result", "connectWalletByType", "getNetworkInfo", "errorMessage", "message", "getConnectedWalletType", "disconnectWalletService", "log", "prev", "Provider", "value", "useContext"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5a2832547d1298328bbb9872c703560732db6721"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e9w7anruz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e9w7anruz();
cov_2e9w7anruz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[0]++;
  cov_2e9w7anruz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2e9w7anruz().s[3]++;
_export(exports, {
  WalletProvider: function () {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[1]++;
    cov_2e9w7anruz().s[4]++;
    return WalletProvider;
  },
  useWallet: function () {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[2]++;
    cov_2e9w7anruz().s[5]++;
    return useWallet;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2e9w7anruz().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2e9w7anruz().s[7]++, require("react"));
const _ethers =
/* istanbul ignore next */
(cov_2e9w7anruz().s[8]++, require("ethers"));
const _contractService =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[9]++, _interop_require_default(require("../services/contractService")));
const _logger =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[10]++, _interop_require_default(require("../services/logger")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[3]++;
  cov_2e9w7anruz().s[11]++;
  return /* istanbul ignore next */(cov_2e9w7anruz().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[4]++;
  cov_2e9w7anruz().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[2][0]++;
    cov_2e9w7anruz().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_2e9w7anruz().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[5]++;
    cov_2e9w7anruz().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[6]++;
  cov_2e9w7anruz().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[4][0]++;
    cov_2e9w7anruz().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[4][1]++;
  }
  cov_2e9w7anruz().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[6][0]++;
    cov_2e9w7anruz().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2e9w7anruz().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[8][0]++;
    cov_2e9w7anruz().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[26]++,
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2e9w7anruz().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[13][1]++, null));
      /* istanbul ignore next */
      cov_2e9w7anruz().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[14][0]++;
        cov_2e9w7anruz().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[14][1]++;
        cov_2e9w7anruz().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2e9w7anruz().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2e9w7anruz().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[16][0]++;
    cov_2e9w7anruz().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[16][1]++;
  }
  cov_2e9w7anruz().s[36]++;
  return newObj;
}
// 动态导入钱包服务以避免SSR问题
let walletService =
/* istanbul ignore next */
(cov_2e9w7anruz().s[37]++, null);
let walletServicePromise =
/* istanbul ignore next */
(cov_2e9w7anruz().s[38]++, null);
/* istanbul ignore next */
cov_2e9w7anruz().s[39]++;
const loadWalletService = async () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[7]++;
  cov_2e9w7anruz().s[40]++;
  if (typeof window === 'undefined') {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[17][0]++;
    cov_2e9w7anruz().s[41]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[17][1]++;
  }
  // 避免重复加载
  cov_2e9w7anruz().s[42]++;
  if (walletService) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[18][0]++;
    cov_2e9w7anruz().s[43]++;
    return walletService;
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[18][1]++;
  }
  // 如果正在加载，返回现有的Promise
  cov_2e9w7anruz().s[44]++;
  if (walletServicePromise) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[19][0]++;
    cov_2e9w7anruz().s[45]++;
    return walletServicePromise;
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[19][1]++;
  }
  cov_2e9w7anruz().s[46]++;
  walletServicePromise = Promise.resolve().then(() => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[8]++;
    cov_2e9w7anruz().s[47]++;
    return /*#__PURE__*/_interop_require_wildcard(require("../services/walletService"));
  }).then(service => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[9]++;
    cov_2e9w7anruz().s[48]++;
    walletService = service;
    /* istanbul ignore next */
    cov_2e9w7anruz().s[49]++;
    return service;
  }).catch(error => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[10]++;
    cov_2e9w7anruz().s[50]++;
    console.error('Failed to load wallet service:', error);
    /* istanbul ignore next */
    cov_2e9w7anruz().s[51]++;
    walletServicePromise = null; // 重置Promise以允许重试
    /* istanbul ignore next */
    cov_2e9w7anruz().s[52]++;
    throw error;
  });
  /* istanbul ignore next */
  cov_2e9w7anruz().s[53]++;
  return walletServicePromise;
};
// 创建日志记录器
const logger =
/* istanbul ignore next */
(cov_2e9w7anruz().s[54]++, _logger.default.createContextLogger({
  component: 'WalletContext'
}));
// 创建上下文，提供默认值
const defaultWalletState =
/* istanbul ignore next */
(cov_2e9w7anruz().s[55]++, {
  isConnected: false
});
// 默认可用钱包列表
const defaultAvailableWallets =
/* istanbul ignore next */
(cov_2e9w7anruz().s[56]++, [{
  type: 'metamask',
  name: 'MetaMask',
  icon: '/images/wallets/metamask.svg',
  installed: true
}, {
  type: 'coinbase',
  name: 'Coinbase Wallet',
  icon: '/images/wallets/coinbase.svg',
  installed: true
}, {
  type: 'walletconnect',
  name: 'WalletConnect',
  icon: '/images/wallets/walletconnect.svg',
  installed: true
}]);
const WalletContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[57]++, (0, _react.createContext)({
  wallet: defaultWalletState,
  connect: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[11]++;
  },
  disconnect: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[12]++;
  },
  updateBalances: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[13]++;
  },
  connectWallet: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[14]++;
  },
  disconnectWallet: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[15]++;
  },
  isConnecting: false,
  availableWallets: defaultAvailableWallets
}));
// 检查浏览器是否有MetaMask或其他以太坊提供者
/* istanbul ignore next */
cov_2e9w7anruz().s[58]++;
const checkIfBrowserHasWallet = () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[16]++;
  cov_2e9w7anruz().s[59]++;
  return /* istanbul ignore next */(cov_2e9w7anruz().b[20][0]++, typeof window !== 'undefined') &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[20][1]++, typeof window.ethereum !== 'undefined');
};
// 获取以太坊提供者
/* istanbul ignore next */
cov_2e9w7anruz().s[60]++;
const getEthereumProvider = () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[17]++;
  cov_2e9w7anruz().s[61]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[22][0]++, typeof window === 'undefined') ||
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[22][1]++, !window.ethereum)) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[21][0]++;
    cov_2e9w7anruz().s[62]++;
    throw new Error('没有检测到Ethereum提供者');
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[21][1]++;
  }
  cov_2e9w7anruz().s[63]++;
  return new _ethers.ethers.BrowserProvider(window.ethereum);
};
// 连接到以太坊钱包
/* istanbul ignore next */
cov_2e9w7anruz().s[64]++;
const connectToWallet = async () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[18]++;
  cov_2e9w7anruz().s[65]++;
  try {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[66]++;
    if (!checkIfBrowserHasWallet()) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[23][0]++;
      cov_2e9w7anruz().s[67]++;
      throw new Error('请安装MetaMask或其他钱包扩展');
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[23][1]++;
    }
    // 请求用户授权连接钱包
    const provider =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[68]++, getEthereumProvider());
    /* istanbul ignore next */
    cov_2e9w7anruz().s[69]++;
    await provider.send('eth_requestAccounts', []);
    const signer =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[70]++, await provider.getSigner());
    const address =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[71]++, await signer.getAddress());
    const networkInfo =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[72]++, await provider.getNetwork());
    const chainId =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[73]++, Number(networkInfo.chainId));
    // 初始化合约服务
    /* istanbul ignore next */
    cov_2e9w7anruz().s[74]++;
    await _contractService.default.initialize(provider);
    // 获取余额信息
    const bnbBalance =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[75]++, await provider.getBalance(address));
    let smBalance =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[76]++, '0');
    /* istanbul ignore next */
    cov_2e9w7anruz().s[77]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[78]++;
      smBalance = await _contractService.default.getTokenBalance(address);
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[79]++;
      console.warn('获取SM代币余额失败', error);
    }
    const network =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[80]++, {
      id: chainId,
      name: chainId === 56 ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[24][0]++, 'BNB Smart Chain') :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[24][1]++, chainId === 97 ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[25][0]++, 'BNB Smart Chain Testnet') :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[25][1]++, 'Unknown Network'))
    });
    /* istanbul ignore next */
    cov_2e9w7anruz().s[81]++;
    return {
      isConnected: true,
      address,
      chainId,
      balance: {
        bnb: (0, _ethers.formatEther)(bnbBalance),
        sm: smBalance
      },
      network,
      account: {
        address
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[82]++;
    console.error('连接钱包失败:', error);
    /* istanbul ignore next */
    cov_2e9w7anruz().s[83]++;
    throw error;
  }
};
function WalletProvider({
  children
}) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[19]++;
  const [wallet, setWallet] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[84]++, (0, _react.useState)(defaultWalletState));
  const [isConnecting, setIsConnecting] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[85]++, (0, _react.useState)(false));
  const [availableWallets, setAvailableWallets] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[86]++, (0, _react.useState)(defaultAvailableWallets));
  // 连接钱包 - 统一的连接函数
  /* istanbul ignore next */
  cov_2e9w7anruz().s[87]++;
  const connect = async type => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[20]++;
    cov_2e9w7anruz().s[88]++;
    setIsConnecting(true);
    /* istanbul ignore next */
    cov_2e9w7anruz().s[89]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[90]++;
      logger.info(type ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[26][0]++, `正在连接 ${type} 钱包...`) :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[26][1]++, '连接钱包...'), {
        action: 'connect',
        additionalData: {
          walletType: type
        }
      });
      const connectedWallet =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[91]++, await connectToWallet());
      /* istanbul ignore next */
      cov_2e9w7anruz().s[92]++;
      setWallet(connectedWallet);
      /* istanbul ignore next */
      cov_2e9w7anruz().s[93]++;
      logger.info('钱包已连接', {
        action: 'connect',
        additionalData: {
          address: connectedWallet.address,
          walletType: type
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[94]++;
      logger.error('连接钱包失败', {
        action: 'connect',
        additionalData: {
          error,
          walletType: type
        }
      });
    } finally {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[95]++;
      setIsConnecting(false);
    }
  };
  // 按类型连接钱包 - 为了保持API兼容性
  /* istanbul ignore next */
  cov_2e9w7anruz().s[96]++;
  const connectWallet = async type => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[21]++;
    cov_2e9w7anruz().s[97]++;
    if (isConnecting) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[27][0]++;
      cov_2e9w7anruz().s[98]++;
      logger.warn('钱包连接已在进行中', {
        action: 'connectWallet',
        walletType: type
      });
      /* istanbul ignore next */
      cov_2e9w7anruz().s[99]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[27][1]++;
    }
    cov_2e9w7anruz().s[100]++;
    setIsConnecting(true);
    /* istanbul ignore next */
    cov_2e9w7anruz().s[101]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[102]++;
      logger.info(`正在连接 ${type} 钱包...`, {
        action: 'connectWallet',
        additionalData: {
          walletType: type
        }
      });
      // 加载钱包服务，增加超时处理
      const service =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[103]++, await Promise.race([loadWalletService(), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2e9w7anruz().f[22]++;
        cov_2e9w7anruz().s[104]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_2e9w7anruz().f[23]++;
          cov_2e9w7anruz().s[105]++;
          return reject(new Error('钱包服务加载超时'));
        }, 10000);
      })]));
      /* istanbul ignore next */
      cov_2e9w7anruz().s[106]++;
      if (!service) {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[28][0]++;
        cov_2e9w7anruz().s[107]++;
        throw new Error('钱包服务加载失败');
      } else
      /* istanbul ignore next */
      {
        cov_2e9w7anruz().b[28][1]++;
      }
      // 使用钱包服务连接指定类型的钱包，增加超时处理
      const result =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[108]++, await Promise.race([service.connectWalletByType(type), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2e9w7anruz().f[24]++;
        cov_2e9w7anruz().s[109]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_2e9w7anruz().f[25]++;
          cov_2e9w7anruz().s[110]++;
          return reject(new Error('钱包连接超时'));
        }, 30000);
      })]));
      /* istanbul ignore next */
      cov_2e9w7anruz().s[111]++;
      if (!result) {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[29][0]++;
        cov_2e9w7anruz().s[112]++;
        throw new Error(`连接 ${type} 钱包失败`);
      } else
      /* istanbul ignore next */
      {
        cov_2e9w7anruz().b[29][1]++;
      }
      const {
        address,
        chainId
      } =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[113]++, result);
      // 初始化合约服务
      /* istanbul ignore next */
      cov_2e9w7anruz().s[114]++;
      try {
        const provider =
        /* istanbul ignore next */
        (cov_2e9w7anruz().s[115]++, service.getEthereumProvider());
        /* istanbul ignore next */
        cov_2e9w7anruz().s[116]++;
        await _contractService.default.initialize(provider);
      } catch (error) {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[117]++;
        logger.warn('合约服务初始化失败', {
          error
        });
        // 继续执行，不阻断钱包连接
      }
      // 获取余额信息，增加错误处理
      let bnbBalance;
      /* istanbul ignore next */
      cov_2e9w7anruz().s[118]++;
      try {
        const provider =
        /* istanbul ignore next */
        (cov_2e9w7anruz().s[119]++, service.getEthereumProvider());
        /* istanbul ignore next */
        cov_2e9w7anruz().s[120]++;
        bnbBalance = await provider.getBalance(address);
      } catch (error) {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[121]++;
        logger.warn('获取BNB余额失败', {
          error
        });
        /* istanbul ignore next */
        cov_2e9w7anruz().s[122]++;
        bnbBalance = 0n;
      }
      let smBalance =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[123]++, '0');
      /* istanbul ignore next */
      cov_2e9w7anruz().s[124]++;
      try {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[125]++;
        smBalance = await _contractService.default.getTokenBalance(address);
      } catch (error) {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[126]++;
        logger.warn('获取SM代币余额失败', {
          error
        });
      }
      const network =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[127]++,
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[30][0]++, service.getNetworkInfo(chainId)) ||
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[30][1]++, {
        id: chainId,
        name: chainId === 56 ?
        /* istanbul ignore next */
        (cov_2e9w7anruz().b[31][0]++, 'BSC Mainnet') :
        /* istanbul ignore next */
        (cov_2e9w7anruz().b[31][1]++, chainId === 97 ?
        /* istanbul ignore next */
        (cov_2e9w7anruz().b[32][0]++, 'BSC Testnet') :
        /* istanbul ignore next */
        (cov_2e9w7anruz().b[32][1]++, chainId === 1 ?
        /* istanbul ignore next */
        (cov_2e9w7anruz().b[33][0]++, 'Ethereum Mainnet') :
        /* istanbul ignore next */
        (cov_2e9w7anruz().b[33][1]++, 'Unknown Network')))
      }));
      const connectedWallet =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[128]++, {
        isConnected: true,
        address,
        chainId,
        balance: {
          bnb: (0, _ethers.formatEther)(bnbBalance),
          sm: smBalance
        },
        network,
        account: {
          address
        }
      });
      /* istanbul ignore next */
      cov_2e9w7anruz().s[129]++;
      setWallet(connectedWallet);
      /* istanbul ignore next */
      cov_2e9w7anruz().s[130]++;
      logger.info('钱包已连接', {
        action: 'connectWallet',
        additionalData: {
          address,
          walletType: type
        }
      });
    } catch (error) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[131]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[34][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[34][1]++, '未知错误'));
      /* istanbul ignore next */
      cov_2e9w7anruz().s[132]++;
      logger.error('连接钱包失败', {
        action: 'connectWallet',
        additionalData: {
          error: errorMessage,
          walletType: type
        }
      });
      // 重置钱包状态
      /* istanbul ignore next */
      cov_2e9w7anruz().s[133]++;
      setWallet(defaultWalletState);
      // 重新抛出错误供UI处理
      /* istanbul ignore next */
      cov_2e9w7anruz().s[134]++;
      throw new Error(`连接${type}钱包失败: ${errorMessage}`);
    } finally {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[135]++;
      setIsConnecting(false);
    }
  };
  // 断开连接 - 统一的断开连接函数
  /* istanbul ignore next */
  cov_2e9w7anruz().s[136]++;
  const disconnect = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[26]++;
    cov_2e9w7anruz().s[137]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[138]++;
      logger.info('断开钱包连接...', {
        action: 'disconnect'
      });
      // 尝试断开WalletConnect连接
      const walletType =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[139]++, getConnectedWalletType());
      /* istanbul ignore next */
      cov_2e9w7anruz().s[140]++;
      if (walletType) {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[35][0]++;
        cov_2e9w7anruz().s[141]++;
        await disconnectWalletService(walletType);
      } else
      /* istanbul ignore next */
      {
        cov_2e9w7anruz().b[35][1]++;
      }
      // 重置状态
      cov_2e9w7anruz().s[142]++;
      setWallet(defaultWalletState);
      /* istanbul ignore next */
      cov_2e9w7anruz().s[143]++;
      logger.info('钱包已断开连接', {
        action: 'disconnect'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[144]++;
      logger.error('断开钱包连接失败', {
        action: 'disconnect',
        additionalData: {
          error
        }
      });
    }
  };
  // 断开钱包连接 - 为了保持API兼容性
  /* istanbul ignore next */
  cov_2e9w7anruz().s[145]++;
  const disconnectWallet = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[27]++;
    cov_2e9w7anruz().s[146]++;
    return disconnect();
  };
  // 更新余额
  /* istanbul ignore next */
  cov_2e9w7anruz().s[147]++;
  const updateBalances = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[28]++;
    cov_2e9w7anruz().s[148]++;
    if (
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[37][0]++, !wallet.isConnected) ||
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[37][1]++, !wallet.address)) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[36][0]++;
      cov_2e9w7anruz().s[149]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[36][1]++;
    }
    cov_2e9w7anruz().s[150]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[151]++;
      console.log('更新余额...');
      // 获取真实余额
      const provider =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[152]++, getEthereumProvider());
      const bnbBalance =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[153]++, await provider.getBalance(wallet.address));
      let smBalance =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[154]++, '0');
      /* istanbul ignore next */
      cov_2e9w7anruz().s[155]++;
      try {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[156]++;
        smBalance = await _contractService.default.getTokenBalance(wallet.address);
      } catch (error) {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[157]++;
        console.warn('获取SM代币余额失败', error);
      }
      /* istanbul ignore next */
      cov_2e9w7anruz().s[158]++;
      setWallet(prev => {
        /* istanbul ignore next */
        cov_2e9w7anruz().f[29]++;
        cov_2e9w7anruz().s[159]++;
        return {
          ...prev,
          balance: {
            bnb: (0, _ethers.formatEther)(bnbBalance),
            sm: smBalance
          }
        };
      });
      /* istanbul ignore next */
      cov_2e9w7anruz().s[160]++;
      console.log('余额已更新');
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[161]++;
      console.error('更新余额失败:', error);
    }
  };
  /* istanbul ignore next */
  cov_2e9w7anruz().s[162]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(WalletContext.Provider, {
    value: {
      wallet,
      connect,
      disconnect,
      updateBalances,
      connectWallet,
      disconnectWallet,
      isConnecting,
      availableWallets
    },
    children: children
  });
}
function useWallet() {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[30]++;
  cov_2e9w7anruz().s[163]++;
  return (0, _react.useContext)(WalletContext);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,