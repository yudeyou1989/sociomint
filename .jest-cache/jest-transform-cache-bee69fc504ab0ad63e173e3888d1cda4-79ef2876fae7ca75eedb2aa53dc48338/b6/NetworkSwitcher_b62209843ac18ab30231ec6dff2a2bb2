28eb57d48899fa89fad7edf6792e46f9
'use client';
"use strict";

/* istanbul ignore next */
function cov_b8xjcp1s9() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/NetworkSwitcher.tsx";
  var hash = "f1b6f5b78b527479174dd00e974e501eb5ac72eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/NetworkSwitcher.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 58
        }
      },
      "6": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 83
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 21,
          column: 31
        },
        end: {
          line: 123,
          column: 1
        }
      },
      "9": {
        start: {
          line: 22,
          column: 48
        },
        end: {
          line: 22,
          column: 74
        }
      },
      "10": {
        start: {
          line: 23,
          column: 32
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "11": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 58
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "13": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "14": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 73
        }
      },
      "15": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 39
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "17": {
        start: {
          line: 33,
          column: 35
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "18": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 39
        }
      },
      "19": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 58
        }
      },
      "20": {
        start: {
          line: 35,
          column: 33
        },
        end: {
          line: 35,
          column: 58
        }
      },
      "21": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "22": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "23": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "24": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 44
        }
      },
      "25": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "26": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "27": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 83
        }
      },
      "28": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "29": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 72
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "31": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "32": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 29
        }
      },
      "33": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "34": {
        start: {
          line: 59,
          column: 33
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "35": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 101
        }
      },
      "36": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "37": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 71,
          column: 51
        }
      },
      "38": {
        start: {
          line: 104,
          column: 68
        },
        end: {
          line: 118,
          column: 43
        }
      },
      "39": {
        start: {
          line: 107,
          column: 41
        },
        end: {
          line: 107,
          column: 77
        }
      },
      "40": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "41": {
        start: {
          line: 125,
          column: 47
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "42": {
        start: {
          line: 137,
          column: 17
        },
        end: {
          line: 137,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 32
          }
        },
        loc: {
          start: {
            line: 21,
            column: 54
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 27
          }
        },
        loc: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 30
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 36
          }
        },
        loc: {
          start: {
            line: 33,
            column: 46
          },
          end: {
            line: 36,
            column: 9
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 47
          },
          end: {
            line: 39,
            column: 48
          }
        },
        loc: {
          start: {
            line: 39,
            column: 61
          },
          end: {
            line: 42,
            column: 13
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 44,
            column: 16
          }
        },
        loc: {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 33
          }
        },
        loc: {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 54
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 71,
            column: 30
          }
        },
        loc: {
          start: {
            line: 71,
            column: 33
          },
          end: {
            line: 71,
            column: 51
          }
        },
        line: 71
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 104,
            column: 43
          },
          end: {
            line: 104,
            column: 44
          }
        },
        loc: {
          start: {
            line: 104,
            column: 68
          },
          end: {
            line: 118,
            column: 43
          }
        },
        line: 104
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 107,
            column: 38
          }
        },
        loc: {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 107,
            column: 77
          }
        },
        line: 107
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 125,
            column: 24
          },
          end: {
            line: 125,
            column: 25
          }
        },
        loc: {
          start: {
            line: 125,
            column: 47
          },
          end: {
            line: 136,
            column: 6
          }
        },
        line: 125
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 41
          }
        }, {
          start: {
            line: 38,
            column: 45
          },
          end: {
            line: 38,
            column: 60
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 45
          }
        }, {
          start: {
            line: 46,
            column: 49
          },
          end: {
            line: 46,
            column: 64
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 44
          },
          end: {
            line: 63,
            column: 94
          }
        }, {
          start: {
            line: 63,
            column: 97
          },
          end: {
            line: 63,
            column: 101
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 81,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 55
          },
          end: {
            line: 81,
            column: 26
          }
        }, {
          start: {
            line: 81,
            column: 29
          },
          end: {
            line: 81,
            column: 45
          }
        }],
        line: 73
      },
      "11": {
        loc: {
          start: {
            line: 77,
            column: 76
          },
          end: {
            line: 77,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 101
          },
          end: {
            line: 77,
            column: 116
          }
        }, {
          start: {
            line: 77,
            column: 119
          },
          end: {
            line: 77,
            column: 133
          }
        }],
        line: 77
      },
      "12": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 120,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 18
          }
        }, {
          start: {
            line: 97,
            column: 36
          },
          end: {
            line: 120,
            column: 14
          }
        }],
        line: 97
      },
      "13": {
        loc: {
          start: {
            line: 105,
            column: 85
          },
          end: {
            line: 105,
            column: 167
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 122
          },
          end: {
            line: 105,
            column: 149
          }
        }, {
          start: {
            line: 105,
            column: 152
          },
          end: {
            line: 105,
            column: 167
          }
        }],
        line: 105
      },
      "14": {
        loc: {
          start: {
            line: 110,
            column: 76
          },
          end: {
            line: 110,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 94
          },
          end: {
            line: 110,
            column: 109
          }
        }, {
          start: {
            line: 110,
            column: 112
          },
          end: {
            line: 110,
            column: 126
          }
        }],
        line: 110
      },
      "15": {
        loc: {
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 116,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 113,
            column: 47
          }
        }, {
          start: {
            line: 113,
            column: 65
          },
          end: {
            line: 116,
            column: 34
          }
        }],
        line: 113
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/NetworkSwitcher.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  getUserNetworks,\n  getNetworkInfo,\n  switchNetwork,\n  getCurrentChainId,\n  hasEthereum\n} from './services/walletService';\nimport ClientOnly from './ClientOnly';\n\ninterface NetworkSwitcherProps {\n  onNetworkChange?: (chainId: number) => void;\n}\n\nconst NetworkSwitcherContent = ({ onNetworkChange }: NetworkSwitcherProps) => {\n  const [currentChainId, setCurrentChainId] = useState<number | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const networks = getUserNetworks();\n\n  // \u5BA2\u6237\u7AEF\u6302\u8F7D\u540E\u83B7\u53D6\u5F53\u524D\u94FEID\n  useEffect(() => {\n    const fetchChainId = async () => {\n      const chainId = await getCurrentChainId();\n      setCurrentChainId(chainId);\n    };\n\n    fetchChainId();\n\n    // \u8BBE\u7F6E\u76D1\u542C\u5668\n    const handleChainChanged = (chainId: number) => {\n      setCurrentChainId(chainId);\n      if (onNetworkChange) onNetworkChange(chainId);\n    };\n\n    // \u6DFB\u52A0\u4EE5\u592A\u574A\u94FE\u5207\u6362\u4E8B\u4EF6\u76D1\u542C\u5668\n    if (typeof window !== 'undefined' && window.ethereum) {\n      window.ethereum.on('chainChanged', (chainIdHex: string) => {\n        const chainId = parseInt(chainIdHex, 16);\n        handleChainChanged(chainId);\n      });\n    }\n\n    return () => {\n      // \u6E05\u7406\u4E8B\u4EF6\u76D1\u542C\u5668\n      if (typeof window !== 'undefined' && window.ethereum) {\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      }\n    };\n  }, [onNetworkChange]);\n\n  // \u5904\u7406\u7F51\u7EDC\u5207\u6362\n  const handleNetworkChange = async (chainId: number) => {\n    const success = await switchNetwork(chainId);\n    if (success) {\n      setCurrentChainId(chainId);\n      setIsOpen(false);\n      if (onNetworkChange) onNetworkChange(chainId);\n    }\n  };\n\n  // \u83B7\u53D6\u5F53\u524D\u7F51\u7EDC\u4FE1\u606F\n  const currentNetwork = currentChainId ? getNetworkInfo(currentChainId) : null;\n\n  return (\n    <div className=\"relative inline-block text-left\">\n      <div>\n        <button\n          type=\"button\"\n          className=\"inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          onClick={() => setIsOpen(!isOpen)}\n        >\n          {currentNetwork ? (\n            <span className=\"flex items-center\">\n              <span className={`h-2 w-2 rounded-full mr-2 ${currentNetwork.testnet ? 'bg-yellow-400' : 'bg-green-500'}`}></span>\n              {currentNetwork.name}\n            </span>\n          ) : (\n            'Select Network'\n          )}\n          <svg className=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n          </svg>\n        </button>\n      </div>\n\n      {isOpen && (\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-10\">\n          <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n            {networks.map((network) => (\n              <button\n                key={network.chainId}\n                className={`flex items-center w-full px-4 py-2 text-sm ${\n                  currentChainId === network.chainId ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                } hover:bg-gray-100 hover:text-gray-900`}\n                role=\"menuitem\"\n                onClick={() => handleNetworkChange(network.chainId)}\n              >\n                <span className={`h-2 w-2 rounded-full mr-2 ${network.testnet ? 'bg-yellow-400' : 'bg-green-500'}`}></span>\n                {network.name}\n                {network.testnet && (\n                  <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-yellow-100 text-yellow-800\">\n                    Testnet\n                  </span>\n                )}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// \u4F7F\u7528 ClientOnly \u7EC4\u4EF6\u5305\u88C5\u4E3B\u7EC4\u4EF6\uFF0C\u907F\u514D SSR \u9519\u8BEF\nconst NetworkSwitcher = (props: NetworkSwitcherProps) => (\n  <ClientOnly fallback={\n    <div className=\"network-switcher\">\n      <button className=\"btn btn-sm\">\u52A0\u8F7D\u7F51\u7EDC...</button>\n    </div>\n  }>\n    <NetworkSwitcherContent {...props} />\n  </ClientOnly>\n);\n\nexport default NetworkSwitcher;\n"],
      names: ["NetworkSwitcherContent", "onNetworkChange", "currentChainId", "setCurrentChainId", "useState", "isOpen", "setIsOpen", "networks", "getUserNetworks", "useEffect", "fetchChainId", "chainId", "getCurrentChainId", "handleChainChanged", "window", "ethereum", "on", "chainIdHex", "parseInt", "removeListener", "handleNetworkChange", "success", "switchNetwork", "currentNetwork", "getNetworkInfo", "div", "className", "button", "type", "onClick", "span", "testnet", "name", "svg", "xmlns", "viewBox", "fill", "aria-hidden", "path", "fillRule", "d", "clipRule", "role", "aria-orientation", "aria-labelledby", "map", "network", "NetworkSwitcher", "props", "ClientOnly", "fallback"],
      mappings: "AAAA;;;;;+BA8HA;;;eAAA;;;;uBA5HoC;+BAO7B;mEACgB;;;;;;AAMvB,MAAMA,yBAAyB,CAAC,EAAEC,eAAe,EAAwB;IACvE,MAAM,CAACC,gBAAgBC,kBAAkB,GAAGC,IAAAA,eAAQ,EAAgB;IACpE,MAAM,CAACC,QAAQC,UAAU,GAAGF,IAAAA,eAAQ,EAAC;IACrC,MAAMG,WAAWC,IAAAA,8BAAe;IAEhC,gBAAgB;IAChBC,IAAAA,gBAAS,EAAC;QACR,MAAMC,eAAe;YACnB,MAAMC,UAAU,MAAMC,IAAAA,gCAAiB;YACvCT,kBAAkBQ;QACpB;QAEAD;QAEA,QAAQ;QACR,MAAMG,qBAAqB,CAACF;YAC1BR,kBAAkBQ;YAClB,IAAIV,iBAAiBA,gBAAgBU;QACvC;QAEA,gBAAgB;QAChB,IAAI,OAAOG,WAAW,eAAeA,OAAOC,QAAQ,EAAE;YACpDD,OAAOC,QAAQ,CAACC,EAAE,CAAC,gBAAgB,CAACC;gBAClC,MAAMN,UAAUO,SAASD,YAAY;gBACrCJ,mBAAmBF;YACrB;QACF;QAEA,OAAO;YACL,UAAU;YACV,IAAI,OAAOG,WAAW,eAAeA,OAAOC,QAAQ,EAAE;gBACpDD,OAAOC,QAAQ,CAACI,cAAc,CAAC,gBAAgBN;YACjD;QACF;IACF,GAAG;QAACZ;KAAgB;IAEpB,SAAS;IACT,MAAMmB,sBAAsB,OAAOT;QACjC,MAAMU,UAAU,MAAMC,IAAAA,4BAAa,EAACX;QACpC,IAAIU,SAAS;YACXlB,kBAAkBQ;YAClBL,UAAU;YACV,IAAIL,iBAAiBA,gBAAgBU;QACvC;IACF;IAEA,WAAW;IACX,MAAMY,iBAAiBrB,iBAAiBsB,IAAAA,6BAAc,EAACtB,kBAAkB;IAEzE,qBACE,sBAACuB;QAAIC,WAAU;;0BACb,qBAACD;0BACC,cAAA,sBAACE;oBACCC,MAAK;oBACLF,WAAU;oBACVG,SAAS,IAAMvB,UAAU,CAACD;;wBAEzBkB,+BACC,sBAACO;4BAAKJ,WAAU;;8CACd,qBAACI;oCAAKJ,WAAW,CAAC,0BAA0B,EAAEH,eAAeQ,OAAO,GAAG,kBAAkB,gBAAgB;;gCACxGR,eAAeS,IAAI;;6BAGtB;sCAEF,qBAACC;4BAAIP,WAAU;4BAAqBQ,OAAM;4BAA6BC,SAAQ;4BAAYC,MAAK;4BAAeC,eAAY;sCACzH,cAAA,qBAACC;gCAAKC,UAAS;gCAAUC,GAAE;gCAAqHC,UAAS;;;;;;YAK9JpC,wBACC,qBAACoB;gBAAIC,WAAU;0BACb,cAAA,qBAACD;oBAAIC,WAAU;oBAAOgB,MAAK;oBAAOC,oBAAiB;oBAAWC,mBAAgB;8BAC3ErC,SAASsC,GAAG,CAAC,CAACC,wBACb,sBAACnB;4BAECD,WAAW,CAAC,2CAA2C,EACrDxB,mBAAmB4C,QAAQnC,OAAO,GAAG,8BAA8B,gBACpE,sCAAsC,CAAC;4BACxC+B,MAAK;4BACLb,SAAS,IAAMT,oBAAoB0B,QAAQnC,OAAO;;8CAElD,qBAACmB;oCAAKJ,WAAW,CAAC,0BAA0B,EAAEoB,QAAQf,OAAO,GAAG,kBAAkB,gBAAgB;;gCACjGe,QAAQd,IAAI;gCACZc,QAAQf,OAAO,kBACd,qBAACD;oCAAKJ,WAAU;8CAAsG;;;2BAVnHoB,QAAQnC,OAAO;;;;;AAqBpC;AAEA,kCAAkC;AAClC,MAAMoC,kBAAkB,CAACC,sBACvB,qBAACC,mBAAU;QAACC,wBACV,qBAACzB;YAAIC,WAAU;sBACb,cAAA,qBAACC;gBAAOD,WAAU;0BAAa;;;kBAGjC,cAAA,qBAAC1B;YAAwB,GAAGgD,KAAK;;;MAIrC,WAAeD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f1b6f5b78b527479174dd00e974e501eb5ac72eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b8xjcp1s9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b8xjcp1s9();
cov_b8xjcp1s9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_b8xjcp1s9().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_b8xjcp1s9().f[0]++;
    cov_b8xjcp1s9().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_b8xjcp1s9().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_b8xjcp1s9().s[4]++, require("react"));
const _walletService =
/* istanbul ignore next */
(cov_b8xjcp1s9().s[5]++, require("./services/walletService"));
const _ClientOnly =
/* istanbul ignore next */
(/*#__PURE__*/cov_b8xjcp1s9().s[6]++, _interop_require_default(require("./ClientOnly")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_b8xjcp1s9().f[1]++;
  cov_b8xjcp1s9().s[7]++;
  return /* istanbul ignore next */(cov_b8xjcp1s9().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_b8xjcp1s9().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_b8xjcp1s9().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_b8xjcp1s9().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_b8xjcp1s9().s[8]++;
const NetworkSwitcherContent = ({
  onNetworkChange
}) => {
  /* istanbul ignore next */
  cov_b8xjcp1s9().f[2]++;
  const [currentChainId, setCurrentChainId] =
  /* istanbul ignore next */
  (cov_b8xjcp1s9().s[9]++, (0, _react.useState)(null));
  const [isOpen, setIsOpen] =
  /* istanbul ignore next */
  (cov_b8xjcp1s9().s[10]++, (0, _react.useState)(false));
  const networks =
  /* istanbul ignore next */
  (cov_b8xjcp1s9().s[11]++, (0, _walletService.getUserNetworks)());
  // 客户端挂载后获取当前链ID
  /* istanbul ignore next */
  cov_b8xjcp1s9().s[12]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_b8xjcp1s9().f[3]++;
    cov_b8xjcp1s9().s[13]++;
    const fetchChainId = async () => {
      /* istanbul ignore next */
      cov_b8xjcp1s9().f[4]++;
      const chainId =
      /* istanbul ignore next */
      (cov_b8xjcp1s9().s[14]++, await (0, _walletService.getCurrentChainId)());
      /* istanbul ignore next */
      cov_b8xjcp1s9().s[15]++;
      setCurrentChainId(chainId);
    };
    /* istanbul ignore next */
    cov_b8xjcp1s9().s[16]++;
    fetchChainId();
    // 设置监听器
    /* istanbul ignore next */
    cov_b8xjcp1s9().s[17]++;
    const handleChainChanged = chainId => {
      /* istanbul ignore next */
      cov_b8xjcp1s9().f[5]++;
      cov_b8xjcp1s9().s[18]++;
      setCurrentChainId(chainId);
      /* istanbul ignore next */
      cov_b8xjcp1s9().s[19]++;
      if (onNetworkChange) {
        /* istanbul ignore next */
        cov_b8xjcp1s9().b[2][0]++;
        cov_b8xjcp1s9().s[20]++;
        onNetworkChange(chainId);
      } else
      /* istanbul ignore next */
      {
        cov_b8xjcp1s9().b[2][1]++;
      }
    };
    // 添加以太坊链切换事件监听器
    /* istanbul ignore next */
    cov_b8xjcp1s9().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_b8xjcp1s9().b[4][0]++, typeof window !== 'undefined') &&
    /* istanbul ignore next */
    (cov_b8xjcp1s9().b[4][1]++, window.ethereum)) {
      /* istanbul ignore next */
      cov_b8xjcp1s9().b[3][0]++;
      cov_b8xjcp1s9().s[22]++;
      window.ethereum.on('chainChanged', chainIdHex => {
        /* istanbul ignore next */
        cov_b8xjcp1s9().f[6]++;
        const chainId =
        /* istanbul ignore next */
        (cov_b8xjcp1s9().s[23]++, parseInt(chainIdHex, 16));
        /* istanbul ignore next */
        cov_b8xjcp1s9().s[24]++;
        handleChainChanged(chainId);
      });
    } else
    /* istanbul ignore next */
    {
      cov_b8xjcp1s9().b[3][1]++;
    }
    cov_b8xjcp1s9().s[25]++;
    return () => {
      /* istanbul ignore next */
      cov_b8xjcp1s9().f[7]++;
      cov_b8xjcp1s9().s[26]++;
      // 清理事件监听器
      if (
      /* istanbul ignore next */
      (cov_b8xjcp1s9().b[6][0]++, typeof window !== 'undefined') &&
      /* istanbul ignore next */
      (cov_b8xjcp1s9().b[6][1]++, window.ethereum)) {
        /* istanbul ignore next */
        cov_b8xjcp1s9().b[5][0]++;
        cov_b8xjcp1s9().s[27]++;
        window.ethereum.removeListener('chainChanged', handleChainChanged);
      } else
      /* istanbul ignore next */
      {
        cov_b8xjcp1s9().b[5][1]++;
      }
    };
  }, [onNetworkChange]);
  // 处理网络切换
  /* istanbul ignore next */
  cov_b8xjcp1s9().s[28]++;
  const handleNetworkChange = async chainId => {
    /* istanbul ignore next */
    cov_b8xjcp1s9().f[8]++;
    const success =
    /* istanbul ignore next */
    (cov_b8xjcp1s9().s[29]++, await (0, _walletService.switchNetwork)(chainId));
    /* istanbul ignore next */
    cov_b8xjcp1s9().s[30]++;
    if (success) {
      /* istanbul ignore next */
      cov_b8xjcp1s9().b[7][0]++;
      cov_b8xjcp1s9().s[31]++;
      setCurrentChainId(chainId);
      /* istanbul ignore next */
      cov_b8xjcp1s9().s[32]++;
      setIsOpen(false);
      /* istanbul ignore next */
      cov_b8xjcp1s9().s[33]++;
      if (onNetworkChange) {
        /* istanbul ignore next */
        cov_b8xjcp1s9().b[8][0]++;
        cov_b8xjcp1s9().s[34]++;
        onNetworkChange(chainId);
      } else
      /* istanbul ignore next */
      {
        cov_b8xjcp1s9().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_b8xjcp1s9().b[7][1]++;
    }
  };
  // 获取当前网络信息
  const currentNetwork =
  /* istanbul ignore next */
  (cov_b8xjcp1s9().s[35]++, currentChainId ?
  /* istanbul ignore next */
  (cov_b8xjcp1s9().b[9][0]++, (0, _walletService.getNetworkInfo)(currentChainId)) :
  /* istanbul ignore next */
  (cov_b8xjcp1s9().b[9][1]++, null));
  /* istanbul ignore next */
  cov_b8xjcp1s9().s[36]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "relative inline-block text-left",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
        type: "button",
        className: "inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
        onClick: () => {
          /* istanbul ignore next */
          cov_b8xjcp1s9().f[9]++;
          cov_b8xjcp1s9().s[37]++;
          return setIsOpen(!isOpen);
        },
        children: [currentNetwork ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_b8xjcp1s9().b[10][0]++, (0, _jsxruntime.jsxs)("span", {
          className: "flex items-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: `h-2 w-2 rounded-full mr-2 ${currentNetwork.testnet ?
            /* istanbul ignore next */
            (cov_b8xjcp1s9().b[11][0]++, 'bg-yellow-400') :
            /* istanbul ignore next */
            (cov_b8xjcp1s9().b[11][1]++, 'bg-green-500')}`
          }), currentNetwork.name]
        })) :
        /* istanbul ignore next */
        (cov_b8xjcp1s9().b[10][1]++, 'Select Network'), /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
          className: "-mr-1 ml-2 h-5 w-5",
          xmlns: "http://www.w3.org/2000/svg",
          viewBox: "0 0 20 20",
          fill: "currentColor",
          "aria-hidden": "true",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
            fillRule: "evenodd",
            d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
            clipRule: "evenodd"
          })
        })]
      })
    }),
    /* istanbul ignore next */
    (cov_b8xjcp1s9().b[12][0]++, isOpen) &&
    /* istanbul ignore next */
    (cov_b8xjcp1s9().b[12][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-10",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "py-1",
        role: "menu",
        "aria-orientation": "vertical",
        "aria-labelledby": "options-menu",
        children: networks.map(network => {
          /* istanbul ignore next */
          cov_b8xjcp1s9().f[10]++;
          cov_b8xjcp1s9().s[38]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            className: `flex items-center w-full px-4 py-2 text-sm ${currentChainId === network.chainId ?
            /* istanbul ignore next */
            (cov_b8xjcp1s9().b[13][0]++, 'bg-gray-100 text-gray-900') :
            /* istanbul ignore next */
            (cov_b8xjcp1s9().b[13][1]++, 'text-gray-700')} hover:bg-gray-100 hover:text-gray-900`,
            role: "menuitem",
            onClick: () => {
              /* istanbul ignore next */
              cov_b8xjcp1s9().f[11]++;
              cov_b8xjcp1s9().s[39]++;
              return handleNetworkChange(network.chainId);
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: `h-2 w-2 rounded-full mr-2 ${network.testnet ?
              /* istanbul ignore next */
              (cov_b8xjcp1s9().b[14][0]++, 'bg-yellow-400') :
              /* istanbul ignore next */
              (cov_b8xjcp1s9().b[14][1]++, 'bg-green-500')}`
            }), network.name,
            /* istanbul ignore next */
            (cov_b8xjcp1s9().b[15][0]++, network.testnet) &&
            /* istanbul ignore next */
            (cov_b8xjcp1s9().b[15][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-yellow-100 text-yellow-800",
              children: "Testnet"
            }))]
          }, network.chainId);
        })
      })
    }))]
  });
};
// 使用 ClientOnly 组件包装主组件，避免 SSR 错误
/* istanbul ignore next */
cov_b8xjcp1s9().s[40]++;
const NetworkSwitcher = props => {
  /* istanbul ignore next */
  cov_b8xjcp1s9().f[12]++;
  cov_b8xjcp1s9().s[41]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_ClientOnly.default, {
    fallback: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "network-switcher",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        className: "btn btn-sm",
        children: "加载网络..."
      })
    }),
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(NetworkSwitcherContent, {
      ...props
    })
  });
};
const _default =
/* istanbul ignore next */
(cov_b8xjcp1s9().s[42]++, NetworkSwitcher);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,