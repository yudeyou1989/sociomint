{"version":3,"names":["_default","NetworkSwitcherContent","onNetworkChange","cov_b8xjcp1s9","f","currentChainId","setCurrentChainId","s","_react","useState","isOpen","setIsOpen","networks","_walletService","getUserNetworks","useEffect","fetchChainId","chainId","getCurrentChainId","handleChainChanged","b","window","ethereum","on","chainIdHex","parseInt","removeListener","handleNetworkChange","success","switchNetwork","currentNetwork","getNetworkInfo","_jsxruntime","jsxs","className","jsx","type","onClick","testnet","name","xmlns","viewBox","fill","fillRule","d","clipRule","role","map","network","NetworkSwitcher","props","_ClientOnly","default","fallback"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/NetworkSwitcher.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  getUserNetworks,\n  getNetworkInfo,\n  switchNetwork,\n  getCurrentChainId,\n  hasEthereum\n} from './services/walletService';\nimport ClientOnly from './ClientOnly';\n\ninterface NetworkSwitcherProps {\n  onNetworkChange?: (chainId: number) => void;\n}\n\nconst NetworkSwitcherContent = ({ onNetworkChange }: NetworkSwitcherProps) => {\n  const [currentChainId, setCurrentChainId] = useState<number | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const networks = getUserNetworks();\n\n  // 客户端挂载后获取当前链ID\n  useEffect(() => {\n    const fetchChainId = async () => {\n      const chainId = await getCurrentChainId();\n      setCurrentChainId(chainId);\n    };\n\n    fetchChainId();\n\n    // 设置监听器\n    const handleChainChanged = (chainId: number) => {\n      setCurrentChainId(chainId);\n      if (onNetworkChange) onNetworkChange(chainId);\n    };\n\n    // 添加以太坊链切换事件监听器\n    if (typeof window !== 'undefined' && window.ethereum) {\n      window.ethereum.on('chainChanged', (chainIdHex: string) => {\n        const chainId = parseInt(chainIdHex, 16);\n        handleChainChanged(chainId);\n      });\n    }\n\n    return () => {\n      // 清理事件监听器\n      if (typeof window !== 'undefined' && window.ethereum) {\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      }\n    };\n  }, [onNetworkChange]);\n\n  // 处理网络切换\n  const handleNetworkChange = async (chainId: number) => {\n    const success = await switchNetwork(chainId);\n    if (success) {\n      setCurrentChainId(chainId);\n      setIsOpen(false);\n      if (onNetworkChange) onNetworkChange(chainId);\n    }\n  };\n\n  // 获取当前网络信息\n  const currentNetwork = currentChainId ? getNetworkInfo(currentChainId) : null;\n\n  return (\n    <div className=\"relative inline-block text-left\">\n      <div>\n        <button\n          type=\"button\"\n          className=\"inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          onClick={() => setIsOpen(!isOpen)}\n        >\n          {currentNetwork ? (\n            <span className=\"flex items-center\">\n              <span className={`h-2 w-2 rounded-full mr-2 ${currentNetwork.testnet ? 'bg-yellow-400' : 'bg-green-500'}`}></span>\n              {currentNetwork.name}\n            </span>\n          ) : (\n            'Select Network'\n          )}\n          <svg className=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n          </svg>\n        </button>\n      </div>\n\n      {isOpen && (\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-10\">\n          <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n            {networks.map((network) => (\n              <button\n                key={network.chainId}\n                className={`flex items-center w-full px-4 py-2 text-sm ${\n                  currentChainId === network.chainId ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                } hover:bg-gray-100 hover:text-gray-900`}\n                role=\"menuitem\"\n                onClick={() => handleNetworkChange(network.chainId)}\n              >\n                <span className={`h-2 w-2 rounded-full mr-2 ${network.testnet ? 'bg-yellow-400' : 'bg-green-500'}`}></span>\n                {network.name}\n                {network.testnet && (\n                  <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-yellow-100 text-yellow-800\">\n                    Testnet\n                  </span>\n                )}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// 使用 ClientOnly 组件包装主组件，避免 SSR 错误\nconst NetworkSwitcher = (props: NetworkSwitcherProps) => (\n  <ClientOnly fallback={\n    <div className=\"network-switcher\">\n      <button className=\"btn btn-sm\">加载网络...</button>\n    </div>\n  }>\n    <NetworkSwitcherContent {...props} />\n  </ClientOnly>\n);\n\nexport default NetworkSwitcher;\n"],"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","ignoreList":[]}