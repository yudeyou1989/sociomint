d0ba5c66df9e646215978b35f02a7e19
'use client';
"use strict";

/* istanbul ignore next */
function cov_1o4scm9yy0() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/services/walletService.ts";
  var hash = "240967e20f048bc7aa62f2f30443d73269b1f3ba";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/services/walletService.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 36
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 38
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "14": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 33
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "18": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "20": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "23": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 29
        }
      },
      "24": {
        start: {
          line: 74,
          column: 36
        },
        end: {
          line: 74,
          column: 101
        }
      },
      "25": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 75,
          column: 69
        }
      },
      "26": {
        start: {
          line: 76,
          column: 30
        },
        end: {
          line: 76,
          column: 75
        }
      },
      "27": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "28": {
        start: {
          line: 83,
          column: 15
        },
        end: {
          line: 85,
          column: 2
        }
      },
      "29": {
        start: {
          line: 87,
          column: 17
        },
        end: {
          line: 104,
          column: 1
        }
      },
      "30": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 32
        }
      },
      "31": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 107,
          column: 27
        }
      },
      "32": {
        start: {
          line: 108,
          column: 18
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "33": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "34": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 115,
          column: 1
        }
      },
      "35": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "36": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 31
        }
      },
      "37": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 16
        }
      },
      "38": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 118,
          column: 1
        }
      },
      "39": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 34
        }
      },
      "40": {
        start: {
          line: 119,
          column: 26
        },
        end: {
          line: 146,
          column: 1
        }
      },
      "41": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "42": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 39
        }
      },
      "43": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 121,
          column: 39
        }
      },
      "44": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "45": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 60
        }
      },
      "46": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 66
        }
      },
      "47": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 57
        }
      },
      "48": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 63
        }
      },
      "49": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 28
        }
      },
      "50": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 29
        }
      },
      "51": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "52": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 21
        }
      },
      "53": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 149,
          column: 1
        }
      },
      "54": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 20
        }
      },
      "55": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 153,
          column: 1
        }
      },
      "56": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 65
        }
      },
      "57": {
        start: {
          line: 151,
          column: 41
        },
        end: {
          line: 151,
          column: 64
        }
      },
      "58": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 27
        }
      },
      "59": {
        start: {
          line: 154,
          column: 22
        },
        end: {
          line: 171,
          column: 1
        }
      },
      "60": {
        start: {
          line: 155,
          column: 21
        },
        end: {
          line: 155,
          column: 34
        }
      },
      "61": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 31
        }
      },
      "62": {
        start: {
          line: 156,
          column: 19
        },
        end: {
          line: 156,
          column: 31
        }
      },
      "63": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "64": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 160,
          column: 10
        }
      },
      "65": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 35
        }
      },
      "66": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "67": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 20
        }
      },
      "68": {
        start: {
          line: 172,
          column: 26
        },
        end: {
          line: 189,
          column: 1
        }
      },
      "69": {
        start: {
          line: 173,
          column: 21
        },
        end: {
          line: 173,
          column: 34
        }
      },
      "70": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 31
        }
      },
      "71": {
        start: {
          line: 174,
          column: 19
        },
        end: {
          line: 174,
          column: 31
        }
      },
      "72": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 188,
          column: 5
        }
      },
      "73": {
        start: {
          line: 176,
          column: 25
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "74": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 35
        }
      },
      "75": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "76": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 20
        }
      },
      "77": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 207,
          column: 1
        }
      },
      "78": {
        start: {
          line: 191,
          column: 21
        },
        end: {
          line: 191,
          column: 34
        }
      },
      "79": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 31
        }
      },
      "80": {
        start: {
          line: 192,
          column: 19
        },
        end: {
          line: 192,
          column: 31
        }
      },
      "81": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "82": {
        start: {
          line: 194,
          column: 27
        },
        end: {
          line: 196,
          column: 10
        }
      },
      "83": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 60
        }
      },
      "84": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "85": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 20
        }
      },
      "86": {
        start: {
          line: 208,
          column: 22
        },
        end: {
          line: 268,
          column: 1
        }
      },
      "87": {
        start: {
          line: 209,
          column: 21
        },
        end: {
          line: 209,
          column: 34
        }
      },
      "88": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 32
        }
      },
      "89": {
        start: {
          line: 210,
          column: 19
        },
        end: {
          line: 210,
          column: 32
        }
      },
      "90": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 267,
          column: 5
        }
      },
      "91": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 219,
          column: 11
        }
      },
      "92": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 20
        }
      },
      "93": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 228,
          column: 11
        }
      },
      "94": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 230,
          column: 47
        }
      },
      "95": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "96": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "97": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 252,
          column: 19
        }
      },
      "98": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 28
        }
      },
      "99": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 262,
          column: 19
        }
      },
      "100": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 29
        }
      },
      "101": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 21
        }
      },
      "102": {
        start: {
          line: 269,
          column: 35
        },
        end: {
          line: 280,
          column: 1
        }
      },
      "103": {
        start: {
          line: 270,
          column: 21
        },
        end: {
          line: 270,
          column: 34
        }
      },
      "104": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 31
        }
      },
      "105": {
        start: {
          line: 271,
          column: 19
        },
        end: {
          line: 271,
          column: 31
        }
      },
      "106": {
        start: {
          line: 272,
          column: 34
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "107": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 27
        }
      },
      "108": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 58
        }
      },
      "109": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 279,
          column: 6
        }
      },
      "110": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 74
        }
      },
      "111": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "112": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "113": {
        start: {
          line: 284,
          column: 32
        },
        end: {
          line: 289,
          column: 13
        }
      },
      "114": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 57
        }
      },
      "115": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "116": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 42
        }
      },
      "117": {
        start: {
          line: 297,
          column: 25
        },
        end: {
          line: 297,
          column: 40
        }
      },
      "118": {
        start: {
          line: 299,
          column: 25
        },
        end: {
          line: 301,
          column: 10
        }
      },
      "119": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "120": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 40
        }
      },
      "121": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 35
        }
      },
      "122": {
        start: {
          line: 307,
          column: 27
        },
        end: {
          line: 309,
          column: 10
        }
      },
      "123": {
        start: {
          line: 310,
          column: 24
        },
        end: {
          line: 310,
          column: 48
        }
      },
      "124": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 318,
          column: 11
        }
      },
      "125": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 317,
          column: 13
        }
      },
      "126": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 44
        }
      },
      "127": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 57
        }
      },
      "128": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 322,
          column: 11
        }
      },
      "129": {
        start: {
          line: 320,
          column: 31
        },
        end: {
          line: 320,
          column: 55
        }
      },
      "130": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 52
        }
      },
      "131": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 11
        }
      },
      "132": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 40
        }
      },
      "133": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 49
        }
      },
      "134": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 331,
          column: 10
        }
      },
      "135": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 339,
          column: 11
        }
      },
      "136": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 20
        }
      },
      "137": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 55
        }
      },
      "138": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 347,
          column: 55
        }
      },
      "139": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 350,
          column: 58
        }
      },
      "140": {
        start: {
          line: 353,
          column: 4
        },
        end: {
          line: 353,
          column: 58
        }
      },
      "141": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 439,
          column: 5
        }
      },
      "142": {
        start: {
          line: 358,
          column: 26
        },
        end: {
          line: 358,
          column: 75
        }
      },
      "143": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "144": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 52
        }
      },
      "145": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "146": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 48
        }
      },
      "147": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 36
        }
      },
      "148": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 397,
          column: 11
        }
      },
      "149": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 405,
          column: 11
        }
      },
      "150": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 404,
          column: 15
        }
      },
      "151": {
        start: {
          line: 401,
          column: 16
        },
        end: {
          line: 403,
          column: 17
        }
      },
      "152": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 402,
          column: 67
        }
      },
      "153": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 410,
          column: 11
        }
      },
      "154": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 409,
          column: 13
        }
      },
      "155": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 408,
          column: 41
        }
      },
      "156": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 415,
          column: 11
        }
      },
      "157": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 414,
          column: 13
        }
      },
      "158": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 54
        }
      },
      "159": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 420,
          column: 11
        }
      },
      "160": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 419,
          column: 13
        }
      },
      "161": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 50
        }
      },
      "162": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 40
        }
      },
      "163": {
        start: {
          line: 423,
          column: 25
        },
        end: {
          line: 423,
          column: 61
        }
      },
      "164": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "165": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 428,
          column: 14
        }
      },
      "166": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 20
        }
      },
      "167": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 437,
          column: 11
        }
      },
      "168": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 20
        }
      },
      "169": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 515,
          column: 5
        }
      },
      "170": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "171": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 53
        }
      },
      "172": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 452,
          column: 9
        }
      },
      "173": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 53
        }
      },
      "174": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 41
        }
      },
      "175": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 476,
          column: 11
        }
      },
      "176": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 482,
          column: 11
        }
      },
      "177": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 481,
          column: 13
        }
      },
      "178": {
        start: {
          line: 480,
          column: 16
        },
        end: {
          line: 480,
          column: 68
        }
      },
      "179": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 487,
          column: 11
        }
      },
      "180": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 486,
          column: 13
        }
      },
      "181": {
        start: {
          line: 485,
          column: 16
        },
        end: {
          line: 485,
          column: 41
        }
      },
      "182": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 492,
          column: 11
        }
      },
      "183": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 491,
          column: 13
        }
      },
      "184": {
        start: {
          line: 490,
          column: 16
        },
        end: {
          line: 490,
          column: 54
        }
      },
      "185": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 497,
          column: 11
        }
      },
      "186": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 496,
          column: 13
        }
      },
      "187": {
        start: {
          line: 495,
          column: 16
        },
        end: {
          line: 495,
          column: 50
        }
      },
      "188": {
        start: {
          line: 499,
          column: 25
        },
        end: {
          line: 499,
          column: 61
        }
      },
      "189": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "190": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 504,
          column: 14
        }
      },
      "191": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 506,
          column: 20
        }
      },
      "192": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 513,
          column: 11
        }
      },
      "193": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 20
        }
      },
      "194": {
        start: {
          line: 518,
          column: 4
        },
        end: {
          line: 531,
          column: 5
        }
      },
      "195": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 46
        }
      },
      "196": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 522,
          column: 46
        }
      },
      "197": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 524,
          column: 49
        }
      },
      "198": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 526,
          column: 49
        }
      },
      "199": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 528,
          column: 51
        }
      },
      "200": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 49
        }
      },
      "201": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 534,
          column: 34
        }
      },
      "202": {
        start: {
          line: 534,
          column: 22
        },
        end: {
          line: 534,
          column: 34
        }
      },
      "203": {
        start: {
          line: 535,
          column: 4
        },
        end: {
          line: 537,
          column: 5
        }
      },
      "204": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 536,
          column: 31
        }
      },
      "205": {
        start: {
          line: 538,
          column: 4
        },
        end: {
          line: 538,
          column: 38
        }
      },
      "206": {
        start: {
          line: 538,
          column: 26
        },
        end: {
          line: 538,
          column: 38
        }
      },
      "207": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 539,
          column: 54
        }
      },
      "208": {
        start: {
          line: 539,
          column: 36
        },
        end: {
          line: 539,
          column: 54
        }
      },
      "209": {
        start: {
          line: 540,
          column: 4
        },
        end: {
          line: 540,
          column: 60
        }
      },
      "210": {
        start: {
          line: 540,
          column: 42
        },
        end: {
          line: 540,
          column: 60
        }
      },
      "211": {
        start: {
          line: 541,
          column: 4
        },
        end: {
          line: 541,
          column: 54
        }
      },
      "212": {
        start: {
          line: 541,
          column: 33
        },
        end: {
          line: 541,
          column: 54
        }
      },
      "213": {
        start: {
          line: 542,
          column: 4
        },
        end: {
          line: 542,
          column: 60
        }
      },
      "214": {
        start: {
          line: 542,
          column: 39
        },
        end: {
          line: 542,
          column: 60
        }
      },
      "215": {
        start: {
          line: 543,
          column: 4
        },
        end: {
          line: 543,
          column: 16
        }
      },
      "216": {
        start: {
          line: 546,
          column: 4
        },
        end: {
          line: 563,
          column: 5
        }
      },
      "217": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 562,
          column: 9
        }
      },
      "218": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 554,
          column: 13
        }
      },
      "219": {
        start: {
          line: 549,
          column: 16
        },
        end: {
          line: 549,
          column: 52
        }
      },
      "220": {
        start: {
          line: 550,
          column: 16
        },
        end: {
          line: 550,
          column: 40
        }
      },
      "221": {
        start: {
          line: 551,
          column: 19
        },
        end: {
          line: 554,
          column: 13
        }
      },
      "222": {
        start: {
          line: 552,
          column: 16
        },
        end: {
          line: 552,
          column: 57
        }
      },
      "223": {
        start: {
          line: 553,
          column: 16
        },
        end: {
          line: 553,
          column: 45
        }
      },
      "224": {
        start: {
          line: 556,
          column: 12
        },
        end: {
          line: 561,
          column: 15
        }
      },
      "225": {
        start: {
          line: 565,
          column: 4
        },
        end: {
          line: 567,
          column: 5
        }
      },
      "226": {
        start: {
          line: 566,
          column: 8
        },
        end: {
          line: 566,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 27
          }
        },
        loc: {
          start: {
            line: 13,
            column: 37
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 22
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 22
          }
        },
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 25
          }
        },
        loc: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 20
          }
        },
        loc: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 26
          }
        },
        loc: {
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 27
          }
        },
        loc: {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 37,
            column: 29
          }
        },
        loc: {
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 22
          },
          end: {
            line: 40,
            column: 23
          }
        },
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 29
          }
        },
        loc: {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 24
          }
        },
        loc: {
          start: {
            line: 46,
            column: 34
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 24
          }
        },
        loc: {
          start: {
            line: 49,
            column: 34
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 21
          }
        },
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 55,
            column: 21
          },
          end: {
            line: 55,
            column: 22
          }
        },
        loc: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 18
          }
        },
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 61,
            column: 15
          },
          end: {
            line: 61,
            column: 16
          }
        },
        loc: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 24
          }
        },
        loc: {
          start: {
            line: 64,
            column: 34
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 67,
            column: 32
          },
          end: {
            line: 67,
            column: 33
          }
        },
        loc: {
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 70,
            column: 20
          }
        },
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 70
      },
      "21": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 33
          }
        },
        loc: {
          start: {
            line: 77,
            column: 39
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 77
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 19
          }
        },
        loc: {
          start: {
            line: 108,
            column: 22
          },
          end: {
            line: 108,
            column: 51
          }
        },
        line: 108
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 110,
            column: 21
          }
        },
        loc: {
          start: {
            line: 110,
            column: 24
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 110
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        },
        loc: {
          start: {
            line: 116,
            column: 24
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 116
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 119,
            column: 26
          },
          end: {
            line: 119,
            column: 27
          }
        },
        loc: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 119
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 147,
            column: 24
          },
          end: {
            line: 147,
            column: 25
          }
        },
        loc: {
          start: {
            line: 147,
            column: 28
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 147
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 150,
            column: 24
          }
        },
        loc: {
          start: {
            line: 150,
            column: 34
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 150
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 151,
            column: 34
          },
          end: {
            line: 151,
            column: 35
          }
        },
        loc: {
          start: {
            line: 151,
            column: 41
          },
          end: {
            line: 151,
            column: 64
          }
        },
        line: 151
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 154,
            column: 22
          },
          end: {
            line: 154,
            column: 23
          }
        },
        loc: {
          start: {
            line: 154,
            column: 32
          },
          end: {
            line: 171,
            column: 1
          }
        },
        line: 154
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 172,
            column: 26
          },
          end: {
            line: 172,
            column: 27
          }
        },
        loc: {
          start: {
            line: 172,
            column: 36
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 172
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 190,
            column: 26
          },
          end: {
            line: 190,
            column: 27
          }
        },
        loc: {
          start: {
            line: 190,
            column: 36
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 190
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 208,
            column: 22
          },
          end: {
            line: 208,
            column: 23
          }
        },
        loc: {
          start: {
            line: 208,
            column: 39
          },
          end: {
            line: 268,
            column: 1
          }
        },
        line: 208
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 269,
            column: 35
          },
          end: {
            line: 269,
            column: 36
          }
        },
        loc: {
          start: {
            line: 269,
            column: 47
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 269
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 272,
            column: 34
          },
          end: {
            line: 272,
            column: 35
          }
        },
        loc: {
          start: {
            line: 272,
            column: 46
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 272
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 277,
            column: 11
          },
          end: {
            line: 277,
            column: 12
          }
        },
        loc: {
          start: {
            line: 277,
            column: 15
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 277
      },
      "36": {
        name: "connectBrowserWallet",
        decl: {
          start: {
            line: 281,
            column: 15
          },
          end: {
            line: 281,
            column: 35
          }
        },
        loc: {
          start: {
            line: 281,
            column: 53
          },
          end: {
            line: 342,
            column: 1
          }
        },
        line: 281
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 312,
            column: 39
          },
          end: {
            line: 312,
            column: 40
          }
        },
        loc: {
          start: {
            line: 312,
            column: 51
          },
          end: {
            line: 318,
            column: 9
          }
        },
        line: 312
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 319,
            column: 36
          },
          end: {
            line: 319,
            column: 37
          }
        },
        loc: {
          start: {
            line: 319,
            column: 50
          },
          end: {
            line: 322,
            column: 9
          }
        },
        line: 319
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 323,
            column: 34
          },
          end: {
            line: 323,
            column: 35
          }
        },
        loc: {
          start: {
            line: 323,
            column: 38
          },
          end: {
            line: 325,
            column: 9
          }
        },
        line: 323
      },
      "40": {
        name: "connectMetamask",
        decl: {
          start: {
            line: 343,
            column: 15
          },
          end: {
            line: 343,
            column: 30
          }
        },
        loc: {
          start: {
            line: 343,
            column: 42
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 343
      },
      "41": {
        name: "connectCoinbase",
        decl: {
          start: {
            line: 346,
            column: 15
          },
          end: {
            line: 346,
            column: 30
          }
        },
        loc: {
          start: {
            line: 346,
            column: 42
          },
          end: {
            line: 348,
            column: 1
          }
        },
        line: 346
      },
      "42": {
        name: "connectTrustWallet",
        decl: {
          start: {
            line: 349,
            column: 15
          },
          end: {
            line: 349,
            column: 33
          }
        },
        loc: {
          start: {
            line: 349,
            column: 45
          },
          end: {
            line: 351,
            column: 1
          }
        },
        line: 349
      },
      "43": {
        name: "connectTokenPocket",
        decl: {
          start: {
            line: 352,
            column: 15
          },
          end: {
            line: 352,
            column: 33
          }
        },
        loc: {
          start: {
            line: 352,
            column: 45
          },
          end: {
            line: 354,
            column: 1
          }
        },
        line: 352
      },
      "44": {
        name: "connectWalletConnectV2",
        decl: {
          start: {
            line: 355,
            column: 15
          },
          end: {
            line: 355,
            column: 37
          }
        },
        loc: {
          start: {
            line: 355,
            column: 49
          },
          end: {
            line: 440,
            column: 1
          }
        },
        line: 355
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 399,
            column: 39
          },
          end: {
            line: 399,
            column: 40
          }
        },
        loc: {
          start: {
            line: 399,
            column: 47
          },
          end: {
            line: 405,
            column: 9
          }
        },
        line: 399
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 400,
            column: 49
          },
          end: {
            line: 400,
            column: 50
          }
        },
        loc: {
          start: {
            line: 400,
            column: 61
          },
          end: {
            line: 404,
            column: 13
          }
        },
        line: 400
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 406,
            column: 42
          },
          end: {
            line: 406,
            column: 43
          }
        },
        loc: {
          start: {
            line: 406,
            column: 46
          },
          end: {
            line: 410,
            column: 9
          }
        },
        line: 406
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 411,
            column: 47
          },
          end: {
            line: 411,
            column: 48
          }
        },
        loc: {
          start: {
            line: 411,
            column: 59
          },
          end: {
            line: 415,
            column: 9
          }
        },
        line: 411
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 416,
            column: 44
          },
          end: {
            line: 416,
            column: 45
          }
        },
        loc: {
          start: {
            line: 416,
            column: 55
          },
          end: {
            line: 420,
            column: 9
          }
        },
        line: 416
      },
      "50": {
        name: "connectWalletConnect",
        decl: {
          start: {
            line: 441,
            column: 15
          },
          end: {
            line: 441,
            column: 35
          }
        },
        loc: {
          start: {
            line: 441,
            column: 47
          },
          end: {
            line: 516,
            column: 1
          }
        },
        line: 441
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 478,
            column: 44
          },
          end: {
            line: 478,
            column: 45
          }
        },
        loc: {
          start: {
            line: 478,
            column: 52
          },
          end: {
            line: 482,
            column: 9
          }
        },
        line: 478
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 483,
            column: 47
          },
          end: {
            line: 483,
            column: 48
          }
        },
        loc: {
          start: {
            line: 483,
            column: 51
          },
          end: {
            line: 487,
            column: 9
          }
        },
        line: 483
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 488,
            column: 52
          },
          end: {
            line: 488,
            column: 53
          }
        },
        loc: {
          start: {
            line: 488,
            column: 64
          },
          end: {
            line: 492,
            column: 9
          }
        },
        line: 488
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 493,
            column: 49
          },
          end: {
            line: 493,
            column: 50
          }
        },
        loc: {
          start: {
            line: 493,
            column: 60
          },
          end: {
            line: 497,
            column: 9
          }
        },
        line: 493
      },
      "55": {
        name: "connectWalletByType",
        decl: {
          start: {
            line: 517,
            column: 15
          },
          end: {
            line: 517,
            column: 34
          }
        },
        loc: {
          start: {
            line: 517,
            column: 52
          },
          end: {
            line: 532,
            column: 1
          }
        },
        line: 517
      },
      "56": {
        name: "getConnectedWalletType",
        decl: {
          start: {
            line: 533,
            column: 9
          },
          end: {
            line: 533,
            column: 31
          }
        },
        loc: {
          start: {
            line: 533,
            column: 34
          },
          end: {
            line: 544,
            column: 1
          }
        },
        line: 533
      },
      "57": {
        name: "disconnectWallet",
        decl: {
          start: {
            line: 545,
            column: 15
          },
          end: {
            line: 545,
            column: 31
          }
        },
        loc: {
          start: {
            line: 545,
            column: 44
          },
          end: {
            line: 568,
            column: 1
          }
        },
        line: 545
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 35
          },
          end: {
            line: 78,
            column: 38
          }
        }, {
          start: {
            line: 78,
            column: 41
          },
          end: {
            line: 80,
            column: 5
          }
        }],
        line: 78
      },
      "1": {
        loc: {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 14
          }
        }, {
          start: {
            line: 78,
            column: 18
          },
          end: {
            line: 78,
            column: 32
          }
        }],
        line: 78
      },
      "2": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "3": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 19
          }
        }, {
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 111,
            column: 61
          }
        }],
        line: 111
      },
      "4": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "5": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 124,
            column: 60
          }
        }, {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 126,
            column: 66
          }
        }, {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 128,
            column: 57
          }
        }, {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 130,
            column: 63
          }
        }, {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 132,
            column: 28
          }
        }, {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 134,
            column: 29
          }
        }],
        line: 122
      },
      "6": {
        loc: {
          start: {
            line: 152,
            column: 11
          },
          end: {
            line: 152,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 11
          },
          end: {
            line: 152,
            column: 18
          }
        }, {
          start: {
            line: 152,
            column: 22
          },
          end: {
            line: 152,
            column: 26
          }
        }],
        line: 152
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 26
          }
        }, {
          start: {
            line: 161,
            column: 30
          },
          end: {
            line: 161,
            column: 34
          }
        }],
        line: 161
      },
      "9": {
        loc: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "10": {
        loc: {
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 179,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 179,
            column: 26
          }
        }, {
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 179,
            column: 34
          }
        }],
        line: 179
      },
      "11": {
        loc: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "12": {
        loc: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 28
          },
          end: {
            line: 197,
            column: 52
          }
        }, {
          start: {
            line: 197,
            column: 55
          },
          end: {
            line: 197,
            column: 59
          }
        }],
        line: 197
      },
      "13": {
        loc: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "14": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "15": {
        loc: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "16": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "17": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "18": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "19": {
        loc: {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 302,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 302,
            column: 21
          }
        }, {
          start: {
            line: 302,
            column: 25
          },
          end: {
            line: 302,
            column: 46
          }
        }],
        line: 302
      },
      "20": {
        loc: {
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 317,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 317,
            column: 13
          }
        }, {
          start: {
            line: 315,
            column: 19
          },
          end: {
            line: 317,
            column: 13
          }
        }],
        line: 313
      },
      "21": {
        loc: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "22": {
        loc: {
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "23": {
        loc: {
          start: {
            line: 401,
            column: 16
          },
          end: {
            line: 403,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 16
          },
          end: {
            line: 403,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "24": {
        loc: {
          start: {
            line: 401,
            column: 20
          },
          end: {
            line: 401,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 401,
            column: 20
          },
          end: {
            line: 401,
            column: 40
          }
        }, {
          start: {
            line: 401,
            column: 44
          },
          end: {
            line: 401,
            column: 63
          }
        }],
        line: 401
      },
      "25": {
        loc: {
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 409,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 409,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "26": {
        loc: {
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 414,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 414,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "27": {
        loc: {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "28": {
        loc: {
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "29": {
        loc: {
          start: {
            line: 424,
            column: 12
          },
          end: {
            line: 424,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 12
          },
          end: {
            line: 424,
            column: 20
          }
        }, {
          start: {
            line: 424,
            column: 24
          },
          end: {
            line: 424,
            column: 43
          }
        }],
        line: 424
      },
      "30": {
        loc: {
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "31": {
        loc: {
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "32": {
        loc: {
          start: {
            line: 456,
            column: 19
          },
          end: {
            line: 456,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 456,
            column: 19
          },
          end: {
            line: 456,
            column: 54
          }
        }, {
          start: {
            line: 456,
            column: 58
          },
          end: {
            line: 456,
            column: 89
          }
        }],
        line: 456
      },
      "33": {
        loc: {
          start: {
            line: 457,
            column: 20
          },
          end: {
            line: 457,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 457,
            column: 20
          },
          end: {
            line: 457,
            column: 55
          }
        }, {
          start: {
            line: 457,
            column: 59
          },
          end: {
            line: 457,
            column: 93
          }
        }],
        line: 457
      },
      "34": {
        loc: {
          start: {
            line: 458,
            column: 20
          },
          end: {
            line: 458,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 20
          },
          end: {
            line: 458,
            column: 63
          }
        }, {
          start: {
            line: 458,
            column: 67
          },
          end: {
            line: 458,
            column: 115
          }
        }],
        line: 458
      },
      "35": {
        loc: {
          start: {
            line: 460,
            column: 30
          },
          end: {
            line: 460,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 460,
            column: 30
          },
          end: {
            line: 460,
            column: 62
          }
        }, {
          start: {
            line: 460,
            column: 66
          },
          end: {
            line: 460,
            column: 70
          }
        }],
        line: 460
      },
      "36": {
        loc: {
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 481,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 481,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "37": {
        loc: {
          start: {
            line: 479,
            column: 16
          },
          end: {
            line: 479,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 479,
            column: 16
          },
          end: {
            line: 479,
            column: 36
          }
        }, {
          start: {
            line: 479,
            column: 40
          },
          end: {
            line: 479,
            column: 64
          }
        }],
        line: 479
      },
      "38": {
        loc: {
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 486,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 486,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      },
      "39": {
        loc: {
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "40": {
        loc: {
          start: {
            line: 494,
            column: 12
          },
          end: {
            line: 496,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 12
          },
          end: {
            line: 496,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "41": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "42": {
        loc: {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 500,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 500,
            column: 20
          }
        }, {
          start: {
            line: 500,
            column: 24
          },
          end: {
            line: 500,
            column: 43
          }
        }],
        line: 500
      },
      "43": {
        loc: {
          start: {
            line: 518,
            column: 4
          },
          end: {
            line: 531,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 520,
            column: 46
          }
        }, {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 522,
            column: 46
          }
        }, {
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 524,
            column: 49
          }
        }, {
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 526,
            column: 49
          }
        }, {
          start: {
            line: 527,
            column: 8
          },
          end: {
            line: 528,
            column: 51
          }
        }, {
          start: {
            line: 529,
            column: 8
          },
          end: {
            line: 530,
            column: 49
          }
        }],
        line: 518
      },
      "44": {
        loc: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      },
      "45": {
        loc: {
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 537,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 537,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 535
      },
      "46": {
        loc: {
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 535,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 535,
            column: 35
          }
        }, {
          start: {
            line: 535,
            column: 39
          },
          end: {
            line: 535,
            column: 71
          }
        }],
        line: 535
      },
      "47": {
        loc: {
          start: {
            line: 538,
            column: 4
          },
          end: {
            line: 538,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 538,
            column: 4
          },
          end: {
            line: 538,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 538
      },
      "48": {
        loc: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "49": {
        loc: {
          start: {
            line: 540,
            column: 4
          },
          end: {
            line: 540,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 540,
            column: 4
          },
          end: {
            line: 540,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 540
      },
      "50": {
        loc: {
          start: {
            line: 541,
            column: 4
          },
          end: {
            line: 541,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 4
          },
          end: {
            line: 541,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "51": {
        loc: {
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 542,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 542,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 542
      },
      "52": {
        loc: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 563,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 563,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 546
      },
      "53": {
        loc: {
          start: {
            line: 546,
            column: 8
          },
          end: {
            line: 546,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 546,
            column: 8
          },
          end: {
            line: 546,
            column: 38
          }
        }, {
          start: {
            line: 546,
            column: 42
          },
          end: {
            line: 546,
            column: 53
          }
        }],
        line: 546
      },
      "54": {
        loc: {
          start: {
            line: 548,
            column: 12
          },
          end: {
            line: 554,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 548,
            column: 12
          },
          end: {
            line: 554,
            column: 13
          }
        }, {
          start: {
            line: 551,
            column: 19
          },
          end: {
            line: 554,
            column: 13
          }
        }],
        line: 548
      },
      "55": {
        loc: {
          start: {
            line: 551,
            column: 19
          },
          end: {
            line: 554,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 19
          },
          end: {
            line: 554,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      },
      "56": {
        loc: {
          start: {
            line: 565,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0, 0, 0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/services/walletService.ts"],
      sourcesContent: ["'use client';\n\n/**\n * \u7EDF\u4E00\u7684\u94B1\u5305\u670D\u52A1 - \u652F\u6301\u670D\u52A1\u5668\u7AEF\u6E32\u67D3\u548C\u5BA2\u6237\u7AEF\u4F7F\u7528\n * \u6574\u5408\u4E86simpleWalletService\u548CwalletService\u7684\u529F\u80FD\n */\n\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { EthereumProvider } from '@walletconnect/ethereum-provider';\nimport Logger from './logger';\n\n// \u521B\u5EFA\u65E5\u5FD7\u8BB0\u5F55\u5668\nconst logger = Logger.createContextLogger({ component: 'WalletService' });\n\n// \u94B1\u5305\u7C7B\u578B\nexport type WalletType = 'metamask' | 'walletconnect' | 'coinbase' | 'trustwallet' | 'tokenpocket';\n\n// \u94B1\u5305\u8FDE\u63A5\u56DE\u8C03\u63A5\u53E3\nexport interface WalletCallbacks {\n  onConnect?: (address: string, chainId: number) => void;\n  onDisconnect?: () => void;\n  onAccountsChanged?: (accounts: string[]) => void;\n  onChainChanged?: (chainId: number) => void;\n}\n\n// \u7F51\u7EDC\u5B9A\u4E49\nexport interface NetworkInfo {\n  chainId: number;\n  name: string;\n  currency: string;\n  rpcUrl: string;\n  blockExplorerUrl: string;\n  testnet: boolean;\n}\n\n// \u652F\u6301\u7684\u7F51\u7EDC\nconst NETWORKS: NetworkInfo[] = [\n  {\n    chainId: 56,\n    name: 'BSC',\n    currency: 'BNB',\n    rpcUrl: 'https://bsc-dataseed.binance.org/',\n    blockExplorerUrl: 'https://bscscan.com',\n    testnet: false\n  },\n  {\n    chainId: 97,\n    name: 'BSC Testnet',\n    currency: 'tBNB',\n    rpcUrl: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n    blockExplorerUrl: 'https://testnet.bscscan.com',\n    testnet: true\n  }\n];\n\n// WalletConnect \u63D0\u4F9B\u8005\u5355\u4F8B\nlet walletConnectProvider: WalletConnectProvider | null = null;\nlet ethereumProvider: any = null; // \u4F7F\u7528any\u7C7B\u578B\u6682\u65F6\u907F\u5F00\u7C7B\u578B\u9519\u8BEF\n\n// \u68C0\u67E5\u662F\u5426\u5728\u6D4F\u89C8\u5668\u73AF\u5883\nexport const isBrowser = () => typeof window !== 'undefined';\n\n// \u5B89\u5168\u5730\u8BBF\u95EE window.ethereum\nconst getEthereum = () => {\n  if (isBrowser() && typeof window.ethereum !== 'undefined') {\n    return window.ethereum;\n  }\n  return null;\n}\n\n// \u68C0\u67E5\u662F\u5426\u6709\u94B1\u5305\u53EF\u7528\nexport const hasEthereum = (): boolean => {\n  return getEthereum() !== null;\n};\n\n// \u68C0\u67E5\u94B1\u5305\u662F\u5426\u5B89\u88C5\nexport const isWalletInstalled = (type: WalletType): boolean => {\n  try {\n    if (!isBrowser()) return false;\n\n    switch (type) {\n      case 'metamask':\n        return Boolean(window.ethereum?.isMetaMask);\n      case 'coinbase':\n        return Boolean(window.ethereum?.isCoinbaseWallet);\n      case 'trustwallet':\n        return Boolean(window.ethereum?.isTrust);\n      case 'tokenpocket':\n        return Boolean(window.ethereum?.isTokenPocket);\n      case 'walletconnect':\n        return true; // WalletConnect \u4E0D\u9700\u8981\u5B89\u88C5\u6D4F\u89C8\u5668\u63D2\u4EF6\n      default:\n        return false;\n    }\n  } catch (e) {\n    logger.warn(`\u68C0\u67E5\u94B1\u5305\u5B89\u88C5\u65F6\u51FA\u9519: ${type}`, {\n      action: 'isWalletInstalled',\n      additionalData: { error: e, walletType: type }\n    });\n    return false;\n  }\n};\n\n// \u83B7\u53D6\u6240\u6709\u652F\u6301\u7684\u7F51\u7EDC\nexport const getUserNetworks = (): NetworkInfo[] => {\n  return NETWORKS;\n};\n\n// \u6839\u636E\u94FEID\u83B7\u53D6\u7F51\u7EDC\u4FE1\u606F\nexport const getNetworkInfo = (chainId: number): NetworkInfo | null => {\n  const network = NETWORKS.find(net => net.chainId === chainId);\n  return network || null;\n};\n\n// \u8FDE\u63A5\u94B1\u5305\nexport const connectWallet = async (): Promise<string | null> => {\n  const ethereum = getEthereum();\n  if (!ethereum) return null;\n\n  try {\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n    return accounts[0] || null;\n  } catch (error) {\n    logger.error('\u8FDE\u63A5\u94B1\u5305\u65F6\u51FA\u9519', {\n      action: 'connectWallet',\n      additionalData: { error }\n    });\n    return null;\n  }\n};\n\n// \u83B7\u53D6\u5F53\u524D\u8D26\u6237\nexport const getCurrentAccount = async (): Promise<string | null> => {\n  const ethereum = getEthereum();\n  if (!ethereum) return null;\n\n  try {\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n    return accounts[0] || null;\n  } catch (error) {\n    logger.error('\u83B7\u53D6\u8D26\u6237\u65F6\u51FA\u9519', {\n      action: 'getCurrentAccount',\n      additionalData: { error }\n    });\n    return null;\n  }\n};\n\n// \u83B7\u53D6\u5F53\u524D\u94FEID\nexport const getCurrentChainId = async (): Promise<number | null> => {\n  const ethereum = getEthereum();\n  if (!ethereum) return null;\n\n  try {\n    const chainIdHex = await ethereum.request({ method: 'eth_chainId' });\n    return chainIdHex ? parseInt(chainIdHex, 16) : null;\n  } catch (error) {\n    logger.error('\u83B7\u53D6\u94FEID\u65F6\u51FA\u9519', {\n      action: 'getCurrentChainId',\n      additionalData: { error }\n    });\n    return null;\n  }\n};\n\n// \u5207\u6362\u7F51\u7EDC\nexport const switchNetwork = async (chainId: number): Promise<boolean> => {\n  const ethereum = getEthereum();\n  if (!ethereum) return false;\n\n  try {\n    await ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: `0x${chainId.toString(16)}` }]\n    });\n    return true;\n  } catch (error) {\n    logger.warn('\u5207\u6362\u7F51\u7EDC\u65F6\u51FA\u9519', {\n      action: 'switchNetwork',\n      additionalData: { error, chainId }\n    });\n\n    // \u5982\u679C\u7F51\u7EDC\u4E0D\u5B58\u5728\uFF0C\u5C1D\u8BD5\u6DFB\u52A0\n    const network = getNetworkInfo(chainId);\n    if (network) {\n      try {\n        await ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: network.name,\n            nativeCurrency: {\n              name: network.currency,\n              symbol: network.currency,\n              decimals: 18\n            },\n            rpcUrls: [network.rpcUrl],\n            blockExplorerUrls: [network.blockExplorerUrl]\n          }]\n        });\n        return true;\n      } catch (addError) {\n        logger.error('\u6DFB\u52A0\u7F51\u7EDC\u65F6\u51FA\u9519', {\n          action: 'addNetwork',\n          additionalData: { error: addError, chainId, network }\n        });\n        return false;\n      }\n    }\n    return false;\n  }\n};\n\n// \u8BBE\u7F6E\u8D26\u6237\u53D8\u5316\u76D1\u542C\u5668\nexport const setupAccountChangeListener = (callback: (accounts: string[]) => void): (() => void) | null => {\n  const ethereum = getEthereum();\n  if (!ethereum) return null;\n\n  const handleAccountsChanged = (accounts: string[]) => {\n    callback(accounts);\n  };\n\n  ethereum.on('accountsChanged', handleAccountsChanged);\n\n  // \u8FD4\u56DE\u6E05\u7406\u51FD\u6570\n  return () => {\n    ethereum.removeListener('accountsChanged', handleAccountsChanged);\n  };\n};\n\n// \u8FDE\u63A5\u6D4F\u89C8\u5668\u63D2\u4EF6\u94B1\u5305\nexport async function connectBrowserWallet(type: 'metamask' | 'coinbase' | 'trustwallet' | 'tokenpocket', callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  try {\n    if (!isWalletInstalled(type)) {\n      const walletNames = {\n        metamask: 'MetaMask',\n        coinbase: 'Coinbase Wallet',\n        trustwallet: 'Trust Wallet',\n        tokenpocket: 'TokenPocket'\n      };\n\n      throw new Error(`${walletNames[type]}\u94B1\u5305\u672A\u5B89\u88C5`);\n    }\n\n    // \u786E\u4FDDethereum\u5B58\u5728\n    if (!window.ethereum) {\n      throw new Error('\u65E0\u6CD5\u8BBF\u95EE\u4EE5\u592A\u574A\u63D0\u4F9B\u8005');\n    }\n\n    // \u5B89\u5168\u5730\u83B7\u53D6ethereum\u5F15\u7528\n    const provider = window.ethereum;\n\n    // \u8BF7\u6C42\u8D26\u6237\u6388\u6743\n    const accounts = await provider.request({ method: 'eth_requestAccounts' });\n\n    if (!accounts || accounts.length === 0) {\n      throw new Error('\u672A\u80FD\u83B7\u53D6\u94B1\u5305\u8D26\u6237');\n    }\n\n    const address = accounts[0];\n\n    // \u83B7\u53D6\u94FEID\n    const chainIdHex = await provider.request({ method: 'eth_chainId' });\n    const chainId = parseInt(chainIdHex as string, 16);\n\n    // \u8BBE\u7F6E\u4E8B\u4EF6\u76D1\u542C\n    provider.on('accountsChanged', (accounts: string[]) => {\n      if (accounts.length === 0) {\n        callbacks?.onDisconnect?.();\n      } else {\n        callbacks?.onAccountsChanged?.(accounts);\n      }\n    });\n\n    provider.on('chainChanged', (chainIdHex: string) => {\n      const newChainId = parseInt(chainIdHex, 16);\n      callbacks?.onChainChanged?.(newChainId);\n    });\n\n    provider.on('disconnect', () => {\n      callbacks?.onDisconnect?.();\n    });\n\n    // \u89E6\u53D1\u8FDE\u63A5\u56DE\u8C03\n    callbacks?.onConnect?.(address, chainId);\n\n    return { address, chainId };\n  } catch (error) {\n    logger.error(`\u8FDE\u63A5${type}\u94B1\u5305\u5931\u8D25`, {\n      action: 'connectBrowserWallet',\n      additionalData: { error, walletType: type }\n    });\n    return null;\n  }\n}\n\n// \u8FDE\u63A5 MetaMask\nexport async function connectMetamask(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  return connectBrowserWallet('metamask', callbacks);\n}\n\n// \u8FDE\u63A5 Coinbase Wallet\nexport async function connectCoinbase(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  return connectBrowserWallet('coinbase', callbacks);\n}\n\n// \u8FDE\u63A5 Trust Wallet\nexport async function connectTrustWallet(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  return connectBrowserWallet('trustwallet', callbacks);\n}\n\n// \u8FDE\u63A5 TokenPocket\nexport async function connectTokenPocket(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  return connectBrowserWallet('tokenpocket', callbacks);\n}\n\n// \u8FDE\u63A5 WalletConnect (\u4F7F\u7528\u6700\u65B0\u7248\u672C)\nexport async function connectWalletConnectV2(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  try {\n    // \u9879\u76EEID\u4ECE\u73AF\u5883\u53D8\u91CF\u83B7\u53D6\n    const projectId = process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID;\n    if (!projectId) {\n      throw new Error('\u672A\u914D\u7F6EWalletConnect\u9879\u76EEID');\n    }\n\n    // \u5982\u679C\u5DF2\u6709\u8FDE\u63A5\uFF0C\u5148\u65AD\u5F00\n    if (ethereumProvider) {\n      await ethereumProvider.disconnect();\n      ethereumProvider = null;\n    }\n\n    // \u521B\u5EFA\u65B0\u7684EthereumProvider\n    ethereumProvider = await EthereumProvider.init({\n      projectId,\n      showQrModal: true,\n      chains: [56], // BSC Mainnet\n      optionalChains: [1, 97], // Ethereum Mainnet, BSC Testnet\n      methods: [\n        'eth_sendTransaction',\n        'eth_sign',\n        'personal_sign',\n        'eth_signTypedData',\n      ],\n      events: [\n        'chainChanged',\n        'accountsChanged',\n      ],\n      qrModalOptions: {\n        themeMode: 'dark',\n        themeVariables: {\n          '--wcm-z-index': '99999999', // \u786E\u4FDDQR\u7801\u6A21\u6001\u6846\u5728\u6700\u4E0A\u5C42\n          '--wcm-font-family': 'sans-serif',\n          '--wcm-background-color': '#1a1a1a',\n          '--wcm-accent-color': '#0de5ff',\n        },\n      }\n    });\n\n    // \u6CE8\u518C\u4E8B\u4EF6\u76D1\u542C\u5668\n    ethereumProvider.on('connect', (info: { chainId: number }) => {\n      ethereumProvider?.getAccounts().then((accounts: string[]) => {\n        if (callbacks?.onConnect && accounts.length > 0) {\n          callbacks.onConnect(accounts[0], info.chainId);\n        }\n      });\n    });\n\n    ethereumProvider.on('disconnect', () => {\n      if (callbacks?.onDisconnect) {\n        callbacks.onDisconnect();\n      }\n    });\n\n    ethereumProvider.on('accountsChanged', (accounts: string[]) => {\n      if (callbacks?.onAccountsChanged) {\n        callbacks.onAccountsChanged(accounts);\n      }\n    });\n\n    ethereumProvider.on('chainChanged', (chainId: number) => {\n      if (callbacks?.onChainChanged) {\n        callbacks.onChainChanged(chainId);\n      }\n    });\n\n    // \u8BF7\u6C42\u8FDE\u63A5\n    await ethereumProvider.enable();\n    const accounts = await ethereumProvider.getAccounts();\n\n    if (accounts && accounts.length > 0) {\n      return {\n        address: accounts[0],\n        chainId: ethereumProvider.chainId\n      };\n    }\n\n    return null;\n  } catch (error) {\n    logger.error('WalletConnect \u8FDE\u63A5\u5931\u8D25', {\n      action: 'connectWalletConnectV2',\n      additionalData: { error }\n    });\n    return null;\n  }\n}\n\n// \u8FDE\u63A5 WalletConnect\nexport async function connectWalletConnect(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  try {\n    // \u5C1D\u8BD5\u4F7F\u7528\u65B0\u7248\u8FDE\u63A5\n    if (process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID) {\n      return connectWalletConnectV2(callbacks);\n    }\n\n    // \u5982\u679C\u6CA1\u6709\u9879\u76EEID\uFF0C\u56DE\u9000\u5230\u65E7\u7248\n    // \u5982\u679C\u5DF2\u6709\u8FDE\u63A5\uFF0C\u5148\u65AD\u5F00\n    if (walletConnectProvider) {\n      await walletConnectProvider.disconnect();\n      walletConnectProvider = null;\n    }\n\n    // \u521B\u5EFA\u65B0\u7684 WalletConnect \u63D0\u4F9B\u8005\n    walletConnectProvider = new WalletConnectProvider({\n      rpc: {\n        1: process.env.NEXT_PUBLIC_ETH_RPC_URL || 'https://mainnet.infura.io/v3/',\n        56: process.env.NEXT_PUBLIC_BSC_RPC_URL || 'https://bsc-dataseed.binance.org',\n        97: process.env.NEXT_PUBLIC_BSC_TESTNET_RPC_URL || 'https://data-seed-prebsc-1-s1.binance.org:8545'\n      },\n      chainId: parseInt(process.env.NEXT_PUBLIC_CHAIN_ID || '56', 10),\n      qrcode: true,\n      qrcodeModalOptions: {\n        mobileLinks: ['metamask', 'trust', 'coinbase', 'tokenpocket'],\n        desktopLinks: ['metamask', 'trust', 'coinbase', 'tokenpocket'],\n      }\n    });\n\n    // \u6CE8\u518C\u4E8B\u4EF6\u76D1\u542C\u5668\n    walletConnectProvider.on('connect', (info: { accounts: string[]; chainId: number }) => {\n      if (callbacks?.onConnect && info.accounts.length > 0) {\n        callbacks.onConnect(info.accounts[0], info.chainId);\n      }\n    });\n\n    walletConnectProvider.on('disconnect', () => {\n      if (callbacks?.onDisconnect) {\n        callbacks.onDisconnect();\n      }\n    });\n\n    walletConnectProvider.on('accountsChanged', (accounts: string[]) => {\n      if (callbacks?.onAccountsChanged) {\n        callbacks.onAccountsChanged(accounts);\n      }\n    });\n\n    walletConnectProvider.on('chainChanged', (chainId: number) => {\n      if (callbacks?.onChainChanged) {\n        callbacks.onChainChanged(chainId);\n      }\n    });\n\n    // \u8BF7\u6C42\u8FDE\u63A5\n    const accounts = await walletConnectProvider.enable();\n\n    if (accounts && accounts.length > 0) {\n      return {\n        address: accounts[0],\n        chainId: walletConnectProvider.chainId\n      };\n    }\n\n    return null;\n  } catch (error) {\n    logger.error('WalletConnect \u8FDE\u63A5\u5931\u8D25', {\n      action: 'connectWalletConnect',\n      additionalData: { error }\n    });\n    return null;\n  }\n}\n\n// \u8FDE\u63A5\u6307\u5B9A\u7C7B\u578B\u7684\u94B1\u5305\nexport async function connectWalletByType(type: WalletType, callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  switch(type) {\n    case 'metamask':\n      return connectMetamask(callbacks);\n    case 'coinbase':\n      return connectCoinbase(callbacks);\n    case 'trustwallet':\n      return connectTrustWallet(callbacks);\n    case 'tokenpocket':\n      return connectTokenPocket(callbacks);\n    case 'walletconnect':\n      return connectWalletConnect(callbacks);\n    default:\n      throw new Error(`\u4E0D\u652F\u6301\u7684\u94B1\u5305\u7C7B\u578B: ${type}`);\n  }\n}\n\n// \u83B7\u53D6\u5F53\u524D\u8FDE\u63A5\u7684\u94B1\u5305\u7C7B\u578B\nexport function getConnectedWalletType(): WalletType | null {\n  if (!isBrowser()) return null;\n\n  if (ethereumProvider?.connected || walletConnectProvider?.connected) {\n    return 'walletconnect';\n  }\n\n  if (!window.ethereum) return null;\n\n  if (window.ethereum.isMetaMask) return 'metamask';\n  if (window.ethereum.isCoinbaseWallet) return 'coinbase';\n  if (window.ethereum.isTrust) return 'trustwallet';\n  if (window.ethereum.isTokenPocket) return 'tokenpocket';\n\n  return null;\n}\n\n// \u65AD\u5F00\u94B1\u5305\u8FDE\u63A5\nexport async function disconnectWallet(walletType?: WalletType): Promise<void> {\n  if (walletType === 'walletconnect' || !walletType) {\n    try {\n      if (ethereumProvider) {\n        await ethereumProvider.disconnect();\n        ethereumProvider = null;\n      } else if (walletConnectProvider) {\n        await walletConnectProvider.disconnect();\n        walletConnectProvider = null;\n      }\n    } catch (error) {\n      logger.error('\u65AD\u5F00 WalletConnect \u5931\u8D25', {\n        action: 'disconnectWallet',\n        additionalData: { error }\n      });\n    }\n  }\n\n  // \u5BF9\u4E8E\u6D4F\u89C8\u5668\u63D2\u4EF6\u94B1\u5305\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6E05\u9664\u672C\u5730\u5B58\u50A8\n  if (isBrowser()) {\n    localStorage.removeItem('walletconnect');\n  }\n}\n\n// \u6269\u5C55window\u5BF9\u8C61\u7C7B\u578B\ndeclare global {\n  interface Window {\n    ethereum?: {\n      request: (args: any) => Promise<any>;\n      on: (event: string, callback: any) => void;\n      removeListener: (event: string, callback: any) => void;\n      isMetaMask?: boolean;\n      isCoinbaseWallet?: boolean;\n      isTrust?: boolean;\n      isTokenPocket?: boolean;\n    };\n  }\n}\n"],
      names: ["connectBrowserWallet", "connectCoinbase", "connectMetamask", "connectTokenPocket", "connectTrustWallet", "connectWallet", "connectWalletByType", "connectWalletConnect", "connectWalletConnectV2", "disconnectWallet", "getConnectedWalletType", "getCurrentAccount", "getCurrentChainId", "getNetworkInfo", "getUserNetworks", "hasEthereum", "isBrowser", "isWalletInstalled", "setupAccountChangeListener", "switchNetwork", "logger", "Logger", "createContextLogger", "component", "NETWORKS", "chainId", "name", "currency", "rpcUrl", "blockExplorerUrl", "testnet", "walletConnectProvider", "ethereumProvider", "window", "getEthereum", "ethereum", "type", "Boolean", "isMetaMask", "isCoinbaseWallet", "isTrust", "isTokenPocket", "e", "warn", "action", "additionalData", "error", "walletType", "network", "find", "net", "accounts", "request", "method", "chainIdHex", "parseInt", "params", "toString", "chainName", "nativeCurrency", "symbol", "decimals", "rpcUrls", "blockExplorerUrls", "addError", "callback", "handleAccountsChanged", "on", "removeListener", "callbacks", "walletNames", "metamask", "coinbase", "trustwallet", "tokenpocket", "Error", "provider", "length", "address", "onDisconnect", "onAccountsChanged", "newChainId", "onChainChanged", "onConnect", "projectId", "process", "env", "NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID", "disconnect", "EthereumProvider", "init", "showQrModal", "chains", "optionalChains", "methods", "events", "qrModalOptions", "themeMode", "themeVariables", "info", "getAccounts", "then", "enable", "WalletConnectProvider", "rpc", "NEXT_PUBLIC_ETH_RPC_URL", "NEXT_PUBLIC_BSC_RPC_URL", "NEXT_PUBLIC_BSC_TESTNET_RPC_URL", "NEXT_PUBLIC_CHAIN_ID", "qrcode", "qrcodeModalOptions", "mobileLinks", "desktopLinks", "connected", "localStorage", "removeItem"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "240967e20f048bc7aa62f2f30443d73269b1f3ba"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1o4scm9yy0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1o4scm9yy0();
cov_1o4scm9yy0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[0]++;
  cov_1o4scm9yy0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1o4scm9yy0().s[3]++;
_export(exports, {
  connectBrowserWallet: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[1]++;
    cov_1o4scm9yy0().s[4]++;
    return connectBrowserWallet;
  },
  connectCoinbase: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[2]++;
    cov_1o4scm9yy0().s[5]++;
    return connectCoinbase;
  },
  connectMetamask: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[3]++;
    cov_1o4scm9yy0().s[6]++;
    return connectMetamask;
  },
  connectTokenPocket: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[4]++;
    cov_1o4scm9yy0().s[7]++;
    return connectTokenPocket;
  },
  connectTrustWallet: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[5]++;
    cov_1o4scm9yy0().s[8]++;
    return connectTrustWallet;
  },
  connectWallet: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[6]++;
    cov_1o4scm9yy0().s[9]++;
    return connectWallet;
  },
  connectWalletByType: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[7]++;
    cov_1o4scm9yy0().s[10]++;
    return connectWalletByType;
  },
  connectWalletConnect: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[8]++;
    cov_1o4scm9yy0().s[11]++;
    return connectWalletConnect;
  },
  connectWalletConnectV2: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[9]++;
    cov_1o4scm9yy0().s[12]++;
    return connectWalletConnectV2;
  },
  disconnectWallet: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[10]++;
    cov_1o4scm9yy0().s[13]++;
    return disconnectWallet;
  },
  getConnectedWalletType: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[11]++;
    cov_1o4scm9yy0().s[14]++;
    return getConnectedWalletType;
  },
  getCurrentAccount: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[12]++;
    cov_1o4scm9yy0().s[15]++;
    return getCurrentAccount;
  },
  getCurrentChainId: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[13]++;
    cov_1o4scm9yy0().s[16]++;
    return getCurrentChainId;
  },
  getNetworkInfo: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[14]++;
    cov_1o4scm9yy0().s[17]++;
    return getNetworkInfo;
  },
  getUserNetworks: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[15]++;
    cov_1o4scm9yy0().s[18]++;
    return getUserNetworks;
  },
  hasEthereum: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[16]++;
    cov_1o4scm9yy0().s[19]++;
    return hasEthereum;
  },
  isBrowser: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[17]++;
    cov_1o4scm9yy0().s[20]++;
    return isBrowser;
  },
  isWalletInstalled: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[18]++;
    cov_1o4scm9yy0().s[21]++;
    return isWalletInstalled;
  },
  setupAccountChangeListener: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[19]++;
    cov_1o4scm9yy0().s[22]++;
    return setupAccountChangeListener;
  },
  switchNetwork: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[20]++;
    cov_1o4scm9yy0().s[23]++;
    return switchNetwork;
  }
});
const _web3provider =
/* istanbul ignore next */
(/*#__PURE__*/cov_1o4scm9yy0().s[24]++, _interop_require_default(require("@walletconnect/web3-provider")));
const _ethereumprovider =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[25]++, require("@walletconnect/ethereum-provider"));
const _logger =
/* istanbul ignore next */
(/*#__PURE__*/cov_1o4scm9yy0().s[26]++, _interop_require_default(require("./logger")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[21]++;
  cov_1o4scm9yy0().s[27]++;
  return /* istanbul ignore next */(cov_1o4scm9yy0().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[0][1]++, {
    default: obj
  });
}
// 创建日志记录器
const logger =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[28]++, _logger.default.createContextLogger({
  component: 'WalletService'
}));
// 支持的网络
const NETWORKS =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[29]++, [{
  chainId: 56,
  name: 'BSC',
  currency: 'BNB',
  rpcUrl: 'https://bsc-dataseed.binance.org/',
  blockExplorerUrl: 'https://bscscan.com',
  testnet: false
}, {
  chainId: 97,
  name: 'BSC Testnet',
  currency: 'tBNB',
  rpcUrl: 'https://data-seed-prebsc-1-s1.binance.org:8545/',
  blockExplorerUrl: 'https://testnet.bscscan.com',
  testnet: true
}]);
// WalletConnect 提供者单例
let walletConnectProvider =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[30]++, null);
let ethereumProvider =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[31]++, null); // 使用any类型暂时避开类型错误
/* istanbul ignore next */
cov_1o4scm9yy0().s[32]++;
const isBrowser = () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[22]++;
  cov_1o4scm9yy0().s[33]++;
  return typeof window !== 'undefined';
};
// 安全地访问 window.ethereum
/* istanbul ignore next */
cov_1o4scm9yy0().s[34]++;
const getEthereum = () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[23]++;
  cov_1o4scm9yy0().s[35]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[3][0]++, isBrowser()) &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[3][1]++, typeof window.ethereum !== 'undefined')) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[2][0]++;
    cov_1o4scm9yy0().s[36]++;
    return window.ethereum;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[2][1]++;
  }
  cov_1o4scm9yy0().s[37]++;
  return null;
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[38]++;
const hasEthereum = () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[24]++;
  cov_1o4scm9yy0().s[39]++;
  return getEthereum() !== null;
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[40]++;
const isWalletInstalled = type => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[25]++;
  cov_1o4scm9yy0().s[41]++;
  try {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[42]++;
    if (!isBrowser()) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[4][0]++;
      cov_1o4scm9yy0().s[43]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[4][1]++;
    }
    cov_1o4scm9yy0().s[44]++;
    switch (type) {
      case 'metamask':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[5][0]++;
        cov_1o4scm9yy0().s[45]++;
        return Boolean(window.ethereum?.isMetaMask);
      case 'coinbase':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[5][1]++;
        cov_1o4scm9yy0().s[46]++;
        return Boolean(window.ethereum?.isCoinbaseWallet);
      case 'trustwallet':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[5][2]++;
        cov_1o4scm9yy0().s[47]++;
        return Boolean(window.ethereum?.isTrust);
      case 'tokenpocket':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[5][3]++;
        cov_1o4scm9yy0().s[48]++;
        return Boolean(window.ethereum?.isTokenPocket);
      case 'walletconnect':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[5][4]++;
        cov_1o4scm9yy0().s[49]++;
        return true;
      // WalletConnect 不需要安装浏览器插件
      default:
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[5][5]++;
        cov_1o4scm9yy0().s[50]++;
        return false;
    }
  } catch (e) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[51]++;
    logger.warn(`检查钱包安装时出错: ${type}`, {
      action: 'isWalletInstalled',
      additionalData: {
        error: e,
        walletType: type
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[52]++;
    return false;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[53]++;
const getUserNetworks = () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[26]++;
  cov_1o4scm9yy0().s[54]++;
  return NETWORKS;
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[55]++;
const getNetworkInfo = chainId => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[27]++;
  const network =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[56]++, NETWORKS.find(net => {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[28]++;
    cov_1o4scm9yy0().s[57]++;
    return net.chainId === chainId;
  }));
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[58]++;
  return /* istanbul ignore next */(cov_1o4scm9yy0().b[6][0]++, network) ||
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[6][1]++, null);
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[59]++;
const connectWallet = async () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[29]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[60]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[61]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[7][0]++;
    cov_1o4scm9yy0().s[62]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[7][1]++;
  }
  cov_1o4scm9yy0().s[63]++;
  try {
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[64]++, await ethereum.request({
      method: 'eth_requestAccounts'
    }));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[65]++;
    return /* istanbul ignore next */(cov_1o4scm9yy0().b[8][0]++, accounts[0]) ||
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[8][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[66]++;
    logger.error('连接钱包时出错', {
      action: 'connectWallet',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[67]++;
    return null;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[68]++;
const getCurrentAccount = async () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[30]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[69]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[70]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[9][0]++;
    cov_1o4scm9yy0().s[71]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[9][1]++;
  }
  cov_1o4scm9yy0().s[72]++;
  try {
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[73]++, await ethereum.request({
      method: 'eth_accounts'
    }));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[74]++;
    return /* istanbul ignore next */(cov_1o4scm9yy0().b[10][0]++, accounts[0]) ||
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[10][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[75]++;
    logger.error('获取账户时出错', {
      action: 'getCurrentAccount',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[76]++;
    return null;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[77]++;
const getCurrentChainId = async () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[31]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[78]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[79]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[11][0]++;
    cov_1o4scm9yy0().s[80]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[11][1]++;
  }
  cov_1o4scm9yy0().s[81]++;
  try {
    const chainIdHex =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[82]++, await ethereum.request({
      method: 'eth_chainId'
    }));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[83]++;
    return chainIdHex ?
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[12][0]++, parseInt(chainIdHex, 16)) :
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[12][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[84]++;
    logger.error('获取链ID时出错', {
      action: 'getCurrentChainId',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[85]++;
    return null;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[86]++;
const switchNetwork = async chainId => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[32]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[87]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[88]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[13][0]++;
    cov_1o4scm9yy0().s[89]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[13][1]++;
  }
  cov_1o4scm9yy0().s[90]++;
  try {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[91]++;
    await ethereum.request({
      method: 'wallet_switchEthereumChain',
      params: [{
        chainId: `0x${chainId.toString(16)}`
      }]
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[92]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[93]++;
    logger.warn('切换网络时出错', {
      action: 'switchNetwork',
      additionalData: {
        error,
        chainId
      }
    });
    // 如果网络不存在，尝试添加
    const network =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[94]++, getNetworkInfo(chainId));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[95]++;
    if (network) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[14][0]++;
      cov_1o4scm9yy0().s[96]++;
      try {
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[97]++;
        await ethereum.request({
          method: 'wallet_addEthereumChain',
          params: [{
            chainId: `0x${chainId.toString(16)}`,
            chainName: network.name,
            nativeCurrency: {
              name: network.currency,
              symbol: network.currency,
              decimals: 18
            },
            rpcUrls: [network.rpcUrl],
            blockExplorerUrls: [network.blockExplorerUrl]
          }]
        });
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[98]++;
        return true;
      } catch (addError) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[99]++;
        logger.error('添加网络时出错', {
          action: 'addNetwork',
          additionalData: {
            error: addError,
            chainId,
            network
          }
        });
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[100]++;
        return false;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[14][1]++;
    }
    cov_1o4scm9yy0().s[101]++;
    return false;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[102]++;
const setupAccountChangeListener = callback => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[33]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[103]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[104]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[15][0]++;
    cov_1o4scm9yy0().s[105]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[15][1]++;
  }
  cov_1o4scm9yy0().s[106]++;
  const handleAccountsChanged = accounts => {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[34]++;
    cov_1o4scm9yy0().s[107]++;
    callback(accounts);
  };
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[108]++;
  ethereum.on('accountsChanged', handleAccountsChanged);
  // 返回清理函数
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[109]++;
  return () => {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[35]++;
    cov_1o4scm9yy0().s[110]++;
    ethereum.removeListener('accountsChanged', handleAccountsChanged);
  };
};
async function connectBrowserWallet(type, callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[36]++;
  cov_1o4scm9yy0().s[111]++;
  try {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[112]++;
    if (!isWalletInstalled(type)) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[16][0]++;
      const walletNames =
      /* istanbul ignore next */
      (cov_1o4scm9yy0().s[113]++, {
        metamask: 'MetaMask',
        coinbase: 'Coinbase Wallet',
        trustwallet: 'Trust Wallet',
        tokenpocket: 'TokenPocket'
      });
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[114]++;
      throw new Error(`${walletNames[type]}钱包未安装`);
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[16][1]++;
    }
    // 确保ethereum存在
    cov_1o4scm9yy0().s[115]++;
    if (!window.ethereum) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[17][0]++;
      cov_1o4scm9yy0().s[116]++;
      throw new Error('无法访问以太坊提供者');
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[17][1]++;
    }
    // 安全地获取ethereum引用
    const provider =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[117]++, window.ethereum);
    // 请求账户授权
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[118]++, await provider.request({
      method: 'eth_requestAccounts'
    }));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[119]++;
    if (
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[19][0]++, !accounts) ||
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[19][1]++, accounts.length === 0)) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[18][0]++;
      cov_1o4scm9yy0().s[120]++;
      throw new Error('未能获取钱包账户');
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[18][1]++;
    }
    const address =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[121]++, accounts[0]);
    // 获取链ID
    const chainIdHex =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[122]++, await provider.request({
      method: 'eth_chainId'
    }));
    const chainId =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[123]++, parseInt(chainIdHex, 16));
    // 设置事件监听
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[124]++;
    provider.on('accountsChanged', accounts => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[37]++;
      cov_1o4scm9yy0().s[125]++;
      if (accounts.length === 0) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[20][0]++;
        cov_1o4scm9yy0().s[126]++;
        callbacks?.onDisconnect?.();
      } else {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[20][1]++;
        cov_1o4scm9yy0().s[127]++;
        callbacks?.onAccountsChanged?.(accounts);
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[128]++;
    provider.on('chainChanged', chainIdHex => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[38]++;
      const newChainId =
      /* istanbul ignore next */
      (cov_1o4scm9yy0().s[129]++, parseInt(chainIdHex, 16));
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[130]++;
      callbacks?.onChainChanged?.(newChainId);
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[131]++;
    provider.on('disconnect', () => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[39]++;
      cov_1o4scm9yy0().s[132]++;
      callbacks?.onDisconnect?.();
    });
    // 触发连接回调
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[133]++;
    callbacks?.onConnect?.(address, chainId);
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[134]++;
    return {
      address,
      chainId
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[135]++;
    logger.error(`连接${type}钱包失败`, {
      action: 'connectBrowserWallet',
      additionalData: {
        error,
        walletType: type
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[136]++;
    return null;
  }
}
async function connectMetamask(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[40]++;
  cov_1o4scm9yy0().s[137]++;
  return connectBrowserWallet('metamask', callbacks);
}
async function connectCoinbase(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[41]++;
  cov_1o4scm9yy0().s[138]++;
  return connectBrowserWallet('coinbase', callbacks);
}
async function connectTrustWallet(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[42]++;
  cov_1o4scm9yy0().s[139]++;
  return connectBrowserWallet('trustwallet', callbacks);
}
async function connectTokenPocket(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[43]++;
  cov_1o4scm9yy0().s[140]++;
  return connectBrowserWallet('tokenpocket', callbacks);
}
async function connectWalletConnectV2(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[44]++;
  cov_1o4scm9yy0().s[141]++;
  try {
    // 项目ID从环境变量获取
    const projectId =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[142]++, process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID);
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[143]++;
    if (!projectId) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[21][0]++;
      cov_1o4scm9yy0().s[144]++;
      throw new Error('未配置WalletConnect项目ID');
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[21][1]++;
    }
    // 如果已有连接，先断开
    cov_1o4scm9yy0().s[145]++;
    if (ethereumProvider) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[22][0]++;
      cov_1o4scm9yy0().s[146]++;
      await ethereumProvider.disconnect();
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[147]++;
      ethereumProvider = null;
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[22][1]++;
    }
    // 创建新的EthereumProvider
    cov_1o4scm9yy0().s[148]++;
    ethereumProvider = await _ethereumprovider.EthereumProvider.init({
      projectId,
      showQrModal: true,
      chains: [56],
      optionalChains: [1, 97],
      methods: ['eth_sendTransaction', 'eth_sign', 'personal_sign', 'eth_signTypedData'],
      events: ['chainChanged', 'accountsChanged'],
      qrModalOptions: {
        themeMode: 'dark',
        themeVariables: {
          '--wcm-z-index': '99999999',
          '--wcm-font-family': 'sans-serif',
          '--wcm-background-color': '#1a1a1a',
          '--wcm-accent-color': '#0de5ff'
        }
      }
    });
    // 注册事件监听器
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[149]++;
    ethereumProvider.on('connect', info => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[45]++;
      cov_1o4scm9yy0().s[150]++;
      ethereumProvider?.getAccounts().then(accounts => {
        /* istanbul ignore next */
        cov_1o4scm9yy0().f[46]++;
        cov_1o4scm9yy0().s[151]++;
        if (
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[24][0]++, callbacks?.onConnect) &&
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[24][1]++, accounts.length > 0)) {
          /* istanbul ignore next */
          cov_1o4scm9yy0().b[23][0]++;
          cov_1o4scm9yy0().s[152]++;
          callbacks.onConnect(accounts[0], info.chainId);
        } else
        /* istanbul ignore next */
        {
          cov_1o4scm9yy0().b[23][1]++;
        }
      });
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[153]++;
    ethereumProvider.on('disconnect', () => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[47]++;
      cov_1o4scm9yy0().s[154]++;
      if (callbacks?.onDisconnect) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[25][0]++;
        cov_1o4scm9yy0().s[155]++;
        callbacks.onDisconnect();
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[25][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[156]++;
    ethereumProvider.on('accountsChanged', accounts => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[48]++;
      cov_1o4scm9yy0().s[157]++;
      if (callbacks?.onAccountsChanged) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[26][0]++;
        cov_1o4scm9yy0().s[158]++;
        callbacks.onAccountsChanged(accounts);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[26][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[159]++;
    ethereumProvider.on('chainChanged', chainId => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[49]++;
      cov_1o4scm9yy0().s[160]++;
      if (callbacks?.onChainChanged) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[27][0]++;
        cov_1o4scm9yy0().s[161]++;
        callbacks.onChainChanged(chainId);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[27][1]++;
      }
    });
    // 请求连接
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[162]++;
    await ethereumProvider.enable();
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[163]++, await ethereumProvider.getAccounts());
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[164]++;
    if (
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[29][0]++, accounts) &&
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[29][1]++, accounts.length > 0)) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[28][0]++;
      cov_1o4scm9yy0().s[165]++;
      return {
        address: accounts[0],
        chainId: ethereumProvider.chainId
      };
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[28][1]++;
    }
    cov_1o4scm9yy0().s[166]++;
    return null;
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[167]++;
    logger.error('WalletConnect 连接失败', {
      action: 'connectWalletConnectV2',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[168]++;
    return null;
  }
}
async function connectWalletConnect(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[50]++;
  cov_1o4scm9yy0().s[169]++;
  try {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[170]++;
    // 尝试使用新版连接
    if (process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[30][0]++;
      cov_1o4scm9yy0().s[171]++;
      return connectWalletConnectV2(callbacks);
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[30][1]++;
    }
    // 如果没有项目ID，回退到旧版
    // 如果已有连接，先断开
    cov_1o4scm9yy0().s[172]++;
    if (walletConnectProvider) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[31][0]++;
      cov_1o4scm9yy0().s[173]++;
      await walletConnectProvider.disconnect();
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[174]++;
      walletConnectProvider = null;
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[31][1]++;
    }
    // 创建新的 WalletConnect 提供者
    cov_1o4scm9yy0().s[175]++;
    walletConnectProvider = new _web3provider.default({
      rpc: {
        1:
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[32][0]++, process.env.NEXT_PUBLIC_ETH_RPC_URL) ||
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[32][1]++, 'https://mainnet.infura.io/v3/'),
        56:
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[33][0]++, process.env.NEXT_PUBLIC_BSC_RPC_URL) ||
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[33][1]++, 'https://bsc-dataseed.binance.org'),
        97:
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[34][0]++, process.env.NEXT_PUBLIC_BSC_TESTNET_RPC_URL) ||
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[34][1]++, 'https://data-seed-prebsc-1-s1.binance.org:8545')
      },
      chainId: parseInt(
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[35][0]++, process.env.NEXT_PUBLIC_CHAIN_ID) ||
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[35][1]++, '56'), 10),
      qrcode: true,
      qrcodeModalOptions: {
        mobileLinks: ['metamask', 'trust', 'coinbase', 'tokenpocket'],
        desktopLinks: ['metamask', 'trust', 'coinbase', 'tokenpocket']
      }
    });
    // 注册事件监听器
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[176]++;
    walletConnectProvider.on('connect', info => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[51]++;
      cov_1o4scm9yy0().s[177]++;
      if (
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[37][0]++, callbacks?.onConnect) &&
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[37][1]++, info.accounts.length > 0)) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[36][0]++;
        cov_1o4scm9yy0().s[178]++;
        callbacks.onConnect(info.accounts[0], info.chainId);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[36][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[179]++;
    walletConnectProvider.on('disconnect', () => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[52]++;
      cov_1o4scm9yy0().s[180]++;
      if (callbacks?.onDisconnect) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[38][0]++;
        cov_1o4scm9yy0().s[181]++;
        callbacks.onDisconnect();
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[38][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[182]++;
    walletConnectProvider.on('accountsChanged', accounts => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[53]++;
      cov_1o4scm9yy0().s[183]++;
      if (callbacks?.onAccountsChanged) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[39][0]++;
        cov_1o4scm9yy0().s[184]++;
        callbacks.onAccountsChanged(accounts);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[39][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[185]++;
    walletConnectProvider.on('chainChanged', chainId => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[54]++;
      cov_1o4scm9yy0().s[186]++;
      if (callbacks?.onChainChanged) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[40][0]++;
        cov_1o4scm9yy0().s[187]++;
        callbacks.onChainChanged(chainId);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[40][1]++;
      }
    });
    // 请求连接
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[188]++, await walletConnectProvider.enable());
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[189]++;
    if (
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[42][0]++, accounts) &&
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[42][1]++, accounts.length > 0)) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[41][0]++;
      cov_1o4scm9yy0().s[190]++;
      return {
        address: accounts[0],
        chainId: walletConnectProvider.chainId
      };
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[41][1]++;
    }
    cov_1o4scm9yy0().s[191]++;
    return null;
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[192]++;
    logger.error('WalletConnect 连接失败', {
      action: 'connectWalletConnect',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[193]++;
    return null;
  }
}
async function connectWalletByType(type, callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[55]++;
  cov_1o4scm9yy0().s[194]++;
  switch (type) {
    case 'metamask':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[43][0]++;
      cov_1o4scm9yy0().s[195]++;
      return connectMetamask(callbacks);
    case 'coinbase':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[43][1]++;
      cov_1o4scm9yy0().s[196]++;
      return connectCoinbase(callbacks);
    case 'trustwallet':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[43][2]++;
      cov_1o4scm9yy0().s[197]++;
      return connectTrustWallet(callbacks);
    case 'tokenpocket':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[43][3]++;
      cov_1o4scm9yy0().s[198]++;
      return connectTokenPocket(callbacks);
    case 'walletconnect':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[43][4]++;
      cov_1o4scm9yy0().s[199]++;
      return connectWalletConnect(callbacks);
    default:
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[43][5]++;
      cov_1o4scm9yy0().s[200]++;
      throw new Error(`不支持的钱包类型: ${type}`);
  }
}
function getConnectedWalletType() {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[56]++;
  cov_1o4scm9yy0().s[201]++;
  if (!isBrowser()) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[44][0]++;
    cov_1o4scm9yy0().s[202]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[44][1]++;
  }
  cov_1o4scm9yy0().s[203]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[46][0]++, ethereumProvider?.connected) ||
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[46][1]++, walletConnectProvider?.connected)) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[45][0]++;
    cov_1o4scm9yy0().s[204]++;
    return 'walletconnect';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[45][1]++;
  }
  cov_1o4scm9yy0().s[205]++;
  if (!window.ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[47][0]++;
    cov_1o4scm9yy0().s[206]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[47][1]++;
  }
  cov_1o4scm9yy0().s[207]++;
  if (window.ethereum.isMetaMask) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[48][0]++;
    cov_1o4scm9yy0().s[208]++;
    return 'metamask';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[48][1]++;
  }
  cov_1o4scm9yy0().s[209]++;
  if (window.ethereum.isCoinbaseWallet) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[49][0]++;
    cov_1o4scm9yy0().s[210]++;
    return 'coinbase';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[49][1]++;
  }
  cov_1o4scm9yy0().s[211]++;
  if (window.ethereum.isTrust) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[50][0]++;
    cov_1o4scm9yy0().s[212]++;
    return 'trustwallet';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[50][1]++;
  }
  cov_1o4scm9yy0().s[213]++;
  if (window.ethereum.isTokenPocket) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[51][0]++;
    cov_1o4scm9yy0().s[214]++;
    return 'tokenpocket';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[51][1]++;
  }
  cov_1o4scm9yy0().s[215]++;
  return null;
}
async function disconnectWallet(walletType) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[57]++;
  cov_1o4scm9yy0().s[216]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[53][0]++, walletType === 'walletconnect') ||
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[53][1]++, !walletType)) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[52][0]++;
    cov_1o4scm9yy0().s[217]++;
    try {
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[218]++;
      if (ethereumProvider) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[54][0]++;
        cov_1o4scm9yy0().s[219]++;
        await ethereumProvider.disconnect();
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[220]++;
        ethereumProvider = null;
      } else {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[54][1]++;
        cov_1o4scm9yy0().s[221]++;
        if (walletConnectProvider) {
          /* istanbul ignore next */
          cov_1o4scm9yy0().b[55][0]++;
          cov_1o4scm9yy0().s[222]++;
          await walletConnectProvider.disconnect();
          /* istanbul ignore next */
          cov_1o4scm9yy0().s[223]++;
          walletConnectProvider = null;
        } else
        /* istanbul ignore next */
        {
          cov_1o4scm9yy0().b[55][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[224]++;
      logger.error('断开 WalletConnect 失败', {
        action: 'disconnectWallet',
        additionalData: {
          error
        }
      });
    }
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[52][1]++;
  }
  // 对于浏览器插件钱包，我们可以清除本地存储
  cov_1o4scm9yy0().s[225]++;
  if (isBrowser()) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[56][0]++;
    cov_1o4scm9yy0().s[226]++;
    localStorage.removeItem('walletconnect');
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[56][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,