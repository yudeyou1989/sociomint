802c12ee32b7907d4320f2c0d6cc6f98
"use strict";

/* istanbul ignore next */
function cov_1qit40546t() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/lib/supabase.ts";
  var hash = "aa2385e5773811483cdf87e34c14d50043eedb74";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/lib/supabase.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "9": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 56
        }
      },
      "10": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "11": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 145
        }
      },
      "13": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 60
        }
      },
      "14": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "15": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "16": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "17": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "19": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 50
        }
      },
      "20": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 20
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 49
        }
      },
      "23": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 21
        }
      },
      "24": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 76,
          column: 1
        }
      },
      "25": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 42
        }
      },
      "26": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "27": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 32
        }
      },
      "28": {
        start: {
          line: 68,
          column: 11
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "29": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 34
        }
      },
      "30": {
        start: {
          line: 70,
          column: 11
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "31": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 29
        }
      },
      "32": {
        start: {
          line: 72,
          column: 11
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "33": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 29
        }
      },
      "34": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 29
        }
      },
      "35": {
        start: {
          line: 77,
          column: 31
        },
        end: {
          line: 95,
          column: 1
        }
      },
      "36": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "37": {
        start: {
          line: 80,
          column: 32
        },
        end: {
          line: 80,
          column: 64
        }
      },
      "38": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "39": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 24
        }
      },
      "40": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 10
        }
      },
      "41": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 48
        }
      },
      "42": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 12,
            column: 30
          }
        },
        loc: {
          start: {
            line: 12,
            column: 40
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 26
          }
        },
        loc: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 14
          },
          end: {
            line: 18,
            column: 15
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 21,
            column: 29
          }
        },
        loc: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 33
          }
        },
        loc: {
          start: {
            line: 46,
            column: 42
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 29
          }
        },
        loc: {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 77,
            column: 32
          }
        },
        loc: {
          start: {
            line: 77,
            column: 41
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 0
          },
          end: {
            line: 32,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 0
          },
          end: {
            line: 32,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 16
          }
        }, {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 36
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: 68,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }],
        line: 66
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: 70,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/lib/supabase.ts"],
      sourcesContent: ["import { createClient } from '@supabase/supabase-js';\n\n// Supabase\u914D\u7F6E\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// \u9A8C\u8BC1\u5FC5\u9700\u7684\u73AF\u5883\u53D8\u91CF\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing required Supabase environment variables. Please check NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY.');\n}\n\n// \u8F93\u51FA\u8C03\u8BD5\u4FE1\u606F\nconsole.log('Initializing Supabase with URL:', supabaseUrl);\n\n// \u521B\u5EFASupabase\u5BA2\u6237\u7AEF\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  },\n  realtime: {\n    // \u5F00\u542F\u5B9E\u65F6\u8BA2\u9605\u529F\u80FD\n    enabled: true\n  }\n});\n\n// \u6DFB\u52A0\u81EA\u5B9A\u4E49\u94A9\u5B50\uFF0C\u7528\u4E8E\u68C0\u6D4BSupabase\u8FDE\u63A5\u72B6\u6001\nexport const checkSupabaseConnection = async () => {\n  try {\n    // \u5C1D\u8BD5\u6267\u884C\u7B80\u5355\u67E5\u8BE2\u6765\u68C0\u6D4B\u8FDE\u63A5\u72B6\u6001\n    const { data, error } = await supabase.from('box_tiers').select('count(*)', { count: 'exact', head: true });\n\n    if (error) {\n      console.error('Supabase\u8FDE\u63A5\u9519\u8BEF:', error);\n      return false;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('\u68C0\u67E5Supabase\u8FDE\u63A5\u65F6\u51FA\u9519:', error);\n    return false;\n  }\n};\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u5904\u7406Supabase\u9519\u8BEF\nexport const handleSupabaseError = (error: any) => {\n  console.error('Supabase\u64CD\u4F5C\u9519\u8BEF:', error);\n\n  // \u6839\u636E\u9519\u8BEF\u7C7B\u578B\u8FD4\u56DE\u53CB\u597D\u7684\u9519\u8BEF\u6D88\u606F\n  if (error.code === '23505') {\n    return '\u8BE5\u8BB0\u5F55\u5DF2\u5B58\u5728\uFF0C\u8BF7\u52FF\u91CD\u590D\u521B\u5EFA\u3002';\n  } else if (error.code === '23503') {\n    return '\u5F15\u7528\u7684\u8BB0\u5F55\u4E0D\u5B58\u5728\uFF0C\u65E0\u6CD5\u5B8C\u6210\u64CD\u4F5C\u3002';\n  } else if (error.code === '42501') {\n    return '\u60A8\u6CA1\u6709\u6743\u9650\u6267\u884C\u6B64\u64CD\u4F5C\u3002';\n  } else if (error.message) {\n    return error.message;\n  }\n\n  return '\u64CD\u4F5C\u5931\u8D25\uFF0C\u8BF7\u91CD\u8BD5\u6216\u8054\u7CFB\u7BA1\u7406\u5458\u3002';\n};\n\n// \u5BFC\u51FA\u4E00\u4E2A\u7B80\u5355\u7684\u6D4B\u8BD5\u51FD\u6570\uFF0C\u7528\u4E8E\u9A8C\u8BC1\u8FDE\u63A5\nexport const testSupabaseConnection = async () => {\n  try {\n    // \u6D4B\u8BD5auth\u670D\u52A1\uFF0C\u8FD9\u901A\u5E38\u603B\u662F\u53EF\u7528\u7684\n    const { data, error } = await supabase.auth.getSession();\n    if (error) {\n      throw error;\n    }\n    return { success: true, data };\n  } catch (error) {\n    console.error('Supabase\u8FDE\u63A5\u6D4B\u8BD5\u5931\u8D25:', error);\n    return { success: false, error };\n  }\n};"],
      names: ["checkSupabaseConnection", "handleSupabaseError", "supabase", "testSupabaseConnection", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseAnonKey", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "Error", "console", "log", "createClient", "auth", "autoRefreshToken", "persistSession", "detectSessionInUrl", "realtime", "enabled", "data", "error", "from", "select", "count", "head", "code", "message", "getSession", "success"],
      mappings: ";;;;;;;;;;;IA4BaA,uBAAuB;eAAvBA;;IAkBAC,mBAAmB;eAAnBA;;IA/BAC,QAAQ;eAARA;;IAiDAC,sBAAsB;eAAtBA;;;4BAhEgB;AAE7B,aAAa;AACb,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;AACxD,MAAMC,kBAAkBH,QAAQC,GAAG,CAACG,6BAA6B;AAEjE,YAAY;AACZ,IAAI,CAACL,eAAe,CAACI,iBAAiB;IACpC,MAAM,IAAIE,MAAM;AAClB;AAEA,SAAS;AACTC,QAAQC,GAAG,CAAC,mCAAmCR;AAGxC,MAAMF,WAAWW,IAAAA,wBAAY,EAACT,aAAaI,iBAAiB;IACjEM,MAAM;QACJC,kBAAkB;QAClBC,gBAAgB;QAChBC,oBAAoB;IACtB;IACAC,UAAU;QACR,WAAW;QACXC,SAAS;IACX;AACF;AAGO,MAAMnB,0BAA0B;IACrC,IAAI;QACF,kBAAkB;QAClB,MAAM,EAAEoB,IAAI,EAAEC,KAAK,EAAE,GAAG,MAAMnB,SAASoB,IAAI,CAAC,aAAaC,MAAM,CAAC,YAAY;YAAEC,OAAO;YAASC,MAAM;QAAK;QAEzG,IAAIJ,OAAO;YACTV,QAAQU,KAAK,CAAC,iBAAiBA;YAC/B,OAAO;QACT;QAEA,OAAO;IACT,EAAE,OAAOA,OAAO;QACdV,QAAQU,KAAK,CAAC,oBAAoBA;QAClC,OAAO;IACT;AACF;AAGO,MAAMpB,sBAAsB,CAACoB;IAClCV,QAAQU,KAAK,CAAC,iBAAiBA;IAE/B,kBAAkB;IAClB,IAAIA,MAAMK,IAAI,KAAK,SAAS;QAC1B,OAAO;IACT,OAAO,IAAIL,MAAMK,IAAI,KAAK,SAAS;QACjC,OAAO;IACT,OAAO,IAAIL,MAAMK,IAAI,KAAK,SAAS;QACjC,OAAO;IACT,OAAO,IAAIL,MAAMM,OAAO,EAAE;QACxB,OAAON,MAAMM,OAAO;IACtB;IAEA,OAAO;AACT;AAGO,MAAMxB,yBAAyB;IACpC,IAAI;QACF,oBAAoB;QACpB,MAAM,EAAEiB,IAAI,EAAEC,KAAK,EAAE,GAAG,MAAMnB,SAASY,IAAI,CAACc,UAAU;QACtD,IAAIP,OAAO;YACT,MAAMA;QACR;QACA,OAAO;YAAEQ,SAAS;YAAMT;QAAK;IAC/B,EAAE,OAAOC,OAAO;QACdV,QAAQU,KAAK,CAAC,mBAAmBA;QACjC,OAAO;YAAEQ,SAAS;YAAOR;QAAM;IACjC;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aa2385e5773811483cdf87e34c14d50043eedb74"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qit40546t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qit40546t();
cov_1qit40546t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1qit40546t().f[0]++;
  cov_1qit40546t().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1qit40546t().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1qit40546t().s[3]++;
_export(exports, {
  checkSupabaseConnection: function () {
    /* istanbul ignore next */
    cov_1qit40546t().f[1]++;
    cov_1qit40546t().s[4]++;
    return checkSupabaseConnection;
  },
  handleSupabaseError: function () {
    /* istanbul ignore next */
    cov_1qit40546t().f[2]++;
    cov_1qit40546t().s[5]++;
    return handleSupabaseError;
  },
  supabase: function () {
    /* istanbul ignore next */
    cov_1qit40546t().f[3]++;
    cov_1qit40546t().s[6]++;
    return supabase;
  },
  testSupabaseConnection: function () {
    /* istanbul ignore next */
    cov_1qit40546t().f[4]++;
    cov_1qit40546t().s[7]++;
    return testSupabaseConnection;
  }
});
const _supabasejs =
/* istanbul ignore next */
(cov_1qit40546t().s[8]++, require("@supabase/supabase-js"));
// Supabase配置
const supabaseUrl =
/* istanbul ignore next */
(cov_1qit40546t().s[9]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseAnonKey =
/* istanbul ignore next */
(cov_1qit40546t().s[10]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
// 验证必需的环境变量
/* istanbul ignore next */
cov_1qit40546t().s[11]++;
if (
/* istanbul ignore next */
(cov_1qit40546t().b[1][0]++, !supabaseUrl) ||
/* istanbul ignore next */
(cov_1qit40546t().b[1][1]++, !supabaseAnonKey)) {
  /* istanbul ignore next */
  cov_1qit40546t().b[0][0]++;
  cov_1qit40546t().s[12]++;
  throw new Error('Missing required Supabase environment variables. Please check NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY.');
} else
/* istanbul ignore next */
{
  cov_1qit40546t().b[0][1]++;
}
// 输出调试信息
cov_1qit40546t().s[13]++;
console.log('Initializing Supabase with URL:', supabaseUrl);
const supabase =
/* istanbul ignore next */
(cov_1qit40546t().s[14]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  },
  realtime: {
    // 开启实时订阅功能
    enabled: true
  }
}));
/* istanbul ignore next */
cov_1qit40546t().s[15]++;
const checkSupabaseConnection = async () => {
  /* istanbul ignore next */
  cov_1qit40546t().f[5]++;
  cov_1qit40546t().s[16]++;
  try {
    // 尝试执行简单查询来检测连接状态
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1qit40546t().s[17]++, await supabase.from('box_tiers').select('count(*)', {
      count: 'exact',
      head: true
    }));
    /* istanbul ignore next */
    cov_1qit40546t().s[18]++;
    if (error) {
      /* istanbul ignore next */
      cov_1qit40546t().b[2][0]++;
      cov_1qit40546t().s[19]++;
      console.error('Supabase连接错误:', error);
      /* istanbul ignore next */
      cov_1qit40546t().s[20]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1qit40546t().b[2][1]++;
    }
    cov_1qit40546t().s[21]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_1qit40546t().s[22]++;
    console.error('检查Supabase连接时出错:', error);
    /* istanbul ignore next */
    cov_1qit40546t().s[23]++;
    return false;
  }
};
/* istanbul ignore next */
cov_1qit40546t().s[24]++;
const handleSupabaseError = error => {
  /* istanbul ignore next */
  cov_1qit40546t().f[6]++;
  cov_1qit40546t().s[25]++;
  console.error('Supabase操作错误:', error);
  // 根据错误类型返回友好的错误消息
  /* istanbul ignore next */
  cov_1qit40546t().s[26]++;
  if (error.code === '23505') {
    /* istanbul ignore next */
    cov_1qit40546t().b[3][0]++;
    cov_1qit40546t().s[27]++;
    return '该记录已存在，请勿重复创建。';
  } else {
    /* istanbul ignore next */
    cov_1qit40546t().b[3][1]++;
    cov_1qit40546t().s[28]++;
    if (error.code === '23503') {
      /* istanbul ignore next */
      cov_1qit40546t().b[4][0]++;
      cov_1qit40546t().s[29]++;
      return '引用的记录不存在，无法完成操作。';
    } else {
      /* istanbul ignore next */
      cov_1qit40546t().b[4][1]++;
      cov_1qit40546t().s[30]++;
      if (error.code === '42501') {
        /* istanbul ignore next */
        cov_1qit40546t().b[5][0]++;
        cov_1qit40546t().s[31]++;
        return '您没有权限执行此操作。';
      } else {
        /* istanbul ignore next */
        cov_1qit40546t().b[5][1]++;
        cov_1qit40546t().s[32]++;
        if (error.message) {
          /* istanbul ignore next */
          cov_1qit40546t().b[6][0]++;
          cov_1qit40546t().s[33]++;
          return error.message;
        } else
        /* istanbul ignore next */
        {
          cov_1qit40546t().b[6][1]++;
        }
      }
    }
  }
  /* istanbul ignore next */
  cov_1qit40546t().s[34]++;
  return '操作失败，请重试或联系管理员。';
};
/* istanbul ignore next */
cov_1qit40546t().s[35]++;
const testSupabaseConnection = async () => {
  /* istanbul ignore next */
  cov_1qit40546t().f[7]++;
  cov_1qit40546t().s[36]++;
  try {
    // 测试auth服务，这通常总是可用的
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1qit40546t().s[37]++, await supabase.auth.getSession());
    /* istanbul ignore next */
    cov_1qit40546t().s[38]++;
    if (error) {
      /* istanbul ignore next */
      cov_1qit40546t().b[7][0]++;
      cov_1qit40546t().s[39]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_1qit40546t().b[7][1]++;
    }
    cov_1qit40546t().s[40]++;
    return {
      success: true,
      data
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1qit40546t().s[41]++;
    console.error('Supabase连接测试失败:', error);
    /* istanbul ignore next */
    cov_1qit40546t().s[42]++;
    return {
      success: false,
      error
    };
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,