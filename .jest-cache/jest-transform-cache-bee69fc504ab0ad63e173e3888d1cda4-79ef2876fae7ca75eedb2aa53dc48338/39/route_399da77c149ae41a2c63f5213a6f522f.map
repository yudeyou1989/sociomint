{"version":3,"names":["cov_zir8ctd4t","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","GET","POST","PUT","request","searchParams","URL","url","userWallet","get","action","_server","NextResponse","json","success","error","code","status","_security","InputValidator","validateEthereumAddress","data","_softStakingService","default","getUserStats","limit","parseInt","getUserSessions","rewardLimit","getUserRewards","isEligible","checkEligibility","minBalance24h","getUser24hMinBalance","todayReward","calculateReward","getConfig","message","console","body","blockNumber","txHash","result","recordBalanceSnapshot","userWallets","Array","isArray","wallet","batchRecordSnapshots","processed","length","min_holding_hours","min_balance_threshold","flowers_per_500_sm","max_daily_flowers","snapshot_interval_hours","tolerance_percentage","requiredFields","field","parseFloat","newConfig","effective_date","Date","toISOString","split","is_active"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/app/api/soft-staking/route.ts"],"sourcesContent":["/**\n * 软质押API路由\n * 处理软质押相关的数据查询和操作\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport SoftStakingService from '@/lib/services/softStakingService';\nimport { InputValidator } from '@/lib/security';\n\n// 配置为动态路由以支持静态导出\n// export const dynamic = 'force-dynamic';\n\n/**\n * 获取用户软质押统计信息\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const userWallet = searchParams.get('wallet');\n    const action = searchParams.get('action') || 'stats';\n\n    if (!userWallet) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '缺少钱包地址参数',\n          code: 'MISSING_WALLET_ADDRESS'\n        },\n        { status: 400 }\n      );\n    }\n\n    // 验证钱包地址格式\n    if (!InputValidator.validateEthereumAddress(userWallet)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '无效的钱包地址格式',\n          code: 'INVALID_WALLET_ADDRESS'\n        },\n        { status: 400 }\n      );\n    }\n\n    let data;\n\n    switch (action) {\n      case 'stats':\n        data = await SoftStakingService.getUserStats(userWallet);\n        break;\n        \n      case 'sessions':\n        const limit = parseInt(searchParams.get('limit') || '10');\n        data = await SoftStakingService.getUserSessions(userWallet, limit);\n        break;\n        \n      case 'rewards':\n        const rewardLimit = parseInt(searchParams.get('limit') || '30');\n        data = await SoftStakingService.getUserRewards(userWallet, rewardLimit);\n        break;\n        \n      case 'eligibility':\n        data = {\n          isEligible: await SoftStakingService.checkEligibility(userWallet),\n          minBalance24h: await SoftStakingService.getUser24hMinBalance(userWallet),\n          todayReward: await SoftStakingService.calculateReward(userWallet)\n        };\n        break;\n        \n      case 'config':\n        data = await SoftStakingService.getConfig();\n        break;\n        \n      default:\n        return NextResponse.json(\n          {\n            success: false,\n            error: '不支持的操作类型',\n            code: 'UNSUPPORTED_ACTION'\n          },\n          { status: 400 }\n        );\n    }\n\n    return NextResponse.json({\n      success: true,\n      data,\n      message: '获取软质押信息成功'\n    });\n  } catch (error) {\n    console.error('获取软质押信息失败:', error);\n    \n    return NextResponse.json(\n      {\n        success: false,\n        error: '获取软质押信息失败',\n        code: 'FETCH_SOFT_STAKING_FAILED'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * 记录余额快照或更新软质押状态\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { action, userWallet, blockNumber, txHash } = body;\n\n    if (!userWallet) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '缺少钱包地址',\n          code: 'MISSING_WALLET_ADDRESS'\n        },\n        { status: 400 }\n      );\n    }\n\n    // 验证钱包地址格式\n    if (!InputValidator.validateEthereumAddress(userWallet)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '无效的钱包地址格式',\n          code: 'INVALID_WALLET_ADDRESS'\n        },\n        { status: 400 }\n      );\n    }\n\n    let result;\n\n    switch (action) {\n      case 'snapshot':\n        result = await SoftStakingService.recordBalanceSnapshot(\n          userWallet,\n          blockNumber,\n          txHash\n        );\n        break;\n        \n      case 'batch_snapshot':\n        const { userWallets } = body;\n        if (!Array.isArray(userWallets)) {\n          return NextResponse.json(\n            {\n              success: false,\n              error: '用户钱包列表必须是数组',\n              code: 'INVALID_WALLET_LIST'\n            },\n            { status: 400 }\n          );\n        }\n        \n        // 验证所有钱包地址\n        for (const wallet of userWallets) {\n          if (!InputValidator.validateEthereumAddress(wallet)) {\n            return NextResponse.json(\n              {\n                success: false,\n                error: `无效的钱包地址: ${wallet}`,\n                code: 'INVALID_WALLET_ADDRESS'\n              },\n              { status: 400 }\n            );\n          }\n        }\n        \n        await SoftStakingService.batchRecordSnapshots(userWallets);\n        result = { processed: userWallets.length };\n        break;\n        \n      default:\n        return NextResponse.json(\n          {\n            success: false,\n            error: '不支持的操作类型',\n            code: 'UNSUPPORTED_ACTION'\n          },\n          { status: 400 }\n        );\n    }\n\n    return NextResponse.json({\n      success: true,\n      data: result,\n      message: '操作成功'\n    });\n  } catch (error) {\n    console.error('软质押操作失败:', error);\n    \n    return NextResponse.json(\n      {\n        success: false,\n        error: '操作失败',\n        code: 'SOFT_STAKING_OPERATION_FAILED'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * 更新软质押配置（管理员操作）\n */\nexport async function PUT(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { \n      min_holding_hours,\n      min_balance_threshold,\n      flowers_per_500_sm,\n      max_daily_flowers,\n      snapshot_interval_hours,\n      tolerance_percentage\n    } = body;\n\n    // 验证必填字段\n    const requiredFields = [\n      'min_holding_hours',\n      'min_balance_threshold', \n      'flowers_per_500_sm',\n      'max_daily_flowers'\n    ];\n    \n    for (const field of requiredFields) {\n      if (body[field] === undefined || body[field] === null) {\n        return NextResponse.json(\n          {\n            success: false,\n            error: `缺少必填字段: ${field}`,\n            code: 'MISSING_REQUIRED_FIELD'\n          },\n          { status: 400 }\n        );\n      }\n    }\n\n    // 验证数值范围\n    if (min_holding_hours <= 0) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '最低持币时长必须大于0',\n          code: 'INVALID_HOLDING_HOURS'\n        },\n        { status: 400 }\n      );\n    }\n\n    if (parseFloat(min_balance_threshold) < 0) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '最低余额阈值不能为负数',\n          code: 'INVALID_BALANCE_THRESHOLD'\n        },\n        { status: 400 }\n      );\n    }\n\n    if (tolerance_percentage && (tolerance_percentage < 0 || tolerance_percentage > 100)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '容忍度百分比必须在0-100之间',\n          code: 'INVALID_TOLERANCE_PERCENTAGE'\n        },\n        { status: 400 }\n      );\n    }\n\n    // 这里应该添加管理员权限验证\n    // TODO: 实现管理员权限验证逻辑\n\n    // 插入新配置（实际实现需要连接数据库）\n    const newConfig = {\n      min_holding_hours,\n      min_balance_threshold,\n      flowers_per_500_sm,\n      max_daily_flowers,\n      snapshot_interval_hours: snapshot_interval_hours || 1,\n      tolerance_percentage: tolerance_percentage || 5.0,\n      effective_date: new Date().toISOString().split('T')[0],\n      is_active: true\n    };\n\n    return NextResponse.json({\n      success: true,\n      data: newConfig,\n      message: '软质押配置更新成功'\n    });\n  } catch (error) {\n    console.error('更新软质押配置失败:', error);\n    \n    return NextResponse.json(\n      {\n        success: false,\n        error: '更新配置失败',\n        code: 'UPDATE_CONFIG_FAILED'\n      },\n      { status: 500 }\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}