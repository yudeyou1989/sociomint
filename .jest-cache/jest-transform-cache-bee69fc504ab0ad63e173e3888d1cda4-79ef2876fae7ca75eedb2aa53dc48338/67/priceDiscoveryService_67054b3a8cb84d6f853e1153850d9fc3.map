{"version":3,"names":["cov_25o9y0t8fo","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","PriceDiscoveryService","default","_default","SUPABASE_URL","process","env","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_ANON_KEY","NEXT_PUBLIC_SUPABASE_ANON_KEY","supabase","_supabasejs","createClient","recordPricePoint","smAmount","bnbAmount","transactionHash","blockNumber","bnbPriceUsd","pricePerSmBnb","parseFloat","pricePerSmUsd","error","from","insert","timestamp","Date","toISOString","price_bnb","toString","price_usd","sm_sold","bnb_received","transaction_hash","block_number","console","getCurrentPriceStats","data","latestPrice","latestError","select","order","ascending","limit","single","initialPrice","initialError","twentyFourHoursAgo","setHours","getHours","price24hAgo","lte","priceChange24h","priceChangePercentage","totals","then","totalSmSold","reduce","sum","item","totalBnbRaised","total_sm_sold","total_bnb_raised","total_usd_raised","totalSupply","marketCapUsd","holdersCount","Math","floor","random","current_price_bnb","current_price_usd","initial_price_bnb","initial_price_usd","price_change_24h","price_change_percentage","market_cap_usd","holders_count","last_updated","getPriceTrend","period","now","startTime","setDate","getDate","pricePoints","gte","length","price_points","avg_price","min_price","max_price","volume_sm","volume_bnb","transactions_count","prices","map","p","avgPrice","price","minPrice","min","maxPrice","max","volumeSm","volumeBnb","getPricePrediction","currentStats","trend24h","trend7d","currentPrice","nextUnlockTargetPrice","recentPrices","slice","olderPrices","currentTrend","recentAvg","olderAvg","volumeTrend","recent24hVolume","previous24hVolume","estimatedTimeToTarget","confidenceLevel","next_unlock_target_price","estimated_time_to_target","confidence_level","factors","current_trend","volume_trend","holder_growth","getPriceChartData","interval","trend","sampledPoints","totalPoints","sampleInterval","i","point","push","getTime","volume","getTechnicalIndicators","sma5","calculateSMA","sma10","rsi","calculateRSI","bollingerBands","calculateBollingerBands","upper","middle","lower","sma","a","gains","losses","change","abs","avgGain","avgLoss","rs","multiplier","dataIndex","mean","variance","pow","stdDev","sqrt"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/services/priceDiscoveryService.ts"],"sourcesContent":["/**\n * 无流动性价格发现服务\n * 基于BNB兑换数据实现价格发现和显示，包括实时价格、历史趋势、预期价格\n */\n\nimport { createClient } from '@supabase/supabase-js';\nimport { ethers } from 'ethers';\n\n// 环境变量\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\n// 创建Supabase客户端\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\nexport interface PricePoint {\n  timestamp: string;\n  price_bnb: string;\n  price_usd: string;\n  sm_sold: string;\n  bnb_received: string;\n  transaction_hash: string;\n  block_number: number;\n}\n\nexport interface PriceStats {\n  current_price_bnb: string;\n  current_price_usd: string;\n  initial_price_bnb: string;\n  initial_price_usd: string;\n  price_change_24h: number;\n  price_change_percentage: number;\n  total_sm_sold: string;\n  total_bnb_raised: string;\n  total_usd_raised: string;\n  market_cap_usd: string;\n  holders_count: number;\n  last_updated: string;\n}\n\nexport interface PriceTrend {\n  period: '1h' | '24h' | '7d' | '30d';\n  price_points: PricePoint[];\n  avg_price: string;\n  min_price: string;\n  max_price: string;\n  volume_sm: string;\n  volume_bnb: string;\n  transactions_count: number;\n}\n\nexport interface PricePrediction {\n  next_unlock_target_price: string;\n  estimated_time_to_target: number; // hours\n  confidence_level: number; // 0-100\n  factors: {\n    current_trend: 'bullish' | 'bearish' | 'neutral';\n    volume_trend: 'increasing' | 'decreasing' | 'stable';\n    holder_growth: 'growing' | 'declining' | 'stable';\n  };\n}\n\nexport class PriceDiscoveryService {\n  /**\n   * 记录价格数据点\n   */\n  static async recordPricePoint(\n    smAmount: string,\n    bnbAmount: string,\n    transactionHash: string,\n    blockNumber: number,\n    bnbPriceUsd: number = 660 // 默认BNB价格，实际应该从预言机获取\n  ): Promise<boolean> {\n    try {\n      // 计算SM价格\n      const pricePerSmBnb = parseFloat(bnbAmount) / parseFloat(smAmount);\n      const pricePerSmUsd = pricePerSmBnb * bnbPriceUsd;\n\n      const { error } = await supabase\n        .from('price_history')\n        .insert({\n          timestamp: new Date().toISOString(),\n          price_bnb: pricePerSmBnb.toString(),\n          price_usd: pricePerSmUsd.toString(),\n          sm_sold: smAmount,\n          bnb_received: bnbAmount,\n          transaction_hash: transactionHash,\n          block_number: blockNumber\n        });\n\n      if (error) {\n        console.error('记录价格数据失败:', error);\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      console.error('记录价格数据异常:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 获取当前价格统计\n   */\n  static async getCurrentPriceStats(): Promise<PriceStats | null> {\n    try {\n      // 获取最新价格\n      const { data: latestPrice, error: latestError } = await supabase\n        .from('price_history')\n        .select('*')\n        .order('timestamp', { ascending: false })\n        .limit(1)\n        .single();\n\n      if (latestError) {\n        console.error('获取最新价格失败:', latestError);\n        return null;\n      }\n\n      // 获取初始价格\n      const { data: initialPrice, error: initialError } = await supabase\n        .from('price_history')\n        .select('*')\n        .order('timestamp', { ascending: true })\n        .limit(1)\n        .single();\n\n      if (initialError) {\n        console.error('获取初始价格失败:', initialError);\n        return null;\n      }\n\n      // 获取24小时前价格\n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setHours(twentyFourHoursAgo.getHours() - 24);\n\n      const { data: price24hAgo } = await supabase\n        .from('price_history')\n        .select('*')\n        .lte('timestamp', twentyFourHoursAgo.toISOString())\n        .order('timestamp', { ascending: false })\n        .limit(1)\n        .single();\n\n      // 计算24小时价格变化\n      let priceChange24h = 0;\n      let priceChangePercentage = 0;\n      \n      if (price24hAgo) {\n        priceChange24h = parseFloat(latestPrice.price_usd) - parseFloat(price24hAgo.price_usd);\n        priceChangePercentage = (priceChange24h / parseFloat(price24hAgo.price_usd)) * 100;\n      }\n\n      // 获取总计数据\n      const { data: totals } = await supabase\n        .from('price_history')\n        .select('sm_sold, bnb_received')\n        .then(({ data }) => {\n          if (!data) return { data: null };\n          \n          const totalSmSold = data.reduce((sum, item) => sum + parseFloat(item.sm_sold), 0);\n          const totalBnbRaised = data.reduce((sum, item) => sum + parseFloat(item.bnb_received), 0);\n          \n          return {\n            data: {\n              total_sm_sold: totalSmSold.toString(),\n              total_bnb_raised: totalBnbRaised.toString(),\n              total_usd_raised: (totalBnbRaised * 660).toString() // 使用当前BNB价格\n            }\n          };\n        });\n\n      // 计算市值（假设总供应量10亿）\n      const totalSupply = 1000000000; // 10亿\n      const marketCapUsd = (totalSupply * parseFloat(latestPrice.price_usd)).toString();\n\n      // 获取持有者数量（这里需要从链上数据获取，暂时使用模拟数据）\n      const holdersCount = Math.floor(Math.random() * 1000) + 100; // 模拟数据\n\n      return {\n        current_price_bnb: latestPrice.price_bnb,\n        current_price_usd: latestPrice.price_usd,\n        initial_price_bnb: initialPrice.price_bnb,\n        initial_price_usd: initialPrice.price_usd,\n        price_change_24h: priceChange24h,\n        price_change_percentage: priceChangePercentage,\n        total_sm_sold: totals?.data?.total_sm_sold || '0',\n        total_bnb_raised: totals?.data?.total_bnb_raised || '0',\n        total_usd_raised: totals?.data?.total_usd_raised || '0',\n        market_cap_usd: marketCapUsd,\n        holders_count: holdersCount,\n        last_updated: latestPrice.timestamp\n      };\n    } catch (error) {\n      console.error('获取价格统计异常:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取价格趋势数据\n   */\n  static async getPriceTrend(period: '1h' | '24h' | '7d' | '30d'): Promise<PriceTrend | null> {\n    try {\n      // 计算时间范围\n      const now = new Date();\n      const startTime = new Date();\n      \n      switch (period) {\n        case '1h':\n          startTime.setHours(startTime.getHours() - 1);\n          break;\n        case '24h':\n          startTime.setHours(startTime.getHours() - 24);\n          break;\n        case '7d':\n          startTime.setDate(startTime.getDate() - 7);\n          break;\n        case '30d':\n          startTime.setDate(startTime.getDate() - 30);\n          break;\n      }\n\n      const { data: pricePoints, error } = await supabase\n        .from('price_history')\n        .select('*')\n        .gte('timestamp', startTime.toISOString())\n        .lte('timestamp', now.toISOString())\n        .order('timestamp', { ascending: true });\n\n      if (error) {\n        console.error('获取价格趋势失败:', error);\n        return null;\n      }\n\n      if (!pricePoints || pricePoints.length === 0) {\n        return {\n          period,\n          price_points: [],\n          avg_price: '0',\n          min_price: '0',\n          max_price: '0',\n          volume_sm: '0',\n          volume_bnb: '0',\n          transactions_count: 0\n        };\n      }\n\n      // 计算统计数据\n      const prices = pricePoints.map(p => parseFloat(p.price_usd));\n      const avgPrice = (prices.reduce((sum, price) => sum + price, 0) / prices.length).toString();\n      const minPrice = Math.min(...prices).toString();\n      const maxPrice = Math.max(...prices).toString();\n      \n      const volumeSm = pricePoints.reduce((sum, p) => sum + parseFloat(p.sm_sold), 0).toString();\n      const volumeBnb = pricePoints.reduce((sum, p) => sum + parseFloat(p.bnb_received), 0).toString();\n\n      return {\n        period,\n        price_points: pricePoints,\n        avg_price: avgPrice,\n        min_price: minPrice,\n        max_price: maxPrice,\n        volume_sm: volumeSm,\n        volume_bnb: volumeBnb,\n        transactions_count: pricePoints.length\n      };\n    } catch (error) {\n      console.error('获取价格趋势异常:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取价格预测\n   */\n  static async getPricePrediction(): Promise<PricePrediction | null> {\n    try {\n      const currentStats = await this.getCurrentPriceStats();\n      if (!currentStats) return null;\n\n      const trend24h = await this.getPriceTrend('24h');\n      const trend7d = await this.getPriceTrend('7d');\n      \n      if (!trend24h || !trend7d) return null;\n\n      // 计算下次解锁目标价格（当前价格的2倍）\n      const currentPrice = parseFloat(currentStats.current_price_usd);\n      const nextUnlockTargetPrice = (currentPrice * 2).toString();\n\n      // 分析趋势\n      const recentPrices = trend24h.price_points.slice(-5).map(p => parseFloat(p.price_usd));\n      const olderPrices = trend24h.price_points.slice(0, 5).map(p => parseFloat(p.price_usd));\n      \n      let currentTrend: 'bullish' | 'bearish' | 'neutral' = 'neutral';\n      if (recentPrices.length > 0 && olderPrices.length > 0) {\n        const recentAvg = recentPrices.reduce((sum, p) => sum + p, 0) / recentPrices.length;\n        const olderAvg = olderPrices.reduce((sum, p) => sum + p, 0) / olderPrices.length;\n        \n        if (recentAvg > olderAvg * 1.05) currentTrend = 'bullish';\n        else if (recentAvg < olderAvg * 0.95) currentTrend = 'bearish';\n      }\n\n      // 分析交易量趋势\n      let volumeTrend: 'increasing' | 'decreasing' | 'stable' = 'stable';\n      const recent24hVolume = parseFloat(trend24h.volume_bnb);\n      const previous24hVolume = parseFloat(trend7d.volume_bnb) / 7; // 平均每日交易量\n      \n      if (recent24hVolume > previous24hVolume * 1.2) volumeTrend = 'increasing';\n      else if (recent24hVolume < previous24hVolume * 0.8) volumeTrend = 'decreasing';\n\n      // 估算到达目标价格的时间\n      let estimatedTimeToTarget = 0;\n      let confidenceLevel = 50;\n\n      if (currentTrend === 'bullish' && volumeTrend === 'increasing') {\n        estimatedTimeToTarget = 168; // 7天\n        confidenceLevel = 75;\n      } else if (currentTrend === 'bullish') {\n        estimatedTimeToTarget = 336; // 14天\n        confidenceLevel = 60;\n      } else if (currentTrend === 'neutral') {\n        estimatedTimeToTarget = 720; // 30天\n        confidenceLevel = 40;\n      } else {\n        estimatedTimeToTarget = 1440; // 60天\n        confidenceLevel = 25;\n      }\n\n      return {\n        next_unlock_target_price: nextUnlockTargetPrice,\n        estimated_time_to_target: estimatedTimeToTarget,\n        confidence_level: confidenceLevel,\n        factors: {\n          current_trend: currentTrend,\n          volume_trend: volumeTrend,\n          holder_growth: 'stable' // 这里需要实际的持有者增长数据\n        }\n      };\n    } catch (error) {\n      console.error('获取价格预测异常:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取价格图表数据\n   */\n  static async getPriceChartData(\n    period: '1h' | '24h' | '7d' | '30d',\n    interval: number = 10 // 数据点间隔（分钟）\n  ) {\n    try {\n      const trend = await this.getPriceTrend(period);\n      if (!trend || trend.price_points.length === 0) return [];\n\n      // 根据时间间隔采样数据点\n      const sampledPoints = [];\n      const totalPoints = trend.price_points.length;\n      const sampleInterval = Math.max(1, Math.floor(totalPoints / 50)); // 最多50个数据点\n\n      for (let i = 0; i < totalPoints; i += sampleInterval) {\n        const point = trend.price_points[i];\n        sampledPoints.push({\n          timestamp: new Date(point.timestamp).getTime(),\n          price: parseFloat(point.price_usd),\n          volume: parseFloat(point.sm_sold)\n        });\n      }\n\n      return sampledPoints;\n    } catch (error) {\n      console.error('获取价格图表数据异常:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 计算技术指标\n   */\n  static async getTechnicalIndicators(period: '24h' | '7d' = '24h') {\n    try {\n      const trend = await this.getPriceTrend(period);\n      if (!trend || trend.price_points.length < 10) return null;\n\n      const prices = trend.price_points.map(p => parseFloat(p.price_usd));\n      \n      // 简单移动平均线 (SMA)\n      const sma5 = this.calculateSMA(prices, 5);\n      const sma10 = this.calculateSMA(prices, 10);\n      \n      // 相对强弱指数 (RSI)\n      const rsi = this.calculateRSI(prices, 14);\n      \n      // 布林带\n      const bollingerBands = this.calculateBollingerBands(prices, 20, 2);\n\n      return {\n        sma5: sma5[sma5.length - 1],\n        sma10: sma10[sma10.length - 1],\n        rsi: rsi[rsi.length - 1],\n        bollingerBands: {\n          upper: bollingerBands.upper[bollingerBands.upper.length - 1],\n          middle: bollingerBands.middle[bollingerBands.middle.length - 1],\n          lower: bollingerBands.lower[bollingerBands.lower.length - 1]\n        }\n      };\n    } catch (error) {\n      console.error('计算技术指标异常:', error);\n      return null;\n    }\n  }\n\n  // 辅助函数：计算简单移动平均线\n  private static calculateSMA(prices: number[], period: number): number[] {\n    const sma = [];\n    for (let i = period - 1; i < prices.length; i++) {\n      const sum = prices.slice(i - period + 1, i + 1).reduce((a, b) => a + b, 0);\n      sma.push(sum / period);\n    }\n    return sma;\n  }\n\n  // 辅助函数：计算RSI\n  private static calculateRSI(prices: number[], period: number): number[] {\n    const rsi = [];\n    const gains = [];\n    const losses = [];\n\n    for (let i = 1; i < prices.length; i++) {\n      const change = prices[i] - prices[i - 1];\n      gains.push(change > 0 ? change : 0);\n      losses.push(change < 0 ? Math.abs(change) : 0);\n    }\n\n    for (let i = period - 1; i < gains.length; i++) {\n      const avgGain = gains.slice(i - period + 1, i + 1).reduce((a, b) => a + b, 0) / period;\n      const avgLoss = losses.slice(i - period + 1, i + 1).reduce((a, b) => a + b, 0) / period;\n      \n      if (avgLoss === 0) {\n        rsi.push(100);\n      } else {\n        const rs = avgGain / avgLoss;\n        rsi.push(100 - (100 / (1 + rs)));\n      }\n    }\n\n    return rsi;\n  }\n\n  // 辅助函数：计算布林带\n  private static calculateBollingerBands(prices: number[], period: number, multiplier: number) {\n    const sma = this.calculateSMA(prices, period);\n    const upper = [];\n    const middle = [];\n    const lower = [];\n\n    for (let i = 0; i < sma.length; i++) {\n      const dataIndex = i + period - 1;\n      const slice = prices.slice(dataIndex - period + 1, dataIndex + 1);\n      const mean = sma[i];\n      const variance = slice.reduce((sum, price) => sum + Math.pow(price - mean, 2), 0) / period;\n      const stdDev = Math.sqrt(variance);\n\n      middle.push(mean);\n      upper.push(mean + (stdDev * multiplier));\n      lower.push(mean - (stdDev * multiplier));\n    }\n\n    return { upper, middle, lower };\n  }\n}\n\nexport default PriceDiscoveryService;\n"],"mappings":"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","ignoreList":[]}