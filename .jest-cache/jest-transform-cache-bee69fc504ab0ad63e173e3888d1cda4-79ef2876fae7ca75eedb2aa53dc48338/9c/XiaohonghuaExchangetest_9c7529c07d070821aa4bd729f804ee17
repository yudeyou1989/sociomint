89d9d08756d76d29b14b05d0c3ed96b2
"use strict";
// 模拟依赖
jest.mock('wagmi', ()=>({
        useAccount: jest.fn()
    }));
jest.mock('@supabase/supabase-js', ()=>({
        createClient: jest.fn()
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _XiaohonghuaExchange = /*#__PURE__*/ _interop_require_default(require("../XiaohonghuaExchange"));
const _wagmi = require("wagmi");
const _supabasejs = require("@supabase/supabase-js");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// 模拟fetch
global.fetch = jest.fn();
describe('XiaohonghuaExchange', ()=>{
    // 模拟Supabase客户端
    const mockSupabase = {
        auth: {
            getSession: jest.fn().mockResolvedValue({
                data: {
                    session: {
                        user: {
                            id: 'user-123'
                        },
                        access_token: 'mock-token'
                    }
                },
                error: null
            })
        },
        from: jest.fn().mockImplementation((table)=>({
                select: jest.fn().mockReturnThis(),
                eq: jest.fn().mockReturnThis(),
                single: jest.fn().mockResolvedValue({
                    data: table === 'users' ? {
                        xiaohonghua_balance: 100
                    } : {
                        xiaohonghua_to_sm_rate: 10
                    },
                    error: null
                })
            }))
    };
    beforeEach(()=>{
        // 重置所有模拟
        jest.clearAllMocks();
        // 默认模拟值
        _wagmi.useAccount.mockReturnValue({
            address: '0x123456789abcdef',
            isConnected: true
        });
        _supabasejs.createClient.mockReturnValue(mockSupabase);
        // 模拟fetch
        global.fetch.mockResolvedValue({
            ok: true,
            json: jest.fn().mockResolvedValue({
                success: true,
                data: {
                    smAmount: 1000
                }
            })
        });
    });
    it('renders wallet not connected message when not connected', ()=>{
        _wagmi.useAccount.mockReturnValue({
            address: undefined,
            isConnected: false
        });
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {}));
        expect(_react1.screen.getByText('请连接钱包使用兑换功能')).toBeInTheDocument();
    });
    it('renders login required message when not logged in', ()=>{
        // 模拟未登录
        mockSupabase.auth.getSession.mockResolvedValueOnce({
            data: {
                session: null
            },
            error: null
        });
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {}));
        // 等待异步操作完成
        return (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('请登录以使用兑换功能')).toBeInTheDocument();
        });
    });
    it('renders exchange form with correct user data', async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {}));
        await (0, _react1.waitFor)(()=>{
            // 检查标题
            expect(_react1.screen.getByText('小红花兑换')).toBeInTheDocument();
            // 检查余额
            expect(_react1.screen.getByText('100')).toBeInTheDocument();
            // 检查兑换比率
            expect(_react1.screen.getByText('1 小红花 = 10 SM')).toBeInTheDocument();
            // 检查兑换按钮
            expect(_react1.screen.getByText('兑换')).toBeInTheDocument();
            expect(_react1.screen.getByText('兑换')).toBeDisabled();
        });
    });
    it('updates exchange amount and estimated SM when input changes', async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {}));
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('小红花兑换')).toBeInTheDocument();
        });
        // 找到输入框
        const input = _react1.screen.getByPlaceholderText('输入小红花数量');
        // 输入兑换数量
        _react1.fireEvent.change(input, {
            target: {
                value: '50'
            }
        });
        // 检查预计获得的SM数量
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('500 SM')).toBeInTheDocument();
        });
        // 检查兑换按钮是否启用
        expect(_react1.screen.getByText('兑换')).not.toBeDisabled();
    });
    it('sets max amount when max button is clicked', async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {}));
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('小红花兑换')).toBeInTheDocument();
        });
        // 找到最大按钮
        const maxButton = _react1.screen.getByText('最大');
        // 点击最大按钮
        _react1.fireEvent.click(maxButton);
        // 检查输入框的值
        const input = _react1.screen.getByPlaceholderText('输入小红花数量');
        expect(input.value).toBe('100');
        // 检查预计获得的SM数量
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('1,000 SM')).toBeInTheDocument();
        });
    });
    it('shows error when exchange amount exceeds balance', async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {}));
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('小红花兑换')).toBeInTheDocument();
        });
        // 找到输入框
        const input = _react1.screen.getByPlaceholderText('输入小红花数量');
        // 输入超过余额的数量
        _react1.fireEvent.change(input, {
            target: {
                value: '150'
            }
        });
        // 检查输入框的值是否被限制为最大余额
        const inputElement = input;
        expect(inputElement.value).toBe('100');
    });
    it('submits exchange request and shows success message', async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {
            onExchangeComplete: jest.fn()
        }));
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('小红花兑换')).toBeInTheDocument();
        });
        // 找到输入框和兑换按钮
        const input = _react1.screen.getByPlaceholderText('输入小红花数量');
        // 输入兑换数量
        _react1.fireEvent.change(input, {
            target: {
                value: '50'
            }
        });
        // 等待按钮启用
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('兑换')).not.toBeDisabled();
        });
        // 点击兑换按钮
        _react1.fireEvent.click(_react1.screen.getByText('兑换'));
        // 检查是否显示处理中
        expect(_react1.screen.getByText('处理中...')).toBeInTheDocument();
        // 等待成功消息
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('成功兑换 1000 SM')).toBeInTheDocument();
        });
        // 检查余额是否更新
        expect(_react1.screen.getByText('50')).toBeInTheDocument();
    });
    it('shows error message when exchange fails', async ()=>{
        // 模拟请求失败
        global.fetch.mockResolvedValueOnce({
            ok: false,
            json: jest.fn().mockResolvedValue({
                message: '兑换失败，小红花余额不足'
            })
        });
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {}));
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('小红花兑换')).toBeInTheDocument();
        });
        // 找到输入框和兑换按钮
        const input = _react1.screen.getByPlaceholderText('输入小红花数量');
        // 输入兑换数量
        _react1.fireEvent.change(input, {
            target: {
                value: '50'
            }
        });
        // 等待按钮启用
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('兑换')).not.toBeDisabled();
        });
        // 点击兑换按钮
        _react1.fireEvent.click(_react1.screen.getByText('兑换'));
        // 等待错误消息
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('兑换失败，小红花余额不足')).toBeInTheDocument();
        });
    });
    it('calls onExchangeComplete callback when exchange succeeds', async ()=>{
        const mockCallback = jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_XiaohonghuaExchange.default, {
            onExchangeComplete: mockCallback
        }));
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('小红花兑换')).toBeInTheDocument();
        });
        // 找到输入框和兑换按钮
        const input = _react1.screen.getByPlaceholderText('输入小红花数量');
        // 输入兑换数量
        _react1.fireEvent.change(input, {
            target: {
                value: '50'
            }
        });
        // 等待按钮启用
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('兑换')).not.toBeDisabled();
        });
        // 点击兑换按钮
        _react1.fireEvent.click(_react1.screen.getByText('兑换'));
        // 等待成功消息
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('成功兑换 1000 SM')).toBeInTheDocument();
        });
        // 检查回调是否被调用
        expect(mockCallback).toHaveBeenCalled();
    });
});

//# sourceMappingURL=data:application/json;base64,