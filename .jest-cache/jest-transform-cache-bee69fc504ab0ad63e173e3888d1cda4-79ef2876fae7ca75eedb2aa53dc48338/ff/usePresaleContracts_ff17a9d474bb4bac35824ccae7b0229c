40812910a7012dc9de9064b41b1d1fb7
"use strict";

/* istanbul ignore next */
function cov_1zn1tuppv9() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/hooks/contracts/usePresaleContracts.ts";
  var hash = "0950a03c62b4081e78a8f7955a81dee3029099c1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/hooks/contracts/usePresaleContracts.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "5": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "6": {
        start: {
          line: 15,
          column: 38
        },
        end: {
          line: 15,
          column: 65
        }
      },
      "7": {
        start: {
          line: 16,
          column: 44
        },
        end: {
          line: 16,
          column: 71
        }
      },
      "8": {
        start: {
          line: 17,
          column: 44
        },
        end: {
          line: 17,
          column: 75
        }
      },
      "9": {
        start: {
          line: 18,
          column: 40
        },
        end: {
          line: 18,
          column: 71
        }
      },
      "10": {
        start: {
          line: 19,
          column: 56
        },
        end: {
          line: 19,
          column: 87
        }
      },
      "11": {
        start: {
          line: 20,
          column: 54
        },
        end: {
          line: 20,
          column: 85
        }
      },
      "12": {
        start: {
          line: 21,
          column: 54
        },
        end: {
          line: 21,
          column: 85
        }
      },
      "13": {
        start: {
          line: 22,
          column: 44
        },
        end: {
          line: 22,
          column: 68
        }
      },
      "14": {
        start: {
          line: 24,
          column: 71
        },
        end: {
          line: 24,
          column: 116
        }
      },
      "15": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 50,
          column: 7
        }
      },
      "16": {
        start: {
          line: 27,
          column: 38
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "17": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "18": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "19": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "20": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 34,
          column: 17
        }
      },
      "21": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "22": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 72
        }
      },
      "23": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 63
        }
      },
      "24": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 68
        }
      },
      "25": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 66
        }
      },
      "26": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 39
        }
      },
      "27": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "28": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 36
        }
      },
      "29": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 32
        }
      },
      "30": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "31": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "32": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "33": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 36
        }
      },
      "34": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 49
        }
      },
      "35": {
        start: {
          line: 56,
          column: 34
        },
        end: {
          line: 56,
          column: 47
        }
      },
      "36": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 44
        }
      },
      "37": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 24
        }
      },
      "38": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 32
        }
      },
      "39": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 74,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "usePresaleContract",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 27
          }
        },
        loc: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 27
          }
        },
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 38
          },
          end: {
            line: 27,
            column: 39
          }
        },
        loc: {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 51,
            column: 28
          }
        },
        loc: {
          start: {
            line: 51,
            column: 43
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 51
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 27
          }
        },
        loc: {
          start: {
            line: 56,
            column: 34
          },
          end: {
            line: 56,
            column: 47
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 34,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 34,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 28
          }
        }, {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 47
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/hooks/contracts/usePresaleContracts.ts"],
      sourcesContent: ["import { useState, useEffect } from 'react';\nimport { parseEther, formatEther } from 'viem';\nimport { useSMTokenExchange } from '../useSMTokenExchange';\n\nexport interface PresaleContractData {\n  purchaseTokens: (amount: bigint) => Promise<void>;\n  isLoading: boolean;\n  presaleEnded?: boolean;\n  currentPrice?: bigint;\n  soldTokens?: bigint;\n  totalPresaleTokens?: bigint;\n  minPurchaseAmount?: bigint;\n  maxPurchaseAmount?: bigint;\n  userPurchase?: bigint[];\n}\n\nexport function usePresaleContract(): PresaleContractData {\n  const [isLoading, setIsLoading] = useState(false);\n  const [presaleEnded, setPresaleEnded] = useState(false);\n  const [currentPrice, setCurrentPrice] = useState<bigint>(BigInt(0));\n  const [soldTokens, setSoldTokens] = useState<bigint>(BigInt(0));\n  const [totalPresaleTokens, setTotalPresaleTokens] = useState<bigint>(BigInt(0));\n  const [minPurchaseAmount, setMinPurchaseAmount] = useState<bigint>(BigInt(0));\n  const [maxPurchaseAmount, setMaxPurchaseAmount] = useState<bigint>(BigInt(0));\n  const [userPurchase, setUserPurchase] = useState<bigint[]>([]);\n\n  // \u4F7F\u7528\u73B0\u6709\u7684 SMTokenExchange hook\n  const { buyTokens, getCurrentPrice, isLoading: exchangeLoading } = useSMTokenExchange();\n\n  useEffect(() => {\n    // \u521D\u59CB\u5316\u9884\u552E\u6570\u636E\n    const initializePresaleData = async () => {\n      try {\n        setIsLoading(true);\n        \n        // \u83B7\u53D6\u5F53\u524D\u4EF7\u683C\n        const price = await getCurrentPrice();\n        if (price) {\n          setCurrentPrice(BigInt(price));\n        }\n        \n        // \u8BBE\u7F6E\u9ED8\u8BA4\u503C\n        setTotalPresaleTokens(parseEther('1000000')); // 100\u4E07\u4EE3\u5E01\n        setSoldTokens(parseEther('250000')); // \u5DF2\u552E\u51FA25\u4E07\n        setMinPurchaseAmount(parseEther('0.01')); // \u6700\u5C0F0.01 BNB\n        setMaxPurchaseAmount(parseEther('10')); // \u6700\u592710 BNB\n        setPresaleEnded(false);\n        \n      } catch (error) {\n        console.error('\u521D\u59CB\u5316\u9884\u552E\u6570\u636E\u5931\u8D25:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializePresaleData();\n  }, [getCurrentPrice]);\n\n  const purchaseTokens = async (amount: bigint) => {\n    try {\n      setIsLoading(true);\n      await buyTokens(amount);\n      \n      // \u66F4\u65B0\u5DF2\u552E\u51FA\u4EE3\u5E01\u6570\u91CF\n      setSoldTokens(prev => prev + amount);\n    } catch (error) {\n      console.error('\u8D2D\u4E70\u4EE3\u5E01\u5931\u8D25:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    purchaseTokens,\n    isLoading: isLoading || exchangeLoading,\n    presaleEnded,\n    currentPrice,\n    soldTokens,\n    totalPresaleTokens,\n    minPurchaseAmount,\n    maxPurchaseAmount,\n    userPurchase\n  };\n}\n"],
      names: ["usePresaleContract", "isLoading", "setIsLoading", "useState", "presaleEnded", "setPresaleEnded", "currentPrice", "setCurrentPrice", "BigInt", "soldTokens", "setSoldTokens", "totalPresaleTokens", "setTotalPresaleTokens", "minPurchaseAmount", "setMinPurchaseAmount", "maxPurchaseAmount", "setMaxPurchaseAmount", "userPurchase", "setUserPurchase", "buyTokens", "getCurrentPrice", "exchangeLoading", "useSMTokenExchange", "useEffect", "initializePresaleData", "price", "parseEther", "error", "console", "purchaseTokens", "amount", "prev"],
      mappings: ";;;;+BAgBgBA;;;eAAAA;;;uBAhBoB;sBACI;oCACL;AAc5B,SAASA;IACd,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACC,cAAcC,gBAAgB,GAAGF,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACG,cAAcC,gBAAgB,GAAGJ,IAAAA,eAAQ,EAASK,OAAO;IAChE,MAAM,CAACC,YAAYC,cAAc,GAAGP,IAAAA,eAAQ,EAASK,OAAO;IAC5D,MAAM,CAACG,oBAAoBC,sBAAsB,GAAGT,IAAAA,eAAQ,EAASK,OAAO;IAC5E,MAAM,CAACK,mBAAmBC,qBAAqB,GAAGX,IAAAA,eAAQ,EAASK,OAAO;IAC1E,MAAM,CAACO,mBAAmBC,qBAAqB,GAAGb,IAAAA,eAAQ,EAASK,OAAO;IAC1E,MAAM,CAACS,cAAcC,gBAAgB,GAAGf,IAAAA,eAAQ,EAAW,EAAE;IAE7D,6BAA6B;IAC7B,MAAM,EAAEgB,SAAS,EAAEC,eAAe,EAAEnB,WAAWoB,eAAe,EAAE,GAAGC,IAAAA,sCAAkB;IAErFC,IAAAA,gBAAS,EAAC;QACR,UAAU;QACV,MAAMC,wBAAwB;YAC5B,IAAI;gBACFtB,aAAa;gBAEb,SAAS;gBACT,MAAMuB,QAAQ,MAAML;gBACpB,IAAIK,OAAO;oBACTlB,gBAAgBC,OAAOiB;gBACzB;gBAEA,QAAQ;gBACRb,sBAAsBc,IAAAA,gBAAU,EAAC,aAAa,SAAS;gBACvDhB,cAAcgB,IAAAA,gBAAU,EAAC,YAAY,SAAS;gBAC9CZ,qBAAqBY,IAAAA,gBAAU,EAAC,UAAU,aAAa;gBACvDV,qBAAqBU,IAAAA,gBAAU,EAAC,QAAQ,WAAW;gBACnDrB,gBAAgB;YAElB,EAAE,OAAOsB,OAAO;gBACdC,QAAQD,KAAK,CAAC,cAAcA;YAC9B,SAAU;gBACRzB,aAAa;YACf;QACF;QAEAsB;IACF,GAAG;QAACJ;KAAgB;IAEpB,MAAMS,iBAAiB,OAAOC;QAC5B,IAAI;YACF5B,aAAa;YACb,MAAMiB,UAAUW;YAEhB,YAAY;YACZpB,cAAcqB,CAAAA,OAAQA,OAAOD;QAC/B,EAAE,OAAOH,OAAO;YACdC,QAAQD,KAAK,CAAC,WAAWA;YACzB,MAAMA;QACR,SAAU;YACRzB,aAAa;QACf;IACF;IAEA,OAAO;QACL2B;QACA5B,WAAWA,aAAaoB;QACxBjB;QACAE;QACAG;QACAE;QACAE;QACAE;QACAE;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0950a03c62b4081e78a8f7955a81dee3029099c1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zn1tuppv9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zn1tuppv9();
cov_1zn1tuppv9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1zn1tuppv9().s[1]++;
Object.defineProperty(exports, "usePresaleContract", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1zn1tuppv9().f[0]++;
    cov_1zn1tuppv9().s[2]++;
    return usePresaleContract;
  }
});
const _react =
/* istanbul ignore next */
(cov_1zn1tuppv9().s[3]++, require("react"));
const _viem =
/* istanbul ignore next */
(cov_1zn1tuppv9().s[4]++, require("viem"));
const _useSMTokenExchange =
/* istanbul ignore next */
(cov_1zn1tuppv9().s[5]++, require("../useSMTokenExchange"));
function usePresaleContract() {
  /* istanbul ignore next */
  cov_1zn1tuppv9().f[1]++;
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[6]++, (0, _react.useState)(false));
  const [presaleEnded, setPresaleEnded] =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[7]++, (0, _react.useState)(false));
  const [currentPrice, setCurrentPrice] =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[8]++, (0, _react.useState)(BigInt(0)));
  const [soldTokens, setSoldTokens] =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[9]++, (0, _react.useState)(BigInt(0)));
  const [totalPresaleTokens, setTotalPresaleTokens] =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[10]++, (0, _react.useState)(BigInt(0)));
  const [minPurchaseAmount, setMinPurchaseAmount] =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[11]++, (0, _react.useState)(BigInt(0)));
  const [maxPurchaseAmount, setMaxPurchaseAmount] =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[12]++, (0, _react.useState)(BigInt(0)));
  const [userPurchase, setUserPurchase] =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[13]++, (0, _react.useState)([]));
  // 使用现有的 SMTokenExchange hook
  const {
    buyTokens,
    getCurrentPrice,
    isLoading: exchangeLoading
  } =
  /* istanbul ignore next */
  (cov_1zn1tuppv9().s[14]++, (0, _useSMTokenExchange.useSMTokenExchange)());
  /* istanbul ignore next */
  cov_1zn1tuppv9().s[15]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1zn1tuppv9().f[2]++;
    cov_1zn1tuppv9().s[16]++;
    // 初始化预售数据
    const initializePresaleData = async () => {
      /* istanbul ignore next */
      cov_1zn1tuppv9().f[3]++;
      cov_1zn1tuppv9().s[17]++;
      try {
        /* istanbul ignore next */
        cov_1zn1tuppv9().s[18]++;
        setIsLoading(true);
        // 获取当前价格
        const price =
        /* istanbul ignore next */
        (cov_1zn1tuppv9().s[19]++, await getCurrentPrice());
        /* istanbul ignore next */
        cov_1zn1tuppv9().s[20]++;
        if (price) {
          /* istanbul ignore next */
          cov_1zn1tuppv9().b[0][0]++;
          cov_1zn1tuppv9().s[21]++;
          setCurrentPrice(BigInt(price));
        } else
        /* istanbul ignore next */
        {
          cov_1zn1tuppv9().b[0][1]++;
        }
        // 设置默认值
        cov_1zn1tuppv9().s[22]++;
        setTotalPresaleTokens((0, _viem.parseEther)('1000000')); // 100万代币
        /* istanbul ignore next */
        cov_1zn1tuppv9().s[23]++;
        setSoldTokens((0, _viem.parseEther)('250000')); // 已售出25万
        /* istanbul ignore next */
        cov_1zn1tuppv9().s[24]++;
        setMinPurchaseAmount((0, _viem.parseEther)('0.01')); // 最小0.01 BNB
        /* istanbul ignore next */
        cov_1zn1tuppv9().s[25]++;
        setMaxPurchaseAmount((0, _viem.parseEther)('10')); // 最大10 BNB
        /* istanbul ignore next */
        cov_1zn1tuppv9().s[26]++;
        setPresaleEnded(false);
      } catch (error) {
        /* istanbul ignore next */
        cov_1zn1tuppv9().s[27]++;
        console.error('初始化预售数据失败:', error);
      } finally {
        /* istanbul ignore next */
        cov_1zn1tuppv9().s[28]++;
        setIsLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_1zn1tuppv9().s[29]++;
    initializePresaleData();
  }, [getCurrentPrice]);
  /* istanbul ignore next */
  cov_1zn1tuppv9().s[30]++;
  const purchaseTokens = async amount => {
    /* istanbul ignore next */
    cov_1zn1tuppv9().f[4]++;
    cov_1zn1tuppv9().s[31]++;
    try {
      /* istanbul ignore next */
      cov_1zn1tuppv9().s[32]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_1zn1tuppv9().s[33]++;
      await buyTokens(amount);
      // 更新已售出代币数量
      /* istanbul ignore next */
      cov_1zn1tuppv9().s[34]++;
      setSoldTokens(prev => {
        /* istanbul ignore next */
        cov_1zn1tuppv9().f[5]++;
        cov_1zn1tuppv9().s[35]++;
        return prev + amount;
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1zn1tuppv9().s[36]++;
      console.error('购买代币失败:', error);
      /* istanbul ignore next */
      cov_1zn1tuppv9().s[37]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_1zn1tuppv9().s[38]++;
      setIsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1zn1tuppv9().s[39]++;
  return {
    purchaseTokens,
    isLoading:
    /* istanbul ignore next */
    (cov_1zn1tuppv9().b[1][0]++, isLoading) ||
    /* istanbul ignore next */
    (cov_1zn1tuppv9().b[1][1]++, exchangeLoading),
    presaleEnded,
    currentPrice,
    soldTokens,
    totalPresaleTokens,
    minPurchaseAmount,
    maxPurchaseAmount,
    userPurchase
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,