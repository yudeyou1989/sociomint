411400ae54485fbdc05e87e91a4873f7
/**
 * CSRF令牌API路由
 * 提供CSRF令牌的生成和验证
 */"use strict";

/* istanbul ignore next */
function cov_1tdb6zqa0() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/app/api/security/csrf/route.ts";
  var hash = "88fce7df61b999f915ab574e90f526be77c17087";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/app/api/security/csrf/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "7": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "8": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 26,
          column: 53
        }
      },
      "9": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "11": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 61
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "16": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "17": {
        start: {
          line: 52,
          column: 21
        },
        end: {
          line: 52,
          column: 41
        }
      },
      "18": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "19": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "20": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "21": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 69
        }
      },
      "22": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "23": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "24": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "25": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 61
        }
      },
      "26": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 10
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 10
          },
          end: {
            line: 18,
            column: 11
          }
        },
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 19
          }
        },
        loc: {
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 50
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/app/api/security/csrf/route.ts"],
      sourcesContent: ["/**\n * CSRF\u4EE4\u724CAPI\u8DEF\u7531\n * \u63D0\u4F9BCSRF\u4EE4\u724C\u7684\u751F\u6210\u548C\u9A8C\u8BC1\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { CSRFProtection } from '@/lib/security';\n\n// \u914D\u7F6E\u4E3A\u52A8\u6001\u8DEF\u7531\u4EE5\u652F\u6301\u9759\u6001\u5BFC\u51FA\nexport const dynamic = 'force-dynamic';\n\n/**\n * \u83B7\u53D6CSRF\u4EE4\u724C\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // \u751F\u6210\u65B0\u7684CSRF\u4EE4\u724C\n    const token = CSRFProtection.generateToken();\n    \n    // \u8BBE\u7F6E\u4EE4\u724C\u5230\u4F1A\u8BDD\u4E2D\n    CSRFProtection.setToken(token);\n    \n    return NextResponse.json({\n      success: true,\n      token,\n      message: 'CSRF token generated successfully'\n    });\n  } catch (error) {\n    console.error('Error generating CSRF token:', error);\n    \n    return NextResponse.json(\n      {\n        success: false,\n        error: 'Failed to generate CSRF token',\n        code: 'CSRF_GENERATION_FAILED'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * \u9A8C\u8BC1CSRF\u4EE4\u724C\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { token } = body;\n    \n    if (!token) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'CSRF token is required',\n          code: 'CSRF_TOKEN_REQUIRED'\n        },\n        { status: 400 }\n      );\n    }\n    \n    // \u9A8C\u8BC1\u4EE4\u724C\n    const isValid = CSRFProtection.validateToken(token);\n    \n    if (!isValid) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'Invalid CSRF token',\n          code: 'CSRF_TOKEN_INVALID'\n        },\n        { status: 403 }\n      );\n    }\n    \n    return NextResponse.json({\n      success: true,\n      valid: true,\n      message: 'CSRF token is valid'\n    });\n  } catch (error) {\n    console.error('Error validating CSRF token:', error);\n    \n    return NextResponse.json(\n      {\n        success: false,\n        error: 'Failed to validate CSRF token',\n        code: 'CSRF_VALIDATION_FAILED'\n      },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["GET", "POST", "dynamic", "request", "token", "CSRFProtection", "generateToken", "setToken", "NextResponse", "json", "success", "message", "error", "console", "code", "status", "body", "isValid", "validateToken", "valid"],
      mappings: "AAAA;;;CAGC;;;;;;;;;;;IAWqBA,GAAG;eAAHA;;IA8BAC,IAAI;eAAJA;;IAnCTC,OAAO;eAAPA;;;wBAJ6B;0BACX;AAGxB,MAAMA,UAAU;AAKhB,eAAeF,IAAIG,OAAoB;IAC5C,IAAI;QACF,aAAa;QACb,MAAMC,QAAQC,wBAAc,CAACC,aAAa;QAE1C,WAAW;QACXD,wBAAc,CAACE,QAAQ,CAACH;QAExB,OAAOI,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTN;YACAO,SAAS;QACX;IACF,EAAE,OAAOC,OAAO;QACdC,QAAQD,KAAK,CAAC,gCAAgCA;QAE9C,OAAOJ,oBAAY,CAACC,IAAI,CACtB;YACEC,SAAS;YACTE,OAAO;YACPE,MAAM;QACR,GACA;YAAEC,QAAQ;QAAI;IAElB;AACF;AAKO,eAAed,KAAKE,OAAoB;IAC7C,IAAI;QACF,MAAMa,OAAO,MAAMb,QAAQM,IAAI;QAC/B,MAAM,EAAEL,KAAK,EAAE,GAAGY;QAElB,IAAI,CAACZ,OAAO;YACV,OAAOI,oBAAY,CAACC,IAAI,CACtB;gBACEC,SAAS;gBACTE,OAAO;gBACPE,MAAM;YACR,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,OAAO;QACP,MAAME,UAAUZ,wBAAc,CAACa,aAAa,CAACd;QAE7C,IAAI,CAACa,SAAS;YACZ,OAAOT,oBAAY,CAACC,IAAI,CACtB;gBACEC,SAAS;gBACTE,OAAO;gBACPE,MAAM;YACR,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,OAAOP,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTS,OAAO;YACPR,SAAS;QACX;IACF,EAAE,OAAOC,OAAO;QACdC,QAAQD,KAAK,CAAC,gCAAgCA;QAE9C,OAAOJ,oBAAY,CAACC,IAAI,CACtB;YACEC,SAAS;YACTE,OAAO;YACPE,MAAM;QACR,GACA;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "88fce7df61b999f915ab574e90f526be77c17087"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tdb6zqa0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tdb6zqa0();
cov_1tdb6zqa0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1tdb6zqa0().f[0]++;
  cov_1tdb6zqa0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1tdb6zqa0().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_1tdb6zqa0().f[1]++;
    cov_1tdb6zqa0().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_1tdb6zqa0().f[2]++;
    cov_1tdb6zqa0().s[5]++;
    return POST;
  },
  dynamic: function () {
    /* istanbul ignore next */
    cov_1tdb6zqa0().f[3]++;
    cov_1tdb6zqa0().s[6]++;
    return dynamic;
  }
});
const _server =
/* istanbul ignore next */
(cov_1tdb6zqa0().s[7]++, require("next/server"));
const _security =
/* istanbul ignore next */
(cov_1tdb6zqa0().s[8]++, require("../../../../lib/security"));
const dynamic =
/* istanbul ignore next */
(cov_1tdb6zqa0().s[9]++, 'force-dynamic');
async function GET(request) {
  /* istanbul ignore next */
  cov_1tdb6zqa0().f[4]++;
  cov_1tdb6zqa0().s[10]++;
  try {
    // 生成新的CSRF令牌
    const token =
    /* istanbul ignore next */
    (cov_1tdb6zqa0().s[11]++, _security.CSRFProtection.generateToken());
    // 设置令牌到会话中
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[12]++;
    _security.CSRFProtection.setToken(token);
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[13]++;
    return _server.NextResponse.json({
      success: true,
      token,
      message: 'CSRF token generated successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[14]++;
    console.error('Error generating CSRF token:', error);
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[15]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to generate CSRF token',
      code: 'CSRF_GENERATION_FAILED'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1tdb6zqa0().f[5]++;
  cov_1tdb6zqa0().s[16]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1tdb6zqa0().s[17]++, await request.json());
    const {
      token
    } =
    /* istanbul ignore next */
    (cov_1tdb6zqa0().s[18]++, body);
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[19]++;
    if (!token) {
      /* istanbul ignore next */
      cov_1tdb6zqa0().b[0][0]++;
      cov_1tdb6zqa0().s[20]++;
      return _server.NextResponse.json({
        success: false,
        error: 'CSRF token is required',
        code: 'CSRF_TOKEN_REQUIRED'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tdb6zqa0().b[0][1]++;
    }
    // 验证令牌
    const isValid =
    /* istanbul ignore next */
    (cov_1tdb6zqa0().s[21]++, _security.CSRFProtection.validateToken(token));
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[22]++;
    if (!isValid) {
      /* istanbul ignore next */
      cov_1tdb6zqa0().b[1][0]++;
      cov_1tdb6zqa0().s[23]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Invalid CSRF token',
        code: 'CSRF_TOKEN_INVALID'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tdb6zqa0().b[1][1]++;
    }
    cov_1tdb6zqa0().s[24]++;
    return _server.NextResponse.json({
      success: true,
      valid: true,
      message: 'CSRF token is valid'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[25]++;
    console.error('Error validating CSRF token:', error);
    /* istanbul ignore next */
    cov_1tdb6zqa0().s[26]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to validate CSRF token',
      code: 'CSRF_VALIDATION_FAILED'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,