cc32d74a0e6def081c799aaf54ff41b7
"use strict";

/* istanbul ignore next */
function cov_15nezi4bzd() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/lib/i18n.ts";
  var hash = "3c86f41566eeb0d207cdc69c7f820c031e2447d3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/lib/i18n.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "9": {
        start: {
          line: 28,
          column: 31
        },
        end: {
          line: 28,
          column: 75
        }
      },
      "10": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 46
        }
      },
      "11": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "12": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "13": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "14": {
        start: {
          line: 40,
          column: 21
        },
        end: {
          line: 271,
          column: 1
        }
      },
      "15": {
        start: {
          line: 273,
          column: 17
        },
        end: {
          line: 273,
          column: 31
        }
      },
      "16": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 36
        }
      },
      "17": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "18": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 27
        }
      },
      "19": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 278,
          column: 24
        }
      },
      "20": {
        start: {
          line: 281,
          column: 0
        },
        end: {
          line: 304,
          column: 3
        }
      },
      "21": {
        start: {
          line: 305,
          column: 17
        },
        end: {
          line: 305,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 20
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 21
          }
        },
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 19
          }
        },
        loc: {
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 30
      },
      "7": {
        name: "getTranslation",
        decl: {
          start: {
            line: 272,
            column: 9
          },
          end: {
            line: 272,
            column: 23
          }
        },
        loc: {
          start: {
            line: 272,
            column: 37
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 272
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 31,
            column: 38
          }
        }, {
          start: {
            line: 31,
            column: 41
          },
          end: {
            line: 33,
            column: 5
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 14
          }
        }, {
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 32
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 278,
            column: 11
          },
          end: {
            line: 278,
            column: 23
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 11
          },
          end: {
            line: 278,
            column: 16
          }
        }, {
          start: {
            line: 278,
            column: 20
          },
          end: {
            line: 278,
            column: 23
          }
        }],
        line: 278
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/lib/i18n.ts"],
      sourcesContent: ["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nexport const defaultLocale = 'zh';\nexport const locales = ['en', 'zh'] as const;\nexport type Locale = typeof locales[number];\n\nexport const translations = {\n  en: {\n    common: {\n      connect: 'Connect Wallet',\n      disconnect: 'Disconnect',\n      balance: 'Balance',\n      exchange: 'Exchange',\n      loading: 'Loading...',\n      exchangeDescription: 'Exchange BNB for SM tokens with dynamic pricing',\n      openMenu: 'Open Menu',\n      closeMenu: 'Close Menu',\n    },\n    navigation: {\n      home: 'Home',\n      tasks: 'Tasks',\n      socialTasks: 'Social Tasks',\n      market: 'Market',\n      assets: 'Assets',\n      vault: 'Vault',\n      referralSystem: 'Referral System',\n    },\n    home: {\n      heroTitle: {\n        line1: 'SocioMint Platform',\n        line2: 'Social Mining Revolution'\n      },\n      heroSubtitle: 'Earn SM tokens through social media tasks and interactions',\n      exploreTasks: 'Explore Tasks',\n      visitMarket: 'Visit Market',\n      stats: {\n        verifications: 'Social Verifications',\n        rewards: 'SM Rewards Distributed',\n        tasks: 'Available Tasks'\n      }\n    },\n    exchange: {\n      title: 'Token Exchange',\n      feeWarning: 'exchange fee'\n    },\n    presale: {\n      title: 'SM Token Presale',\n      subtitle: 'Join the SocioMint ecosystem early and get exclusive benefits'\n    },\n    socialTasks: {\n      title: 'Social Tasks',\n      subtitle: 'Complete social media tasks to earn red flowers and SM tokens',\n      tabs: {\n        tasks: 'Available Tasks',\n        referrals: 'Referral System',\n        rewards: 'Weekly Rewards'\n      },\n      sections: {\n        availableTasks: 'Available Social Tasks',\n        referralSystem: 'Referral System',\n        weeklyRewards: 'Weekly Reward Status'\n      },\n      redFlower: {\n        title: 'About Red Flowers',\n        description: 'Red flowers are earned through social tasks and can be exchanged for SM tokens',\n        earn: {\n          title: 'Earn',\n          description: 'Complete social tasks'\n        },\n        share: {\n          title: 'Share',\n          description: 'Invite friends to join'\n        },\n        exchange: {\n          title: 'Exchange',\n          description: 'Convert to SM tokens'\n        }\n      }\n    },\n    tasks: {\n      title: 'Tasks',\n      createTask: 'Create Task',\n      connectWallet: 'Connect Wallet',\n      connectWalletDescription: 'Please connect your wallet to participate in tasks',\n      filters: 'Filters',\n      noTasksFound: 'No tasks found',\n      tabs: {\n        exposure: 'Exposure Tasks',\n        treasure: 'Treasure Box Tasks'\n      },\n      filters: {\n        platform: 'Platform',\n        action: 'Action',\n        sortBy: 'Sort By',\n        platformOptions: {\n          all: 'All',\n          x: 'X (Twitter)',\n          telegram: 'Telegram',\n          discord: 'Discord',\n          instagram: 'Instagram',\n          reddit: 'Reddit'\n        },\n        actionOptions: {\n          all: 'All',\n          follow: 'Follow',\n          like: 'Like',\n          retweet: 'Retweet',\n          tweet: 'Tweet',\n          join: 'Join',\n          verify: 'Verify',\n          comment: 'Comment',\n          referral: 'Referral'\n        },\n        sortOptions: {\n          rewardHighest: 'Highest Reward',\n          rewardLowest: 'Lowest Completion',\n          newest: 'Newest',\n          oldest: 'Oldest'\n        }\n      }\n    }\n  },\n  zh: {\n    common: {\n      connect: '\u8FDE\u63A5\u94B1\u5305',\n      disconnect: '\u65AD\u5F00\u8FDE\u63A5',\n      balance: '\u4F59\u989D',\n      exchange: '\u5151\u6362',\n      loading: '\u52A0\u8F7D\u4E2D...',\n      exchangeDescription: '\u4F7F\u7528BNB\u5151\u6362SM\u4EE3\u5E01\uFF0C\u91C7\u7528\u52A8\u6001\u5B9A\u4EF7\u673A\u5236',\n      openMenu: '\u6253\u5F00\u83DC\u5355',\n      closeMenu: '\u5173\u95ED\u83DC\u5355',\n    },\n    navigation: {\n      home: '\u9996\u9875',\n      tasks: '\u4EFB\u52A1',\n      socialTasks: '\u793E\u4EA4\u4EFB\u52A1',\n      market: '\u5E02\u573A',\n      assets: '\u8D44\u4EA7',\n      vault: '\u91D1\u5E93',\n      referralSystem: '\u63A8\u8350\u7CFB\u7EDF',\n    },\n    home: {\n      heroTitle: {\n        line1: 'SocioMint \u793E\u4EA4\u6316\u77FF\u5E73\u53F0',\n        line2: '\u5F00\u542F\u793E\u4EA4\u4EF7\u503C\u65B0\u65F6\u4EE3'\n      },\n      heroSubtitle: '\u901A\u8FC7\u793E\u4EA4\u5A92\u4F53\u4EFB\u52A1\u548C\u4E92\u52A8\u8D5A\u53D6SM\u4EE3\u5E01',\n      exploreTasks: '\u63A2\u7D22\u4EFB\u52A1',\n      visitMarket: '\u8BBF\u95EE\u5E02\u573A',\n      stats: {\n        verifications: '\u793E\u4EA4\u8BA4\u8BC1\u6570\u91CF',\n        rewards: 'SM\u5956\u52B1\u5206\u53D1',\n        tasks: '\u53EF\u7528\u4EFB\u52A1\u6570'\n      }\n    },\n    exchange: {\n      title: '\u4EE3\u5E01\u5151\u6362',\n      feeWarning: '\u5151\u6362\u624B\u7EED\u8D39'\n    },\n    presale: {\n      title: 'SM\u4EE3\u5E01\u9884\u552E',\n      subtitle: '\u65E9\u671F\u52A0\u5165SocioMint\u751F\u6001\u7CFB\u7EDF\uFF0C\u83B7\u5F97\u4E13\u5C5E\u798F\u5229'\n    },\n    socialTasks: {\n      title: '\u793E\u4EA4\u4EFB\u52A1',\n      subtitle: '\u5B8C\u6210\u793E\u4EA4\u5A92\u4F53\u4EFB\u52A1\uFF0C\u8D5A\u53D6\u5C0F\u7EA2\u82B1\u548CSM\u4EE3\u5E01',\n      tabs: {\n        tasks: '\u53EF\u7528\u4EFB\u52A1',\n        referrals: '\u63A8\u8350\u7CFB\u7EDF',\n        rewards: '\u6BCF\u5468\u5956\u52B1'\n      },\n      sections: {\n        availableTasks: '\u53EF\u7528\u793E\u4EA4\u4EFB\u52A1',\n        referralSystem: '\u63A8\u8350\u7CFB\u7EDF',\n        weeklyRewards: '\u6BCF\u5468\u5956\u52B1\u72B6\u6001'\n      },\n      redFlower: {\n        title: '\u5173\u4E8E\u5C0F\u7EA2\u82B1',\n        description: '\u5C0F\u7EA2\u82B1\u901A\u8FC7\u5B8C\u6210\u793E\u4EA4\u4EFB\u52A1\u83B7\u5F97\uFF0C\u53EF\u4EE5\u5151\u6362SM\u4EE3\u5E01',\n        earn: {\n          title: '\u8D5A\u53D6',\n          description: '\u5B8C\u6210\u793E\u4EA4\u4EFB\u52A1'\n        },\n        share: {\n          title: '\u5206\u4EAB',\n          description: '\u9080\u8BF7\u670B\u53CB\u52A0\u5165'\n        },\n        exchange: {\n          title: '\u5151\u6362',\n          description: '\u8F6C\u6362\u4E3ASM\u4EE3\u5E01'\n        }\n      }\n    },\n    tasks: {\n      title: '\u4EFB\u52A1',\n      createTask: '\u521B\u5EFA\u4EFB\u52A1',\n      connectWallet: '\u8FDE\u63A5\u94B1\u5305',\n      connectWalletDescription: '\u8BF7\u8FDE\u63A5\u94B1\u5305\u4EE5\u53C2\u4E0E\u4EFB\u52A1',\n      filters: '\u7B5B\u9009',\n      noTasksFound: '\u672A\u627E\u5230\u4EFB\u52A1',\n      tabs: {\n        exposure: '\u66DD\u5149\u4EFB\u52A1',\n        treasure: '\u5B9D\u7BB1\u4EFB\u52A1'\n      },\n      filters: {\n        platform: '\u5E73\u53F0',\n        action: '\u52A8\u4F5C',\n        sortBy: '\u6392\u5E8F',\n        platformOptions: {\n          all: '\u5168\u90E8',\n          x: 'X (\u63A8\u7279)',\n          telegram: '\u7535\u62A5',\n          discord: 'Discord',\n          instagram: 'Instagram',\n          reddit: 'Reddit'\n        },\n        actionOptions: {\n          all: '\u5168\u90E8',\n          follow: '\u5173\u6CE8',\n          like: '\u70B9\u8D5E',\n          retweet: '\u8F6C\u53D1',\n          tweet: '\u53D1\u63A8',\n          join: '\u52A0\u5165',\n          verify: '\u9A8C\u8BC1',\n          comment: '\u8BC4\u8BBA',\n          referral: '\u63A8\u8350'\n        },\n        sortOptions: {\n          rewardHighest: '\u5956\u52B1\u6700\u9AD8',\n          rewardLowest: '\u5B8C\u6210\u5EA6\u6700\u4F4E',\n          newest: '\u6700\u65B0',\n          oldest: '\u6700\u65E7'\n        }\n      }\n    }\n  },\n};\n\nexport function getTranslation(locale: Locale, key: string): string {\n  const keys = key.split('.');\n  let value: any = translations[locale];\n  for (const k of keys) {\n    value = value?.[k];\n  }\n  return value || key;\n}\n\n// \u521D\u59CB\u5316i18n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: translations.en },\n      zh: { translation: translations.zh },\n    },\n    lng: defaultLocale,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false,\n    },\n    detection: {\n      order: ['localStorage', 'navigator'],\n      caches: ['localStorage'],\n    },\n  });\n\nexport default i18n;\n"],
      names: ["defaultLocale", "getTranslation", "locales", "translations", "en", "common", "connect", "disconnect", "balance", "exchange", "loading", "exchangeDescription", "openMenu", "closeMenu", "navigation", "home", "tasks", "socialTasks", "market", "assets", "vault", "referralSystem", "heroTitle", "line1", "line2", "heroSubtitle", "exploreTasks", "visitMarket", "stats", "verifications", "rewards", "title", "feeWarning", "presale", "subtitle", "tabs", "referrals", "sections", "availableTasks", "weeklyRewards", "redFlower", "description", "earn", "share", "createTask", "connectWallet", "connectWalletDescription", "filters", "noTasksFound", "exposure", "treasure", "platform", "action", "sortBy", "platformOptions", "all", "x", "telegram", "discord", "instagram", "reddit", "actionOptions", "follow", "like", "retweet", "tweet", "join", "verify", "comment", "referral", "sortOptions", "rewardHighest", "rewardLowest", "newest", "oldest", "zh", "locale", "key", "keys", "split", "value", "k", "i18n", "use", "initReactI18next", "init", "resources", "translation", "lng", "fallbackLng", "interpolation", "escapeValue", "detection", "order", "caches"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3c86f41566eeb0d207cdc69c7f820c031e2447d3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15nezi4bzd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15nezi4bzd();
cov_15nezi4bzd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_15nezi4bzd().f[0]++;
  cov_15nezi4bzd().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_15nezi4bzd().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_15nezi4bzd().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_15nezi4bzd().f[1]++;
    cov_15nezi4bzd().s[4]++;
    return _default;
  },
  defaultLocale: function () {
    /* istanbul ignore next */
    cov_15nezi4bzd().f[2]++;
    cov_15nezi4bzd().s[5]++;
    return defaultLocale;
  },
  getTranslation: function () {
    /* istanbul ignore next */
    cov_15nezi4bzd().f[3]++;
    cov_15nezi4bzd().s[6]++;
    return getTranslation;
  },
  locales: function () {
    /* istanbul ignore next */
    cov_15nezi4bzd().f[4]++;
    cov_15nezi4bzd().s[7]++;
    return locales;
  },
  translations: function () {
    /* istanbul ignore next */
    cov_15nezi4bzd().f[5]++;
    cov_15nezi4bzd().s[8]++;
    return translations;
  }
});
const _i18next =
/* istanbul ignore next */
(/*#__PURE__*/cov_15nezi4bzd().s[9]++, _interop_require_default(require("i18next")));
const _reacti18next =
/* istanbul ignore next */
(cov_15nezi4bzd().s[10]++, require("react-i18next"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_15nezi4bzd().f[6]++;
  cov_15nezi4bzd().s[11]++;
  return /* istanbul ignore next */(cov_15nezi4bzd().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_15nezi4bzd().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_15nezi4bzd().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_15nezi4bzd().b[0][1]++, {
    default: obj
  });
}
const defaultLocale =
/* istanbul ignore next */
(cov_15nezi4bzd().s[12]++, 'zh');
const locales =
/* istanbul ignore next */
(cov_15nezi4bzd().s[13]++, ['en', 'zh']);
const translations =
/* istanbul ignore next */
(cov_15nezi4bzd().s[14]++, {
  en: {
    common: {
      connect: 'Connect Wallet',
      disconnect: 'Disconnect',
      balance: 'Balance',
      exchange: 'Exchange',
      loading: 'Loading...',
      exchangeDescription: 'Exchange BNB for SM tokens with dynamic pricing',
      openMenu: 'Open Menu',
      closeMenu: 'Close Menu'
    },
    navigation: {
      home: 'Home',
      tasks: 'Tasks',
      socialTasks: 'Social Tasks',
      market: 'Market',
      assets: 'Assets',
      vault: 'Vault',
      referralSystem: 'Referral System'
    },
    home: {
      heroTitle: {
        line1: 'SocioMint Platform',
        line2: 'Social Mining Revolution'
      },
      heroSubtitle: 'Earn SM tokens through social media tasks and interactions',
      exploreTasks: 'Explore Tasks',
      visitMarket: 'Visit Market',
      stats: {
        verifications: 'Social Verifications',
        rewards: 'SM Rewards Distributed',
        tasks: 'Available Tasks'
      }
    },
    exchange: {
      title: 'Token Exchange',
      feeWarning: 'exchange fee'
    },
    presale: {
      title: 'SM Token Presale',
      subtitle: 'Join the SocioMint ecosystem early and get exclusive benefits'
    },
    socialTasks: {
      title: 'Social Tasks',
      subtitle: 'Complete social media tasks to earn red flowers and SM tokens',
      tabs: {
        tasks: 'Available Tasks',
        referrals: 'Referral System',
        rewards: 'Weekly Rewards'
      },
      sections: {
        availableTasks: 'Available Social Tasks',
        referralSystem: 'Referral System',
        weeklyRewards: 'Weekly Reward Status'
      },
      redFlower: {
        title: 'About Red Flowers',
        description: 'Red flowers are earned through social tasks and can be exchanged for SM tokens',
        earn: {
          title: 'Earn',
          description: 'Complete social tasks'
        },
        share: {
          title: 'Share',
          description: 'Invite friends to join'
        },
        exchange: {
          title: 'Exchange',
          description: 'Convert to SM tokens'
        }
      }
    },
    tasks: {
      title: 'Tasks',
      createTask: 'Create Task',
      connectWallet: 'Connect Wallet',
      connectWalletDescription: 'Please connect your wallet to participate in tasks',
      filters: 'Filters',
      noTasksFound: 'No tasks found',
      tabs: {
        exposure: 'Exposure Tasks',
        treasure: 'Treasure Box Tasks'
      },
      filters: {
        platform: 'Platform',
        action: 'Action',
        sortBy: 'Sort By',
        platformOptions: {
          all: 'All',
          x: 'X (Twitter)',
          telegram: 'Telegram',
          discord: 'Discord',
          instagram: 'Instagram',
          reddit: 'Reddit'
        },
        actionOptions: {
          all: 'All',
          follow: 'Follow',
          like: 'Like',
          retweet: 'Retweet',
          tweet: 'Tweet',
          join: 'Join',
          verify: 'Verify',
          comment: 'Comment',
          referral: 'Referral'
        },
        sortOptions: {
          rewardHighest: 'Highest Reward',
          rewardLowest: 'Lowest Completion',
          newest: 'Newest',
          oldest: 'Oldest'
        }
      }
    }
  },
  zh: {
    common: {
      connect: '连接钱包',
      disconnect: '断开连接',
      balance: '余额',
      exchange: '兑换',
      loading: '加载中...',
      exchangeDescription: '使用BNB兑换SM代币，采用动态定价机制',
      openMenu: '打开菜单',
      closeMenu: '关闭菜单'
    },
    navigation: {
      home: '首页',
      tasks: '任务',
      socialTasks: '社交任务',
      market: '市场',
      assets: '资产',
      vault: '金库',
      referralSystem: '推荐系统'
    },
    home: {
      heroTitle: {
        line1: 'SocioMint 社交挖矿平台',
        line2: '开启社交价值新时代'
      },
      heroSubtitle: '通过社交媒体任务和互动赚取SM代币',
      exploreTasks: '探索任务',
      visitMarket: '访问市场',
      stats: {
        verifications: '社交认证数量',
        rewards: 'SM奖励分发',
        tasks: '可用任务数'
      }
    },
    exchange: {
      title: '代币兑换',
      feeWarning: '兑换手续费'
    },
    presale: {
      title: 'SM代币预售',
      subtitle: '早期加入SocioMint生态系统，获得专属福利'
    },
    socialTasks: {
      title: '社交任务',
      subtitle: '完成社交媒体任务，赚取小红花和SM代币',
      tabs: {
        tasks: '可用任务',
        referrals: '推荐系统',
        rewards: '每周奖励'
      },
      sections: {
        availableTasks: '可用社交任务',
        referralSystem: '推荐系统',
        weeklyRewards: '每周奖励状态'
      },
      redFlower: {
        title: '关于小红花',
        description: '小红花通过完成社交任务获得，可以兑换SM代币',
        earn: {
          title: '赚取',
          description: '完成社交任务'
        },
        share: {
          title: '分享',
          description: '邀请朋友加入'
        },
        exchange: {
          title: '兑换',
          description: '转换为SM代币'
        }
      }
    },
    tasks: {
      title: '任务',
      createTask: '创建任务',
      connectWallet: '连接钱包',
      connectWalletDescription: '请连接钱包以参与任务',
      filters: '筛选',
      noTasksFound: '未找到任务',
      tabs: {
        exposure: '曝光任务',
        treasure: '宝箱任务'
      },
      filters: {
        platform: '平台',
        action: '动作',
        sortBy: '排序',
        platformOptions: {
          all: '全部',
          x: 'X (推特)',
          telegram: '电报',
          discord: 'Discord',
          instagram: 'Instagram',
          reddit: 'Reddit'
        },
        actionOptions: {
          all: '全部',
          follow: '关注',
          like: '点赞',
          retweet: '转发',
          tweet: '发推',
          join: '加入',
          verify: '验证',
          comment: '评论',
          referral: '推荐'
        },
        sortOptions: {
          rewardHighest: '奖励最高',
          rewardLowest: '完成度最低',
          newest: '最新',
          oldest: '最旧'
        }
      }
    }
  }
});
function getTranslation(locale, key) {
  /* istanbul ignore next */
  cov_15nezi4bzd().f[7]++;
  const keys =
  /* istanbul ignore next */
  (cov_15nezi4bzd().s[15]++, key.split('.'));
  let value =
  /* istanbul ignore next */
  (cov_15nezi4bzd().s[16]++, translations[locale]);
  /* istanbul ignore next */
  cov_15nezi4bzd().s[17]++;
  for (const k of keys) {
    /* istanbul ignore next */
    cov_15nezi4bzd().s[18]++;
    value = value?.[k];
  }
  /* istanbul ignore next */
  cov_15nezi4bzd().s[19]++;
  return /* istanbul ignore next */(cov_15nezi4bzd().b[2][0]++, value) ||
  /* istanbul ignore next */
  (cov_15nezi4bzd().b[2][1]++, key);
}
// 初始化i18n
/* istanbul ignore next */
cov_15nezi4bzd().s[20]++;
_i18next.default.use(_reacti18next.initReactI18next).init({
  resources: {
    en: {
      translation: translations.en
    },
    zh: {
      translation: translations.zh
    }
  },
  lng: defaultLocale,
  fallbackLng: 'en',
  interpolation: {
    escapeValue: false
  },
  detection: {
    order: ['localStorage', 'navigator'],
    caches: ['localStorage']
  }
});
const _default =
/* istanbul ignore next */
(cov_15nezi4bzd().s[21]++, _i18next.default);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,