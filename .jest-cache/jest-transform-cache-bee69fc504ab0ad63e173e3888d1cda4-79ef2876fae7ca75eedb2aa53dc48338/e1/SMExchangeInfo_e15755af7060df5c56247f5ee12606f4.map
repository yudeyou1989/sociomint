{"version":3,"names":["_default","EXCHANGE_PROXY_ADDRESS","cov_ca65xz185","s","SMExchangeInfo","f","wallet","connect","updateBalances","_WalletContext","useWallet","amount","setAmount","_react","useState","estimatedTokens","setEstimatedTokens","txStatus","setTxStatus","txHash","setTxHash","isLoading","setIsLoading","exchangeStats","setExchangeStats","useEffect","fetchExchangeStats","interval","setInterval","b","isConnected","document","visibilityState","clearInterval","stats","_contractService","default","getExchangeStats","provider","ContractService","getReadOnlyProvider","contract","_ethers","ethers","Contract","getExchangeABI","totalTokensSold","formatEther","totalTokensRemaining","totalBnbRaised","currentPrice","formatUnits","nextRoundPrice","isActive","paused","currentRound","error","console","_reacthottoast","calculateEstimatedTokens","parseFloat","bnbAmount","tokens","toFixed","handlePurchase","tx","exchangeTokens","hash","loading","wait","receipt","status","success","Error","message","formatPrice","price","handleConnectWallet","_jsxruntime","jsxs","_Box","sx","maxWidth","mx","p","jsx","_Typography","variant","component","gutterBottom","align","display","gridTemplateColumns","xs","md","gap","_Card","mb","height","_CardContent","justifyContent","my","_CircularProgress","toString","toLocaleString","address","mt","pt","borderTop","wordBreak","balance","bnb","sm","textAlign","_Button","color","size","onClick","_TextField","fullWidth","label","type","slotProps","htmlInput","min","step","value","onChange","e","target","disabled","bgcolor","borderRadius","fontWeight","border","href","rel","style","textDecoration","startIcon"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/SMExchangeInfo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers, formatEther, formatUnits } from 'ethers';\nimport { Box, Typography, TextField, Button, Card, CardContent, CircularProgress } from '@mui/material';\nimport { useWallet } from '@/contexts/WalletContext';\nimport contractService, { ContractService } from '@/services/contractService';\nimport toast from 'react-hot-toast';\n\n// BSC测试网合约地址\nconst EXCHANGE_PROXY_ADDRESS = '0x1B03DD8dCeD4c7D38ABA907671e5e1064D10F8A8';\n\n// 交易状态类型\ntype TransactionStatus = 'none' | 'waiting' | 'pending' | 'success' | 'failed';\n\nconst SMExchangeInfo: React.FC = () => {\n  const { wallet, connect, updateBalances } = useWallet();\n  \n  // 购买状态\n  const [amount, setAmount] = useState<string>('0.1');\n  const [estimatedTokens, setEstimatedTokens] = useState<string>('0');\n  const [txStatus, setTxStatus] = useState<TransactionStatus>('none');\n  const [txHash, setTxHash] = useState<string | null>(null);\n  \n  // 加载状态\n  const [isLoading, setIsLoading] = useState(true);\n  const [exchangeStats, setExchangeStats] = useState<any>(null);\n  \n  // 初始加载和优化的自动刷新\n  useEffect(() => {\n    fetchExchangeStats();\n\n    // 减少刷新频率，避免性能问题\n    const interval = setInterval(() => {\n      if (wallet.isConnected && document.visibilityState === 'visible') {\n        fetchExchangeStats();\n        updateBalances();\n      }\n    }, 60000); // 从30秒改为60秒刷新一次\n\n    return () => clearInterval(interval as unknown as number);\n  }, [wallet.isConnected]);\n  \n  // 获取交易所统计数据\n  const fetchExchangeStats = async () => {\n    setIsLoading(true);\n    try {\n      if (wallet.isConnected) {\n        const stats = await contractService.getExchangeStats();\n        setExchangeStats(stats);\n      } else {\n        // 如果钱包未连接，使用只读provider获取数据\n        const provider = ContractService.getReadOnlyProvider();\n        const contract = new ethers.Contract(EXCHANGE_PROXY_ADDRESS, contractService.getExchangeABI(), provider);\n        const stats = await contract.getExchangeStats();\n        \n        setExchangeStats({\n          totalTokensSold: formatEther(stats.totalTokensSold),\n          totalTokensRemaining: formatEther(stats.totalTokensRemaining),\n          totalBnbRaised: formatEther(stats.totalBnbRaised),\n          currentPrice: formatUnits(stats.currentPrice, 'gwei'),\n          nextRoundPrice: formatUnits(stats.nextRoundPrice, 'gwei'),\n          isActive: !stats.paused,\n          currentRound: stats.currentRound\n        });\n      }\n    } catch (error) {\n      console.error('获取交易所统计数据失败:', error);\n      toast.error('无法获取交易所统计数据');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // 计算预估代币数量\n  const calculateEstimatedTokens = () => {\n    if (!exchangeStats || !amount || parseFloat(amount) <= 0) {\n      setEstimatedTokens('0');\n      return;\n    }\n    \n    try {\n      // 使用当前价格计算\n      const currentPrice = parseFloat(exchangeStats.currentPrice) / 1e9;\n      const bnbAmount = parseFloat(amount);\n      const tokens = bnbAmount / currentPrice;\n      \n      setEstimatedTokens(tokens.toFixed(6));\n    } catch (error) {\n      console.error('计算预估代币数量失败:', error);\n      setEstimatedTokens('0');\n    }\n  };\n  \n  // 购买代币\n  const handlePurchase = async () => {\n    if (!wallet.isConnected) {\n      toast.error('请先连接钱包');\n      return;\n    }\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      toast.error('请输入有效的BNB金额');\n      return;\n    }\n    \n    setTxStatus('waiting');\n    try {\n      const tx = await contractService.exchangeTokens(amount);\n\n      // 处理不同类型的交易响应\n      const txHash = typeof tx === 'string' ? tx : (tx as any)?.hash || '';\n      setTxHash(txHash);\n      setTxStatus('pending');\n\n      toast.loading('交易确认中...');\n\n      // 如果tx是字符串（hash），则无需等待；如果是交易对象，则等待确认\n      if (typeof tx !== 'string' && (tx as any)?.wait) {\n        const receipt = await (tx as any).wait();\n        if (receipt && receipt.status === 1) {\n          toast.success('购买成功！');\n          setTxStatus('success');\n          // 刷新数据\n          fetchExchangeStats();\n          updateBalances();\n        } else {\n          toast.error('交易失败');\n          setTxStatus('failed');\n        }\n      } else {\n        // 如果是字符串hash，直接认为成功\n        toast.success('交易已提交！');\n        setTxStatus('success');\n        fetchExchangeStats();\n        updateBalances();\n      }\n    } catch (error) {\n      console.error('购买代币失败:', error);\n      toast.error('交易失败: ' + (error instanceof Error ? error.message : '未知错误'));\n      setTxStatus('failed');\n    }\n  };\n  \n  // 格式化显示的价格\n  const formatPrice = (price: string | null | undefined) => {\n    if (!price) return 'N/A';\n    return (parseFloat(price) / 1e9).toFixed(12);\n  };\n  \n  // 连接钱包\n  const handleConnectWallet = async () => {\n    if (!wallet.isConnected) {\n      try {\n        await connect();\n        fetchExchangeStats();\n      } catch (error) {\n        console.error('连接钱包失败:', error);\n      }\n    }\n  };\n  \n  useEffect(() => {\n    if (exchangeStats && amount) {\n      calculateEstimatedTokens();\n    }\n  }, [exchangeStats, amount]);\n  \n  return (\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n        SM 代币兑换\n      </Typography>\n      \n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 4 }}>\n        <Box>\n          <Card sx={{ mb: 4, height: '100%' }}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                交易统计\n              </Typography>\n              \n              {isLoading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                  <CircularProgress />\n                </Box>\n              ) : exchangeStats ? (\n                <Box>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>当前轮次:</strong> {exchangeStats.currentRound?.toString() || 'N/A'}\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>已售代币:</strong> {parseFloat(exchangeStats.totalTokensSold || '0').toLocaleString()} SM\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>剩余代币:</strong> {parseFloat(exchangeStats.totalTokensRemaining || '0').toLocaleString()} SM\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>已筹集:</strong> {parseFloat(exchangeStats.totalBnbRaised || '0').toLocaleString()} BNB\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>当前价格:</strong> {formatPrice(exchangeStats.currentPrice)} BNB/SM\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>下一轮价格:</strong> {formatPrice(exchangeStats.nextRoundPrice)} BNB/SM\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>交易状态:</strong> {exchangeStats.isActive ? '启用' : '暂停'}\n                  </Typography>\n                  \n                  {wallet.address && (\n                    <Box sx={{ mt: 3, pt: 2, borderTop: '1px solid #eee' }}>\n                      <Typography variant=\"subtitle2\" gutterBottom>\n                        钱包信息\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ wordBreak: 'break-all', mb: 1 }}>\n                        <strong>地址:</strong> {wallet.address}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        <strong>BNB 余额:</strong> {parseFloat(wallet.balance?.bnb || '0').toFixed(4)} BNB\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        <strong>SM 余额:</strong> {parseFloat(wallet.balance?.sm || '0').toFixed(4)} SM\n                      </Typography>\n                    </Box>\n                  )}\n                </Box>\n              ) : (\n                <Typography>无法获取交易统计数据</Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Box>\n        \n        <Box>\n          <Card sx={{ height: '100%' }}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                购买代币\n              </Typography>\n              \n              {!wallet.isConnected ? (\n                <Box sx={{ textAlign: 'center', my: 4 }}>\n                  <Button \n                    variant=\"contained\" \n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={handleConnectWallet}\n                  >\n                    连接钱包\n                  </Button>\n                  <Typography variant=\"body2\" sx={{ mt: 2 }}>\n                    连接钱包以购买 SM 代币\n                  </Typography>\n                </Box>\n              ) : (\n                <Box>\n                  <TextField\n                    fullWidth\n                    label=\"BNB 数量\"\n                    type=\"number\"\n                    slotProps={{\n                      htmlInput: { min: 0.001, step: 0.01 }\n                    }}\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    sx={{ mb: 3 }}\n                    disabled={txStatus === 'waiting' || txStatus === 'pending'}\n                  />\n                  \n                  <Box sx={{ \n                    bgcolor: '#f5f5f5', \n                    p: 2, \n                    borderRadius: 1, \n                    mb: 3, \n                    display: 'flex', \n                    justifyContent: 'space-between'\n                  }}>\n                    <Typography variant=\"body2\">预计获得:</Typography>\n                    <Typography variant=\"body1\" fontWeight=\"bold\">\n                      {estimatedTokens} SM\n                    </Typography>\n                  </Box>\n                  \n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    size=\"large\"\n                    onClick={handlePurchase}\n                    disabled={\n                      txStatus === 'waiting' || \n                      txStatus === 'pending' || \n                      !exchangeStats?.isActive ||\n                      !amount || \n                      parseFloat(amount) <= 0\n                    }\n                  >\n                    {txStatus === 'waiting' || txStatus === 'pending' ? (\n                      <CircularProgress size={24} color=\"inherit\" />\n                    ) : (\n                      '购买代币'\n                    )}\n                  </Button>\n                  \n                  {txStatus !== 'none' && (\n                    <Box sx={{\n                      mt: 2,\n                      p: 2,\n                      borderRadius: 1,\n                      bgcolor: \n                        txStatus === 'waiting' || txStatus === 'pending' ? '#fff9db' :\n                        txStatus === 'success' ? '#ebfbee' :\n                        '#fff5f5',\n                      border: \n                        txStatus === 'waiting' || txStatus === 'pending' ? '1px solid #ffe066' :\n                        txStatus === 'success' ? '1px solid #8ce99a' :\n                        '1px solid #ffc9c9',\n                    }}>\n                      <Typography variant=\"body2\" sx={{\n                        color: \n                          txStatus === 'waiting' || txStatus === 'pending' ? '#e67700' :\n                          txStatus === 'success' ? '#2b8a3e' :\n                          '#e03131',\n                        fontWeight: 500,\n                        mb: txHash ? 1 : 0,\n                      }}>\n                        {txStatus === 'waiting' ? '准备中...' :\n                         txStatus === 'pending' ? '交易进行中...' :\n                         txStatus === 'success' ? '交易成功！' :\n                         '交易失败，请重试'}\n                      </Typography>\n                      \n                      {txHash && (txStatus === 'pending' || txStatus === 'success') && (\n                        <Typography variant=\"body2\">\n                          <a \n                            href={`https://testnet.bscscan.com/tx/${txHash}`} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            style={{\n                              color: '#1c7ed6',\n                              textDecoration: 'none',\n                            }}\n                          >\n                            查看交易详情\n                          </a>\n                        </Typography>\n                      )}\n                    </Box>\n                  )}\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n      \n      <Box sx={{ mt: 3, textAlign: 'center' }}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={fetchExchangeStats}\n          startIcon={isLoading && <CircularProgress size={16} />}\n          disabled={isLoading}\n        >\n          刷新数据\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SMExchangeInfo;\n"],"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","ignoreList":[]}