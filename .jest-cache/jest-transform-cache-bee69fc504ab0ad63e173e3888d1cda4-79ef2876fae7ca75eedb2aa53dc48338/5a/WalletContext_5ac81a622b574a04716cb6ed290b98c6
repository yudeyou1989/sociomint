5b1a384f50a8d0f45dd394cfc4060507
'use client';
"use strict";

/* istanbul ignore next */
function cov_2e9w7anruz() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx";
  var hash = "5eb7261c30857729d5086616cfc4a5ca9ef34224";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "9": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 103
        }
      },
      "10": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 85
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "13": {
        start: {
          line: 31,
          column: 39
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "14": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "15": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 19
        }
      },
      "20": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "22": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "23": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "24": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "25": {
        start: {
          line: 51,
          column: 17
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "26": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 54,
          column: 88
        }
      },
      "27": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "28": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "29": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 95
        }
      },
      "30": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "31": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "32": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "33": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "34": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "35": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "36": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "37": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 24
        }
      },
      "38": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "39": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "40": {
        start: {
          line: 75,
          column: 86
        },
        end: {
          line: 75,
          column: 197
        }
      },
      "41": {
        start: {
          line: 75,
          column: 133
        },
        end: {
          line: 75,
          column: 196
        }
      },
      "42": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "43": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 25
        }
      },
      "44": {
        start: {
          line: 84,
          column: 15
        },
        end: {
          line: 86,
          column: 2
        }
      },
      "45": {
        start: {
          line: 88,
          column: 27
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "46": {
        start: {
          line: 92,
          column: 32
        },
        end: {
          line: 111,
          column: 1
        }
      },
      "47": {
        start: {
          line: 112,
          column: 36
        },
        end: {
          line: 121,
          column: 2
        }
      },
      "48": {
        start: {
          line: 123,
          column: 32
        },
        end: {
          line: 125,
          column: 1
        }
      },
      "49": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 83
        }
      },
      "50": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 132,
          column: 1
        }
      },
      "51": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "52": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 44
        }
      },
      "53": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 63
        }
      },
      "54": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 177,
          column: 1
        }
      },
      "55": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "56": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "57": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 50
        }
      },
      "58": {
        start: {
          line: 140,
          column: 25
        },
        end: {
          line: 140,
          column: 46
        }
      },
      "59": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 55
        }
      },
      "60": {
        start: {
          line: 142,
          column: 23
        },
        end: {
          line: 142,
          column: 49
        }
      },
      "61": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 143,
          column: 49
        }
      },
      "62": {
        start: {
          line: 144,
          column: 28
        },
        end: {
          line: 144,
          column: 55
        }
      },
      "63": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 51
        }
      },
      "64": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 60
        }
      },
      "65": {
        start: {
          line: 149,
          column: 27
        },
        end: {
          line: 149,
          column: 61
        }
      },
      "66": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 27
        }
      },
      "67": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "68": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 80
        }
      },
      "69": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 46
        }
      },
      "70": {
        start: {
          line: 156,
          column: 24
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "71": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 172,
          column: 10
        }
      },
      "72": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 40
        }
      },
      "73": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 20
        }
      },
      "74": {
        start: {
          line: 179,
          column: 32
        },
        end: {
          line: 179,
          column: 72
        }
      },
      "75": {
        start: {
          line: 180,
          column: 44
        },
        end: {
          line: 180,
          column: 71
        }
      },
      "76": {
        start: {
          line: 181,
          column: 52
        },
        end: {
          line: 181,
          column: 97
        }
      },
      "77": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "78": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 30
        }
      },
      "79": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "80": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 191,
          column: 15
        }
      },
      "81": {
        start: {
          line: 192,
          column: 36
        },
        end: {
          line: 192,
          column: 59
        }
      },
      "82": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 39
        }
      },
      "83": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 200,
          column: 15
        }
      },
      "84": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 208,
          column: 15
        }
      },
      "85": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 35
        }
      },
      "86": {
        start: {
          line: 214,
          column: 26
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "87": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 29
        }
      },
      "88": {
        start: {
          line: 218,
          column: 23
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "89": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "90": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "91": {
        start: {
          line: 224,
          column: 31
        },
        end: {
          line: 224,
          column: 55
        }
      },
      "92": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 227,
          column: 13
        }
      },
      "93": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 58
        }
      },
      "94": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 42
        }
      },
      "95": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 232,
          column: 15
        }
      },
      "96": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 239,
          column: 15
        }
      },
      "97": {
        start: {
          line: 243,
          column: 29
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "98": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 28
        }
      },
      "99": {
        start: {
          line: 247,
          column: 27
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "100": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 59
        }
      },
      "101": {
        start: {
          line: 248,
          column: 52
        },
        end: {
          line: 248,
          column: 59
        }
      },
      "102": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "103": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 35
        }
      },
      "104": {
        start: {
          line: 252,
          column: 29
        },
        end: {
          line: 252,
          column: 50
        }
      },
      "105": {
        start: {
          line: 253,
          column: 31
        },
        end: {
          line: 253,
          column: 72
        }
      },
      "106": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 254,
          column: 31
        }
      },
      "107": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "108": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 91
        }
      },
      "109": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 50
        }
      },
      "110": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 266,
          column: 20
        }
      },
      "111": {
        start: {
          line: 260,
          column: 31
        },
        end: {
          line: 266,
          column: 17
        }
      },
      "112": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 33
        }
      },
      "113": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 44
        }
      },
      "114": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 284,
          column: 7
        }
      },
      "115": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 287,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 16
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 47
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 40
          }
        },
        loc: {
          start: {
            line: 34,
            column: 61
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 34
          }
        },
        loc: {
          start: {
            line: 38,
            column: 53
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 26
          },
          end: {
            line: 73,
            column: 27
          }
        },
        loc: {
          start: {
            line: 73,
            column: 36
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 115
          },
          end: {
            line: 75,
            column: 116
          }
        },
        loc: {
          start: {
            line: 75,
            column: 133
          },
          end: {
            line: 75,
            column: 196
          }
        },
        line: 75
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 114,
            column: 13
          },
          end: {
            line: 114,
            column: 14
          }
        },
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 25
          }
        },
        line: 114
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 115,
            column: 17
          }
        },
        loc: {
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 115,
            column: 28
          }
        },
        line: 115
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        },
        loc: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 116,
            column: 32
          }
        },
        line: 116
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 117,
            column: 19
          },
          end: {
            line: 117,
            column: 20
          }
        },
        loc: {
          start: {
            line: 117,
            column: 29
          },
          end: {
            line: 117,
            column: 31
          }
        },
        line: 117
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 118,
            column: 22
          },
          end: {
            line: 118,
            column: 23
          }
        },
        loc: {
          start: {
            line: 118,
            column: 32
          },
          end: {
            line: 118,
            column: 34
          }
        },
        line: 118
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 123,
            column: 32
          },
          end: {
            line: 123,
            column: 33
          }
        },
        loc: {
          start: {
            line: 123,
            column: 36
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 123
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 127,
            column: 28
          },
          end: {
            line: 127,
            column: 29
          }
        },
        loc: {
          start: {
            line: 127,
            column: 32
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 127
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 134,
            column: 25
          }
        },
        loc: {
          start: {
            line: 134,
            column: 34
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 134
      },
      "17": {
        name: "WalletProvider",
        decl: {
          start: {
            line: 178,
            column: 9
          },
          end: {
            line: 178,
            column: 23
          }
        },
        loc: {
          start: {
            line: 178,
            column: 38
          },
          end: {
            line: 285,
            column: 1
          }
        },
        line: 178
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 21
          }
        },
        loc: {
          start: {
            line: 183,
            column: 34
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 183
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 214,
            column: 27
          }
        },
        loc: {
          start: {
            line: 214,
            column: 40
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 214
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 218,
            column: 23
          },
          end: {
            line: 218,
            column: 24
          }
        },
        loc: {
          start: {
            line: 218,
            column: 33
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 218
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 243,
            column: 29
          },
          end: {
            line: 243,
            column: 30
          }
        },
        loc: {
          start: {
            line: 243,
            column: 39
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 243
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 247,
            column: 27
          },
          end: {
            line: 247,
            column: 28
          }
        },
        loc: {
          start: {
            line: 247,
            column: 37
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 247
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 260,
            column: 22
          },
          end: {
            line: 260,
            column: 23
          }
        },
        loc: {
          start: {
            line: 260,
            column: 31
          },
          end: {
            line: 266,
            column: 17
          }
        },
        line: 260
      },
      "24": {
        name: "useWallet",
        decl: {
          start: {
            line: 286,
            column: 9
          },
          end: {
            line: 286,
            column: 18
          }
        },
        loc: {
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 288,
            column: 1
          }
        },
        line: 286
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 45
          }
        }, {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 35,
            column: 65
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 27
          }
        }, {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 45
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 47
          }
        }, {
          start: {
            line: 42,
            column: 51
          },
          end: {
            line: 42,
            column: 76
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 31
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 53
          }
        }, {
          start: {
            line: 54,
            column: 57
          },
          end: {
            line: 54,
            column: 88
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 29
          }
        }, {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 79
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 47
          },
          end: {
            line: 57,
            column: 88
          }
        }, {
          start: {
            line: 57,
            column: 91
          },
          end: {
            line: 57,
            column: 95
          }
        }],
        line: 57
      },
      "14": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 62,
            column: 13
          }
        }],
        line: 58
      },
      "15": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 20
          }
        }, {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 33
          }
        }, {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 45
          }
        }],
        line: 58
      },
      "16": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 37
          }
        }, {
          start: {
            line: 74,
            column: 41
          },
          end: {
            line: 74,
            column: 55
          }
        }],
        line: 74
      },
      "19": {
        loc: {
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 124,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 124,
            column: 40
          }
        }, {
          start: {
            line: 124,
            column: 44
          },
          end: {
            line: 124,
            column: 82
          }
        }],
        line: 124
      },
      "20": {
        loc: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "21": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 128,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 128,
            column: 37
          }
        }, {
          start: {
            line: 128,
            column: 41
          },
          end: {
            line: 128,
            column: 57
          }
        }],
        line: 128
      },
      "22": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "23": {
        loc: {
          start: {
            line: 158,
            column: 18
          },
          end: {
            line: 158,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 35
          },
          end: {
            line: 158,
            column: 52
          }
        }, {
          start: {
            line: 158,
            column: 55
          },
          end: {
            line: 158,
            column: 117
          }
        }],
        line: 158
      },
      "24": {
        loc: {
          start: {
            line: 158,
            column: 55
          },
          end: {
            line: 158,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 72
          },
          end: {
            line: 158,
            column: 97
          }
        }, {
          start: {
            line: 158,
            column: 100
          },
          end: {
            line: 158,
            column: 117
          }
        }],
        line: 158
      },
      "25": {
        loc: {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 186,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 31
          },
          end: {
            line: 186,
            column: 51
          }
        }, {
          start: {
            line: 186,
            column: 54
          },
          end: {
            line: 186,
            column: 63
          }
        }],
        line: 186
      },
      "26": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "27": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 248,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 248,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "28": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 248,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 248,
            column: 31
          }
        }, {
          start: {
            line: 248,
            column: 35
          },
          end: {
            line: 248,
            column: 50
          }
        }],
        line: 248
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx"],
      sourcesContent: ["'use client';\n\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { ethers, formatEther } from 'ethers';\nimport contractService from '@/services/contractService';\nimport Logger from '@/services/logger';\nimport config from '@/lib/config';\n\n// \u52A8\u6001\u5BFC\u5165\u94B1\u5305\u670D\u52A1\u4EE5\u907F\u514DSSR\u95EE\u9898\nlet walletService: any = null;\nconst loadWalletService = async () => {\n  if (typeof window !== 'undefined' && !walletService) {\n    const { getConnectedWalletType, disconnectWallet } = await import('@/services/walletService');\n    walletService = { getConnectedWalletType, disconnectWallet };\n  }\n  return walletService;\n};\n\n// \u521B\u5EFA\u65E5\u5FD7\u8BB0\u5F55\u5668\nconst logger = Logger.createContextLogger({ component: 'WalletContext' });\n\n// \u94B1\u5305\u72B6\u6001\u63A5\u53E3\nexport interface WalletState {\n  isConnected: boolean;\n  address?: string;\n  chainId?: number;\n  balance?: {\n    bnb: string;\n    sm?: string;\n    flowers?: string;\n  };\n  network?: {\n    id: number;\n    name: string;\n  };\n  account?: {\n    address: string;\n  };\n}\n\n// \u53EF\u7528\u94B1\u5305\u63A5\u53E3\nexport interface AvailableWallet {\n  type: WalletType;\n  name: string;\n  icon: string;\n  installed: boolean;\n}\n\n// \u94B1\u5305\u4E0A\u4E0B\u6587\u63A5\u53E3\ninterface WalletContextType {\n  wallet: WalletState;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  updateBalances: () => Promise<void>;\n  connectWallet: (type: WalletType) => Promise<void>;\n  disconnectWallet: () => Promise<void>;\n  isConnecting: boolean;\n  availableWallets: AvailableWallet[];\n}\n\n// \u521B\u5EFA\u4E0A\u4E0B\u6587\uFF0C\u63D0\u4F9B\u9ED8\u8BA4\u503C\nconst defaultWalletState: WalletState = {\n  isConnected: false,\n};\n\n// \u9ED8\u8BA4\u53EF\u7528\u94B1\u5305\u5217\u8868\nconst defaultAvailableWallets: AvailableWallet[] = [\n  {\n    type: 'metamask',\n    name: 'MetaMask',\n    icon: '/images/wallets/metamask.svg',\n    installed: true\n  },\n  {\n    type: 'coinbase',\n    name: 'Coinbase Wallet',\n    icon: '/images/wallets/coinbase.svg',\n    installed: true\n  },\n  {\n    type: 'walletconnect',\n    name: 'WalletConnect',\n    icon: '/images/wallets/walletconnect.svg',\n    installed: true\n  }\n];\n\nconst WalletContext = createContext<WalletContextType>({\n  wallet: defaultWalletState,\n  connect: async () => {},\n  disconnect: async () => {},\n  updateBalances: async () => {},\n  connectWallet: async () => {},\n  disconnectWallet: async () => {},\n  isConnecting: false,\n  availableWallets: defaultAvailableWallets,\n});\n\n// \u94B1\u5305\u63D0\u4F9B\u8005Props\ninterface WalletProviderProps {\n  children: ReactNode;\n}\n\n// \u68C0\u67E5\u6D4F\u89C8\u5668\u662F\u5426\u6709MetaMask\u6216\u5176\u4ED6\u4EE5\u592A\u574A\u63D0\u4F9B\u8005\nconst checkIfBrowserHasWallet = (): boolean => {\n  return typeof window !== 'undefined' && typeof window.ethereum !== 'undefined';\n};\n\n// \u83B7\u53D6\u4EE5\u592A\u574A\u63D0\u4F9B\u8005\nconst getEthereumProvider = (): ethers.BrowserProvider => {\n  if (typeof window === 'undefined' || !window.ethereum) {\n    throw new Error('\u6CA1\u6709\u68C0\u6D4B\u5230Ethereum\u63D0\u4F9B\u8005');\n  }\n  return new ethers.BrowserProvider(window.ethereum as any);\n};\n\n// \u8FDE\u63A5\u5230\u4EE5\u592A\u574A\u94B1\u5305\nconst connectToWallet = async (): Promise<WalletState> => {\n  try {\n    if (!checkIfBrowserHasWallet()) {\n      throw new Error('\u8BF7\u5B89\u88C5MetaMask\u6216\u5176\u4ED6\u94B1\u5305\u6269\u5C55');\n    }\n\n    // \u8BF7\u6C42\u7528\u6237\u6388\u6743\u8FDE\u63A5\u94B1\u5305\n    const provider = getEthereumProvider();\n    await provider.send('eth_requestAccounts', []);\n\n    const signer = await provider.getSigner();\n    const address = await signer.getAddress();\n    const networkInfo = await provider.getNetwork();\n    const chainId = Number(networkInfo.chainId);\n\n    // \u521D\u59CB\u5316\u5408\u7EA6\u670D\u52A1\n    await contractService.initialize(provider);\n\n    // \u83B7\u53D6\u4F59\u989D\u4FE1\u606F\n    const bnbBalance = await provider.getBalance(address);\n\n    let smBalance = '0';\n    try {\n      smBalance = await contractService.getTokenBalance(address);\n    } catch (error) {\n      console.warn('\u83B7\u53D6SM\u4EE3\u5E01\u4F59\u989D\u5931\u8D25', error);\n    }\n\n    const network = {\n      id: chainId,\n      name: chainId === 56 ? 'BNB Smart Chain' :\n           chainId === 97 ? 'BNB Smart Chain Testnet' :\n           'Unknown Network'\n    };\n\n    return {\n      isConnected: true,\n      address,\n      chainId,\n      balance: {\n        bnb: formatEther(bnbBalance),\n        sm: smBalance\n      },\n      network,\n      account: { address }\n    };\n  } catch (error) {\n    console.error('\u8FDE\u63A5\u94B1\u5305\u5931\u8D25:', error);\n    throw error;\n  }\n};\n\n// \u94B1\u5305\u63D0\u4F9B\u8005\u7EC4\u4EF6\nexport function WalletProvider({ children }: WalletProviderProps) {\n  const [wallet, setWallet] = useState<WalletState>(defaultWalletState);\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const [availableWallets, setAvailableWallets] = useState<AvailableWallet[]>(defaultAvailableWallets);\n\n  // \u8FDE\u63A5\u94B1\u5305 - \u7EDF\u4E00\u7684\u8FDE\u63A5\u51FD\u6570\n  const connect = async (type?: WalletType) => {\n    setIsConnecting(true);\n    try {\n      logger.info(type ? `\u6B63\u5728\u8FDE\u63A5 ${type} \u94B1\u5305...` : '\u8FDE\u63A5\u94B1\u5305...', {\n        action: 'connect',\n        additionalData: { walletType: type }\n      });\n\n      const connectedWallet = await connectToWallet();\n      setWallet(connectedWallet);\n\n      logger.info('\u94B1\u5305\u5DF2\u8FDE\u63A5', {\n        action: 'connect',\n        additionalData: { address: connectedWallet.address, walletType: type }\n      });\n    } catch (error) {\n      logger.error('\u8FDE\u63A5\u94B1\u5305\u5931\u8D25', {\n        action: 'connect',\n        additionalData: { error, walletType: type }\n      });\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // \u6309\u7C7B\u578B\u8FDE\u63A5\u94B1\u5305 - \u4E3A\u4E86\u4FDD\u6301API\u517C\u5BB9\u6027\n  const connectWallet = async (type: WalletType) => {\n    return connect(type);\n  };\n\n  // \u65AD\u5F00\u8FDE\u63A5 - \u7EDF\u4E00\u7684\u65AD\u5F00\u8FDE\u63A5\u51FD\u6570\n  const disconnect = async () => {\n    try {\n      logger.info('\u65AD\u5F00\u94B1\u5305\u8FDE\u63A5...', {\n        action: 'disconnect'\n      });\n\n      // \u5C1D\u8BD5\u65AD\u5F00WalletConnect\u8FDE\u63A5\n      const walletType = getConnectedWalletType();\n      if (walletType) {\n        await disconnectWalletService(walletType);\n      }\n\n      // \u91CD\u7F6E\u72B6\u6001\n      setWallet(defaultWalletState);\n\n      logger.info('\u94B1\u5305\u5DF2\u65AD\u5F00\u8FDE\u63A5', {\n        action: 'disconnect'\n      });\n    } catch (error) {\n      logger.error('\u65AD\u5F00\u94B1\u5305\u8FDE\u63A5\u5931\u8D25', {\n        action: 'disconnect',\n        additionalData: { error }\n      });\n    }\n  };\n\n  // \u65AD\u5F00\u94B1\u5305\u8FDE\u63A5 - \u4E3A\u4E86\u4FDD\u6301API\u517C\u5BB9\u6027\n  const disconnectWallet = async () => {\n    return disconnect();\n  };\n\n  // \u66F4\u65B0\u4F59\u989D\n  const updateBalances = async () => {\n    if (!wallet.isConnected || !wallet.address) return;\n\n    try {\n      console.log('\u66F4\u65B0\u4F59\u989D...');\n\n      // \u83B7\u53D6\u771F\u5B9E\u4F59\u989D\n      const provider = getEthereumProvider();\n      const bnbBalance = await provider.getBalance(wallet.address);\n\n      let smBalance = '0';\n      try {\n        smBalance = await contractService.getTokenBalance(wallet.address);\n      } catch (error) {\n        console.warn('\u83B7\u53D6SM\u4EE3\u5E01\u4F59\u989D\u5931\u8D25', error);\n      }\n\n      setWallet(prev => ({\n        ...prev,\n        balance: {\n          bnb: formatEther(bnbBalance),\n          sm: smBalance\n        }\n      }));\n\n      console.log('\u4F59\u989D\u5DF2\u66F4\u65B0');\n    } catch (error) {\n      console.error('\u66F4\u65B0\u4F59\u989D\u5931\u8D25:', error);\n    }\n  };\n\n  return (\n    <WalletContext.Provider value={{\n      wallet,\n      connect,\n      disconnect,\n      updateBalances,\n      connectWallet,\n      disconnectWallet,\n      isConnecting,\n      availableWallets\n    }}>\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\n// \u94B1\u5305\u94A9\u5B50\nexport function useWallet() {\n  return useContext(WalletContext);\n}"],
      names: ["WalletProvider", "useWallet", "walletService", "loadWalletService", "window", "getConnectedWalletType", "disconnectWallet", "logger", "Logger", "createContextLogger", "component", "defaultWalletState", "isConnected", "defaultAvailableWallets", "type", "name", "icon", "installed", "WalletContext", "createContext", "wallet", "connect", "disconnect", "updateBalances", "connectWallet", "isConnecting", "availableWallets", "checkIfBrowserHasWallet", "ethereum", "getEthereumProvider", "Error", "ethers", "BrowserProvider", "connectToWallet", "provider", "send", "signer", "getSigner", "address", "getAddress", "networkInfo", "getNetwork", "chainId", "Number", "contractService", "initialize", "bnbBalance", "getBalance", "smBalance", "getTokenBalance", "error", "console", "warn", "network", "id", "balance", "bnb", "formatEther", "sm", "account", "children", "setWallet", "useState", "setIsConnecting", "setAvailableWallets", "info", "action", "additionalData", "walletType", "connectedWallet", "disconnectWalletService", "log", "prev", "Provider", "value", "useContext"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5eb7261c30857729d5086616cfc4a5ca9ef34224"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e9w7anruz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e9w7anruz();
cov_2e9w7anruz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[0]++;
  cov_2e9w7anruz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2e9w7anruz().s[3]++;
_export(exports, {
  WalletProvider: function () {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[1]++;
    cov_2e9w7anruz().s[4]++;
    return WalletProvider;
  },
  useWallet: function () {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[2]++;
    cov_2e9w7anruz().s[5]++;
    return useWallet;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2e9w7anruz().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2e9w7anruz().s[7]++, require("react"));
const _ethers =
/* istanbul ignore next */
(cov_2e9w7anruz().s[8]++, require("ethers"));
const _contractService =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[9]++, _interop_require_default(require("../services/contractService")));
const _logger =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[10]++, _interop_require_default(require("../services/logger")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[3]++;
  cov_2e9w7anruz().s[11]++;
  return /* istanbul ignore next */(cov_2e9w7anruz().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[4]++;
  cov_2e9w7anruz().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[2][0]++;
    cov_2e9w7anruz().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_2e9w7anruz().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[5]++;
    cov_2e9w7anruz().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[6]++;
  cov_2e9w7anruz().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[4][0]++;
    cov_2e9w7anruz().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[4][1]++;
  }
  cov_2e9w7anruz().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[6][0]++;
    cov_2e9w7anruz().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2e9w7anruz().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[8][0]++;
    cov_2e9w7anruz().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[26]++,
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2e9w7anruz().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[13][1]++, null));
      /* istanbul ignore next */
      cov_2e9w7anruz().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[14][0]++;
        cov_2e9w7anruz().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[14][1]++;
        cov_2e9w7anruz().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2e9w7anruz().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2e9w7anruz().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[16][0]++;
    cov_2e9w7anruz().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[16][1]++;
  }
  cov_2e9w7anruz().s[36]++;
  return newObj;
}
// 动态导入钱包服务以避免SSR问题
let walletService =
/* istanbul ignore next */
(cov_2e9w7anruz().s[37]++, null);
/* istanbul ignore next */
cov_2e9w7anruz().s[38]++;
const loadWalletService = async () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[7]++;
  cov_2e9w7anruz().s[39]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[18][0]++, typeof window !== 'undefined') &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[18][1]++, !walletService)) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[17][0]++;
    const {
      getConnectedWalletType: getConnectedWalletType1,
      disconnectWallet
    } =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[40]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_2e9w7anruz().f[8]++;
      cov_2e9w7anruz().s[41]++;
      return /*#__PURE__*/_interop_require_wildcard(require("../services/walletService"));
    }));
    /* istanbul ignore next */
    cov_2e9w7anruz().s[42]++;
    walletService = {
      getConnectedWalletType: getConnectedWalletType1,
      disconnectWallet
    };
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[17][1]++;
  }
  cov_2e9w7anruz().s[43]++;
  return walletService;
};
// 创建日志记录器
const logger =
/* istanbul ignore next */
(cov_2e9w7anruz().s[44]++, _logger.default.createContextLogger({
  component: 'WalletContext'
}));
// 创建上下文，提供默认值
const defaultWalletState =
/* istanbul ignore next */
(cov_2e9w7anruz().s[45]++, {
  isConnected: false
});
// 默认可用钱包列表
const defaultAvailableWallets =
/* istanbul ignore next */
(cov_2e9w7anruz().s[46]++, [{
  type: 'metamask',
  name: 'MetaMask',
  icon: '/images/wallets/metamask.svg',
  installed: true
}, {
  type: 'coinbase',
  name: 'Coinbase Wallet',
  icon: '/images/wallets/coinbase.svg',
  installed: true
}, {
  type: 'walletconnect',
  name: 'WalletConnect',
  icon: '/images/wallets/walletconnect.svg',
  installed: true
}]);
const WalletContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[47]++, (0, _react.createContext)({
  wallet: defaultWalletState,
  connect: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[9]++;
  },
  disconnect: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[10]++;
  },
  updateBalances: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[11]++;
  },
  connectWallet: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[12]++;
  },
  disconnectWallet: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[13]++;
  },
  isConnecting: false,
  availableWallets: defaultAvailableWallets
}));
// 检查浏览器是否有MetaMask或其他以太坊提供者
/* istanbul ignore next */
cov_2e9w7anruz().s[48]++;
const checkIfBrowserHasWallet = () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[14]++;
  cov_2e9w7anruz().s[49]++;
  return /* istanbul ignore next */(cov_2e9w7anruz().b[19][0]++, typeof window !== 'undefined') &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[19][1]++, typeof window.ethereum !== 'undefined');
};
// 获取以太坊提供者
/* istanbul ignore next */
cov_2e9w7anruz().s[50]++;
const getEthereumProvider = () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[15]++;
  cov_2e9w7anruz().s[51]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[21][0]++, typeof window === 'undefined') ||
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[21][1]++, !window.ethereum)) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[20][0]++;
    cov_2e9w7anruz().s[52]++;
    throw new Error('没有检测到Ethereum提供者');
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[20][1]++;
  }
  cov_2e9w7anruz().s[53]++;
  return new _ethers.ethers.BrowserProvider(window.ethereum);
};
// 连接到以太坊钱包
/* istanbul ignore next */
cov_2e9w7anruz().s[54]++;
const connectToWallet = async () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[16]++;
  cov_2e9w7anruz().s[55]++;
  try {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[56]++;
    if (!checkIfBrowserHasWallet()) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[22][0]++;
      cov_2e9w7anruz().s[57]++;
      throw new Error('请安装MetaMask或其他钱包扩展');
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[22][1]++;
    }
    // 请求用户授权连接钱包
    const provider =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[58]++, getEthereumProvider());
    /* istanbul ignore next */
    cov_2e9w7anruz().s[59]++;
    await provider.send('eth_requestAccounts', []);
    const signer =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[60]++, await provider.getSigner());
    const address =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[61]++, await signer.getAddress());
    const networkInfo =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[62]++, await provider.getNetwork());
    const chainId =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[63]++, Number(networkInfo.chainId));
    // 初始化合约服务
    /* istanbul ignore next */
    cov_2e9w7anruz().s[64]++;
    await _contractService.default.initialize(provider);
    // 获取余额信息
    const bnbBalance =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[65]++, await provider.getBalance(address));
    let smBalance =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[66]++, '0');
    /* istanbul ignore next */
    cov_2e9w7anruz().s[67]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[68]++;
      smBalance = await _contractService.default.getTokenBalance(address);
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[69]++;
      console.warn('获取SM代币余额失败', error);
    }
    const network =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[70]++, {
      id: chainId,
      name: chainId === 56 ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[23][0]++, 'BNB Smart Chain') :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[23][1]++, chainId === 97 ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[24][0]++, 'BNB Smart Chain Testnet') :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[24][1]++, 'Unknown Network'))
    });
    /* istanbul ignore next */
    cov_2e9w7anruz().s[71]++;
    return {
      isConnected: true,
      address,
      chainId,
      balance: {
        bnb: (0, _ethers.formatEther)(bnbBalance),
        sm: smBalance
      },
      network,
      account: {
        address
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[72]++;
    console.error('连接钱包失败:', error);
    /* istanbul ignore next */
    cov_2e9w7anruz().s[73]++;
    throw error;
  }
};
function WalletProvider({
  children
}) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[17]++;
  const [wallet, setWallet] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[74]++, (0, _react.useState)(defaultWalletState));
  const [isConnecting, setIsConnecting] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[75]++, (0, _react.useState)(false));
  const [availableWallets, setAvailableWallets] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[76]++, (0, _react.useState)(defaultAvailableWallets));
  // 连接钱包 - 统一的连接函数
  /* istanbul ignore next */
  cov_2e9w7anruz().s[77]++;
  const connect = async type => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[18]++;
    cov_2e9w7anruz().s[78]++;
    setIsConnecting(true);
    /* istanbul ignore next */
    cov_2e9w7anruz().s[79]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[80]++;
      logger.info(type ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[25][0]++, `正在连接 ${type} 钱包...`) :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[25][1]++, '连接钱包...'), {
        action: 'connect',
        additionalData: {
          walletType: type
        }
      });
      const connectedWallet =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[81]++, await connectToWallet());
      /* istanbul ignore next */
      cov_2e9w7anruz().s[82]++;
      setWallet(connectedWallet);
      /* istanbul ignore next */
      cov_2e9w7anruz().s[83]++;
      logger.info('钱包已连接', {
        action: 'connect',
        additionalData: {
          address: connectedWallet.address,
          walletType: type
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[84]++;
      logger.error('连接钱包失败', {
        action: 'connect',
        additionalData: {
          error,
          walletType: type
        }
      });
    } finally {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[85]++;
      setIsConnecting(false);
    }
  };
  // 按类型连接钱包 - 为了保持API兼容性
  /* istanbul ignore next */
  cov_2e9w7anruz().s[86]++;
  const connectWallet = async type => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[19]++;
    cov_2e9w7anruz().s[87]++;
    return connect(type);
  };
  // 断开连接 - 统一的断开连接函数
  /* istanbul ignore next */
  cov_2e9w7anruz().s[88]++;
  const disconnect = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[20]++;
    cov_2e9w7anruz().s[89]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[90]++;
      logger.info('断开钱包连接...', {
        action: 'disconnect'
      });
      // 尝试断开WalletConnect连接
      const walletType =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[91]++, getConnectedWalletType());
      /* istanbul ignore next */
      cov_2e9w7anruz().s[92]++;
      if (walletType) {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[26][0]++;
        cov_2e9w7anruz().s[93]++;
        await disconnectWalletService(walletType);
      } else
      /* istanbul ignore next */
      {
        cov_2e9w7anruz().b[26][1]++;
      }
      // 重置状态
      cov_2e9w7anruz().s[94]++;
      setWallet(defaultWalletState);
      /* istanbul ignore next */
      cov_2e9w7anruz().s[95]++;
      logger.info('钱包已断开连接', {
        action: 'disconnect'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[96]++;
      logger.error('断开钱包连接失败', {
        action: 'disconnect',
        additionalData: {
          error
        }
      });
    }
  };
  // 断开钱包连接 - 为了保持API兼容性
  /* istanbul ignore next */
  cov_2e9w7anruz().s[97]++;
  const disconnectWallet = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[21]++;
    cov_2e9w7anruz().s[98]++;
    return disconnect();
  };
  // 更新余额
  /* istanbul ignore next */
  cov_2e9w7anruz().s[99]++;
  const updateBalances = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[22]++;
    cov_2e9w7anruz().s[100]++;
    if (
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[28][0]++, !wallet.isConnected) ||
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[28][1]++, !wallet.address)) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[27][0]++;
      cov_2e9w7anruz().s[101]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[27][1]++;
    }
    cov_2e9w7anruz().s[102]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[103]++;
      console.log('更新余额...');
      // 获取真实余额
      const provider =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[104]++, getEthereumProvider());
      const bnbBalance =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[105]++, await provider.getBalance(wallet.address));
      let smBalance =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[106]++, '0');
      /* istanbul ignore next */
      cov_2e9w7anruz().s[107]++;
      try {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[108]++;
        smBalance = await _contractService.default.getTokenBalance(wallet.address);
      } catch (error) {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[109]++;
        console.warn('获取SM代币余额失败', error);
      }
      /* istanbul ignore next */
      cov_2e9w7anruz().s[110]++;
      setWallet(prev => {
        /* istanbul ignore next */
        cov_2e9w7anruz().f[23]++;
        cov_2e9w7anruz().s[111]++;
        return {
          ...prev,
          balance: {
            bnb: (0, _ethers.formatEther)(bnbBalance),
            sm: smBalance
          }
        };
      });
      /* istanbul ignore next */
      cov_2e9w7anruz().s[112]++;
      console.log('余额已更新');
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[113]++;
      console.error('更新余额失败:', error);
    }
  };
  /* istanbul ignore next */
  cov_2e9w7anruz().s[114]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(WalletContext.Provider, {
    value: {
      wallet,
      connect,
      disconnect,
      updateBalances,
      connectWallet,
      disconnectWallet,
      isConnecting,
      availableWallets
    },
    children: children
  });
}
function useWallet() {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[24]++;
  cov_2e9w7anruz().s[115]++;
  return (0, _react.useContext)(WalletContext);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,