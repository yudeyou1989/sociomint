1fc0d8e380c13ed1719c0990454aa5f1
'use client';
"use strict";

/* istanbul ignore next */
function cov_238nkvgryk() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/UserBalanceDisplay.tsx";
  var hash = "bef5d8d0f6c40a5b8701cae6ca8f4a3dfa11f3c0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/UserBalanceDisplay.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "6": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "8": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 58
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 39
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "11": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "12": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 66
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "17": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 10
        }
      },
      "19": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 53
        }
      },
      "20": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "22": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 88
        }
      },
      "24": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "26": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 95
        }
      },
      "27": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "28": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "29": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 25
        }
      },
      "31": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "32": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 31
        }
      },
      "33": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 18
        }
      },
      "34": {
        start: {
          line: 60,
          column: 18
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "35": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "36": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "37": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 253,
          column: 1
        }
      },
      "38": {
        start: {
          line: 79,
          column: 37
        },
        end: {
          line: 79,
          column: 61
        }
      },
      "39": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 80,
          column: 64
        }
      },
      "40": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 131,
          column: 7
        }
      },
      "41": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "42": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "43": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 87,
          column: 24
        }
      },
      "44": {
        start: {
          line: 84,
          column: 34
        },
        end: {
          line: 87,
          column: 21
        }
      },
      "45": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 23
        }
      },
      "46": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "47": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 95,
          column: 24
        }
      },
      "48": {
        start: {
          line: 91,
          column: 34
        },
        end: {
          line: 95,
          column: 21
        }
      },
      "49": {
        start: {
          line: 97,
          column: 33
        },
        end: {
          line: 97,
          column: 84
        }
      },
      "50": {
        start: {
          line: 99,
          column: 38
        },
        end: {
          line: 99,
          column: 123
        }
      },
      "51": {
        start: {
          line: 100,
          column: 41
        },
        end: {
          line: 100,
          column: 132
        }
      },
      "52": {
        start: {
          line: 102,
          column: 72
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "53": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "54": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 48
        }
      },
      "55": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 124,
          column: 24
        }
      },
      "56": {
        start: {
          line: 120,
          column: 34
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "57": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 24
        }
      },
      "58": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "59": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 43
        }
      },
      "60": {
        start: {
          line: 134,
          column: 29
        },
        end: {
          line: 134,
          column: 43
        }
      },
      "61": {
        start: {
          line: 135,
          column: 21
        },
        end: {
          line: 135,
          column: 47
        }
      },
      "62": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 37
        }
      },
      "63": {
        start: {
          line: 139,
          column: 26
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "64": {
        start: {
          line: 140,
          column: 108
        },
        end: {
          line: 140,
          column: 113
        }
      },
      "65": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "66": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "67": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "68": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "69": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "70": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "71": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 247,
          column: 11
        }
      },
      "72": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 252,
          column: 7
        }
      },
      "73": {
        start: {
          line: 254,
          column: 17
        },
        end: {
          line: 254,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 47
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 22,
            column: 40
          }
        },
        loc: {
          start: {
            line: 22,
            column: 61
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 28
          }
        },
        loc: {
          start: {
            line: 78,
            column: 44
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 78
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 27
          }
        },
        loc: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 81
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 82,
            column: 31
          }
        },
        loc: {
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 126,
            column: 9
          }
        },
        line: 82
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 26
          }
        },
        loc: {
          start: {
            line: 84,
            column: 34
          },
          end: {
            line: 87,
            column: 21
          }
        },
        line: 84
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 25
          },
          end: {
            line: 91,
            column: 26
          }
        },
        loc: {
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 95,
            column: 21
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 120,
            column: 25
          },
          end: {
            line: 120,
            column: 26
          }
        },
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 124,
            column: 21
          }
        },
        line: 120
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 133,
            column: 29
          }
        },
        loc: {
          start: {
            line: 133,
            column: 41
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 133
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 139,
            column: 26
          },
          end: {
            line: 139,
            column: 27
          }
        },
        loc: {
          start: {
            line: 139,
            column: 30
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 139
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 45
          }
        }, {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 65
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 27
          }
        }, {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 45
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 47
          }
        }, {
          start: {
            line: 30,
            column: 51
          },
          end: {
            line: 30,
            column: 76
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 13
          }
        }, {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 31
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 53
          }
        }, {
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 88
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "10": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 29
          }
        }, {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 79
          }
        }],
        line: 44
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 88
          }
        }, {
          start: {
            line: 45,
            column: 91
          },
          end: {
            line: 45,
            column: 95
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 50,
            column: 13
          }
        }],
        line: 46
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 33
          }
        }, {
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 46,
            column: 45
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "15": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "16": {
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 28
          }
        }, {
          start: {
            line: 83,
            column: 32
          },
          end: {
            line: 83,
            column: 40
          }
        }, {
          start: {
            line: 83,
            column: 44
          },
          end: {
            line: 83,
            column: 78
          }
        }],
        line: 83
      },
      "17": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "18": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "19": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "20": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "21": {
        loc: {
          start: {
            line: 239,
            column: 47
          },
          end: {
            line: 239,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 239,
            column: 60
          },
          end: {
            line: 239,
            column: 76
          }
        }, {
          start: {
            line: 239,
            column: 79
          },
          end: {
            line: 239,
            column: 93
          }
        }],
        line: 239
      },
      "22": {
        loc: {
          start: {
            line: 240,
            column: 46
          },
          end: {
            line: 240,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 59
          },
          end: {
            line: 240,
            column: 64
          }
        }, {
          start: {
            line: 240,
            column: 67
          },
          end: {
            line: 240,
            column: 72
          }
        }],
        line: 240
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/UserBalanceDisplay.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers, formatEther, formatUnits } from 'ethers';\nimport { CONTRACT_ADDRESSES } from './constants/contracts';\nimport { useAccount } from 'wagmi';\nimport { hasEthereum } from './services/walletService';\n\n// ABI \u7247\u6BB5\uFF0C\u53EA\u5305\u542B\u6211\u4EEC\u9700\u8981\u7684\u51FD\u6570\nconst TOKEN_ABI = [\n  \"function balanceOf(address account) view returns (uint256)\",\n  \"function symbol() view returns (string)\",\n  \"function decimals() view returns (uint8)\"\n];\n\nconst EXCHANGE_ABI = [\n  \"function userData(address user) view returns (uint256 totalPurchases, uint256 lastPurchaseTime)\",\n  \"function isUserVerified(address user) view returns (bool)\"\n];\n\ninterface UserBalanceDisplayProps {\n  className?: string;\n}\n\n// \u72B6\u6001\u63A5\u53E3\ninterface UserBalanceState {\n  tokenBalance: string;\n  totalPurchases: string;\n  lastPurchaseTime: number;\n  isVerified: boolean;\n  tokenSymbol: string;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: UserBalanceState = {\n  tokenBalance: '0',\n  totalPurchases: '0',\n  lastPurchaseTime: 0,\n  isVerified: false,\n  tokenSymbol: 'SM',\n  loading: true,\n  error: null\n};\n\nconst UserBalanceDisplay: React.FC<UserBalanceDisplayProps> = ({ className }) => {\n  const { address, isConnected } = useAccount();\n  const [state, setState] = useState<UserBalanceState>(initialState);\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      if (!isConnected || !address || !hasEthereum()) {\n        setState(prev => ({ ...prev, loading: false }));\n        return;\n      }\n\n      try {\n        setState(prev => ({ ...prev, loading: true, error: null }));\n\n        // \u8FDE\u63A5\u5230\u4EE5\u592A\u574A\u7F51\u7EDC\n        const provider = new ethers.BrowserProvider(window.ethereum);\n\n        // \u521B\u5EFA\u5408\u7EA6\u5B9E\u4F8B\n        const tokenContract = new ethers.Contract(\n          CONTRACT_ADDRESSES.token,\n          TOKEN_ABI,\n          provider\n        );\n\n        const exchangeContract = new ethers.Contract(\n          CONTRACT_ADDRESSES.exchange,\n          EXCHANGE_ABI,\n          provider\n        );\n\n        // \u5E76\u884C\u83B7\u53D6\u6240\u6709\u6570\u636E\n        const [symbol, balance, decimals, userData, verified] = await Promise.all([\n          tokenContract.symbol(),\n          tokenContract.balanceOf(address),\n          tokenContract.decimals(),\n          exchangeContract.userData(address),\n          exchangeContract.isUserVerified(address)\n        ]);\n\n        setState({\n          tokenSymbol: symbol,\n          tokenBalance: formatUnits(balance, decimals),\n          totalPurchases: formatEther(userData.totalPurchases),\n          lastPurchaseTime: Number(userData.lastPurchaseTime),\n          isVerified: verified,\n          loading: false,\n          error: null\n        });\n      } catch (err) {\n        console.error('\u83B7\u53D6\u7528\u6237\u6570\u636E\u5931\u8D25:', err);\n        setState(prev => ({\n          ...prev,\n          loading: false,\n          error: '\u83B7\u53D6\u7528\u6237\u6570\u636E\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5'\n        }));\n      }\n    };\n\n    fetchUserData();\n  }, [address, isConnected]);\n\n  // \u683C\u5F0F\u5316\u65F6\u95F4\u6233\u4E3A\u53EF\u8BFB\u683C\u5F0F\n  const formatTimestamp = (timestamp: number): string => {\n    if (timestamp === 0) return '\u4ECE\u672A\u8D2D\u4E70';\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleString();\n  };\n\n  // \u6E32\u67D3\u4E0D\u540C\u72B6\u6001\u7684UI\n  const renderContent = () => {\n    const { loading, error, tokenBalance, tokenSymbol, totalPurchases, lastPurchaseTime, isVerified } = state;\n\n    if (!isConnected) {\n      return <p className=\"text-center text-gray-400\">\u8BF7\u8FDE\u63A5\u94B1\u5305\u67E5\u770B\u60A8\u7684\u4F59\u989D</p>;\n    }\n\n    if (loading) {\n      return <p className=\"text-center text-gray-400\">\u52A0\u8F7D\u4E2D...</p>;\n    }\n\n    if (error) {\n      return <p className=\"text-center text-red-500\">{error}</p>;\n    }\n\n    return (\n      <>\n        <h2 className=\"text-xl font-bold mb-4 text-white\">\u7528\u6237\u8D44\u4EA7</h2>\n\n        <div className=\"space-y-2\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-400\">\u94B1\u5305\u5730\u5740:</span>\n            <span className=\"text-white\">{address?.slice(0, 6)}...{address?.slice(-4)}</span>\n          </div>\n\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-400\">\u4EE3\u5E01\u4F59\u989D:</span>\n            <span className=\"text-white\">{parseFloat(tokenBalance).toLocaleString()} {tokenSymbol}</span>\n          </div>\n\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-400\">\u603B\u8D2D\u4E70\u91D1\u989D:</span>\n            <span className=\"text-white\">{parseFloat(totalPurchases).toLocaleString()} BNB</span>\n          </div>\n\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-400\">\u6700\u540E\u8D2D\u4E70\u65F6\u95F4:</span>\n            <span className=\"text-white\">{formatTimestamp(lastPurchaseTime)}</span>\n          </div>\n\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-400\">\u9A8C\u8BC1\u72B6\u6001:</span>\n            <span className={isVerified ? \"text-green-500\" : \"text-red-500\"}>\n              {isVerified ? \"\u5DF2\u9A8C\u8BC1\" : \"\u672A\u9A8C\u8BC1\"}\n            </span>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div className={`p-4 rounded-lg bg-gray-800 ${className}`}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default UserBalanceDisplay;\n"],
      names: ["TOKEN_ABI", "EXCHANGE_ABI", "initialState", "tokenBalance", "totalPurchases", "lastPurchaseTime", "isVerified", "tokenSymbol", "loading", "error", "UserBalanceDisplay", "className", "address", "isConnected", "useAccount", "state", "setState", "useState", "useEffect", "fetchUserData", "hasEthereum", "prev", "provider", "ethers", "BrowserProvider", "window", "ethereum", "tokenContract", "Contract", "CONTRACT_ADDRESSES", "token", "exchangeContract", "exchange", "symbol", "balance", "decimals", "userData", "verified", "Promise", "all", "balanceOf", "isUserVerified", "formatUnits", "formatEther", "Number", "err", "console", "formatTimestamp", "timestamp", "date", "Date", "toLocaleString", "renderContent", "p", "h2", "div", "span", "slice", "parseFloat"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bef5d8d0f6c40a5b8701cae6ca8f4a3dfa11f3c0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_238nkvgryk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_238nkvgryk();
cov_238nkvgryk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_238nkvgryk().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_238nkvgryk().f[0]++;
    cov_238nkvgryk().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_238nkvgryk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_238nkvgryk().s[4]++, _interop_require_wildcard(require("react")));
const _ethers =
/* istanbul ignore next */
(cov_238nkvgryk().s[5]++, require("ethers"));
const _contracts =
/* istanbul ignore next */
(cov_238nkvgryk().s[6]++, require("./constants/contracts"));
const _wagmi =
/* istanbul ignore next */
(cov_238nkvgryk().s[7]++, require("wagmi"));
const _walletService =
/* istanbul ignore next */
(cov_238nkvgryk().s[8]++, require("./services/walletService"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_238nkvgryk().f[1]++;
  cov_238nkvgryk().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_238nkvgryk().b[0][0]++;
    cov_238nkvgryk().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_238nkvgryk().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_238nkvgryk().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_238nkvgryk().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_238nkvgryk().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_238nkvgryk().f[2]++;
    cov_238nkvgryk().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_238nkvgryk().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_238nkvgryk().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_238nkvgryk().f[3]++;
  cov_238nkvgryk().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_238nkvgryk().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_238nkvgryk().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_238nkvgryk().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_238nkvgryk().b[2][0]++;
    cov_238nkvgryk().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_238nkvgryk().b[2][1]++;
  }
  cov_238nkvgryk().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_238nkvgryk().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_238nkvgryk().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_238nkvgryk().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_238nkvgryk().b[4][0]++;
    cov_238nkvgryk().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_238nkvgryk().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_238nkvgryk().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_238nkvgryk().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_238nkvgryk().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_238nkvgryk().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_238nkvgryk().b[6][0]++;
    cov_238nkvgryk().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_238nkvgryk().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_238nkvgryk().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_238nkvgryk().s[23]++,
  /* istanbul ignore next */
  (cov_238nkvgryk().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_238nkvgryk().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_238nkvgryk().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_238nkvgryk().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_238nkvgryk().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_238nkvgryk().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_238nkvgryk().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_238nkvgryk().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_238nkvgryk().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_238nkvgryk().b[11][1]++, null));
      /* istanbul ignore next */
      cov_238nkvgryk().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_238nkvgryk().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_238nkvgryk().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_238nkvgryk().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_238nkvgryk().b[12][0]++;
        cov_238nkvgryk().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_238nkvgryk().b[12][1]++;
        cov_238nkvgryk().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_238nkvgryk().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_238nkvgryk().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_238nkvgryk().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_238nkvgryk().b[14][0]++;
    cov_238nkvgryk().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_238nkvgryk().b[14][1]++;
  }
  cov_238nkvgryk().s[33]++;
  return newObj;
}
// ABI 片段，只包含我们需要的函数
const TOKEN_ABI =
/* istanbul ignore next */
(cov_238nkvgryk().s[34]++, ["function balanceOf(address account) view returns (uint256)", "function symbol() view returns (string)", "function decimals() view returns (uint8)"]);
const EXCHANGE_ABI =
/* istanbul ignore next */
(cov_238nkvgryk().s[35]++, ["function userData(address user) view returns (uint256 totalPurchases, uint256 lastPurchaseTime)", "function isUserVerified(address user) view returns (bool)"]);
const initialState =
/* istanbul ignore next */
(cov_238nkvgryk().s[36]++, {
  tokenBalance: '0',
  totalPurchases: '0',
  lastPurchaseTime: 0,
  isVerified: false,
  tokenSymbol: 'SM',
  loading: true,
  error: null
});
/* istanbul ignore next */
cov_238nkvgryk().s[37]++;
const UserBalanceDisplay = ({
  className
}) => {
  /* istanbul ignore next */
  cov_238nkvgryk().f[4]++;
  const {
    address,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_238nkvgryk().s[38]++, (0, _wagmi.useAccount)());
  const [state, setState] =
  /* istanbul ignore next */
  (cov_238nkvgryk().s[39]++, (0, _react.useState)(initialState));
  /* istanbul ignore next */
  cov_238nkvgryk().s[40]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_238nkvgryk().f[5]++;
    cov_238nkvgryk().s[41]++;
    const fetchUserData = async () => {
      /* istanbul ignore next */
      cov_238nkvgryk().f[6]++;
      cov_238nkvgryk().s[42]++;
      if (
      /* istanbul ignore next */
      (cov_238nkvgryk().b[16][0]++, !isConnected) ||
      /* istanbul ignore next */
      (cov_238nkvgryk().b[16][1]++, !address) ||
      /* istanbul ignore next */
      (cov_238nkvgryk().b[16][2]++, !(0, _walletService.hasEthereum)())) {
        /* istanbul ignore next */
        cov_238nkvgryk().b[15][0]++;
        cov_238nkvgryk().s[43]++;
        setState(prev => {
          /* istanbul ignore next */
          cov_238nkvgryk().f[7]++;
          cov_238nkvgryk().s[44]++;
          return {
            ...prev,
            loading: false
          };
        });
        /* istanbul ignore next */
        cov_238nkvgryk().s[45]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_238nkvgryk().b[15][1]++;
      }
      cov_238nkvgryk().s[46]++;
      try {
        /* istanbul ignore next */
        cov_238nkvgryk().s[47]++;
        setState(prev => {
          /* istanbul ignore next */
          cov_238nkvgryk().f[8]++;
          cov_238nkvgryk().s[48]++;
          return {
            ...prev,
            loading: true,
            error: null
          };
        });
        // 连接到以太坊网络
        const provider =
        /* istanbul ignore next */
        (cov_238nkvgryk().s[49]++, new _ethers.ethers.BrowserProvider(window.ethereum));
        // 创建合约实例
        const tokenContract =
        /* istanbul ignore next */
        (cov_238nkvgryk().s[50]++, new _ethers.ethers.Contract(_contracts.CONTRACT_ADDRESSES.token, TOKEN_ABI, provider));
        const exchangeContract =
        /* istanbul ignore next */
        (cov_238nkvgryk().s[51]++, new _ethers.ethers.Contract(_contracts.CONTRACT_ADDRESSES.exchange, EXCHANGE_ABI, provider));
        // 并行获取所有数据
        const [symbol, balance, decimals, userData, verified] =
        /* istanbul ignore next */
        (cov_238nkvgryk().s[52]++, await Promise.all([tokenContract.symbol(), tokenContract.balanceOf(address), tokenContract.decimals(), exchangeContract.userData(address), exchangeContract.isUserVerified(address)]));
        /* istanbul ignore next */
        cov_238nkvgryk().s[53]++;
        setState({
          tokenSymbol: symbol,
          tokenBalance: (0, _ethers.formatUnits)(balance, decimals),
          totalPurchases: (0, _ethers.formatEther)(userData.totalPurchases),
          lastPurchaseTime: Number(userData.lastPurchaseTime),
          isVerified: verified,
          loading: false,
          error: null
        });
      } catch (err) {
        /* istanbul ignore next */
        cov_238nkvgryk().s[54]++;
        console.error('获取用户数据失败:', err);
        /* istanbul ignore next */
        cov_238nkvgryk().s[55]++;
        setState(prev => {
          /* istanbul ignore next */
          cov_238nkvgryk().f[9]++;
          cov_238nkvgryk().s[56]++;
          return {
            ...prev,
            loading: false,
            error: '获取用户数据失败，请稍后再试'
          };
        });
      }
    };
    /* istanbul ignore next */
    cov_238nkvgryk().s[57]++;
    fetchUserData();
  }, [address, isConnected]);
  // 格式化时间戳为可读格式
  /* istanbul ignore next */
  cov_238nkvgryk().s[58]++;
  const formatTimestamp = timestamp => {
    /* istanbul ignore next */
    cov_238nkvgryk().f[10]++;
    cov_238nkvgryk().s[59]++;
    if (timestamp === 0) {
      /* istanbul ignore next */
      cov_238nkvgryk().b[17][0]++;
      cov_238nkvgryk().s[60]++;
      return '从未购买';
    } else
    /* istanbul ignore next */
    {
      cov_238nkvgryk().b[17][1]++;
    }
    const date =
    /* istanbul ignore next */
    (cov_238nkvgryk().s[61]++, new Date(timestamp * 1000));
    /* istanbul ignore next */
    cov_238nkvgryk().s[62]++;
    return date.toLocaleString();
  };
  // 渲染不同状态的UI
  /* istanbul ignore next */
  cov_238nkvgryk().s[63]++;
  const renderContent = () => {
    /* istanbul ignore next */
    cov_238nkvgryk().f[11]++;
    const {
      loading,
      error,
      tokenBalance,
      tokenSymbol,
      totalPurchases,
      lastPurchaseTime,
      isVerified
    } =
    /* istanbul ignore next */
    (cov_238nkvgryk().s[64]++, state);
    /* istanbul ignore next */
    cov_238nkvgryk().s[65]++;
    if (!isConnected) {
      /* istanbul ignore next */
      cov_238nkvgryk().b[18][0]++;
      cov_238nkvgryk().s[66]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-center text-gray-400",
        children: "请连接钱包查看您的余额"
      });
    } else
    /* istanbul ignore next */
    {
      cov_238nkvgryk().b[18][1]++;
    }
    cov_238nkvgryk().s[67]++;
    if (loading) {
      /* istanbul ignore next */
      cov_238nkvgryk().b[19][0]++;
      cov_238nkvgryk().s[68]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-center text-gray-400",
        children: "加载中..."
      });
    } else
    /* istanbul ignore next */
    {
      cov_238nkvgryk().b[19][1]++;
    }
    cov_238nkvgryk().s[69]++;
    if (error) {
      /* istanbul ignore next */
      cov_238nkvgryk().b[20][0]++;
      cov_238nkvgryk().s[70]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-center text-red-500",
        children: error
      });
    } else
    /* istanbul ignore next */
    {
      cov_238nkvgryk().b[20][1]++;
    }
    cov_238nkvgryk().s[71]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-xl font-bold mb-4 text-white",
        children: "用户资产"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-gray-400",
            children: "钱包地址:"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
            className: "text-white",
            children: [address?.slice(0, 6), "...", address?.slice(-4)]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-gray-400",
            children: "代币余额:"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
            className: "text-white",
            children: [parseFloat(tokenBalance).toLocaleString(), " ", tokenSymbol]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-gray-400",
            children: "总购买金额:"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
            className: "text-white",
            children: [parseFloat(totalPurchases).toLocaleString(), " BNB"]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-gray-400",
            children: "最后购买时间:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-white",
            children: formatTimestamp(lastPurchaseTime)
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-gray-400",
            children: "验证状态:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: isVerified ?
            /* istanbul ignore next */
            (cov_238nkvgryk().b[21][0]++, "text-green-500") :
            /* istanbul ignore next */
            (cov_238nkvgryk().b[21][1]++, "text-red-500"),
            children: isVerified ?
            /* istanbul ignore next */
            (cov_238nkvgryk().b[22][0]++, "已验证") :
            /* istanbul ignore next */
            (cov_238nkvgryk().b[22][1]++, "未验证")
          })]
        })]
      })]
    });
  };
  /* istanbul ignore next */
  cov_238nkvgryk().s[72]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `p-4 rounded-lg bg-gray-800 ${className}`,
    children: renderContent()
  });
};
const _default =
/* istanbul ignore next */
(cov_238nkvgryk().s[73]++, UserBalanceDisplay);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,