{"version":3,"sources":["/Users/yudeyou/Desktop/sm/sociomint/jest.setup.js"],"sourcesContent":["// 导入测试库\nimport '@testing-library/jest-dom';\n\n// 全局模拟\nglobal.fetch = jest.fn();\n\n// 模拟 window.ethereum\nObject.defineProperty(window, 'ethereum', {\n  writable: true,\n  value: {\n    request: jest.fn(),\n    on: jest.fn(),\n    removeListener: jest.fn(),\n    isMetaMask: true,\n  },\n});\n\n// 模拟 ResizeObserver\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}));\n\n// 模拟 IntersectionObserver\nglobal.IntersectionObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}));\n\n// 模拟 matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// 模拟 localStorage\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\nglobal.localStorage = localStorageMock;\n\n// 模拟 sessionStorage\nconst sessionStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\nglobal.sessionStorage = sessionStorageMock;\n\n// 模拟console.error以捕获React警告\nconst originalConsoleError = console.error;\nconsole.error = (...args) => {\n  if (/Warning.*not wrapped in act/.test(args[0])) {\n    return;\n  }\n  originalConsoleError(...args);\n};\n"],"names":["global","fetch","jest","fn","Object","defineProperty","window","writable","value","request","on","removeListener","isMetaMask","ResizeObserver","mockImplementation","observe","unobserve","disconnect","IntersectionObserver","query","matches","media","onchange","addListener","addEventListener","removeEventListener","dispatchEvent","localStorageMock","getItem","setItem","removeItem","clear","localStorage","sessionStorageMock","sessionStorage","originalConsoleError","console","error","args","test"],"mappings":"AAAA,QAAQ;;;;;QACD;AAEP,OAAO;AACPA,OAAOC,KAAK,GAAGC,KAAKC,EAAE;AAEtB,qBAAqB;AACrBC,OAAOC,cAAc,CAACC,QAAQ,YAAY;IACxCC,UAAU;IACVC,OAAO;QACLC,SAASP,KAAKC,EAAE;QAChBO,IAAIR,KAAKC,EAAE;QACXQ,gBAAgBT,KAAKC,EAAE;QACvBS,YAAY;IACd;AACF;AAEA,oBAAoB;AACpBZ,OAAOa,cAAc,GAAGX,KAAKC,EAAE,GAAGW,kBAAkB,CAAC,IAAO,CAAA;QAC1DC,SAASb,KAAKC,EAAE;QAChBa,WAAWd,KAAKC,EAAE;QAClBc,YAAYf,KAAKC,EAAE;IACrB,CAAA;AAEA,0BAA0B;AAC1BH,OAAOkB,oBAAoB,GAAGhB,KAAKC,EAAE,GAAGW,kBAAkB,CAAC,IAAO,CAAA;QAChEC,SAASb,KAAKC,EAAE;QAChBa,WAAWd,KAAKC,EAAE;QAClBc,YAAYf,KAAKC,EAAE;IACrB,CAAA;AAEA,gBAAgB;AAChBC,OAAOC,cAAc,CAACC,QAAQ,cAAc;IAC1CC,UAAU;IACVC,OAAON,KAAKC,EAAE,GAAGW,kBAAkB,CAACK,CAAAA,QAAU,CAAA;YAC5CC,SAAS;YACTC,OAAOF;YACPG,UAAU;YACVC,aAAarB,KAAKC,EAAE;YACpBQ,gBAAgBT,KAAKC,EAAE;YACvBqB,kBAAkBtB,KAAKC,EAAE;YACzBsB,qBAAqBvB,KAAKC,EAAE;YAC5BuB,eAAexB,KAAKC,EAAE;QACxB,CAAA;AACF;AAEA,kBAAkB;AAClB,MAAMwB,mBAAmB;IACvBC,SAAS1B,KAAKC,EAAE;IAChB0B,SAAS3B,KAAKC,EAAE;IAChB2B,YAAY5B,KAAKC,EAAE;IACnB4B,OAAO7B,KAAKC,EAAE;AAChB;AACAH,OAAOgC,YAAY,GAAGL;AAEtB,oBAAoB;AACpB,MAAMM,qBAAqB;IACzBL,SAAS1B,KAAKC,EAAE;IAChB0B,SAAS3B,KAAKC,EAAE;IAChB2B,YAAY5B,KAAKC,EAAE;IACnB4B,OAAO7B,KAAKC,EAAE;AAChB;AACAH,OAAOkC,cAAc,GAAGD;AAExB,4BAA4B;AAC5B,MAAME,uBAAuBC,QAAQC,KAAK;AAC1CD,QAAQC,KAAK,GAAG,CAAC,GAAGC;IAClB,IAAI,8BAA8BC,IAAI,CAACD,IAAI,CAAC,EAAE,GAAG;QAC/C;IACF;IACAH,wBAAwBG;AAC1B"}