4d6810e8c8a2437ff476949f26565f83
'use client';
"use strict";

/* istanbul ignore next */
function cov_itxmniaev() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/simpleWalletService.ts";
  var hash = "d2fa432d1c6f758946d3dbd5a4777788aae5f458";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/simpleWalletService.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 27
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 42
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 29
        }
      },
      "14": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "15": {
        start: {
          line: 63,
          column: 18
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "16": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "17": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "18": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "19": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "20": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 20
        }
      },
      "21": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "22": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 65
        }
      },
      "23": {
        start: {
          line: 71,
          column: 41
        },
        end: {
          line: 71,
          column: 64
        }
      },
      "24": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 27
        }
      },
      "25": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "26": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 43
        }
      },
      "27": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 30
        }
      },
      "28": {
        start: {
          line: 76,
          column: 18
        },
        end: {
          line: 76,
          column: 30
        }
      },
      "29": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 104,
          column: 6
        }
      },
      "30": {
        start: {
          line: 106,
          column: 22
        },
        end: {
          line: 118,
          column: 1
        }
      },
      "31": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 36
        }
      },
      "32": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 36
        }
      },
      "33": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "34": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 112,
          column: 10
        }
      },
      "35": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 35
        }
      },
      "36": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 41
        }
      },
      "37": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 20
        }
      },
      "38": {
        start: {
          line: 119,
          column: 26
        },
        end: {
          line: 131,
          column: 1
        }
      },
      "39": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 36
        }
      },
      "40": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 121,
          column: 36
        }
      },
      "41": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "42": {
        start: {
          line: 123,
          column: 25
        },
        end: {
          line: 125,
          column: 10
        }
      },
      "43": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 35
        }
      },
      "44": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 41
        }
      },
      "45": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "46": {
        start: {
          line: 132,
          column: 26
        },
        end: {
          line: 144,
          column: 1
        }
      },
      "47": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 36
        }
      },
      "48": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 36
        }
      },
      "49": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "50": {
        start: {
          line: 136,
          column: 27
        },
        end: {
          line: 138,
          column: 10
        }
      },
      "51": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 60
        }
      },
      "52": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 42
        }
      },
      "53": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 20
        }
      },
      "54": {
        start: {
          line: 145,
          column: 22
        },
        end: {
          line: 193,
          column: 1
        }
      },
      "55": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 37
        }
      },
      "56": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 147,
          column: 37
        }
      },
      "57": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "58": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "59": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 20
        }
      },
      "60": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 41
        }
      },
      "61": {
        start: {
          line: 162,
          column: 24
        },
        end: {
          line: 162,
          column: 47
        }
      },
      "62": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "63": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "64": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 184,
          column: 19
        }
      },
      "65": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 28
        }
      },
      "66": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 52
        }
      },
      "67": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 29
        }
      },
      "68": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 21
        }
      },
      "69": {
        start: {
          line: 194,
          column: 35
        },
        end: {
          line: 205,
          column: 1
        }
      },
      "70": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 36
        }
      },
      "71": {
        start: {
          line: 196,
          column: 24
        },
        end: {
          line: 196,
          column: 36
        }
      },
      "72": {
        start: {
          line: 197,
          column: 34
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "73": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 27
        }
      },
      "74": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 200,
          column: 65
        }
      },
      "75": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 204,
          column: 6
        }
      },
      "76": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 81
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 34
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 24
          }
        },
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 24
          }
        },
        loc: {
          start: {
            line: 22,
            column: 34
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 21
          }
        },
        loc: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 22
          }
        },
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 16
          }
        },
        loc: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 33
          }
        },
        loc: {
          start: {
            line: 37,
            column: 43
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 19
          },
          end: {
            line: 40,
            column: 20
          }
        },
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 63,
            column: 18
          },
          end: {
            line: 63,
            column: 19
          }
        },
        loc: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 51
          }
        },
        line: 63
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        },
        loc: {
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 64
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 67,
            column: 25
          }
        },
        loc: {
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 67
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 24
          }
        },
        loc: {
          start: {
            line: 70,
            column: 34
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 70
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 71,
            column: 34
          },
          end: {
            line: 71,
            column: 35
          }
        },
        loc: {
          start: {
            line: 71,
            column: 41
          },
          end: {
            line: 71,
            column: 64
          }
        },
        line: 71
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 27
          }
        },
        loc: {
          start: {
            line: 74,
            column: 37
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 74
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 106,
            column: 22
          },
          end: {
            line: 106,
            column: 23
          }
        },
        loc: {
          start: {
            line: 106,
            column: 32
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 106
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 119,
            column: 26
          },
          end: {
            line: 119,
            column: 27
          }
        },
        loc: {
          start: {
            line: 119,
            column: 36
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 119
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 132,
            column: 26
          },
          end: {
            line: 132,
            column: 27
          }
        },
        loc: {
          start: {
            line: 132,
            column: 36
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 132
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 145,
            column: 22
          },
          end: {
            line: 145,
            column: 23
          }
        },
        loc: {
          start: {
            line: 145,
            column: 39
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 145
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 194,
            column: 35
          },
          end: {
            line: 194,
            column: 36
          }
        },
        loc: {
          start: {
            line: 194,
            column: 47
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 194
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 197,
            column: 34
          },
          end: {
            line: 197,
            column: 35
          }
        },
        loc: {
          start: {
            line: 197,
            column: 46
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 197
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 202,
            column: 11
          },
          end: {
            line: 202,
            column: 12
          }
        },
        loc: {
          start: {
            line: 202,
            column: 15
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 202
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 65,
            column: 11
          },
          end: {
            line: 65,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 11
          },
          end: {
            line: 65,
            column: 22
          }
        }, {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 64
          }
        }],
        line: 65
      },
      "1": {
        loc: {
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 72,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 72,
            column: 18
          }
        }, {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 26
          }
        }],
        line: 72
      },
      "2": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "3": {
        loc: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "4": {
        loc: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 26
          }
        }, {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 113,
            column: 34
          }
        }],
        line: 113
      },
      "5": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "6": {
        loc: {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 26
          }
        }, {
          start: {
            line: 126,
            column: 30
          },
          end: {
            line: 126,
            column: 34
          }
        }],
        line: 126
      },
      "7": {
        loc: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "8": {
        loc: {
          start: {
            line: 139,
            column: 15
          },
          end: {
            line: 139,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 28
          },
          end: {
            line: 139,
            column: 52
          }
        }, {
          start: {
            line: 139,
            column: 55
          },
          end: {
            line: 139,
            column: 59
          }
        }],
        line: 139
      },
      "9": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "10": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "11": {
        loc: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/simpleWalletService.ts"],
      sourcesContent: ["'use client';\n\nimport { Chain } from 'wagmi/chains';\nimport { switchChain } from 'wagmi/actions';\n\n// \u7F51\u7EDC\u5B9A\u4E49\nexport interface NetworkInfo {\n  chainId: number;\n  name: string;\n  currency: string;\n  rpcUrl: string;\n  blockExplorerUrl: string;\n  testnet: boolean;\n}\n\n// \u652F\u6301\u7684\u7F51\u7EDC\nconst NETWORKS: NetworkInfo[] = [\n  {\n    chainId: 56,\n    name: 'BSC',\n    currency: 'BNB',\n    rpcUrl: 'https://bsc-dataseed.binance.org/',\n    blockExplorerUrl: 'https://bscscan.com',\n    testnet: false\n  },\n  {\n    chainId: 97,\n    name: 'BSC Testnet',\n    currency: 'tBNB',\n    rpcUrl: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n    blockExplorerUrl: 'https://testnet.bscscan.com',\n    testnet: true\n  }\n];\n\n// \u68C0\u67E5\u662F\u5426\u5728\u6D4F\u89C8\u5668\u73AF\u5883\nexport const isBrowser = () => typeof window !== 'undefined';\n\n// \u68C0\u67E5\u662F\u5426\u6709\u94B1\u5305\u53EF\u7528\nexport const hasEthereum = (): boolean => {\n  return isBrowser() && typeof window.ethereum !== 'undefined';\n};\n\n// \u83B7\u53D6\u6240\u6709\u652F\u6301\u7684\u7F51\u7EDC\nexport const getUserNetworks = (): NetworkInfo[] => {\n  return NETWORKS;\n};\n\n// \u6839\u636E\u94FEID\u83B7\u53D6\u7F51\u7EDC\u4FE1\u606F\nexport const getNetworkInfo = (chainId: number): NetworkInfo | null => {\n  const network = NETWORKS.find(net => net.chainId === chainId);\n  return network || null;\n};\n\n// \u521B\u5EFAWagmi\u94FE\u5BF9\u8C61\nexport const createChainConfig = (chainId: number): Chain | null => {\n  const network = getNetworkInfo(chainId);\n  \n  if (!network) return null;\n  \n  return {\n    id: network.chainId,\n    name: network.name,\n    nativeCurrency: {\n      name: network.currency,\n      symbol: network.currency,\n      decimals: 18\n    },\n    rpcUrls: {\n      default: { http: [network.rpcUrl] },\n      public: { http: [network.rpcUrl] },\n    },\n    blockExplorers: {\n      default: { name: network.name + ' Explorer', url: network.blockExplorerUrl },\n    },\n    testnet: network.testnet\n  } as Chain;\n};\n\n// \u8FDE\u63A5\u94B1\u5305\nexport const connectWallet = async (): Promise<string | null> => {\n  // \u4EC5\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u6267\u884C\n  if (!hasEthereum()) return null;\n  \n  try {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    return accounts[0] || null;\n  } catch (error) {\n    console.error('\u8FDE\u63A5\u94B1\u5305\u65F6\u51FA\u9519:', error);\n    return null;\n  }\n};\n\n// \u83B7\u53D6\u5F53\u524D\u8D26\u6237\nexport const getCurrentAccount = async (): Promise<string | null> => {\n  // \u4EC5\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u6267\u884C\n  if (!hasEthereum()) return null;\n  \n  try {\n    const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n    return accounts[0] || null;\n  } catch (error) {\n    console.error('\u83B7\u53D6\u8D26\u6237\u65F6\u51FA\u9519:', error);\n    return null;\n  }\n};\n\n// \u83B7\u53D6\u5F53\u524D\u94FEID\nexport const getCurrentChainId = async (): Promise<number | null> => {\n  // \u4EC5\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u6267\u884C\n  if (!hasEthereum()) return null;\n  \n  try {\n    const chainIdHex = await window.ethereum.request({ method: 'eth_chainId' });\n    return chainIdHex ? parseInt(chainIdHex, 16) : null;\n  } catch (error) {\n    console.error('\u83B7\u53D6\u94FEID\u65F6\u51FA\u9519:', error);\n    return null;\n  }\n};\n\n// \u5207\u6362\u7F51\u7EDC\nexport const switchNetwork = async (chainId: number): Promise<boolean> => {\n  // \u4EC5\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u6267\u884C\n  if (!hasEthereum()) return false;\n  \n  try {\n    // \u4E0D\u4F7F\u7528 wagmi \u7684 switchChain\uFF0C\u800C\u662F\u76F4\u63A5\u4F7F\u7528 ethereum API\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: `0x${chainId.toString(16)}` }]\n    });\n    return true;\n  } catch (error) {\n    console.error('\u5207\u6362\u7F51\u7EDC\u65F6\u51FA\u9519:', error);\n    \n    // \u5982\u679C\u7F51\u7EDC\u4E0D\u5B58\u5728\uFF0C\u5C1D\u8BD5\u6DFB\u52A0\n    const network = getNetworkInfo(chainId);\n    if (network) {\n      try {\n        await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: network.name,\n            nativeCurrency: {\n              name: network.currency,\n              symbol: network.currency,\n              decimals: 18\n            },\n            rpcUrls: [network.rpcUrl],\n            blockExplorerUrls: [network.blockExplorerUrl]\n          }]\n        });\n        return true;\n      } catch (addError) {\n        console.error('\u6DFB\u52A0\u7F51\u7EDC\u65F6\u51FA\u9519:', addError);\n        return false;\n      }\n    }\n    return false;\n  }\n};\n\n// \u8BBE\u7F6E\u8D26\u6237\u53D8\u5316\u76D1\u542C\u5668\nexport const setupAccountChangeListener = (callback: (accounts: string[]) => void): (() => void) | null => {\n  // \u4EC5\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u6267\u884C\n  if (!hasEthereum()) return null;\n  \n  const handleAccountsChanged = (accounts: string[]) => {\n    callback(accounts);\n  };\n  \n  window.ethereum.on('accountsChanged', handleAccountsChanged);\n  \n  // \u8FD4\u56DE\u6E05\u7406\u51FD\u6570\n  return () => {\n    window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n  };\n};\n"],
      names: ["connectWallet", "createChainConfig", "getCurrentAccount", "getCurrentChainId", "getNetworkInfo", "getUserNetworks", "hasEthereum", "isBrowser", "setupAccountChangeListener", "switchNetwork", "NETWORKS", "chainId", "name", "currency", "rpcUrl", "blockExplorerUrl", "testnet", "window", "ethereum", "network", "find", "net", "id", "nativeCurrency", "symbol", "decimals", "rpcUrls", "default", "http", "public", "blockExplorers", "url", "accounts", "request", "method", "error", "console", "chainIdHex", "parseInt", "params", "toString", "chainName", "blockExplorerUrls", "addError", "callback", "handleAccountsChanged", "on", "removeListener"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d2fa432d1c6f758946d3dbd5a4777788aae5f458"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_itxmniaev = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_itxmniaev();
cov_itxmniaev().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_itxmniaev().f[0]++;
  cov_itxmniaev().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_itxmniaev().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_itxmniaev().s[3]++;
_export(exports, {
  connectWallet: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[1]++;
    cov_itxmniaev().s[4]++;
    return connectWallet;
  },
  createChainConfig: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[2]++;
    cov_itxmniaev().s[5]++;
    return createChainConfig;
  },
  getCurrentAccount: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[3]++;
    cov_itxmniaev().s[6]++;
    return getCurrentAccount;
  },
  getCurrentChainId: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[4]++;
    cov_itxmniaev().s[7]++;
    return getCurrentChainId;
  },
  getNetworkInfo: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[5]++;
    cov_itxmniaev().s[8]++;
    return getNetworkInfo;
  },
  getUserNetworks: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[6]++;
    cov_itxmniaev().s[9]++;
    return getUserNetworks;
  },
  hasEthereum: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[7]++;
    cov_itxmniaev().s[10]++;
    return hasEthereum;
  },
  isBrowser: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[8]++;
    cov_itxmniaev().s[11]++;
    return isBrowser;
  },
  setupAccountChangeListener: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[9]++;
    cov_itxmniaev().s[12]++;
    return setupAccountChangeListener;
  },
  switchNetwork: function () {
    /* istanbul ignore next */
    cov_itxmniaev().f[10]++;
    cov_itxmniaev().s[13]++;
    return switchNetwork;
  }
});
// 支持的网络
const NETWORKS =
/* istanbul ignore next */
(cov_itxmniaev().s[14]++, [{
  chainId: 56,
  name: 'BSC',
  currency: 'BNB',
  rpcUrl: 'https://bsc-dataseed.binance.org/',
  blockExplorerUrl: 'https://bscscan.com',
  testnet: false
}, {
  chainId: 97,
  name: 'BSC Testnet',
  currency: 'tBNB',
  rpcUrl: 'https://data-seed-prebsc-1-s1.binance.org:8545/',
  blockExplorerUrl: 'https://testnet.bscscan.com',
  testnet: true
}]);
/* istanbul ignore next */
cov_itxmniaev().s[15]++;
const isBrowser = () => {
  /* istanbul ignore next */
  cov_itxmniaev().f[11]++;
  cov_itxmniaev().s[16]++;
  return typeof window !== 'undefined';
};
/* istanbul ignore next */
cov_itxmniaev().s[17]++;
const hasEthereum = () => {
  /* istanbul ignore next */
  cov_itxmniaev().f[12]++;
  cov_itxmniaev().s[18]++;
  return /* istanbul ignore next */(cov_itxmniaev().b[0][0]++, isBrowser()) &&
  /* istanbul ignore next */
  (cov_itxmniaev().b[0][1]++, typeof window.ethereum !== 'undefined');
};
/* istanbul ignore next */
cov_itxmniaev().s[19]++;
const getUserNetworks = () => {
  /* istanbul ignore next */
  cov_itxmniaev().f[13]++;
  cov_itxmniaev().s[20]++;
  return NETWORKS;
};
/* istanbul ignore next */
cov_itxmniaev().s[21]++;
const getNetworkInfo = chainId => {
  /* istanbul ignore next */
  cov_itxmniaev().f[14]++;
  const network =
  /* istanbul ignore next */
  (cov_itxmniaev().s[22]++, NETWORKS.find(net => {
    /* istanbul ignore next */
    cov_itxmniaev().f[15]++;
    cov_itxmniaev().s[23]++;
    return net.chainId === chainId;
  }));
  /* istanbul ignore next */
  cov_itxmniaev().s[24]++;
  return /* istanbul ignore next */(cov_itxmniaev().b[1][0]++, network) ||
  /* istanbul ignore next */
  (cov_itxmniaev().b[1][1]++, null);
};
/* istanbul ignore next */
cov_itxmniaev().s[25]++;
const createChainConfig = chainId => {
  /* istanbul ignore next */
  cov_itxmniaev().f[16]++;
  const network =
  /* istanbul ignore next */
  (cov_itxmniaev().s[26]++, getNetworkInfo(chainId));
  /* istanbul ignore next */
  cov_itxmniaev().s[27]++;
  if (!network) {
    /* istanbul ignore next */
    cov_itxmniaev().b[2][0]++;
    cov_itxmniaev().s[28]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_itxmniaev().b[2][1]++;
  }
  cov_itxmniaev().s[29]++;
  return {
    id: network.chainId,
    name: network.name,
    nativeCurrency: {
      name: network.currency,
      symbol: network.currency,
      decimals: 18
    },
    rpcUrls: {
      default: {
        http: [network.rpcUrl]
      },
      public: {
        http: [network.rpcUrl]
      }
    },
    blockExplorers: {
      default: {
        name: network.name + ' Explorer',
        url: network.blockExplorerUrl
      }
    },
    testnet: network.testnet
  };
};
/* istanbul ignore next */
cov_itxmniaev().s[30]++;
const connectWallet = async () => {
  /* istanbul ignore next */
  cov_itxmniaev().f[17]++;
  cov_itxmniaev().s[31]++;
  // 仅在浏览器环境执行
  if (!hasEthereum()) {
    /* istanbul ignore next */
    cov_itxmniaev().b[3][0]++;
    cov_itxmniaev().s[32]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_itxmniaev().b[3][1]++;
  }
  cov_itxmniaev().s[33]++;
  try {
    const accounts =
    /* istanbul ignore next */
    (cov_itxmniaev().s[34]++, await window.ethereum.request({
      method: 'eth_requestAccounts'
    }));
    /* istanbul ignore next */
    cov_itxmniaev().s[35]++;
    return /* istanbul ignore next */(cov_itxmniaev().b[4][0]++, accounts[0]) ||
    /* istanbul ignore next */
    (cov_itxmniaev().b[4][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_itxmniaev().s[36]++;
    console.error('连接钱包时出错:', error);
    /* istanbul ignore next */
    cov_itxmniaev().s[37]++;
    return null;
  }
};
/* istanbul ignore next */
cov_itxmniaev().s[38]++;
const getCurrentAccount = async () => {
  /* istanbul ignore next */
  cov_itxmniaev().f[18]++;
  cov_itxmniaev().s[39]++;
  // 仅在浏览器环境执行
  if (!hasEthereum()) {
    /* istanbul ignore next */
    cov_itxmniaev().b[5][0]++;
    cov_itxmniaev().s[40]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_itxmniaev().b[5][1]++;
  }
  cov_itxmniaev().s[41]++;
  try {
    const accounts =
    /* istanbul ignore next */
    (cov_itxmniaev().s[42]++, await window.ethereum.request({
      method: 'eth_accounts'
    }));
    /* istanbul ignore next */
    cov_itxmniaev().s[43]++;
    return /* istanbul ignore next */(cov_itxmniaev().b[6][0]++, accounts[0]) ||
    /* istanbul ignore next */
    (cov_itxmniaev().b[6][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_itxmniaev().s[44]++;
    console.error('获取账户时出错:', error);
    /* istanbul ignore next */
    cov_itxmniaev().s[45]++;
    return null;
  }
};
/* istanbul ignore next */
cov_itxmniaev().s[46]++;
const getCurrentChainId = async () => {
  /* istanbul ignore next */
  cov_itxmniaev().f[19]++;
  cov_itxmniaev().s[47]++;
  // 仅在浏览器环境执行
  if (!hasEthereum()) {
    /* istanbul ignore next */
    cov_itxmniaev().b[7][0]++;
    cov_itxmniaev().s[48]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_itxmniaev().b[7][1]++;
  }
  cov_itxmniaev().s[49]++;
  try {
    const chainIdHex =
    /* istanbul ignore next */
    (cov_itxmniaev().s[50]++, await window.ethereum.request({
      method: 'eth_chainId'
    }));
    /* istanbul ignore next */
    cov_itxmniaev().s[51]++;
    return chainIdHex ?
    /* istanbul ignore next */
    (cov_itxmniaev().b[8][0]++, parseInt(chainIdHex, 16)) :
    /* istanbul ignore next */
    (cov_itxmniaev().b[8][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_itxmniaev().s[52]++;
    console.error('获取链ID时出错:', error);
    /* istanbul ignore next */
    cov_itxmniaev().s[53]++;
    return null;
  }
};
/* istanbul ignore next */
cov_itxmniaev().s[54]++;
const switchNetwork = async chainId => {
  /* istanbul ignore next */
  cov_itxmniaev().f[20]++;
  cov_itxmniaev().s[55]++;
  // 仅在浏览器环境执行
  if (!hasEthereum()) {
    /* istanbul ignore next */
    cov_itxmniaev().b[9][0]++;
    cov_itxmniaev().s[56]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_itxmniaev().b[9][1]++;
  }
  cov_itxmniaev().s[57]++;
  try {
    /* istanbul ignore next */
    cov_itxmniaev().s[58]++;
    // 不使用 wagmi 的 switchChain，而是直接使用 ethereum API
    await window.ethereum.request({
      method: 'wallet_switchEthereumChain',
      params: [{
        chainId: `0x${chainId.toString(16)}`
      }]
    });
    /* istanbul ignore next */
    cov_itxmniaev().s[59]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_itxmniaev().s[60]++;
    console.error('切换网络时出错:', error);
    // 如果网络不存在，尝试添加
    const network =
    /* istanbul ignore next */
    (cov_itxmniaev().s[61]++, getNetworkInfo(chainId));
    /* istanbul ignore next */
    cov_itxmniaev().s[62]++;
    if (network) {
      /* istanbul ignore next */
      cov_itxmniaev().b[10][0]++;
      cov_itxmniaev().s[63]++;
      try {
        /* istanbul ignore next */
        cov_itxmniaev().s[64]++;
        await window.ethereum.request({
          method: 'wallet_addEthereumChain',
          params: [{
            chainId: `0x${chainId.toString(16)}`,
            chainName: network.name,
            nativeCurrency: {
              name: network.currency,
              symbol: network.currency,
              decimals: 18
            },
            rpcUrls: [network.rpcUrl],
            blockExplorerUrls: [network.blockExplorerUrl]
          }]
        });
        /* istanbul ignore next */
        cov_itxmniaev().s[65]++;
        return true;
      } catch (addError) {
        /* istanbul ignore next */
        cov_itxmniaev().s[66]++;
        console.error('添加网络时出错:', addError);
        /* istanbul ignore next */
        cov_itxmniaev().s[67]++;
        return false;
      }
    } else
    /* istanbul ignore next */
    {
      cov_itxmniaev().b[10][1]++;
    }
    cov_itxmniaev().s[68]++;
    return false;
  }
};
/* istanbul ignore next */
cov_itxmniaev().s[69]++;
const setupAccountChangeListener = callback => {
  /* istanbul ignore next */
  cov_itxmniaev().f[21]++;
  cov_itxmniaev().s[70]++;
  // 仅在浏览器环境执行
  if (!hasEthereum()) {
    /* istanbul ignore next */
    cov_itxmniaev().b[11][0]++;
    cov_itxmniaev().s[71]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_itxmniaev().b[11][1]++;
  }
  cov_itxmniaev().s[72]++;
  const handleAccountsChanged = accounts => {
    /* istanbul ignore next */
    cov_itxmniaev().f[22]++;
    cov_itxmniaev().s[73]++;
    callback(accounts);
  };
  /* istanbul ignore next */
  cov_itxmniaev().s[74]++;
  window.ethereum.on('accountsChanged', handleAccountsChanged);
  // 返回清理函数
  /* istanbul ignore next */
  cov_itxmniaev().s[75]++;
  return () => {
    /* istanbul ignore next */
    cov_itxmniaev().f[23]++;
    cov_itxmniaev().s[76]++;
    window.ethereum.removeListener('accountsChanged', handleAccountsChanged);
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,