3df616bb54a85ac986048c0f24b6d900
"use strict";

/* istanbul ignore next */
function cov_1a6mnso6yt() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useAirdropPool.ts";
  var hash = "840f54f11d34bf75d172a89b7bb946e14b65138f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useAirdropPool.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "7": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "8": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "9": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "10": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 129,
          column: 1
        }
      },
      "11": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 148,
          column: 1
        }
      },
      "12": {
        start: {
          line: 149,
          column: 21
        },
        end: {
          line: 167,
          column: 1
        }
      },
      "13": {
        start: {
          line: 169,
          column: 37
        },
        end: {
          line: 169,
          column: 61
        }
      },
      "14": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 170,
          column: 63
        }
      },
      "15": {
        start: {
          line: 171,
          column: 46
        },
        end: {
          line: 171,
          column: 72
        }
      },
      "16": {
        start: {
          line: 172,
          column: 30
        },
        end: {
          line: 172,
          column: 56
        }
      },
      "17": {
        start: {
          line: 173,
          column: 40
        },
        end: {
          line: 173,
          column: 63
        }
      },
      "18": {
        start: {
          line: 174,
          column: 31
        },
        end: {
          line: 174,
          column: 75
        }
      },
      "19": {
        start: {
          line: 175,
          column: 34
        },
        end: {
          line: 175,
          column: 82
        }
      },
      "20": {
        start: {
          line: 176,
          column: 27
        },
        end: {
          line: 176,
          column: 67
        }
      },
      "21": {
        start: {
          line: 178,
          column: 26
        },
        end: {
          line: 234,
          column: 6
        }
      },
      "22": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 57
        }
      },
      "23": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 36
        }
      },
      "24": {
        start: {
          line: 236,
          column: 30
        },
        end: {
          line: 283,
          column: 6
        }
      },
      "25": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 45
        }
      },
      "26": {
        start: {
          line: 237,
          column: 33
        },
        end: {
          line: 237,
          column: 45
        }
      },
      "27": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "28": {
        start: {
          line: 239,
          column: 119
        },
        end: {
          line: 239,
          column: 137
        }
      },
      "29": {
        start: {
          line: 241,
          column: 33
        },
        end: {
          line: 249,
          column: 20
        }
      },
      "30": {
        start: {
          line: 251,
          column: 31
        },
        end: {
          line: 257,
          column: 20
        }
      },
      "31": {
        start: {
          line: 259,
          column: 32
        },
        end: {
          line: 264,
          column: 20
        }
      },
      "32": {
        start: {
          line: 266,
          column: 32
        },
        end: {
          line: 269,
          column: 20
        }
      },
      "33": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 275,
          column: 14
        }
      },
      "34": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 63
        }
      },
      "35": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 54
        }
      },
      "36": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 24
        }
      },
      "37": {
        start: {
          line: 285,
          column: 30
        },
        end: {
          line: 309,
          column: 6
        }
      },
      "38": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 29
        }
      },
      "39": {
        start: {
          line: 286,
          column: 22
        },
        end: {
          line: 286,
          column: 29
        }
      },
      "40": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "41": {
        start: {
          line: 289,
          column: 59
        },
        end: {
          line: 289,
          column: 144
        }
      },
      "42": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 292,
          column: 13
        }
      },
      "43": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 67
        }
      },
      "44": {
        start: {
          line: 294,
          column: 66
        },
        end: {
          line: 294,
          column: 131
        }
      },
      "45": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "46": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 67
        }
      },
      "47": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 301,
          column: 14
        }
      },
      "48": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 58
        }
      },
      "49": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 24
        }
      },
      "50": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 335,
          column: 7
        }
      },
      "51": {
        start: {
          line: 312,
          column: 25
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "52": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 35
        }
      },
      "53": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 27
        }
      },
      "54": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 327,
          column: 13
        }
      },
      "55": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 319,
          column: 17
        }
      },
      "56": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 318,
          column: 27
        }
      },
      "57": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 42
        }
      },
      "58": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 57
        }
      },
      "59": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 65
        }
      },
      "60": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 326,
          column: 40
        }
      },
      "61": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 19
        }
      },
      "62": {
        start: {
          line: 337,
          column: 20
        },
        end: {
          line: 342,
          column: 6
        }
      },
      "63": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 40
        }
      },
      "64": {
        start: {
          line: 338,
          column: 30
        },
        end: {
          line: 338,
          column: 38
        }
      },
      "65": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 32
        }
      },
      "66": {
        start: {
          line: 344,
          column: 25
        },
        end: {
          line: 344,
          column: 44
        }
      },
      "67": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 353,
          column: 6
        }
      },
      "68": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 356,
          column: 40
        }
      },
      "69": {
        start: {
          line: 356,
          column: 22
        },
        end: {
          line: 356,
          column: 40
        }
      },
      "70": {
        start: {
          line: 357,
          column: 17
        },
        end: {
          line: 357,
          column: 44
        }
      },
      "71": {
        start: {
          line: 358,
          column: 18
        },
        end: {
          line: 358,
          column: 52
        }
      },
      "72": {
        start: {
          line: 359,
          column: 20
        },
        end: {
          line: 359,
          column: 51
        }
      },
      "73": {
        start: {
          line: 360,
          column: 17
        },
        end: {
          line: 360,
          column: 41
        }
      },
      "74": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "75": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 138
        }
      },
      "76": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 364,
          column: 125
        }
      },
      "77": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 369,
          column: 5
        }
      },
      "78": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 44
        }
      },
      "79": {
        start: {
          line: 370,
          column: 4
        },
        end: {
          line: 372,
          column: 5
        }
      },
      "80": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 44
        }
      },
      "81": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 375,
          column: 5
        }
      },
      "82": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 44
        }
      },
      "83": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 376,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 26
          }
        },
        loc: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 21
          }
        },
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "useAirdropPool",
        decl: {
          start: {
            line: 168,
            column: 9
          },
          end: {
            line: 168,
            column: 23
          }
        },
        loc: {
          start: {
            line: 168,
            column: 40
          },
          end: {
            line: 354,
            column: 1
          }
        },
        line: 168
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 230,
            column: 17
          },
          end: {
            line: 230,
            column: 18
          }
        },
        loc: {
          start: {
            line: 230,
            column: 26
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 230
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 236,
            column: 54
          },
          end: {
            line: 236,
            column: 55
          }
        },
        loc: {
          start: {
            line: 236,
            column: 58
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 236
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 285,
            column: 54
          },
          end: {
            line: 285,
            column: 55
          }
        },
        loc: {
          start: {
            line: 285,
            column: 64
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 285
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 311,
            column: 26
          },
          end: {
            line: 311,
            column: 27
          }
        },
        loc: {
          start: {
            line: 311,
            column: 30
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 311
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 312,
            column: 25
          },
          end: {
            line: 312,
            column: 26
          }
        },
        loc: {
          start: {
            line: 312,
            column: 35
          },
          end: {
            line: 328,
            column: 9
          }
        },
        line: 312
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 337,
            column: 44
          },
          end: {
            line: 337,
            column: 45
          }
        },
        loc: {
          start: {
            line: 337,
            column: 48
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 337
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 338,
            column: 22
          },
          end: {
            line: 338,
            column: 23
          }
        },
        loc: {
          start: {
            line: 338,
            column: 30
          },
          end: {
            line: 338,
            column: 38
          }
        },
        line: 338
      },
      "12": {
        name: "formatTimeRemaining",
        decl: {
          start: {
            line: 355,
            column: 9
          },
          end: {
            line: 355,
            column: 28
          }
        },
        loc: {
          start: {
            line: 355,
            column: 38
          },
          end: {
            line: 365,
            column: 1
          }
        },
        line: 355
      },
      "13": {
        name: "formatNumber",
        decl: {
          start: {
            line: 366,
            column: 9
          },
          end: {
            line: 366,
            column: 21
          }
        },
        loc: {
          start: {
            line: 366,
            column: 27
          },
          end: {
            line: 377,
            column: 1
          }
        },
        line: 366
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 168,
            column: 24
          },
          end: {
            line: 168,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 37
          },
          end: {
            line: 168,
            column: 38
          }
        }],
        line: 168
      },
      "1": {
        loc: {
          start: {
            line: 193,
            column: 15
          },
          end: {
            line: 202,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 40
          },
          end: {
            line: 202,
            column: 13
          }
        }, {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 202,
            column: 18
          }
        }],
        line: 193
      },
      "2": {
        loc: {
          start: {
            line: 193,
            column: 15
          },
          end: {
            line: 193,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 15
          },
          end: {
            line: 193,
            column: 26
          }
        }, {
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 193,
            column: 37
          }
        }],
        line: 193
      },
      "3": {
        loc: {
          start: {
            line: 204,
            column: 15
          },
          end: {
            line: 213,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 40
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 18
          }
        }],
        line: 204
      },
      "4": {
        loc: {
          start: {
            line: 204,
            column: 15
          },
          end: {
            line: 204,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 15
          },
          end: {
            line: 204,
            column: 26
          }
        }, {
          start: {
            line: 204,
            column: 30
          },
          end: {
            line: 204,
            column: 37
          }
        }],
        line: 204
      },
      "5": {
        loc: {
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 224,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 40
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 224,
            column: 18
          }
        }],
        line: 215
      },
      "6": {
        loc: {
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 215,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 215,
            column: 26
          }
        }, {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 215,
            column: 37
          }
        }],
        line: 215
      },
      "7": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "8": {
        loc: {
          start: {
            line: 241,
            column: 33
          },
          end: {
            line: 249,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 75
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 20
          }
        }],
        line: 241
      },
      "9": {
        loc: {
          start: {
            line: 251,
            column: 31
          },
          end: {
            line: 257,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 71
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 257,
            column: 20
          }
        }],
        line: 251
      },
      "10": {
        loc: {
          start: {
            line: 259,
            column: 32
          },
          end: {
            line: 264,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 74
          },
          end: {
            line: 264,
            column: 13
          }
        }, {
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 264,
            column: 20
          }
        }],
        line: 259
      },
      "11": {
        loc: {
          start: {
            line: 266,
            column: 32
          },
          end: {
            line: 269,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 266,
            column: 120
          },
          end: {
            line: 269,
            column: 13
          }
        }, {
          start: {
            line: 269,
            column: 16
          },
          end: {
            line: 269,
            column: 20
          }
        }],
        line: 266
      },
      "12": {
        loc: {
          start: {
            line: 266,
            column: 32
          },
          end: {
            line: 266,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 32
          },
          end: {
            line: 266,
            column: 76
          }
        }, {
          start: {
            line: 266,
            column: 80
          },
          end: {
            line: 266,
            column: 117
          }
        }],
        line: 266
      },
      "13": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 286,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 286,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "14": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 292,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 292,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "15": {
        loc: {
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 290,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 290,
            column: 26
          }
        }, {
          start: {
            line: 290,
            column: 30
          },
          end: {
            line: 290,
            column: 60
          }
        }],
        line: 290
      },
      "16": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "17": {
        loc: {
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 295,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 295,
            column: 26
          }
        }, {
          start: {
            line: 295,
            column: 30
          },
          end: {
            line: 295,
            column: 60
          }
        }],
        line: 295
      },
      "18": {
        loc: {
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 319,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 319,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "19": {
        loc: {
          start: {
            line: 324,
            column: 25
          },
          end: {
            line: 324,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 25
          },
          end: {
            line: 324,
            column: 38
          }
        }, {
          start: {
            line: 324,
            column: 42
          },
          end: {
            line: 324,
            column: 63
          }
        }],
        line: 324
      },
      "20": {
        loc: {
          start: {
            line: 346,
            column: 22
          },
          end: {
            line: 346,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 22
          },
          end: {
            line: 346,
            column: 48
          }
        }, {
          start: {
            line: 346,
            column: 52
          },
          end: {
            line: 346,
            column: 56
          }
        }],
        line: 346
      },
      "21": {
        loc: {
          start: {
            line: 347,
            column: 21
          },
          end: {
            line: 347,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 21
          },
          end: {
            line: 347,
            column: 46
          }
        }, {
          start: {
            line: 347,
            column: 50
          },
          end: {
            line: 347,
            column: 54
          }
        }],
        line: 347
      },
      "22": {
        loc: {
          start: {
            line: 348,
            column: 21
          },
          end: {
            line: 348,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 21
          },
          end: {
            line: 348,
            column: 46
          }
        }, {
          start: {
            line: 348,
            column: 50
          },
          end: {
            line: 348,
            column: 54
          }
        }],
        line: 348
      },
      "23": {
        loc: {
          start: {
            line: 349,
            column: 20
          },
          end: {
            line: 349,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 20
          },
          end: {
            line: 349,
            column: 44
          }
        }, {
          start: {
            line: 349,
            column: 48
          },
          end: {
            line: 349,
            column: 52
          }
        }],
        line: 349
      },
      "24": {
        loc: {
          start: {
            line: 350,
            column: 23
          },
          end: {
            line: 350,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 23
          },
          end: {
            line: 350,
            column: 36
          }
        }, {
          start: {
            line: 350,
            column: 40
          },
          end: {
            line: 350,
            column: 63
          }
        }],
        line: 350
      },
      "25": {
        loc: {
          start: {
            line: 351,
            column: 15
          },
          end: {
            line: 351,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 15
          },
          end: {
            line: 351,
            column: 20
          }
        }, {
          start: {
            line: 351,
            column: 24
          },
          end: {
            line: 351,
            column: 52
          }
        }],
        line: 351
      },
      "26": {
        loc: {
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 356,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 356,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "27": {
        loc: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "28": {
        loc: {
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "29": {
        loc: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "30": {
        loc: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useAirdropPool.ts"],
      sourcesContent: ["import { useState, useEffect, useCallback } from 'react';\nimport { useAccount, useContractRead, useContractReads } from 'wagmi';\nimport { useSupabaseClient } from '@supabase/auth-helpers-react';\nimport { formatEther, parseEther } from 'viem';\nimport type { Database } from '@/types/supabase';\n\ntype SupabaseClient = ReturnType<typeof useSupabaseClient<Database>>;\n\ninterface AirdropRound {\n  id: bigint;\n  startTime: bigint;\n  endTime: bigint;\n  totalDeposits: bigint;\n  totalRewards: bigint;\n  participantCount: bigint;\n  distributed: boolean;\n}\n\ninterface UserDeposit {\n  amount: bigint;\n  roundId: bigint;\n  timestamp: bigint;\n  claimed: boolean;\n}\n\ninterface UserBalance {\n  redFlower: bigint;\n  sm: bigint;\n}\n\ninterface PoolConfig {\n  weeklySmAmount: bigint;\n  roundDuration: bigint;\n  minDeposit: bigint;\n  maxDeposit: bigint;\n  isActive: boolean;\n}\n\ninterface AirdropPoolData {\n  currentRound: AirdropRound | null;\n  userDeposit: UserDeposit | null;\n  userBalance: UserBalance | null;\n  poolConfig: PoolConfig | null;\n  isLoadingData: boolean;\n  error: string | null;\n  refetch: () => void;\n}\n\nconst AIRDROP_POOL_ABI = [\n  {\n    name: 'getCurrentRound',\n    type: 'function',\n    inputs: [],\n    outputs: [\n      {\n        type: 'tuple',\n        components: [\n          { name: 'id', type: 'uint256' },\n          { name: 'startTime', type: 'uint256' },\n          { name: 'endTime', type: 'uint256' },\n          { name: 'totalDeposits', type: 'uint256' },\n          { name: 'totalRewards', type: 'uint256' },\n          { name: 'participantCount', type: 'uint256' },\n          { name: 'distributed', type: 'bool' }\n        ]\n      }\n    ],\n    stateMutability: 'view'\n  },\n  {\n    name: 'getUserCurrentDeposit',\n    type: 'function',\n    inputs: [{ name: 'user', type: 'address' }],\n    outputs: [\n      {\n        type: 'tuple',\n        components: [\n          { name: 'amount', type: 'uint256' },\n          { name: 'roundId', type: 'uint256' },\n          { name: 'timestamp', type: 'uint256' },\n          { name: 'claimed', type: 'bool' }\n        ]\n      }\n    ],\n    stateMutability: 'view'\n  },\n  {\n    name: 'poolConfig',\n    type: 'function',\n    inputs: [],\n    outputs: [\n      { name: 'weeklySmAmount', type: 'uint256' },\n      { name: 'roundDuration', type: 'uint256' },\n      { name: 'minDeposit', type: 'uint256' },\n      { name: 'maxDeposit', type: 'uint256' },\n      { name: 'isActive', type: 'bool' }\n    ],\n    stateMutability: 'view'\n  }\n] as const;\n\nconst RED_FLOWER_TOKEN_ABI = [\n  {\n    name: 'balanceOf',\n    type: 'function',\n    inputs: [{ name: 'account', type: 'address' }],\n    outputs: [{ name: '', type: 'uint256' }],\n    stateMutability: 'view'\n  }\n] as const;\n\nconst SM_TOKEN_ABI = [\n  {\n    name: 'balanceOf',\n    type: 'function',\n    inputs: [{ name: 'account', type: 'address' }],\n    outputs: [{ name: '', type: 'uint256' }],\n    stateMutability: 'view'\n  }\n] as const;\n\nexport function useAirdropPool(refreshKey: number = 0): AirdropPoolData {\n  const { address, isConnected } = useAccount();\n  const supabase = useSupabaseClient<Database>();\n  \n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [refetchKey, setRefetchKey] = useState(0);\n  \n  const airdropPoolAddress = process.env.NEXT_PUBLIC_AIRDROP_POOL_ADDRESS as `0x${string}`;\n  const redFlowerTokenAddress = process.env.NEXT_PUBLIC_RED_FLOWER_TOKEN_ADDRESS as `0x${string}`;\n  const smTokenAddress = process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS as `0x${string}`;\n  \n  // \u5408\u7EA6\u8BFB\u53D6\u914D\u7F6E\n  const contractReads = useContractReads({\n    contracts: [\n      // \u83B7\u53D6\u5F53\u524D\u8F6E\u6B21\n      {\n        address: airdropPoolAddress,\n        abi: AIRDROP_POOL_ABI,\n        functionName: 'getCurrentRound'\n      },\n      // \u83B7\u53D6\u6C60\u914D\u7F6E\n      {\n        address: airdropPoolAddress,\n        abi: AIRDROP_POOL_ABI,\n        functionName: 'poolConfig'\n      },\n      // \u83B7\u53D6\u7528\u6237\u5F53\u524D\u6295\u5165\uFF08\u5982\u679C\u5DF2\u8FDE\u63A5\u94B1\u5305\uFF09\n      ...(isConnected && address ? [{\n        address: airdropPoolAddress,\n        abi: AIRDROP_POOL_ABI,\n        functionName: 'getUserCurrentDeposit',\n        args: [address]\n      }] : []),\n      // \u83B7\u53D6\u7528\u6237\u5C0F\u7EA2\u82B1\u4F59\u989D\n      ...(isConnected && address ? [{\n        address: redFlowerTokenAddress,\n        abi: RED_FLOWER_TOKEN_ABI,\n        functionName: 'balanceOf',\n        args: [address]\n      }] : []),\n      // \u83B7\u53D6\u7528\u6237 SM \u4F59\u989D\n      ...(isConnected && address ? [{\n        address: smTokenAddress,\n        abi: SM_TOKEN_ABI,\n        functionName: 'balanceOf',\n        args: [address]\n      }] : [])\n    ],\n    watch: true,\n    cacheTime: 5000, // 5\u79D2\u7F13\u5B58\n    staleTime: 2000, // 2\u79D2\u540E\u6807\u8BB0\u4E3A\u8FC7\u671F\n    enabled: !!airdropPoolAddress,\n    onError: (error) => {\n      console.error('Contract read error:', error);\n      setError(error.message);\n    }\n  });\n  \n  // \u89E3\u6790\u5408\u7EA6\u6570\u636E\n  const parseContractData = useCallback(() => {\n    if (!contractReads.data) return null;\n    \n    try {\n      const [currentRoundResult, poolConfigResult, userDepositResult, redFlowerBalanceResult, smBalanceResult] = contractReads.data;\n      \n      // \u89E3\u6790\u5F53\u524D\u8F6E\u6B21\n      const currentRound: AirdropRound | null = currentRoundResult.status === 'success' ? {\n        id: currentRoundResult.result[0],\n        startTime: currentRoundResult.result[1],\n        endTime: currentRoundResult.result[2],\n        totalDeposits: currentRoundResult.result[3],\n        totalRewards: currentRoundResult.result[4],\n        participantCount: currentRoundResult.result[5],\n        distributed: currentRoundResult.result[6]\n      } : null;\n      \n      // \u89E3\u6790\u6C60\u914D\u7F6E\n      const poolConfig: PoolConfig | null = poolConfigResult.status === 'success' ? {\n        weeklySmAmount: poolConfigResult.result[0],\n        roundDuration: poolConfigResult.result[1],\n        minDeposit: poolConfigResult.result[2],\n        maxDeposit: poolConfigResult.result[3],\n        isActive: poolConfigResult.result[4]\n      } : null;\n      \n      // \u89E3\u6790\u7528\u6237\u6295\u5165\n      const userDeposit: UserDeposit | null = userDepositResult?.status === 'success' ? {\n        amount: userDepositResult.result[0],\n        roundId: userDepositResult.result[1],\n        timestamp: userDepositResult.result[2],\n        claimed: userDepositResult.result[3]\n      } : null;\n      \n      // \u89E3\u6790\u7528\u6237\u4F59\u989D\n      const userBalance: UserBalance | null = (\n        redFlowerBalanceResult?.status === 'success' && \n        smBalanceResult?.status === 'success'\n      ) ? {\n        redFlower: redFlowerBalanceResult.result,\n        sm: smBalanceResult.result\n      } : null;\n      \n      return {\n        currentRound,\n        poolConfig,\n        userDeposit,\n        userBalance\n      };\n    } catch (error) {\n      console.error('Parse contract data error:', error);\n      setError('Failed to parse contract data');\n      return null;\n    }\n  }, [contractReads.data]);\n  \n  // \u4ECE\u6570\u636E\u5E93\u83B7\u53D6\u8865\u5145\u4FE1\u606F\n  const fetchDatabaseData = useCallback(async () => {\n    if (!address) return;\n    \n    try {\n      // \u83B7\u53D6\u7528\u6237\u7A7A\u6295\u7EDF\u8BA1\n      const { data: userStats, error: statsError } = await supabase\n        .from('user_airdrop_stats')\n        .select('*')\n        .eq('user_id', address)\n        .single();\n      \n      if (statsError && statsError.code !== 'PGRST116') {\n        console.error('Database query error:', statsError);\n      }\n      \n      // \u83B7\u53D6\u5F53\u524D\u8F6E\u6B21\u8BE6\u60C5\n      const { data: currentRoundData, error: roundError } = await supabase\n        .from('current_airdrop_round')\n        .select('*')\n        .single();\n      \n      if (roundError && roundError.code !== 'PGRST116') {\n        console.error('Database query error:', roundError);\n      }\n      \n      return {\n        userStats,\n        currentRoundData\n      };\n    } catch (error) {\n      console.error('Database fetch error:', error);\n      return null;\n    }\n  }, [address, supabase]);\n  \n  // \u4E3B\u8981\u6570\u636E\u83B7\u53D6\u6548\u679C\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoadingData(true);\n      setError(null);\n      \n      try {\n        // \u7B49\u5F85\u5408\u7EA6\u6570\u636E\n        if (contractReads.isLoading) {\n          return;\n        }\n        \n        // \u83B7\u53D6\u6570\u636E\u5E93\u8865\u5145\u6570\u636E\n        await fetchDatabaseData();\n        \n      } catch (error: any) {\n        console.error('Load data error:', error);\n        setError(error.message || 'Failed to load data');\n      } finally {\n        setIsLoadingData(false);\n      }\n    };\n    \n    loadData();\n  }, [contractReads.isLoading, fetchDatabaseData, refreshKey, refetchKey]);\n  \n  // \u624B\u52A8\u5237\u65B0\u51FD\u6570\n  const refetch = useCallback(() => {\n    setRefetchKey(prev => prev + 1);\n    contractReads.refetch();\n  }, [contractReads]);\n  \n  // \u89E3\u6790\u6700\u7EC8\u6570\u636E\n  const contractData = parseContractData();\n  \n  return {\n    currentRound: contractData?.currentRound || null,\n    userDeposit: contractData?.userDeposit || null,\n    userBalance: contractData?.userBalance || null,\n    poolConfig: contractData?.poolConfig || null,\n    isLoadingData: isLoadingData || contractReads.isLoading,\n    error: error || (contractReads.error?.message),\n    refetch\n  };\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u683C\u5F0F\u5316\u65F6\u95F4\u5269\u4F59\nexport function formatTimeRemaining(seconds: number): string {\n  if (seconds <= 0) return '00:00:00';\n  \n  const days = Math.floor(seconds / 86400);\n  const hours = Math.floor((seconds % 86400) / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = Math.floor(seconds % 60);\n  \n  if (days > 0) {\n    return `${days}d ${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }\n  \n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u683C\u5F0F\u5316\u6570\u5B57\nexport function formatNumber(num: number): string {\n  if (num >= 1e9) {\n    return (num / 1e9).toFixed(1) + 'B';\n  }\n  if (num >= 1e6) {\n    return (num / 1e6).toFixed(1) + 'M';\n  }\n  if (num >= 1e3) {\n    return (num / 1e3).toFixed(1) + 'K';\n  }\n  return num.toFixed(0);\n}\n"],
      names: ["formatNumber", "formatTimeRemaining", "useAirdropPool", "AIRDROP_POOL_ABI", "name", "type", "inputs", "outputs", "components", "stateMutability", "RED_FLOWER_TOKEN_ABI", "SM_TOKEN_ABI", "refreshKey", "address", "isConnected", "useAccount", "supabase", "useSupabaseClient", "isLoadingData", "setIsLoadingData", "useState", "error", "setError", "refetchKey", "setRefetchKey", "airdropPoolAddress", "process", "env", "NEXT_PUBLIC_AIRDROP_POOL_ADDRESS", "redFlowerTokenAddress", "NEXT_PUBLIC_RED_FLOWER_TOKEN_ADDRESS", "smTokenAddress", "NEXT_PUBLIC_SM_TOKEN_ADDRESS", "contractReads", "useContractReads", "contracts", "abi", "functionName", "args", "watch", "cacheTime", "staleTime", "enabled", "onError", "console", "message", "parseContractData", "useCallback", "data", "currentRoundResult", "poolConfigResult", "userDepositResult", "redFlowerBalanceResult", "smBalanceResult", "currentRound", "status", "id", "result", "startTime", "endTime", "totalDeposits", "totalRewards", "participantCount", "distributed", "poolConfig", "weeklySmAmount", "roundDuration", "minDeposit", "maxDeposit", "isActive", "userDeposit", "amount", "roundId", "timestamp", "claimed", "userBalance", "redFlower", "sm", "fetchDatabaseData", "userStats", "statsError", "from", "select", "eq", "single", "code", "currentRoundData", "roundError", "useEffect", "loadData", "isLoading", "refetch", "prev", "contractData", "seconds", "days", "Math", "floor", "hours", "minutes", "secs", "toString", "padStart", "num", "toFixed"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "840f54f11d34bf75d172a89b7bb946e14b65138f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1a6mnso6yt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1a6mnso6yt();
cov_1a6mnso6yt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1a6mnso6yt().f[0]++;
  cov_1a6mnso6yt().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1a6mnso6yt().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1a6mnso6yt().s[3]++;
_export(exports, {
  formatNumber: function () {
    /* istanbul ignore next */
    cov_1a6mnso6yt().f[1]++;
    cov_1a6mnso6yt().s[4]++;
    return formatNumber;
  },
  formatTimeRemaining: function () {
    /* istanbul ignore next */
    cov_1a6mnso6yt().f[2]++;
    cov_1a6mnso6yt().s[5]++;
    return formatTimeRemaining;
  },
  useAirdropPool: function () {
    /* istanbul ignore next */
    cov_1a6mnso6yt().f[3]++;
    cov_1a6mnso6yt().s[6]++;
    return useAirdropPool;
  }
});
const _react =
/* istanbul ignore next */
(cov_1a6mnso6yt().s[7]++, require("react"));
const _wagmi =
/* istanbul ignore next */
(cov_1a6mnso6yt().s[8]++, require("wagmi"));
const _authhelpersreact =
/* istanbul ignore next */
(cov_1a6mnso6yt().s[9]++, require("@supabase/auth-helpers-react"));
const AIRDROP_POOL_ABI =
/* istanbul ignore next */
(cov_1a6mnso6yt().s[10]++, [{
  name: 'getCurrentRound',
  type: 'function',
  inputs: [],
  outputs: [{
    type: 'tuple',
    components: [{
      name: 'id',
      type: 'uint256'
    }, {
      name: 'startTime',
      type: 'uint256'
    }, {
      name: 'endTime',
      type: 'uint256'
    }, {
      name: 'totalDeposits',
      type: 'uint256'
    }, {
      name: 'totalRewards',
      type: 'uint256'
    }, {
      name: 'participantCount',
      type: 'uint256'
    }, {
      name: 'distributed',
      type: 'bool'
    }]
  }],
  stateMutability: 'view'
}, {
  name: 'getUserCurrentDeposit',
  type: 'function',
  inputs: [{
    name: 'user',
    type: 'address'
  }],
  outputs: [{
    type: 'tuple',
    components: [{
      name: 'amount',
      type: 'uint256'
    }, {
      name: 'roundId',
      type: 'uint256'
    }, {
      name: 'timestamp',
      type: 'uint256'
    }, {
      name: 'claimed',
      type: 'bool'
    }]
  }],
  stateMutability: 'view'
}, {
  name: 'poolConfig',
  type: 'function',
  inputs: [],
  outputs: [{
    name: 'weeklySmAmount',
    type: 'uint256'
  }, {
    name: 'roundDuration',
    type: 'uint256'
  }, {
    name: 'minDeposit',
    type: 'uint256'
  }, {
    name: 'maxDeposit',
    type: 'uint256'
  }, {
    name: 'isActive',
    type: 'bool'
  }],
  stateMutability: 'view'
}]);
const RED_FLOWER_TOKEN_ABI =
/* istanbul ignore next */
(cov_1a6mnso6yt().s[11]++, [{
  name: 'balanceOf',
  type: 'function',
  inputs: [{
    name: 'account',
    type: 'address'
  }],
  outputs: [{
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view'
}]);
const SM_TOKEN_ABI =
/* istanbul ignore next */
(cov_1a6mnso6yt().s[12]++, [{
  name: 'balanceOf',
  type: 'function',
  inputs: [{
    name: 'account',
    type: 'address'
  }],
  outputs: [{
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view'
}]);
function useAirdropPool(refreshKey =
/* istanbul ignore next */
(cov_1a6mnso6yt().b[0][0]++, 0)) {
  /* istanbul ignore next */
  cov_1a6mnso6yt().f[4]++;
  const {
    address,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[13]++, (0, _wagmi.useAccount)());
  const supabase =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[14]++, (0, _authhelpersreact.useSupabaseClient)());
  const [isLoadingData, setIsLoadingData] =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[15]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[16]++, (0, _react.useState)(null));
  const [refetchKey, setRefetchKey] =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[17]++, (0, _react.useState)(0));
  const airdropPoolAddress =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[18]++, process.env.NEXT_PUBLIC_AIRDROP_POOL_ADDRESS);
  const redFlowerTokenAddress =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[19]++, process.env.NEXT_PUBLIC_RED_FLOWER_TOKEN_ADDRESS);
  const smTokenAddress =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[20]++, process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS);
  // 合约读取配置
  const contractReads =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[21]++, (0, _wagmi.useContractReads)({
    contracts: [
    // 获取当前轮次
    {
      address: airdropPoolAddress,
      abi: AIRDROP_POOL_ABI,
      functionName: 'getCurrentRound'
    },
    // 获取池配置
    {
      address: airdropPoolAddress,
      abi: AIRDROP_POOL_ABI,
      functionName: 'poolConfig'
    },
    // 获取用户当前投入（如果已连接钱包）
    ...(
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[2][0]++, isConnected) &&
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[2][1]++, address) ?
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[1][0]++, [{
      address: airdropPoolAddress,
      abi: AIRDROP_POOL_ABI,
      functionName: 'getUserCurrentDeposit',
      args: [address]
    }]) :
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[1][1]++, [])),
    // 获取用户小红花余额
    ...(
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[4][0]++, isConnected) &&
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[4][1]++, address) ?
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[3][0]++, [{
      address: redFlowerTokenAddress,
      abi: RED_FLOWER_TOKEN_ABI,
      functionName: 'balanceOf',
      args: [address]
    }]) :
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[3][1]++, [])),
    // 获取用户 SM 余额
    ...(
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[6][0]++, isConnected) &&
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[6][1]++, address) ?
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[5][0]++, [{
      address: smTokenAddress,
      abi: SM_TOKEN_ABI,
      functionName: 'balanceOf',
      args: [address]
    }]) :
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[5][1]++, []))],
    watch: true,
    cacheTime: 5000,
    staleTime: 2000,
    enabled: !!airdropPoolAddress,
    onError: error => {
      /* istanbul ignore next */
      cov_1a6mnso6yt().f[5]++;
      cov_1a6mnso6yt().s[22]++;
      console.error('Contract read error:', error);
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[23]++;
      setError(error.message);
    }
  }));
  // 解析合约数据
  const parseContractData =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[24]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1a6mnso6yt().f[6]++;
    cov_1a6mnso6yt().s[25]++;
    if (!contractReads.data) {
      /* istanbul ignore next */
      cov_1a6mnso6yt().b[7][0]++;
      cov_1a6mnso6yt().s[26]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1a6mnso6yt().b[7][1]++;
    }
    cov_1a6mnso6yt().s[27]++;
    try {
      const [currentRoundResult, poolConfigResult, userDepositResult, redFlowerBalanceResult, smBalanceResult] =
      /* istanbul ignore next */
      (cov_1a6mnso6yt().s[28]++, contractReads.data);
      // 解析当前轮次
      const currentRound =
      /* istanbul ignore next */
      (cov_1a6mnso6yt().s[29]++, currentRoundResult.status === 'success' ?
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[8][0]++, {
        id: currentRoundResult.result[0],
        startTime: currentRoundResult.result[1],
        endTime: currentRoundResult.result[2],
        totalDeposits: currentRoundResult.result[3],
        totalRewards: currentRoundResult.result[4],
        participantCount: currentRoundResult.result[5],
        distributed: currentRoundResult.result[6]
      }) :
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[8][1]++, null));
      // 解析池配置
      const poolConfig =
      /* istanbul ignore next */
      (cov_1a6mnso6yt().s[30]++, poolConfigResult.status === 'success' ?
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[9][0]++, {
        weeklySmAmount: poolConfigResult.result[0],
        roundDuration: poolConfigResult.result[1],
        minDeposit: poolConfigResult.result[2],
        maxDeposit: poolConfigResult.result[3],
        isActive: poolConfigResult.result[4]
      }) :
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[9][1]++, null));
      // 解析用户投入
      const userDeposit =
      /* istanbul ignore next */
      (cov_1a6mnso6yt().s[31]++, userDepositResult?.status === 'success' ?
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[10][0]++, {
        amount: userDepositResult.result[0],
        roundId: userDepositResult.result[1],
        timestamp: userDepositResult.result[2],
        claimed: userDepositResult.result[3]
      }) :
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[10][1]++, null));
      // 解析用户余额
      const userBalance =
      /* istanbul ignore next */
      (cov_1a6mnso6yt().s[32]++,
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[12][0]++, redFlowerBalanceResult?.status === 'success') &&
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[12][1]++, smBalanceResult?.status === 'success') ?
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[11][0]++, {
        redFlower: redFlowerBalanceResult.result,
        sm: smBalanceResult.result
      }) :
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[33]++;
      return {
        currentRound,
        poolConfig,
        userDeposit,
        userBalance
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[34]++;
      console.error('Parse contract data error:', error);
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[35]++;
      setError('Failed to parse contract data');
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[36]++;
      return null;
    }
  }, [contractReads.data]));
  // 从数据库获取补充信息
  const fetchDatabaseData =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[37]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1a6mnso6yt().f[7]++;
    cov_1a6mnso6yt().s[38]++;
    if (!address) {
      /* istanbul ignore next */
      cov_1a6mnso6yt().b[13][0]++;
      cov_1a6mnso6yt().s[39]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1a6mnso6yt().b[13][1]++;
    }
    cov_1a6mnso6yt().s[40]++;
    try {
      // 获取用户空投统计
      const {
        data: userStats,
        error: statsError
      } =
      /* istanbul ignore next */
      (cov_1a6mnso6yt().s[41]++, await supabase.from('user_airdrop_stats').select('*').eq('user_id', address).single());
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[42]++;
      if (
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[15][0]++, statsError) &&
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[15][1]++, statsError.code !== 'PGRST116')) {
        /* istanbul ignore next */
        cov_1a6mnso6yt().b[14][0]++;
        cov_1a6mnso6yt().s[43]++;
        console.error('Database query error:', statsError);
      } else
      /* istanbul ignore next */
      {
        cov_1a6mnso6yt().b[14][1]++;
      }
      // 获取当前轮次详情
      const {
        data: currentRoundData,
        error: roundError
      } =
      /* istanbul ignore next */
      (cov_1a6mnso6yt().s[44]++, await supabase.from('current_airdrop_round').select('*').single());
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[45]++;
      if (
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[17][0]++, roundError) &&
      /* istanbul ignore next */
      (cov_1a6mnso6yt().b[17][1]++, roundError.code !== 'PGRST116')) {
        /* istanbul ignore next */
        cov_1a6mnso6yt().b[16][0]++;
        cov_1a6mnso6yt().s[46]++;
        console.error('Database query error:', roundError);
      } else
      /* istanbul ignore next */
      {
        cov_1a6mnso6yt().b[16][1]++;
      }
      cov_1a6mnso6yt().s[47]++;
      return {
        userStats,
        currentRoundData
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[48]++;
      console.error('Database fetch error:', error);
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[49]++;
      return null;
    }
  }, [address, supabase]));
  // 主要数据获取效果
  /* istanbul ignore next */
  cov_1a6mnso6yt().s[50]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1a6mnso6yt().f[8]++;
    cov_1a6mnso6yt().s[51]++;
    const loadData = async () => {
      /* istanbul ignore next */
      cov_1a6mnso6yt().f[9]++;
      cov_1a6mnso6yt().s[52]++;
      setIsLoadingData(true);
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[53]++;
      setError(null);
      /* istanbul ignore next */
      cov_1a6mnso6yt().s[54]++;
      try {
        /* istanbul ignore next */
        cov_1a6mnso6yt().s[55]++;
        // 等待合约数据
        if (contractReads.isLoading) {
          /* istanbul ignore next */
          cov_1a6mnso6yt().b[18][0]++;
          cov_1a6mnso6yt().s[56]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1a6mnso6yt().b[18][1]++;
        }
        // 获取数据库补充数据
        cov_1a6mnso6yt().s[57]++;
        await fetchDatabaseData();
      } catch (error) {
        /* istanbul ignore next */
        cov_1a6mnso6yt().s[58]++;
        console.error('Load data error:', error);
        /* istanbul ignore next */
        cov_1a6mnso6yt().s[59]++;
        setError(
        /* istanbul ignore next */
        (cov_1a6mnso6yt().b[19][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1a6mnso6yt().b[19][1]++, 'Failed to load data'));
      } finally {
        /* istanbul ignore next */
        cov_1a6mnso6yt().s[60]++;
        setIsLoadingData(false);
      }
    };
    /* istanbul ignore next */
    cov_1a6mnso6yt().s[61]++;
    loadData();
  }, [contractReads.isLoading, fetchDatabaseData, refreshKey, refetchKey]);
  // 手动刷新函数
  const refetch =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[62]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1a6mnso6yt().f[10]++;
    cov_1a6mnso6yt().s[63]++;
    setRefetchKey(prev => {
      /* istanbul ignore next */
      cov_1a6mnso6yt().f[11]++;
      cov_1a6mnso6yt().s[64]++;
      return prev + 1;
    });
    /* istanbul ignore next */
    cov_1a6mnso6yt().s[65]++;
    contractReads.refetch();
  }, [contractReads]));
  // 解析最终数据
  const contractData =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[66]++, parseContractData());
  /* istanbul ignore next */
  cov_1a6mnso6yt().s[67]++;
  return {
    currentRound:
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[20][0]++, contractData?.currentRound) ||
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[20][1]++, null),
    userDeposit:
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[21][0]++, contractData?.userDeposit) ||
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[21][1]++, null),
    userBalance:
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[22][0]++, contractData?.userBalance) ||
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[22][1]++, null),
    poolConfig:
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[23][0]++, contractData?.poolConfig) ||
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[23][1]++, null),
    isLoadingData:
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[24][0]++, isLoadingData) ||
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[24][1]++, contractReads.isLoading),
    error:
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[25][0]++, error) ||
    /* istanbul ignore next */
    (cov_1a6mnso6yt().b[25][1]++, contractReads.error?.message),
    refetch
  };
}
function formatTimeRemaining(seconds) {
  /* istanbul ignore next */
  cov_1a6mnso6yt().f[12]++;
  cov_1a6mnso6yt().s[68]++;
  if (seconds <= 0) {
    /* istanbul ignore next */
    cov_1a6mnso6yt().b[26][0]++;
    cov_1a6mnso6yt().s[69]++;
    return '00:00:00';
  } else
  /* istanbul ignore next */
  {
    cov_1a6mnso6yt().b[26][1]++;
  }
  const days =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[70]++, Math.floor(seconds / 86400));
  const hours =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[71]++, Math.floor(seconds % 86400 / 3600));
  const minutes =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[72]++, Math.floor(seconds % 3600 / 60));
  const secs =
  /* istanbul ignore next */
  (cov_1a6mnso6yt().s[73]++, Math.floor(seconds % 60));
  /* istanbul ignore next */
  cov_1a6mnso6yt().s[74]++;
  if (days > 0) {
    /* istanbul ignore next */
    cov_1a6mnso6yt().b[27][0]++;
    cov_1a6mnso6yt().s[75]++;
    return `${days}d ${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
  } else
  /* istanbul ignore next */
  {
    cov_1a6mnso6yt().b[27][1]++;
  }
  cov_1a6mnso6yt().s[76]++;
  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
}
function formatNumber(num) {
  /* istanbul ignore next */
  cov_1a6mnso6yt().f[13]++;
  cov_1a6mnso6yt().s[77]++;
  if (num >= 1e9) {
    /* istanbul ignore next */
    cov_1a6mnso6yt().b[28][0]++;
    cov_1a6mnso6yt().s[78]++;
    return (num / 1e9).toFixed(1) + 'B';
  } else
  /* istanbul ignore next */
  {
    cov_1a6mnso6yt().b[28][1]++;
  }
  cov_1a6mnso6yt().s[79]++;
  if (num >= 1e6) {
    /* istanbul ignore next */
    cov_1a6mnso6yt().b[29][0]++;
    cov_1a6mnso6yt().s[80]++;
    return (num / 1e6).toFixed(1) + 'M';
  } else
  /* istanbul ignore next */
  {
    cov_1a6mnso6yt().b[29][1]++;
  }
  cov_1a6mnso6yt().s[81]++;
  if (num >= 1e3) {
    /* istanbul ignore next */
    cov_1a6mnso6yt().b[30][0]++;
    cov_1a6mnso6yt().s[82]++;
    return (num / 1e3).toFixed(1) + 'K';
  } else
  /* istanbul ignore next */
  {
    cov_1a6mnso6yt().b[30][1]++;
  }
  cov_1a6mnso6yt().s[83]++;
  return num.toFixed(0);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,