{"version":3,"names":["cov_1ygzea8lkt","actualCoverage","s","XPlatformVerification","TwitterIcon","f","_jsxruntime","jsx","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","VerifiedIcon","LoadingIcon","jsxs","className","cx","cy","r","onVerificationSuccess","t","_reacti18next","useTranslation","wallet","_WalletContext","useWallet","typedWallet","isConnected","b","address","platforms","setPlatforms","_react","useState","id","name","icon","verificationMessage","slice","isVerified","isVerifying","useEffect","prev","map","platform","handleVerify","platformId","connect","p","Promise","resolve","setTimeout","anyVerified","some","error","console","onClick","disabled"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/presale/XPlatformVerification.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useWallet } from '../../contexts/WalletContext';\n\n// 简化版的图标组件\nconst TwitterIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z\"></path>\n  </svg>\n);\n\nconst VerifiedIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"#4CAF50\" stroke=\"none\">\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\n  </svg>\n);\n\nconst LoadingIcon = () => (\n  <svg className=\"animate-spin h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n  </svg>\n);\n\n// 社交平台类型\ninterface Platform {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  verificationMessage: string;\n  isVerified: boolean;\n  isVerifying: boolean;\n}\n\n// 组件属性类型\ninterface XPlatformVerificationProps {\n  onVerificationSuccess?: () => void;\n}\n\nexport default function XPlatformVerification({ onVerificationSuccess }: XPlatformVerificationProps) {\n  const { t } = useTranslation();\n  const { wallet } = useWallet();\n  \n  // 将钱包转换为我们需要的类型\n  const typedWallet = wallet as any;\n  const isConnected = typedWallet?.isConnected || false;\n  const address = typedWallet?.address || '';\n  \n  // 社交平台列表\n  const [platforms, setPlatforms] = useState<Platform[]>([\n    {\n      id: 'twitter',\n      name: 'Twitter',\n      icon: <TwitterIcon />,\n      verificationMessage: `Verify my wallet address ${address?.slice(0, 8)}... for Sociomint Presale`,\n      isVerified: false,\n      isVerifying: false\n    }\n  ]);\n\n  // 当地址变化时更新验证消息\n  useEffect(() => {\n    if (address) {\n      setPlatforms(prev => prev.map(platform => ({\n        ...platform,\n        verificationMessage: `Verify my wallet address ${address.slice(0, 8)}... for Sociomint Presale`\n      })));\n    }\n  }, [address]);\n\n  // 模拟验证功能\n  const handleVerify = async (platformId: string) => {\n    if (!isConnected) {\n      if (typedWallet?.connect) {\n        await typedWallet.connect();\n      }\n      return;\n    }\n\n    try {\n      // 更新平台状态为验证中\n      setPlatforms(prev => prev.map(p => \n        p.id === platformId \n          ? { ...p, isVerifying: true } \n          : p\n      ));\n\n      // 模拟异步验证过程\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // 完成验证，更新状态\n      setPlatforms(prev => prev.map(p => \n        p.id === platformId \n          ? { ...p, isVerified: true, isVerifying: false } \n          : p\n      ));\n      \n      // 如果至少有一个平台已验证，调用成功回调\n      const anyVerified = platforms.some(p => p.id === platformId || p.isVerified);\n      if (anyVerified && onVerificationSuccess) {\n        onVerificationSuccess();\n      }\n      \n    } catch (error: any) {\n      console.error(\"Verification error:\", error);\n      setPlatforms(prev => prev.map(p => \n        p.id === platformId \n          ? { ...p, isVerifying: false } \n          : p\n      ));\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-xl font-semibold\">{t('presale.verification')}</h3>\n      <p className=\"text-sm text-gray-400\">\n        {t('presale.verificationDesc')}\n      </p>\n\n      <div className=\"divide-y divide-gray-800\">\n        {platforms.map((platform) => (\n          <div key={platform.id} className=\"py-3 flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-primary\">{platform.icon}</div>\n              <span>{platform.name}</span>\n              \n              {platform.isVerified && (\n                <div className=\"flex items-center text-green-500\">\n                  <VerifiedIcon />\n                  <span className=\"ml-1 text-xs\">{t('presale.verified')}</span>\n                </div>\n              )}\n            </div>\n            \n            <button\n              onClick={() => handleVerify(platform.id)}\n              disabled={platform.isVerified || platform.isVerifying}\n              className={`px-3 py-1.5 rounded-md text-sm font-medium ${\n                platform.isVerified \n                  ? 'bg-green-800/30 text-green-400 cursor-default' \n                  : platform.isVerifying \n                    ? 'bg-gray-800 text-gray-400 cursor-wait' \n                    : 'bg-primary hover:bg-primary/80 text-white'\n              }`}\n            >\n              {platform.isVerifying ? (\n                <div className=\"flex items-center\">\n                  <LoadingIcon />\n                  <span className=\"ml-2\">{t('common.loading')}</span>\n                </div>\n              ) : platform.isVerified ? (\n                t('presale.verified')\n              ) : (\n                t('presale.verify')\n              )}\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n} "],"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","ignoreList":[]}