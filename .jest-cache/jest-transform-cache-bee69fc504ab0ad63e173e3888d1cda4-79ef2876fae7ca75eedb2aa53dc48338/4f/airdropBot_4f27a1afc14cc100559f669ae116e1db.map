{"version":3,"names":["airdropBot","cov_1y1jkg02hu","f","s","default","_default","sendWeeklyLeaderboard","TELEGRAM_BOT_TOKEN","process","env","SUPABASE_URL","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_SERVICE_KEY","SUPABASE_SERVICE_ROLE_KEY","AIRDROP_POOL_ADDRESS","NEXT_PUBLIC_AIRDROP_POOL_ADDRESS","RPC_URL","NEXT_PUBLIC_RPC_URL","supabase","_supabasejs","createClient","provider","_ethers","ethers","JsonRpcProvider","AIRDROP_POOL_ABI","airdropContract","Contract","_telegraf","Telegraf","use","ctx","next","session","b","from","id","data","user","select","eq","username","toString","single","walletAddress","wallet_address","userId","formatNumber","num","toFixed","formatTimeRemaining","seconds","days","Math","floor","hours","minutes","command","welcomeMessage","reply","reply_markup","inline_keyboard","text","url","callback_data","currentRound","getCurrentRound","poolConfig","now","Date","endTime","Number","remaining","totalDeposits","parseFloat","formatEther","weeklyReward","weeklySmAmount","statusMessage","participantCount","error","console","args","message","split","length","parse_mode","amount","isNaN","userDeposit","getUserCurrentDeposit","depositUrl","deposits","totalReward","rewardList","map","deposit","reward","actual_reward","round_id","join","claimUrl","stats","statsMessage","total_deposits","total_rewards","total_rounds_participated","total_rounds_claimed","first_participation_at","toLocaleDateString","last_participation_at","leaderboard","order","ascending","limit","leaderboardText","entry","index","medal","slice","deposited_flowers","percentage","deposit_percentage","on","callbackQuery","answerCbQuery","scene","enter","users","not","telegram","sendMessage","telegram_username","Promise","resolve","setTimeout","catch","err"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/telegram/airdropBot.ts"],"sourcesContent":["import { Telegraf, Context, Markup } from 'telegraf';\nimport { createClient } from '@supabase/supabase-js';\nimport { ethers } from 'ethers';\nimport type { Database } from '@/types/supabase';\n\n// 环境变量\nconst TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN!;\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY!;\nconst AIRDROP_POOL_ADDRESS = process.env.NEXT_PUBLIC_AIRDROP_POOL_ADDRESS!;\nconst RPC_URL = process.env.NEXT_PUBLIC_RPC_URL!;\n\n// 初始化客户端\nconst supabase = createClient<Database>(SUPABASE_URL, SUPABASE_SERVICE_KEY);\nconst provider = new ethers.JsonRpcProvider(RPC_URL);\n\n// 空投池合约 ABI（简化版）\nconst AIRDROP_POOL_ABI = [\n  'function getCurrentRound() view returns (tuple(uint256 id, uint256 startTime, uint256 endTime, uint256 totalDeposits, uint256 totalRewards, uint256 participantCount, bool distributed))',\n  'function getUserCurrentDeposit(address user) view returns (tuple(uint256 amount, uint256 roundId, uint256 timestamp, bool claimed))',\n  'function calculateUserReward(address user, uint256 roundId) view returns (uint256)',\n  'function poolConfig() view returns (tuple(uint256 weeklySmAmount, uint256 roundDuration, uint256 minDeposit, uint256 maxDeposit, bool isActive))'\n];\n\n// 创建合约实例\nconst airdropContract = new ethers.Contract(AIRDROP_POOL_ADDRESS, AIRDROP_POOL_ABI, provider);\n\n// 扩展 Context 类型\ninterface BotContext extends Context {\n  session?: {\n    walletAddress?: string;\n    userId?: string;\n  };\n}\n\n// 创建 Bot 实例\nexport const airdropBot = new Telegraf<BotContext>(TELEGRAM_BOT_TOKEN);\n\n// 中间件：会话管理\nairdropBot.use(async (ctx, next) => {\n  ctx.session = ctx.session || {};\n  \n  // 尝试从数据库获取用户信息\n  if (ctx.from?.id) {\n    const { data: user } = await supabase\n      .from('user_profiles')\n      .select('id, wallet_address, telegram_username')\n      .eq('telegram_username', ctx.from.username || ctx.from.id.toString())\n      .single();\n    \n    if (user) {\n      ctx.session.walletAddress = user.wallet_address;\n      ctx.session.userId = user.id;\n    }\n  }\n  \n  return next();\n});\n\n// 辅助函数：格式化数字\nfunction formatNumber(num: number): string {\n  if (num >= 1e9) return (num / 1e9).toFixed(2) + 'B';\n  if (num >= 1e6) return (num / 1e6).toFixed(2) + 'M';\n  if (num >= 1e3) return (num / 1e3).toFixed(2) + 'K';\n  return num.toFixed(2);\n}\n\n// 辅助函数：格式化时间\nfunction formatTimeRemaining(seconds: number): string {\n  if (seconds <= 0) return '已结束';\n  \n  const days = Math.floor(seconds / 86400);\n  const hours = Math.floor((seconds % 86400) / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  \n  if (days > 0) return `${days}天 ${hours}小时 ${minutes}分钟`;\n  if (hours > 0) return `${hours}小时 ${minutes}分钟`;\n  return `${minutes}分钟`;\n}\n\n// 命令：/start\nairdropBot.command('start', async (ctx) => {\n  const welcomeMessage = `\n🌸 欢迎来到 SocioMint 小红花空投池！\n\n🎯 **功能介绍**\n• 使用小红花参与每周 SM 代币空投\n• 根据投入比例分配奖励\n• 支持多平台绑定验证\n\n📋 **可用命令**\n/airdrop_status - 查看空投进度\n/deposit_flowers [数量] - 投入小红花\n/claim_reward - 领取奖励\n/my_stats - 查看我的统计\n/leaderboard - 查看排行榜\n/help - 帮助信息\n\n🔗 **绑定钱包**\n请先在 SocioMint 网站绑定您的 Telegram 账号和钱包地址。\n`;\n\n  await ctx.reply(welcomeMessage, {\n    reply_markup: {\n      inline_keyboard: [\n        [{ text: '🌐 访问 SocioMint', url: 'https://sociomint.com' }],\n        [{ text: '📊 查看空投状态', callback_data: 'airdrop_status' }]\n      ]\n    }\n  });\n});\n\n// 命令：/airdrop_status\nairdropBot.command('airdrop_status', async (ctx) => {\n  try {\n    // 获取当前轮次信息\n    const currentRound = await airdropContract.getCurrentRound();\n    const poolConfig = await airdropContract.poolConfig();\n    \n    const now = Math.floor(Date.now() / 1000);\n    const endTime = Number(currentRound.endTime);\n    const remaining = endTime - now;\n    \n    const totalDeposits = parseFloat(ethers.formatEther(currentRound.totalDeposits));\n    const weeklyReward = parseFloat(ethers.formatEther(poolConfig.weeklySmAmount));\n    \n    const statusMessage = `\n🎯 **第 ${currentRound.id} 轮空投状态**\n\n⏰ **剩余时间**: ${formatTimeRemaining(remaining)}\n💰 **总投入**: ${formatNumber(totalDeposits)} 小红花\n👥 **参与人数**: ${currentRound.participantCount} 人\n🏆 **奖励池**: ${formatNumber(weeklyReward)} SM\n\n📊 **进度**: ${((totalDeposits / (weeklyReward * 100)) * 100).toFixed(1)}%\n\n${remaining > 0 ? '🟢 投入进行中' : '🔴 本轮已结束'}\n`;\n\n    await ctx.reply(statusMessage, {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '💸 投入小红花', callback_data: 'deposit_flowers' }],\n          [{ text: '🏆 查看排行榜', callback_data: 'leaderboard' }],\n          [{ text: '🔄 刷新状态', callback_data: 'airdrop_status' }]\n        ]\n      }\n    });\n    \n  } catch (error) {\n    console.error('获取空投状态失败:', error);\n    await ctx.reply('❌ 获取空投状态失败，请稍后重试。');\n  }\n});\n\n// 命令：/deposit_flowers\nairdropBot.command('deposit_flowers', async (ctx) => {\n  if (!ctx.session?.walletAddress) {\n    await ctx.reply('❌ 请先在 SocioMint 网站绑定您的钱包地址。', {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '🔗 绑定钱包', url: 'https://sociomint.com/profile' }]\n        ]\n      }\n    });\n    return;\n  }\n  \n  const args = ctx.message.text.split(' ');\n  if (args.length < 2) {\n    await ctx.reply(`\n💸 **投入小红花**\n\n使用方法: \\`/deposit_flowers [数量]\\`\n例如: \\`/deposit_flowers 100\\`\n\n⚠️ **注意事项**\n• 每轮只能投入一次\n• 最小投入: 10 小红花\n• 最大投入: 10,000 小红花\n• 需要足够的小红花余额\n`, { parse_mode: 'Markdown' });\n    return;\n  }\n  \n  const amount = parseFloat(args[1]);\n  if (isNaN(amount) || amount <= 0) {\n    await ctx.reply('❌ 请输入有效的投入数量。');\n    return;\n  }\n  \n  try {\n    // 检查用户是否已投入\n    const userDeposit = await airdropContract.getUserCurrentDeposit(ctx.session.walletAddress);\n    if (userDeposit.amount > 0) {\n      await ctx.reply('❌ 您已在本轮投入过小红花，每轮只能投入一次。');\n      return;\n    }\n    \n    // 生成投入链接\n    const depositUrl = `https://sociomint.com/airdrop?amount=${amount}&from=telegram`;\n    \n    await ctx.reply(`\n💸 **确认投入 ${formatNumber(amount)} 小红花**\n\n请点击下方按钮前往网站完成投入：\n`, {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '💸 前往投入', url: depositUrl }],\n          [{ text: '📊 查看状态', callback_data: 'airdrop_status' }]\n        ]\n      }\n    });\n    \n  } catch (error) {\n    console.error('处理投入命令失败:', error);\n    await ctx.reply('❌ 处理投入命令失败，请稍后重试。');\n  }\n});\n\n// 命令：/claim_reward\nairdropBot.command('claim_reward', async (ctx) => {\n  if (!ctx.session?.walletAddress) {\n    await ctx.reply('❌ 请先在 SocioMint 网站绑定您的钱包地址。');\n    return;\n  }\n  \n  try {\n    // 查询用户可领取的奖励\n    const { data: deposits } = await supabase\n      .from('airdrop_deposits')\n      .select(`\n        *,\n        airdrop_rounds!inner(*)\n      `)\n      .eq('wallet_address', ctx.session.walletAddress)\n      .eq('is_claimed', false)\n      .eq('airdrop_rounds.is_distributed', true);\n    \n    if (!deposits || deposits.length === 0) {\n      await ctx.reply('🤷‍♂️ 暂无可领取的奖励。');\n      return;\n    }\n    \n    let totalReward = 0;\n    const rewardList = deposits.map(deposit => {\n      const reward = parseFloat(deposit.actual_reward || '0');\n      totalReward += reward;\n      return `• 第 ${deposit.round_id} 轮: ${formatNumber(reward)} SM`;\n    }).join('\\n');\n    \n    const claimUrl = 'https://sociomint.com/airdrop/claim?from=telegram';\n    \n    await ctx.reply(`\n🏆 **可领取奖励**\n\n${rewardList}\n\n💰 **总计**: ${formatNumber(totalReward)} SM\n\n请点击下方按钮前往网站领取：\n`, {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '🏆 前往领取', url: claimUrl }],\n          [{ text: '📊 查看统计', callback_data: 'my_stats' }]\n        ]\n      }\n    });\n    \n  } catch (error) {\n    console.error('查询奖励失败:', error);\n    await ctx.reply('❌ 查询奖励失败，请稍后重试。');\n  }\n});\n\n// 命令：/my_stats\nairdropBot.command('my_stats', async (ctx) => {\n  if (!ctx.session?.walletAddress) {\n    await ctx.reply('❌ 请先在 SocioMint 网站绑定您的钱包地址。');\n    return;\n  }\n  \n  try {\n    const { data: stats } = await supabase\n      .from('user_airdrop_stats')\n      .select('*')\n      .eq('user_id', ctx.session.userId)\n      .single();\n    \n    if (!stats) {\n      await ctx.reply('📊 您还没有参与过空投，快来投入小红花吧！');\n      return;\n    }\n    \n    const statsMessage = `\n📊 **我的空投统计**\n\n💸 **总投入**: ${formatNumber(parseFloat(stats.total_deposits || '0'))} 小红花\n🏆 **总奖励**: ${formatNumber(parseFloat(stats.total_rewards || '0'))} SM\n🎯 **参与轮次**: ${stats.total_rounds_participated} 轮\n✅ **已领取**: ${stats.total_rounds_claimed} 轮\n\n📅 **首次参与**: ${stats.first_participation_at ? new Date(stats.first_participation_at).toLocaleDateString() : '未知'}\n📅 **最近参与**: ${stats.last_participation_at ? new Date(stats.last_participation_at).toLocaleDateString() : '未知'}\n`;\n\n    await ctx.reply(statsMessage, {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '💸 投入小红花', callback_data: 'deposit_flowers' }],\n          [{ text: '🏆 领取奖励', callback_data: 'claim_reward' }]\n        ]\n      }\n    });\n    \n  } catch (error) {\n    console.error('查询统计失败:', error);\n    await ctx.reply('❌ 查询统计失败，请稍后重试。');\n  }\n});\n\n// 命令：/leaderboard\nairdropBot.command('leaderboard', async (ctx) => {\n  try {\n    // 获取当前轮次排行榜\n    const { data: leaderboard } = await supabase\n      .from('round_leaderboard')\n      .select('*')\n      .order('rank', { ascending: true })\n      .limit(10);\n    \n    if (!leaderboard || leaderboard.length === 0) {\n      await ctx.reply('📊 暂无排行榜数据。');\n      return;\n    }\n    \n    const leaderboardText = leaderboard.map((entry, index) => {\n      const medal = index === 0 ? '🥇' : index === 1 ? '🥈' : index === 2 ? '🥉' : `${index + 1}.`;\n      const username = entry.username || `${entry.wallet_address.slice(0, 6)}...${entry.wallet_address.slice(-4)}`;\n      const amount = formatNumber(parseFloat(entry.deposited_flowers || '0'));\n      const percentage = parseFloat(entry.deposit_percentage || '0').toFixed(1);\n      \n      return `${medal} ${username}: ${amount} (${percentage}%)`;\n    }).join('\\n');\n    \n    await ctx.reply(`\n🏆 **本轮排行榜 Top 10**\n\n${leaderboardText}\n\n💡 投入更多小红花获得更高排名！\n`, {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '💸 投入小红花', callback_data: 'deposit_flowers' }],\n          [{ text: '📊 查看状态', callback_data: 'airdrop_status' }]\n        ]\n      }\n    });\n    \n  } catch (error) {\n    console.error('查询排行榜失败:', error);\n    await ctx.reply('❌ 查询排行榜失败，请稍后重试。');\n  }\n});\n\n// 回调查询处理\nairdropBot.on('callback_query', async (ctx) => {\n  const data = ctx.callbackQuery.data;\n  \n  switch (data) {\n    case 'airdrop_status':\n      await ctx.answerCbQuery();\n      return ctx.scene.enter('airdrop_status');\n    case 'deposit_flowers':\n      await ctx.answerCbQuery();\n      return ctx.reply('请使用命令: /deposit_flowers [数量]');\n    case 'leaderboard':\n      await ctx.answerCbQuery();\n      return ctx.scene.enter('leaderboard');\n    case 'my_stats':\n      await ctx.answerCbQuery();\n      return ctx.scene.enter('my_stats');\n    case 'claim_reward':\n      await ctx.answerCbQuery();\n      return ctx.scene.enter('claim_reward');\n    default:\n      await ctx.answerCbQuery('未知操作');\n  }\n});\n\n// 定时推送：每周排行榜\nexport async function sendWeeklyLeaderboard() {\n  try {\n    // 获取所有绑定 Telegram 的用户\n    const { data: users } = await supabase\n      .from('user_profiles')\n      .select('telegram_username')\n      .not('telegram_username', 'is', null);\n    \n    if (!users) return;\n    \n    // 获取上周排行榜\n    const { data: leaderboard } = await supabase\n      .from('round_leaderboard')\n      .select('*')\n      .order('rank', { ascending: true })\n      .limit(5);\n    \n    if (!leaderboard || leaderboard.length === 0) return;\n    \n    const message = `\n🏆 **上周空投排行榜**\n\n${leaderboard.map((entry, index) => {\n  const medal = index === 0 ? '🥇' : index === 1 ? '🥈' : index === 2 ? '🥉' : `${index + 1}.`;\n  const username = entry.username || 'Anonymous';\n  const amount = formatNumber(parseFloat(entry.deposited_flowers || '0'));\n  return `${medal} ${username}: ${amount} 小红花`;\n}).join('\\n')}\n\n🎯 新一轮空投已开始，快来参与吧！\n`;\n\n    // 发送给所有用户（实际应用中可能需要分批发送）\n    for (const user of users.slice(0, 10)) { // 限制发送数量\n      try {\n        await airdropBot.telegram.sendMessage(user.telegram_username, message);\n        await new Promise(resolve => setTimeout(resolve, 100)); // 避免频率限制\n      } catch (error) {\n        console.error(`发送消息给 ${user.telegram_username} 失败:`, error);\n      }\n    }\n    \n  } catch (error) {\n    console.error('发送周排行榜失败:', error);\n  }\n}\n\n// 错误处理\nairdropBot.catch((err, ctx) => {\n  console.error('Bot error:', err);\n  ctx.reply('❌ 发生错误，请稍后重试。');\n});\n\nexport default airdropBot;\n"],"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","ignoreList":[]}