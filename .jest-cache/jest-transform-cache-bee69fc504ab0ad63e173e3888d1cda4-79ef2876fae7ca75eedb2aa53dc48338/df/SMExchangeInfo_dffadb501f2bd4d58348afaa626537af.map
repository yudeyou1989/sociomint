{"version":3,"names":["_default","exchangeAbi","cov_1aknhlla1x","s","EXCHANGE_CONTRACT_ADDRESS","TOKEN_CONTRACT_ADDRESS","SMExchangeInfo","f","account","setAccount","_react","useState","provider","setProvider","contract","setContract","signer","setSigner","exchangeStats","setExchangeStats","smPerBnb","setSmPerBnb","nextPrice","setNextPrice","remainingTokens","setRemainingTokens","userPurchases","setUserPurchases","userVerified","setUserVerified","minPurchaseAmount","setMinPurchaseAmount","maxPurchaseAmount","setMaxPurchaseAmount","bnbAmount","setBnbAmount","estimatedTokens","setEstimatedTokens","txStatus","setTxStatus","txHash","setTxHash","isLoading","setIsLoading","connectWallet","window","ethereum","b","accounts","request","method","_ethers","ethers","BrowserProvider","getSigner","Contract","fetchContractData","on","handleAccountsChanged","location","reload","error","console","alert","length","disconnectWallet","removeListener","contractInstance","userAddress","stats","getExchangeStats","smPerBnbValue","getCurrentSmPerBnb","nextPriceValue","getNextBnbPerSmPriceScaled","remainingTokensValue","getRemainingTokens","minPurchase","getMinPurchaseAmount","maxPurchase","getMaxPurchaseAmount","purchases","isVerified","updateEstimatedTokens","amount","parseFloat","bnbWei","parseEther","tokens","getTokenAmountForBnb","handleBnbAmountChange","e","value","target","purchaseTokens","formatEther","tx","exchangeTokens","gasLimit","hash","receipt","wait","status","useEffect","interval","setInterval","clearInterval","loadGlobalData","JsonRpcProvider","formatScaledPrice","scaled","Number","formatUnits","toFixed","formatTokenAmount","toLocaleString","maximumFractionDigits","getTransactionStatusText","getTransactionStatusClass","_jsxruntime","jsxs","className","jsx","onClick","slice","Fragment","currentRound","toString","htmlFor","id","type","min","step","onChange","disabled","String","paused","href","rel"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/SMExchangeInfo.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers, formatEther } from 'ethers';\n\n// 为window.ethereum添加类型\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n\n// SMTokenExchange 合约 ABI (包含所需的函数)\nconst exchangeAbi = [\n  {\n    \"inputs\": [],\n    \"name\": \"getExchangeStats\",\n    \"outputs\": [\n      {\n        \"components\": [\n          { \"name\": \"totalTokens\", \"type\": \"uint256\" },\n          { \"name\": \"remaining\", \"type\": \"uint256\" },\n          { \"name\": \"currentPriceScaled\", \"type\": \"uint256\" },\n          { \"name\": \"nextPriceScaled\", \"type\": \"uint256\" },\n          { \"name\": \"currentRound\", \"type\": \"uint256\" },\n          { \"name\": \"paused\", \"type\": \"bool\" }\n        ],\n        \"name\": \"stats\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getCurrentSmPerBnb\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getNextBnbPerSmPriceScaled\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getRemainingTokens\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"purchases\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"isVerified\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"exchangeTokens\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{\"name\": \"amount\", \"type\": \"uint256\"}],\n    \"name\": \"getTokenAmountForBnb\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getMinPurchaseAmount\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getMaxPurchaseAmount\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\n// 合约地址 - 使用已部署的测试网地址\nconst EXCHANGE_CONTRACT_ADDRESS = '0xF0c4729f07d7B2F03E2E2F2feED36386Dc8bFb8E';\nconst TOKEN_CONTRACT_ADDRESS = '0xa1f5Fba244B0030bbc6fD115E0351a731521DfD9'; // 使用测试代币\n\n// 交易状态类型\ntype TransactionStatus = 'none' | 'waiting' | 'pending' | 'success' | 'failed';\n\ninterface ExchangeStats {\n  totalTokens: bigint;\n  remaining: bigint;\n  currentPriceScaled: bigint;\n  nextPriceScaled: bigint;\n  currentRound: bigint;\n  paused: boolean;\n}\n\nconst SMExchangeInfo: React.FC = () => {\n  // 钱包连接状态\n  const [account, setAccount] = useState<string | null>(null);\n  const [provider, setProvider] = useState<ethers.BrowserProvider | null>(null);\n  const [contract, setContract] = useState<ethers.Contract | null>(null);\n  const [signer, setSigner] = useState<ethers.Signer | null>(null);\n\n  // 合约数据\n  const [exchangeStats, setExchangeStats] = useState<ExchangeStats | null>(null);\n  const [smPerBnb, setSmPerBnb] = useState<bigint | null>(null);\n  const [nextPrice, setNextPrice] = useState<bigint | null>(null);\n  const [remainingTokens, setRemainingTokens] = useState<bigint | null>(null);\n  const [userPurchases, setUserPurchases] = useState<bigint | null>(null);\n  const [userVerified, setUserVerified] = useState<boolean | null>(null);\n  const [minPurchaseAmount, setMinPurchaseAmount] = useState<bigint | null>(null);\n  const [maxPurchaseAmount, setMaxPurchaseAmount] = useState<bigint | null>(null);\n\n  // 购买状态\n  const [bnbAmount, setBnbAmount] = useState<string>('0.1');\n  const [estimatedTokens, setEstimatedTokens] = useState<bigint | null>(null);\n  const [txStatus, setTxStatus] = useState<TransactionStatus>('none');\n  const [txHash, setTxHash] = useState<string | null>(null);\n\n  // 加载状态\n  const [isLoading, setIsLoading] = useState(true);\n\n  // 连接钱包\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        // 请求账户访问\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const account = accounts[0];\n\n        // 创建provider和contract\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(EXCHANGE_CONTRACT_ADDRESS, exchangeAbi, signer);\n\n        setAccount(account);\n        setProvider(provider);\n        setContract(contract);\n        setSigner(signer);\n\n        // 获取合约数据\n        fetchContractData(contract, account);\n\n        // 监听账户变化\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\n\n        // 监听网络变化\n        window.ethereum.on('chainChanged', () => window.location.reload());\n      } catch (error) {\n        console.error(\"连接钱包失败:\", error);\n      }\n    } else {\n      alert(\"请安装MetaMask钱包!\");\n    }\n  };\n\n  // 处理账户变化\n  const handleAccountsChanged = (accounts: string[]) => {\n    if (accounts.length === 0) {\n      // 用户断开了所有账户\n      disconnectWallet();\n    } else if (accounts[0] !== account) {\n      // 用户切换了账户\n      setAccount(accounts[0]);\n      if (contract) {\n        fetchContractData(contract, accounts[0]);\n      }\n    }\n  };\n\n  // 断开钱包连接\n  const disconnectWallet = () => {\n    // 移除事件监听\n    if (window.ethereum) {\n      window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n    }\n\n    setAccount(null);\n    setProvider(null);\n    setContract(null);\n    setSigner(null);\n    setUserPurchases(null);\n    setUserVerified(null);\n  };\n\n  // 获取合约数据\n  const fetchContractData = async (contractInstance: ethers.Contract, userAddress?: string) => {\n    setIsLoading(true);\n\n    try {\n      // 获取所有数据\n      const stats = await contractInstance.getExchangeStats();\n      const smPerBnbValue = await contractInstance.getCurrentSmPerBnb();\n      const nextPriceValue = await contractInstance.getNextBnbPerSmPriceScaled();\n      const remainingTokensValue = await contractInstance.getRemainingTokens();\n\n      // 获取最小/最大购买限额\n      const minPurchase = await contractInstance.getMinPurchaseAmount();\n      const maxPurchase = await contractInstance.getMaxPurchaseAmount();\n\n      setExchangeStats(stats);\n      setSmPerBnb(smPerBnbValue);\n      setNextPrice(nextPriceValue);\n      setRemainingTokens(remainingTokensValue);\n      setMinPurchaseAmount(minPurchase);\n      setMaxPurchaseAmount(maxPurchase);\n\n      // 如果用户已连接，获取用户特定数据\n      if (userAddress) {\n        const purchases = await contractInstance.purchases(userAddress);\n        const isVerified = await contractInstance.isVerified(userAddress);\n\n        setUserPurchases(purchases);\n        setUserVerified(isVerified);\n      }\n\n      // 更新预估代币数量\n      updateEstimatedTokens(bnbAmount, contractInstance);\n    } catch (error) {\n      console.error(\"获取合约数据失败:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 更新预估获得的代币数量\n  const updateEstimatedTokens = async (amount: string, contractInstance: ethers.Contract) => {\n    if (!amount || parseFloat(amount) <= 0 || !contractInstance) return;\n\n    try {\n      const bnbWei = ethers.parseEther(amount);\n      const tokens = await contractInstance.getTokenAmountForBnb(bnbWei);\n      setEstimatedTokens(tokens);\n    } catch (error) {\n      console.error(\"计算预估代币数量失败:\", error);\n      setEstimatedTokens(null);\n    }\n  };\n\n  // 处理BNB数量输入变化\n  const handleBnbAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setBnbAmount(value);\n\n    if (contract) {\n      updateEstimatedTokens(value, contract);\n    }\n  };\n\n  // 购买代币\n  const purchaseTokens = async () => {\n    if (!contract || !signer || !account || !bnbAmount || parseFloat(bnbAmount) <= 0) return;\n\n    try {\n      setTxStatus('waiting');\n\n      // 检查最小/最大购买限额\n      const bnbWei = ethers.parseEther(bnbAmount);\n\n      if (minPurchaseAmount && bnbWei < minPurchaseAmount) {\n        alert(`购买金额不能小于 ${formatEther(minPurchaseAmount)} BNB`);\n        setTxStatus('none');\n        return;\n      }\n\n      if (maxPurchaseAmount && bnbWei > maxPurchaseAmount) {\n        alert(`购买金额不能大于 ${formatEther(maxPurchaseAmount)} BNB`);\n        setTxStatus('none');\n        return;\n      }\n\n      // 检查用户是否已验证\n      if (userVerified !== true) {\n        alert('您的账户尚未通过验证，无法购买代币');\n        setTxStatus('none');\n        return;\n      }\n\n      // 发送交易\n      const tx = await contract.exchangeTokens({\n        value: bnbWei,\n        gasLimit: 500000 // 设置足够的gasLimit\n      });\n\n      setTxHash(tx.hash);\n      setTxStatus('pending');\n\n      // 等待交易确认\n      const receipt = await tx.wait();\n\n      if (receipt.status === 1) {\n        setTxStatus('success');\n        // 刷新数据\n        fetchContractData(contract, account);\n      } else {\n        setTxStatus('failed');\n      }\n    } catch (error) {\n      console.error(\"购买代币失败:\", error);\n      setTxStatus('failed');\n    }\n  };\n\n  // 自动刷新数据\n  useEffect(() => {\n    // 如果已连接合约，每30秒刷新一次数据\n    if (contract && account) {\n      const interval = setInterval(() => {\n        fetchContractData(contract, account);\n      }, 30000);\n\n      return () => clearInterval(interval);\n    }\n  }, [contract, account]);\n\n  // 初始加载时尝试获取全局数据\n  useEffect(() => {\n    const loadGlobalData = async () => {\n      // 不需要钱包连接也可以获取全局数据\n      try {\n        // 使用BSC测试网RPC URL\n        const provider = new ethers.JsonRpcProvider('https://data-seed-prebsc-1-s1.binance.org:8545/');\n        const contract = new ethers.Contract(EXCHANGE_CONTRACT_ADDRESS, exchangeAbi, provider);\n\n        // 设置合约以获取全局数据\n        setContract(contract);\n        fetchContractData(contract);\n      } catch (error) {\n        console.error(\"获取全局数据失败:\", error);\n        setIsLoading(false);\n      }\n    };\n\n    loadGlobalData();\n  }, []);\n\n  // 格式化显示的价格\n  const formatScaledPrice = (scaled: bigint | null) => {\n    if (!scaled) return 'N/A';\n    return (Number(ethers.formatUnits(scaled, 6)) / 1e6).toFixed(12);\n  };\n\n  // 格式化代币数量\n  const formatTokenAmount = (amount: bigint | null) => {\n    if (!amount) return 'N/A';\n    return parseFloat(formatEther(amount)).toLocaleString('zh-CN', {\n      maximumFractionDigits: 2\n    });\n  };\n\n  // 获取交易状态文本\n  const getTransactionStatusText = () => {\n    switch (txStatus) {\n      case 'waiting':\n        return '准备中...';\n      case 'pending':\n        return '交易进行中...';\n      case 'success':\n        return '交易成功！';\n      case 'failed':\n        return '交易失败，请重试';\n      default:\n        return '';\n    }\n  };\n\n  // 获取交易状态类名\n  const getTransactionStatusClass = () => {\n    switch (txStatus) {\n      case 'waiting':\n      case 'pending':\n        return 'tx-pending';\n      case 'success':\n        return 'tx-success';\n      case 'failed':\n        return 'tx-failed';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"sm-exchange-info\">\n      <div className=\"exchange-header\">\n        <h2>SocioMint 代币兑换</h2>\n\n        {!account ? (\n          <button\n            className=\"connect-button\"\n            onClick={connectWallet}\n          >\n            连接钱包\n          </button>\n        ) : (\n          <button\n            className=\"disconnect-button\"\n            onClick={disconnectWallet}\n          >\n            断开连接 ({account?.slice(0, 6)}...{account?.slice(-4)})\n          </button>\n        )}\n      </div>\n\n      {isLoading ? (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>加载中...</p>\n        </div>\n      ) : (\n        <>\n          <div className=\"exchange-data\">\n            <div className=\"data-row\">\n              <div className=\"data-label\">当前轮次:</div>\n              <div className=\"data-value\">\n                {exchangeStats?.currentRound ? exchangeStats.currentRound.toString() : 'N/A'}\n              </div>\n            </div>\n\n            <div className=\"data-row\">\n              <div className=\"data-label\">每 BNB 可得 SM:</div>\n              <div className=\"data-value\">\n                {formatTokenAmount(smPerBnb)} SM\n              </div>\n            </div>\n\n            <div className=\"data-row\">\n              <div className=\"data-label\">下一轮兑换价格:</div>\n              <div className=\"data-value\">\n                {formatScaledPrice(nextPrice)} BNB/SM\n              </div>\n            </div>\n\n            <div className=\"data-row\">\n              <div className=\"data-label\">剩余可兑换总量:</div>\n              <div className=\"data-value\">\n                {formatTokenAmount(remainingTokens)} SM\n              </div>\n            </div>\n\n            {account && (\n              <div className=\"user-info\">\n                <h3>用户信息</h3>\n\n                <div className=\"data-row\">\n                  <div className=\"data-label\">钱包地址:</div>\n                  <div className=\"data-value address\">\n                    {account}\n                  </div>\n                </div>\n\n                <div className=\"data-row\">\n                  <div className=\"data-label\">已花费 BNB:</div>\n                  <div className=\"data-value\">\n                    {userPurchases ? formatEther(userPurchases) : '0'} BNB\n                  </div>\n                </div>\n\n                <div className=\"data-row\">\n                  <div className=\"data-label\">认证状态:</div>\n                  <div className={`data-value ${userVerified ? 'verified' : 'not-verified'}`}>\n                    {userVerified ? '已认证 ✓' : '未认证 ✗'}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* 购买区块 */}\n          {account && (\n            <div className=\"purchase-section\">\n              <h3>购买 SM 代币</h3>\n\n              <div className=\"purchase-form\">\n                <div className=\"input-group\">\n                  <label htmlFor=\"bnb-amount\">BNB 数量:</label>\n                  <input\n                    id=\"bnb-amount\"\n                    type=\"number\"\n                    min=\"0.0001\"\n                    step=\"0.01\"\n                    value={bnbAmount}\n                    onChange={handleBnbAmountChange}\n                    disabled={txStatus === 'waiting' || txStatus === 'pending'}\n                  />\n                </div>\n\n                <div className=\"estimated-tokens\">\n                  <span>预计获得:</span>\n                  <strong>{formatTokenAmount(estimatedTokens)} SM</strong>\n                </div>\n\n                <div className=\"purchase-limits\">\n                  {minPurchaseAmount && (\n                    <div className=\"min-limit\">\n                      最低购买: {String(formatEther(minPurchaseAmount))} BNB\n                    </div>\n                  )}\n                  {maxPurchaseAmount && (\n                    <div className=\"max-limit\">\n                      最高购买: {String(formatEther(maxPurchaseAmount))} BNB\n                    </div>\n                  )}\n                </div>\n\n                <button\n                  className=\"purchase-button\"\n                  onClick={purchaseTokens}\n                  disabled={\n                    !account ||\n                    txStatus === 'waiting' ||\n                    txStatus === 'pending' ||\n                    !userVerified ||\n                    parseFloat(bnbAmount) <= 0 ||\n                    exchangeStats?.paused\n                  }\n                >\n                  {txStatus === 'waiting' || txStatus === 'pending' ? (\n                    <span className=\"button-spinner\"></span>\n                  ) : (\n                    '购买 SM 代币'\n                  )}\n                </button>\n\n                {/* 交易状态显示 */}\n                {txStatus !== 'none' && (\n                  <div className={`transaction-status ${getTransactionStatusClass()}`}>\n                    <p>{getTransactionStatusText()}</p>\n                    {txHash && (txStatus === 'pending' || txStatus === 'success') && (\n                      <a\n                        href={`https://testnet.bscscan.com/tx/${txHash}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        查看交易详情\n                      </a>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </>\n      )}\n\n      <style>\n        {`\n        .sm-exchange-info {\n          background: #f8f9fa;\n          border-radius: 12px;\n          box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n          padding: 24px;\n          width: 100%;\n          max-width: 500px;\n          margin: 0 auto;\n          font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n        }\n\n        .exchange-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 24px;\n          padding-bottom: 16px;\n          border-bottom: 1px solid #dee2e6;\n        }\n\n        .exchange-header h2 {\n          margin: 0;\n          font-size: 1.25rem;\n          font-weight: 600;\n          color: #212529;\n        }\n\n        .connect-button, .disconnect-button {\n          padding: 8px 16px;\n          border-radius: 8px;\n          font-weight: 500;\n          font-size: 0.875rem;\n          cursor: pointer;\n          transition: all 0.2s;\n          border: none;\n        }\n\n        .connect-button {\n          background-color: #339af0;\n          color: white;\n        }\n\n        .connect-button:hover {\n          background-color: #1c7ed6;\n        }\n\n        .disconnect-button {\n          background-color: #e9ecef;\n          color: #495057;\n        }\n\n        .disconnect-button:hover {\n          background-color: #dee2e6;\n        }\n\n        .loading-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          padding: 32px 0;\n        }\n\n        .loading-spinner, .button-spinner {\n          border: 3px solid #f3f3f3;\n          border-top: 3px solid #339af0;\n          border-radius: 50%;\n          width: 24px;\n          height: 24px;\n          animation: spin 1s linear infinite;\n          margin-bottom: 16px;\n        }\n\n        .button-spinner {\n          width: 16px;\n          height: 16px;\n          margin: 0;\n          display: inline-block;\n          vertical-align: middle;\n        }\n\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n\n        .exchange-data {\n          display: flex;\n          flex-direction: column;\n          gap: 16px;\n        }\n\n        .data-row {\n          display: flex;\n          justify-content: space-between;\n          padding: 8px 0;\n        }\n\n        .data-label {\n          font-weight: 500;\n          color: #495057;\n          font-size: 0.875rem;\n        }\n\n        .data-value {\n          font-weight: 600;\n          color: #212529;\n          font-size: 0.875rem;\n        }\n\n        .user-info {\n          margin-top: 16px;\n          padding-top: 16px;\n          border-top: 1px dashed #dee2e6;\n        }\n\n        .user-info h3 {\n          margin: 0 0 16px 0;\n          font-size: 1rem;\n          color: #212529;\n          font-weight: 600;\n        }\n\n        .address {\n          font-family: monospace;\n          font-size: 0.8125rem;\n          word-break: break-all;\n        }\n\n        .verified {\n          color: #2b8a3e;\n        }\n\n        .not-verified {\n          color: #e03131;\n        }\n\n        /* 购买区块样式 */\n        .purchase-section {\n          margin-top: 24px;\n          padding-top: 24px;\n          border-top: 1px solid #dee2e6;\n        }\n\n        .purchase-section h3 {\n          margin: 0 0 16px 0;\n          font-size: 1rem;\n          color: #212529;\n          font-weight: 600;\n        }\n\n        .purchase-form {\n          display: flex;\n          flex-direction: column;\n          gap: 16px;\n        }\n\n        .input-group {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .input-group label {\n          font-size: 0.875rem;\n          font-weight: 500;\n          color: #495057;\n        }\n\n        .input-group input {\n          padding: 10px 12px;\n          border: 1px solid #ced4da;\n          border-radius: 6px;\n          font-size: 1rem;\n          transition: border-color 0.2s;\n        }\n\n        .input-group input:focus {\n          border-color: #339af0;\n          outline: none;\n        }\n\n        .estimated-tokens {\n          background-color: #e9ecef;\n          padding: 12px;\n          border-radius: 6px;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          font-size: 0.875rem;\n        }\n\n        .estimated-tokens strong {\n          font-size: 1rem;\n          color: #2b8a3e;\n        }\n\n        .purchase-limits {\n          display: flex;\n          justify-content: space-between;\n          font-size: 0.75rem;\n          color: #868e96;\n          padding: 0 4px;\n        }\n\n        .purchase-button {\n          background-color: #339af0;\n          color: white;\n          border: none;\n          border-radius: 6px;\n          padding: 12px 16px;\n          font-size: 1rem;\n          font-weight: 500;\n          cursor: pointer;\n          transition: background-color 0.2s;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .purchase-button:hover:not(:disabled) {\n          background-color: #1c7ed6;\n        }\n\n        .purchase-button:disabled {\n          background-color: #adb5bd;\n          cursor: not-allowed;\n        }\n\n        /* 交易状态样式 */\n        .transaction-status {\n          padding: 12px;\n          border-radius: 6px;\n          margin-top: 16px;\n          text-align: center;\n        }\n\n        .transaction-status p {\n          margin: 0 0 8px 0;\n          font-weight: 500;\n        }\n\n        .transaction-status a {\n          color: #1c7ed6;\n          text-decoration: none;\n          font-size: 0.875rem;\n        }\n\n        .transaction-status a:hover {\n          text-decoration: underline;\n        }\n\n        .tx-pending {\n          background-color: #fff9db;\n          border: 1px solid #ffe066;\n          color: #e67700;\n        }\n\n        .tx-success {\n          background-color: #ebfbee;\n          border: 1px solid #8ce99a;\n          color: #2b8a3e;\n        }\n\n        .tx-failed {\n          background-color: #fff5f5;\n          border: 1px solid #ffc9c9;\n          color: #e03131;\n        }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default SMExchangeInfo;"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAw0BA;;;;;;WAAAA,QAAA;;;;;;;;yEAt0B2C;;;kCACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}