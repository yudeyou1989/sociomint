{"version":3,"names":["cov_209fdxxz27","actualCoverage","s","BOX_CONTRACT_ADDRESSES","f","CONTRACTS","CONTRACT_ADDRESSES","getBoxContractAddress","networkId","b","MAINNET","SM_TOKEN","SM_EXCHANGE","TESTNET","SM_TOKEN_TEST","LOCAL","token","process","env","NEXT_PUBLIC_SM_TOKEN_ADDRESS","exchange","NEXT_PUBLIC_SM_EXCHANGE_ADDRESS"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/constants/contracts.ts"],"sourcesContent":["// 宝箱系统合约地址\ninterface BoxContractAddresses {\n  [networkId: number]: string;\n}\n\nexport const BOX_CONTRACT_ADDRESSES: BoxContractAddresses = {\n  97: '0x5FbDB2315678afecb367f032d93F642f64180aa3', // BSC Testnet\n  56: '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318'  // BSC Mainnet\n}\n\n/**\n * 获取当前网络的宝箱合约地址\n * @param networkId 网络ID\n * @returns 宝箱合约地址\n */\nexport const getBoxContractAddress = (networkId: number): string => {\n  return BOX_CONTRACT_ADDRESSES[networkId] || BOX_CONTRACT_ADDRESSES[97]; // 默认返回测试网地址\n};\n\nexport const CONTRACTS = {\n  // 主网\n  MAINNET: {\n    SM_TOKEN: \"0x8A791620dd6260079BF849Dc5567aDC3F2FdC318\", // 生产环境SMToken合约地址\n    SM_EXCHANGE: \"0x9B73F7d66d4aa53B073A5178CCd5FB381052EfeA\", // 生产环境SMTokenExchange合约地址\n  },\n  // 测试网\n  TESTNET: {\n    SM_TOKEN: \"0xd7d7dd989642222B6f685aF0220dc0065F489ae0\", // SMToken测试网合约地址\n    SM_EXCHANGE: \"0xF0c4729f07d7B2F03E2E2F2feED36386Dc8bFb8E\", // SMTokenExchange测试网合约地址\n    SM_TOKEN_TEST: \"0xa1f5Fba244B0030bbc6fD115E0351a731521DfD9\", // SMToken_test测试网合约地址\n  },\n  // 本地开发环境\n  LOCAL: {\n    SM_TOKEN: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\", // SMToken本地合约地址\n    SM_EXCHANGE: \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\", // SMTokenExchange本地合约地址\n  }\n};\n\n// 导出合约地址常量，用于前端组件\nexport const CONTRACT_ADDRESSES = {\n  token: process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS || CONTRACTS.TESTNET.SM_TOKEN_TEST, // 使用测试代币\n  exchange: process.env.NEXT_PUBLIC_SM_EXCHANGE_ADDRESS || CONTRACTS.TESTNET.SM_EXCHANGE,\n};"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmBa;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;EAdAC,sBAAsB,WAAAA,CAAA;IAAA;IAAAH,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAtBC,sBAAA;;EAcAE,SAAS,WAAAA,CAAA;IAAA;IAAAL,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAATG,SAAA;;EAoBAC,kBAAkB,WAAAA,CAAA;IAAA;IAAAN,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAlBI,kBAAA;;EAxBAC,qBAAqB,WAAAA,CAAA;IAAA;IAAAP,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAArBK,qBAAA;;;AAVN,MAAMJ,sBAAA;AAAA;AAAA,CAAAH,cAAA,GAAAE,CAAA,OAA+C;EAC1D,IAAI;EACJ,IAAI,6CAA8C;AACpD;AAAA;AAAAF,cAAA,GAAAE,CAAA;AAOO,MAAMK,qBAAA,GAAyBC,SAAA;EAAA;EAAAR,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAE,CAAA;EACpC,OAAO,2BAAAF,cAAA,GAAAS,CAAA,UAAAN,sBAAsB,CAACK,SAAA,CAAU;EAAA;EAAA,CAAAR,cAAA,GAAAS,CAAA,UAAIN,sBAAsB,CAAC,GAAG,GAAE;AAC1E;AAEO,MAAME,SAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,QAAY;EACvB;EACAQ,OAAA,EAAS;IACPC,QAAA,EAAU;IACVC,WAAA,EAAa;EACf;EACA;EACAC,OAAA,EAAS;IACPF,QAAA,EAAU;IACVC,WAAA,EAAa;IACbE,aAAA,EAAe;EACjB;EACA;EACAC,KAAA,EAAO;IACLJ,QAAA,EAAU;IACVC,WAAA,EAAa;EACf;AACF;AAGO,MAAMN,kBAAA;AAAA;AAAA,CAAAN,cAAA,GAAAE,CAAA,QAAqB;EAChCc,KAAA;EAAO;EAAA,CAAAhB,cAAA,GAAAS,CAAA,UAAAQ,OAAA,CAAQC,GAAG,CAACC,4BAA4B;EAAA;EAAA,CAAAnB,cAAA,GAAAS,CAAA,UAAIJ,SAAA,CAAUQ,OAAO,CAACC,aAAa;EAClFM,QAAA;EAAU;EAAA,CAAApB,cAAA,GAAAS,CAAA,UAAAQ,OAAA,CAAQC,GAAG,CAACG,+BAA+B;EAAA;EAAA,CAAArB,cAAA,GAAAS,CAAA,UAAIJ,SAAA,CAAUQ,OAAO,CAACD,WAAW;AACxF","ignoreList":[]}