{"version":3,"names":["cov_asz2ysm6i","actualCoverage","s","PerformanceMark","f","PerformanceMonitor","getPerformanceMonitor","initWebVitals","constructor","metrics","observers","startTime","Date","now","window","b","initializeMonitoring","observeNavigationTiming","observeResourceTiming","observeLongTasks","observeLayoutShift","observeLargestContentfulPaint","observeFirstInputDelay","getNetworkInformation","observeMemoryUsage","performance","navigation","getEntriesByType","pageLoadTime","loadEventEnd","fetchStart","domContentLoaded","domContentLoadedEventEnd","ttfb","responseStart","firstPaint","responseEnd","observer","PerformanceObserver","list","entries","getEntries","totalResourceTime","resourceCount","forEach","entry","entryType","duration","resourceLoadTime","observe","entryTypes","push","console","warn","name","e","clsValue","hadRecentInput","value","cls","lastEntry","length","lcp","fid","processingStart","navigator","connection","connectionType","type","effectiveType","downlink","rtt","memory","memoryUsage","used","usedJSHeapSize","total","totalJSHeapSize","percentage","measureClickDelay","element","addEventListener","delay","clickDelay","measureScrollPerformance","lastScrollTime","frameCount","totalTime","measureFrame","currentTime","requestAnimationFrame","setInterval","scrollPerformance","getMetrics","sendMetrics","endpoint","fetch","method","headers","body","JSON","stringify","timestamp","userAgent","url","location","href","sessionDuration","error","cleanup","disconnect","performanceMonitor","callback","Promise","resolve","then","_interop_require_wildcard","require","getCLS","getFID","getFCP","getLCP","getTTFB","handleMetric","metric","log","gtag","Math","round","event_category","event_label","id","non_interaction","catch","start","mark","end","measure","getEntriesByName","clear","clearMarks","clearMeasures"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/performance.ts"],"sourcesContent":["/**\n * 性能监控工具\n * 提供页面性能监控、用户体验指标收集等功能\n */\n\n// Web Vitals 指标类型\ninterface WebVitalsMetric {\n  name: 'CLS' | 'FID' | 'FCP' | 'LCP' | 'TTFB';\n  value: number;\n  rating: 'good' | 'needs-improvement' | 'poor';\n  delta: number;\n  id: string;\n  navigationType: string;\n}\n\n// 性能指标接口\ninterface PerformanceMetrics {\n  // Core Web Vitals\n  cls?: number; // Cumulative Layout Shift\n  fid?: number; // First Input Delay\n  fcp?: number; // First Contentful Paint\n  lcp?: number; // Largest Contentful Paint\n  ttfb?: number; // Time to First Byte\n  \n  // 自定义指标\n  pageLoadTime?: number;\n  domContentLoaded?: number;\n  firstPaint?: number;\n  resourceLoadTime?: number;\n  \n  // 用户交互指标\n  clickDelay?: number;\n  scrollPerformance?: number;\n  \n  // 内存使用\n  memoryUsage?: {\n    used: number;\n    total: number;\n    percentage: number;\n  };\n  \n  // 网络信息\n  connectionType?: string;\n  effectiveType?: string;\n  downlink?: number;\n  rtt?: number;\n}\n\n// 性能监控类\nexport class PerformanceMonitor {\n  private metrics: PerformanceMetrics = {};\n  private observers: PerformanceObserver[] = [];\n  private startTime: number = Date.now();\n\n  constructor() {\n    if (typeof window !== 'undefined') {\n      this.initializeMonitoring();\n    }\n  }\n\n  /**\n   * 初始化性能监控\n   */\n  private initializeMonitoring(): void {\n    // 监控导航时间\n    this.observeNavigationTiming();\n    \n    // 监控资源加载时间\n    this.observeResourceTiming();\n    \n    // 监控长任务\n    this.observeLongTasks();\n    \n    // 监控布局偏移\n    this.observeLayoutShift();\n    \n    // 监控最大内容绘制\n    this.observeLargestContentfulPaint();\n    \n    // 监控首次输入延迟\n    this.observeFirstInputDelay();\n    \n    // 获取网络信息\n    this.getNetworkInformation();\n    \n    // 监控内存使用\n    this.observeMemoryUsage();\n  }\n\n  /**\n   * 监控导航时间\n   */\n  private observeNavigationTiming(): void {\n    if ('performance' in window && 'getEntriesByType' in performance) {\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n      \n      if (navigation) {\n        this.metrics.pageLoadTime = navigation.loadEventEnd - navigation.fetchStart;\n        this.metrics.domContentLoaded = navigation.domContentLoadedEventEnd - navigation.fetchStart;\n        this.metrics.ttfb = navigation.responseStart - navigation.fetchStart;\n        this.metrics.firstPaint = navigation.responseEnd - navigation.fetchStart;\n      }\n    }\n  }\n\n  /**\n   * 监控资源加载时间\n   */\n  private observeResourceTiming(): void {\n    if ('PerformanceObserver' in window) {\n      const observer = new PerformanceObserver((list) => {\n        const entries = list.getEntries();\n        let totalResourceTime = 0;\n        let resourceCount = 0;\n\n        entries.forEach((entry) => {\n          if (entry.entryType === 'resource') {\n            totalResourceTime += entry.duration;\n            resourceCount++;\n          }\n        });\n\n        if (resourceCount > 0) {\n          this.metrics.resourceLoadTime = totalResourceTime / resourceCount;\n        }\n      });\n\n      observer.observe({ entryTypes: ['resource'] });\n      this.observers.push(observer);\n    }\n  }\n\n  /**\n   * 监控长任务\n   */\n  private observeLongTasks(): void {\n    if ('PerformanceObserver' in window) {\n      try {\n        const observer = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach((entry) => {\n            console.warn('Long task detected:', {\n              duration: entry.duration,\n              startTime: entry.startTime,\n              name: entry.name\n            });\n          });\n        });\n\n        observer.observe({ entryTypes: ['longtask'] });\n        this.observers.push(observer);\n      } catch (e) {\n        // longtask 可能不被支持\n        console.warn('Long task monitoring not supported');\n      }\n    }\n  }\n\n  /**\n   * 监控布局偏移 (CLS)\n   */\n  private observeLayoutShift(): void {\n    if ('PerformanceObserver' in window) {\n      try {\n        let clsValue = 0;\n        const observer = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach((entry: any) => {\n            if (!entry.hadRecentInput) {\n              clsValue += entry.value;\n            }\n          });\n          this.metrics.cls = clsValue;\n        });\n\n        observer.observe({ entryTypes: ['layout-shift'] });\n        this.observers.push(observer);\n      } catch (e) {\n        console.warn('Layout shift monitoring not supported');\n      }\n    }\n  }\n\n  /**\n   * 监控最大内容绘制 (LCP)\n   */\n  private observeLargestContentfulPaint(): void {\n    if ('PerformanceObserver' in window) {\n      try {\n        const observer = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          const lastEntry = entries[entries.length - 1];\n          this.metrics.lcp = lastEntry.startTime;\n        });\n\n        observer.observe({ entryTypes: ['largest-contentful-paint'] });\n        this.observers.push(observer);\n      } catch (e) {\n        console.warn('LCP monitoring not supported');\n      }\n    }\n  }\n\n  /**\n   * 监控首次输入延迟 (FID)\n   */\n  private observeFirstInputDelay(): void {\n    if ('PerformanceObserver' in window) {\n      try {\n        const observer = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach((entry: any) => {\n            this.metrics.fid = entry.processingStart - entry.startTime;\n          });\n        });\n\n        observer.observe({ entryTypes: ['first-input'] });\n        this.observers.push(observer);\n      } catch (e) {\n        console.warn('FID monitoring not supported');\n      }\n    }\n  }\n\n  /**\n   * 获取网络信息\n   */\n  private getNetworkInformation(): void {\n    if ('navigator' in window && 'connection' in navigator) {\n      const connection = (navigator as any).connection;\n      this.metrics.connectionType = connection.type;\n      this.metrics.effectiveType = connection.effectiveType;\n      this.metrics.downlink = connection.downlink;\n      this.metrics.rtt = connection.rtt;\n    }\n  }\n\n  /**\n   * 监控内存使用\n   */\n  private observeMemoryUsage(): void {\n    if ('performance' in window && 'memory' in performance) {\n      const memory = (performance as any).memory;\n      this.metrics.memoryUsage = {\n        used: memory.usedJSHeapSize,\n        total: memory.totalJSHeapSize,\n        percentage: (memory.usedJSHeapSize / memory.totalJSHeapSize) * 100\n      };\n    }\n  }\n\n  /**\n   * 测量点击延迟\n   */\n  measureClickDelay(element: HTMLElement): void {\n    let startTime: number;\n    \n    element.addEventListener('mousedown', () => {\n      startTime = performance.now();\n    });\n    \n    element.addEventListener('click', () => {\n      if (startTime) {\n        const delay = performance.now() - startTime;\n        this.metrics.clickDelay = delay;\n      }\n    });\n  }\n\n  /**\n   * 测量滚动性能\n   */\n  measureScrollPerformance(): void {\n    let lastScrollTime = 0;\n    let frameCount = 0;\n    let totalTime = 0;\n\n    const measureFrame = () => {\n      const currentTime = performance.now();\n      if (lastScrollTime > 0) {\n        totalTime += currentTime - lastScrollTime;\n        frameCount++;\n      }\n      lastScrollTime = currentTime;\n    };\n\n    window.addEventListener('scroll', () => {\n      requestAnimationFrame(measureFrame);\n    });\n\n    // 每5秒计算一次平均滚动性能\n    setInterval(() => {\n      if (frameCount > 0) {\n        this.metrics.scrollPerformance = totalTime / frameCount;\n        frameCount = 0;\n        totalTime = 0;\n      }\n    }, 5000);\n  }\n\n  /**\n   * 获取当前性能指标\n   */\n  getMetrics(): PerformanceMetrics {\n    return { ...this.metrics };\n  }\n\n  /**\n   * 发送性能数据到服务器\n   */\n  async sendMetrics(endpoint: string = '/api/analytics/performance'): Promise<void> {\n    try {\n      const metrics = this.getMetrics();\n      \n      await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          metrics,\n          timestamp: Date.now(),\n          userAgent: navigator.userAgent,\n          url: window.location.href,\n          sessionDuration: Date.now() - this.startTime,\n        }),\n      });\n    } catch (error) {\n      console.error('Failed to send performance metrics:', error);\n    }\n  }\n\n  /**\n   * 清理监控器\n   */\n  cleanup(): void {\n    this.observers.forEach(observer => observer.disconnect());\n    this.observers = [];\n  }\n}\n\n// 全局性能监控实例\nlet performanceMonitor: PerformanceMonitor | null = null;\n\n/**\n * 获取性能监控实例\n */\nexport function getPerformanceMonitor(): PerformanceMonitor {\n  if (!performanceMonitor && typeof window !== 'undefined') {\n    performanceMonitor = new PerformanceMonitor();\n  }\n  return performanceMonitor!;\n}\n\n/**\n * Web Vitals 监控\n */\nexport function initWebVitals(callback?: (metric: WebVitalsMetric) => void): void {\n  if (typeof window === 'undefined') return;\n\n  // 动态导入 web-vitals 库\n  import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n    const handleMetric = (metric: WebVitalsMetric) => {\n      console.log('Web Vital:', metric);\n      callback?.(metric);\n      \n      // 发送到分析服务\n      if (typeof gtag !== 'undefined') {\n        gtag('event', metric.name, {\n          value: Math.round(metric.name === 'CLS' ? metric.value * 1000 : metric.value),\n          event_category: 'Web Vitals',\n          event_label: metric.id,\n          non_interaction: true,\n        });\n      }\n    };\n\n    getCLS(handleMetric);\n    getFID(handleMetric);\n    getFCP(handleMetric);\n    getLCP(handleMetric);\n    getTTFB(handleMetric);\n  }).catch(error => {\n    console.warn('Failed to load web-vitals:', error);\n  });\n}\n\n/**\n * 性能标记工具\n */\nexport const PerformanceMark = {\n  start(name: string): void {\n    if ('performance' in window && 'mark' in performance) {\n      performance.mark(`${name}-start`);\n    }\n  },\n\n  end(name: string): number | null {\n    if ('performance' in window && 'mark' in performance && 'measure' in performance) {\n      performance.mark(`${name}-end`);\n      performance.measure(name, `${name}-start`, `${name}-end`);\n      \n      const measure = performance.getEntriesByName(name)[0];\n      return measure ? measure.duration : null;\n    }\n    return null;\n  },\n\n  clear(name?: string): void {\n    if ('performance' in window) {\n      if (name) {\n        performance.clearMarks(`${name}-start`);\n        performance.clearMarks(`${name}-end`);\n        performance.clearMeasures(name);\n      } else {\n        performance.clearMarks();\n        performance.clearMeasures();\n      }\n    }\n  }\n};\n"],"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","ignoreList":[]}