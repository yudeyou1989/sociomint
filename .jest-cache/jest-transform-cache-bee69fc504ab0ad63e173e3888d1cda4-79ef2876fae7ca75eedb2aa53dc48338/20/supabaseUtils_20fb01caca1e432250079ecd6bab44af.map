{"version":3,"names":["checkSupabaseConnection","cov_20r483ngjn","f","s","testSupabaseQuery","data","error","_supabaseClient","supabase","from","select","single","b","code","authError","auth","getSession","connected","message","Error","String","tableName","count","limit","success"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/supabaseUtils.ts"],"sourcesContent":["import { supabase } from './supabaseClient';\n\n/**\n * 检查Supabase连接状态\n * @returns 包含连接状态和错误信息的对象\n */\nexport async function checkSupabaseConnection(): Promise<{ connected: boolean; error?: string }> {\n  try {\n    // 尝试执行一个简单的查询来检查连接状态\n    const { data, error } = await supabase\n      .from('health_check')\n      .select('count')\n      .single();\n\n    // 如果查询失败但错误信息表明是表不存在的问题，则可能是数据库连接正常但表不存在\n    if (error && error.code === '42P01') {\n      // 尝试另一个操作，例如查询auth.users\n      const { error: authError } = await supabase.auth.getSession();\n      \n      if (!authError) {\n        return { connected: true };\n      }\n      \n      return { \n        connected: false, \n        error: `Supabase已连接，但health_check表不存在，认证API错误: ${authError.message}` \n      };\n    }\n    \n    // 如果有其他错误\n    if (error) {\n      return { \n        connected: false, \n        error: `连接错误: ${error.message}` \n      };\n    }\n    \n    return { connected: true };\n  } catch (error) {\n    return { \n      connected: false, \n      error: `未预期的错误: ${error instanceof Error ? error.message : String(error)}` \n    };\n  }\n}\n\n/**\n * 执行简单查询测试Supabase\n * @param tableName 表名\n * @returns 查询结果和状态\n */\nexport async function testSupabaseQuery(tableName: string): Promise<{ \n  success: boolean; \n  data?: any; \n  error?: string;\n  count?: number;\n}> {\n  try {\n    // 尝试查询指定表的数量\n    const { data, error, count } = await supabase\n      .from(tableName)\n      .select('*', { count: 'exact' })\n      .limit(1);\n    \n    if (error) {\n      return { \n        success: false, \n        error: `查询错误: ${error.message}` \n      };\n    }\n    \n    return { \n      success: true, \n      data, \n      count \n    };\n  } catch (error) {\n    return { \n      success: false, \n      error: `未预期的错误: ${error instanceof Error ? error.message : String(error)}` \n    };\n  }\n} "],"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","ignoreList":[]}