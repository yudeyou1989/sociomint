{"version":3,"names":["cov_2928qlgykh","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","POST","request","body","json","events","environment","timestamp","Array","isArray","_server","NextResponse","error","status","event","processMonitoringEvent","success","processed","length","Date","now","console","isErrorEvent","processErrorEvent","isPerformanceEvent","processPerformanceEvent","isUserEvent","processUserEvent","errorData","message","stack","url","userAgent","userId","sessionId","buildId","process","env","SENTRY_DSN","shouldStoreError","storeErrorToDatabase","isCriticalError","sendErrorAlert","performanceData","value","unit","tags","log","PERFORMANCE_MONITORING_ENDPOINT","isPerformanceIssue","handlePerformanceIssue","userEventData","action","category","label","properties","ANALYTICS_ENDPOINT","updateUserBehaviorStats","componentStack","ignoredErrors","some","ignored","includes","criticalKeywords","keyword","toLowerCase","thresholds","page_load_time","dom_content_loaded","resource_load_time","threshold","SLACK_WEBHOOK_URL","fetch","method","headers","JSON","stringify","text","attachments","color","fields","title","short","toISOString","warn","PERFORMANCE_ALERT_WEBHOOK","data"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/app/api/monitoring/route.ts"],"sourcesContent":["/**\n * 监控数据收集API\n * 接收前端发送的错误、性能、用户行为数据\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\n\n// 移除动态配置以支持静态导出\n// // export const dynamic = 'force-dynamic';\n\ninterface MonitoringEvent {\n  type: 'error' | 'performance' | 'user_event';\n  data: any;\n  timestamp: number;\n  sessionId: string;\n  userId?: string;\n  environment: string;\n}\n\n/**\n * 接收监控数据\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { events, environment, timestamp } = body;\n\n    if (!events || !Array.isArray(events)) {\n      return NextResponse.json(\n        { error: 'Invalid events data' },\n        { status: 400 }\n      );\n    }\n\n    // 处理每个事件\n    for (const event of events) {\n      await processMonitoringEvent(event, environment);\n    }\n\n    return NextResponse.json({\n      success: true,\n      processed: events.length,\n      timestamp: Date.now(),\n    });\n\n  } catch (error) {\n    console.error('Error processing monitoring data:', error);\n    \n    return NextResponse.json(\n      { error: 'Failed to process monitoring data' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * 处理单个监控事件\n */\nasync function processMonitoringEvent(event: any, environment: string): Promise<void> {\n  try {\n    // 根据事件类型进行不同处理\n    if (isErrorEvent(event)) {\n      await processErrorEvent(event, environment);\n    } else if (isPerformanceEvent(event)) {\n      await processPerformanceEvent(event, environment);\n    } else if (isUserEvent(event)) {\n      await processUserEvent(event, environment);\n    }\n  } catch (error) {\n    console.error('Error processing individual event:', error);\n  }\n}\n\n/**\n * 处理错误事件\n */\nasync function processErrorEvent(event: any, environment: string): Promise<void> {\n  const errorData = {\n    message: event.message,\n    stack: event.stack,\n    url: event.url,\n    userAgent: event.userAgent,\n    timestamp: event.timestamp,\n    userId: event.userId,\n    sessionId: event.sessionId,\n    environment,\n    buildId: event.buildId,\n  };\n\n  // 记录到控制台\n  console.error('Frontend Error:', errorData);\n\n  // 这里可以发送到外部监控服务\n  // 例如：Sentry, LogRocket, DataDog 等\n  if (process.env.SENTRY_DSN) {\n    // await sendToSentry(errorData);\n  }\n\n  // 存储到数据库（如果需要）\n  if (shouldStoreError(errorData)) {\n    await storeErrorToDatabase(errorData);\n  }\n\n  // 发送告警（严重错误）\n  if (isCriticalError(errorData)) {\n    await sendErrorAlert(errorData);\n  }\n}\n\n/**\n * 处理性能事件\n */\nasync function processPerformanceEvent(event: any, environment: string): Promise<void> {\n  const performanceData = {\n    name: event.name,\n    value: event.value,\n    unit: event.unit,\n    timestamp: event.timestamp,\n    tags: event.tags,\n    environment,\n  };\n\n  // 记录性能指标\n  console.log('Performance Metric:', performanceData);\n\n  // 发送到性能监控服务\n  if (process.env.PERFORMANCE_MONITORING_ENDPOINT) {\n    // await sendToPerformanceService(performanceData);\n  }\n\n  // 检查性能阈值\n  if (isPerformanceIssue(performanceData)) {\n    await handlePerformanceIssue(performanceData);\n  }\n}\n\n/**\n * 处理用户事件\n */\nasync function processUserEvent(event: any, environment: string): Promise<void> {\n  const userEventData = {\n    type: event.type,\n    action: event.action,\n    category: event.category,\n    label: event.label,\n    value: event.value,\n    properties: event.properties,\n    timestamp: event.timestamp,\n    userId: event.userId,\n    sessionId: event.sessionId,\n    environment,\n  };\n\n  // 记录用户行为\n  console.log('User Event:', userEventData);\n\n  // 发送到分析服务\n  if (process.env.ANALYTICS_ENDPOINT) {\n    // await sendToAnalyticsService(userEventData);\n  }\n\n  // 更新用户行为统计\n  await updateUserBehaviorStats(userEventData);\n}\n\n/**\n * 判断是否为错误事件\n */\nfunction isErrorEvent(event: any): boolean {\n  return event.message && (event.stack || event.componentStack);\n}\n\n/**\n * 判断是否为性能事件\n */\nfunction isPerformanceEvent(event: any): boolean {\n  return event.name && typeof event.value === 'number' && event.unit;\n}\n\n/**\n * 判断是否为用户事件\n */\nfunction isUserEvent(event: any): boolean {\n  return event.type && event.action && event.category;\n}\n\n/**\n * 判断是否应该存储错误\n */\nfunction shouldStoreError(errorData: any): boolean {\n  // 过滤掉一些不重要的错误\n  const ignoredErrors = [\n    'Script error',\n    'Non-Error promise rejection captured',\n    'ResizeObserver loop limit exceeded',\n  ];\n\n  return !ignoredErrors.some(ignored => \n    errorData.message.includes(ignored)\n  );\n}\n\n/**\n * 判断是否为严重错误\n */\nfunction isCriticalError(errorData: any): boolean {\n  const criticalKeywords = [\n    'ChunkLoadError',\n    'TypeError: Cannot read property',\n    'ReferenceError',\n    'wallet',\n    'transaction',\n    'contract',\n  ];\n\n  return criticalKeywords.some(keyword => \n    errorData.message.toLowerCase().includes(keyword.toLowerCase())\n  );\n}\n\n/**\n * 判断是否为性能问题\n */\nfunction isPerformanceIssue(performanceData: any): boolean {\n  const thresholds = {\n    page_load_time: 3000, // 3秒\n    dom_content_loaded: 2000, // 2秒\n    resource_load_time: 1000, // 1秒\n  };\n\n  const threshold = thresholds[performanceData.name as keyof typeof thresholds];\n  return threshold && performanceData.value > threshold;\n}\n\n/**\n * 存储错误到数据库\n */\nasync function storeErrorToDatabase(errorData: any): Promise<void> {\n  // 这里可以存储到 Supabase 或其他数据库\n  try {\n    // const { error } = await supabase\n    //   .from('error_logs')\n    //   .insert([errorData]);\n    \n    // if (error) throw error;\n  } catch (error) {\n    console.error('Failed to store error to database:', error);\n  }\n}\n\n/**\n * 发送错误告警\n */\nasync function sendErrorAlert(errorData: any): Promise<void> {\n  // 这里可以发送到 Slack、Discord、邮件等\n  try {\n    if (process.env.SLACK_WEBHOOK_URL) {\n      await fetch(process.env.SLACK_WEBHOOK_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          text: `🚨 Critical Error in ${errorData.environment}`,\n          attachments: [{\n            color: 'danger',\n            fields: [\n              { title: 'Message', value: errorData.message, short: false },\n              { title: 'URL', value: errorData.url, short: true },\n              { title: 'User Agent', value: errorData.userAgent, short: true },\n              { title: 'Timestamp', value: new Date(errorData.timestamp).toISOString(), short: true },\n            ],\n          }],\n        }),\n      });\n    }\n  } catch (error) {\n    console.error('Failed to send error alert:', error);\n  }\n}\n\n/**\n * 处理性能问题\n */\nasync function handlePerformanceIssue(performanceData: any): Promise<void> {\n  console.warn('Performance Issue Detected:', performanceData);\n  \n  // 这里可以触发性能优化建议或告警\n  if (process.env.PERFORMANCE_ALERT_WEBHOOK) {\n    try {\n      await fetch(process.env.PERFORMANCE_ALERT_WEBHOOK, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          type: 'performance_issue',\n          data: performanceData,\n          timestamp: Date.now(),\n        }),\n      });\n    } catch (error) {\n      console.error('Failed to send performance alert:', error);\n    }\n  }\n}\n\n/**\n * 更新用户行为统计\n */\nasync function updateUserBehaviorStats(userEventData: any): Promise<void> {\n  // 这里可以更新用户行为统计数据\n  try {\n    // 例如：页面浏览量、点击热力图、用户路径分析等\n    if (userEventData.type === 'view') {\n      // 更新页面浏览统计\n    } else if (userEventData.type === 'click') {\n      // 更新点击统计\n    } else if (userEventData.type === 'transaction') {\n      // 更新交易统计\n    }\n  } catch (error) {\n    console.error('Failed to update user behavior stats:', error);\n  }\n}\n"],"mappings":"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","ignoreList":[]}