694b209d5301a0168cbfb65b8d05d51c
'use client';
"use strict";

/* istanbul ignore next */
function cov_n04x43rcn() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useSMToken.ts";
  var hash = "e929309af7e15239f71f10acb9eb64333746eed7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useSMToken.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 26
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "6": {
        start: {
          line: 16,
          column: 37
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "7": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 79
        }
      },
      "8": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "9": {
        start: {
          line: 28,
          column: 34
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "10": {
        start: {
          line: 37,
          column: 55
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "11": {
        start: {
          line: 49,
          column: 36
        },
        end: {
          line: 60,
          column: 6
        }
      },
      "12": {
        start: {
          line: 62,
          column: 157
        },
        end: {
          line: 62,
          column: 187
        }
      },
      "13": {
        start: {
          line: 64,
          column: 85
        },
        end: {
          line: 66,
          column: 6
        }
      },
      "14": {
        start: {
          line: 68,
          column: 152
        },
        end: {
          line: 68,
          column: 182
        }
      },
      "15": {
        start: {
          line: 70,
          column: 83
        },
        end: {
          line: 72,
          column: 6
        }
      },
      "16": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useSMToken",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 19
          }
        },
        loc: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 15
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 14
          },
          end: {
            line: 43,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 21
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 45,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 45,
            column: 32
          }
        }, {
          start: {
            line: 45,
            column: 36
          },
          end: {
            line: 45,
            column: 45
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 14
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 21
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 32
          }
        }, {
          start: {
            line: 58,
            column: 36
          },
          end: {
            line: 58,
            column: 45
          }
        }],
        line: 58
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 26
          },
          end: {
            line: 83,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 26
          },
          end: {
            line: 83,
            column: 42
          }
        }, {
          start: {
            line: 83,
            column: 46
          },
          end: {
            line: 83,
            column: 67
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 84,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 84,
            column: 52
          }
        }, {
          start: {
            line: 84,
            column: 56
          },
          end: {
            line: 84,
            column: 79
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 40
          }
        }, {
          start: {
            line: 88,
            column: 44
          },
          end: {
            line: 88,
            column: 64
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 50
          }
        }, {
          start: {
            line: 89,
            column: 54
          },
          end: {
            line: 89,
            column: 76
          }
        }],
        line: 89
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/hooks/useSMToken.ts"],
      sourcesContent: ["'use client';\n\nimport { useAccount, useReadContract, useWriteContract, useWaitForTransactionReceipt } from 'wagmi';\nimport { CONTRACT_ADDRESSES, SM_TOKEN_ABI } from '@/config/contracts';\nimport { keccak256, toBytes } from 'viem';\n\nexport function useSMToken() {\n  const { address, isConnected } = useAccount();\n\n  // \u5B89\u5168\u5730\u8BA1\u7B97\u89D2\u8272\u54C8\u5E0C\uFF0C\u907F\u514D\u786C\u7F16\u7801\n  const MINTER_ROLE = keccak256(toBytes('MINTER_ROLE'));\n\n  // \u83B7\u53D6\u4EE3\u5E01\u4FE1\u606F\n  const { data: tokenName } = useReadContract({\n    address: CONTRACT_ADDRESSES.token as `0x${string}`,\n    abi: SM_TOKEN_ABI,\n    functionName: 'name',\n    query: { enabled: isConnected },\n  });\n\n  const { data: tokenSymbol } = useReadContract({\n    address: CONTRACT_ADDRESSES.token as `0x${string}`,\n    abi: SM_TOKEN_ABI,\n    functionName: 'symbol',\n    query: { enabled: isConnected },\n  });\n\n  // \u83B7\u53D6\u7528\u6237\u4F59\u989D\n  const { data: balance, refetch: refetchBalance } = useReadContract({\n    address: CONTRACT_ADDRESSES.token as `0x${string}`,\n    abi: SM_TOKEN_ABI,\n    functionName: 'balanceOf',\n    args: address ? [address] : undefined,\n    query: { enabled: isConnected && !!address },\n  });\n\n  // \u68C0\u67E5\u7528\u6237\u89D2\u8272\n  const { data: hasMinterRole } = useReadContract({\n    address: CONTRACT_ADDRESSES.token as `0x${string}`,\n    abi: SM_TOKEN_ABI,\n    functionName: 'hasRole',\n    args: address ? [MINTER_ROLE, address] : undefined,\n    query: { enabled: isConnected && !!address },\n  });\n\n  // \u5B89\u6392\u94F8\u5E01\u51FD\u6570\n  const {\n    data: scheduleMintData,\n    writeContract: scheduleMint,\n    isPending: isSchedulingMint,\n    isSuccess: isScheduleMintSuccess,\n    error: scheduleMintError\n  } = useWriteContract();\n\n  // \u7B49\u5F85\u94F8\u5E01\u4EA4\u6613\u786E\u8BA4\n  const {\n    isLoading: isScheduleMintPending,\n    isSuccess: isScheduleMintConfirmed\n  } = useWaitForTransactionReceipt({\n    hash: scheduleMintData,\n  });\n\n  // \u6267\u884C\u94F8\u5E01\u51FD\u6570\n  const {\n    data: executeMintData,\n    writeContract: executeMint,\n    isPending: isExecutingMint,\n    isSuccess: isExecuteMintSuccess,\n    error: executeMintError\n  } = useWriteContract();\n\n  // \u7B49\u5F85\u6267\u884C\u94F8\u5E01\u4EA4\u6613\u786E\u8BA4\n  const {\n    isLoading: isExecuteMintPending,\n    isSuccess: isExecuteMintConfirmed\n  } = useWaitForTransactionReceipt({\n    hash: executeMintData,\n  });\n\n  return {\n    // \u4EE3\u5E01\u4FE1\u606F\n    tokenName,\n    tokenSymbol,\n    balance,\n    refetchBalance,\n\n    // \u7528\u6237\u89D2\u8272\n    hasMinterRole,\n\n    // \u94F8\u5E01\u529F\u80FD\n    scheduleMint,\n    isSchedulingMint: isSchedulingMint || isScheduleMintPending,\n    isScheduleMintSuccess: isScheduleMintSuccess && isScheduleMintConfirmed,\n    scheduleMintError,\n    scheduleMintTxHash: scheduleMintData,\n\n    executeMint,\n    isExecutingMint: isExecutingMint || isExecuteMintPending,\n    isExecuteMintSuccess: isExecuteMintSuccess && isExecuteMintConfirmed,\n    executeMintError,\n    executeMintTxHash: executeMintData,\n\n    // \u8FDE\u63A5\u72B6\u6001\n    isConnected,\n    address\n  };\n}\n"],
      names: ["useSMToken", "address", "isConnected", "useAccount", "MINTER_ROLE", "keccak256", "toBytes", "data", "tokenName", "useReadContract", "CONTRACT_ADDRESSES", "token", "abi", "SM_TOKEN_ABI", "functionName", "query", "enabled", "tokenSymbol", "balance", "refetch", "refetchBalance", "args", "undefined", "hasMinterRole", "scheduleMintData", "writeContract", "scheduleMint", "isPending", "isSchedulingMint", "isSuccess", "isScheduleMintSuccess", "error", "scheduleMintError", "useWriteContract", "isLoading", "isScheduleMintPending", "isScheduleMintConfirmed", "useWaitForTransactionReceipt", "hash", "executeMintData", "executeMint", "isExecutingMint", "isExecuteMintSuccess", "executeMintError", "isExecuteMintPending", "isExecuteMintConfirmed", "scheduleMintTxHash", "executeMintTxHash"],
      mappings: "AAAA;;;;;+BAMgBA;;;eAAAA;;;uBAJ4E;2BAC3C;sBACd;AAE5B,SAASA;IACd,MAAM,EAAEC,OAAO,EAAEC,WAAW,EAAE,GAAGC,IAAAA,iBAAU;IAE3C,kBAAkB;IAClB,MAAMC,cAAcC,IAAAA,eAAS,EAACC,IAAAA,aAAO,EAAC;IAEtC,SAAS;IACT,MAAM,EAAEC,MAAMC,SAAS,EAAE,GAAGC,IAAAA,sBAAe,EAAC;QAC1CR,SAASS,6BAAkB,CAACC,KAAK;QACjCC,KAAKC,uBAAY;QACjBC,cAAc;QACdC,OAAO;YAAEC,SAASd;QAAY;IAChC;IAEA,MAAM,EAAEK,MAAMU,WAAW,EAAE,GAAGR,IAAAA,sBAAe,EAAC;QAC5CR,SAASS,6BAAkB,CAACC,KAAK;QACjCC,KAAKC,uBAAY;QACjBC,cAAc;QACdC,OAAO;YAAEC,SAASd;QAAY;IAChC;IAEA,SAAS;IACT,MAAM,EAAEK,MAAMW,OAAO,EAAEC,SAASC,cAAc,EAAE,GAAGX,IAAAA,sBAAe,EAAC;QACjER,SAASS,6BAAkB,CAACC,KAAK;QACjCC,KAAKC,uBAAY;QACjBC,cAAc;QACdO,MAAMpB,UAAU;YAACA;SAAQ,GAAGqB;QAC5BP,OAAO;YAAEC,SAASd,eAAe,CAAC,CAACD;QAAQ;IAC7C;IAEA,SAAS;IACT,MAAM,EAAEM,MAAMgB,aAAa,EAAE,GAAGd,IAAAA,sBAAe,EAAC;QAC9CR,SAASS,6BAAkB,CAACC,KAAK;QACjCC,KAAKC,uBAAY;QACjBC,cAAc;QACdO,MAAMpB,UAAU;YAACG;YAAaH;SAAQ,GAAGqB;QACzCP,OAAO;YAAEC,SAASd,eAAe,CAAC,CAACD;QAAQ;IAC7C;IAEA,SAAS;IACT,MAAM,EACJM,MAAMiB,gBAAgB,EACtBC,eAAeC,YAAY,EAC3BC,WAAWC,gBAAgB,EAC3BC,WAAWC,qBAAqB,EAChCC,OAAOC,iBAAiB,EACzB,GAAGC,IAAAA,uBAAgB;IAEpB,WAAW;IACX,MAAM,EACJC,WAAWC,qBAAqB,EAChCN,WAAWO,uBAAuB,EACnC,GAAGC,IAAAA,mCAA4B,EAAC;QAC/BC,MAAMd;IACR;IAEA,SAAS;IACT,MAAM,EACJjB,MAAMgC,eAAe,EACrBd,eAAee,WAAW,EAC1Bb,WAAWc,eAAe,EAC1BZ,WAAWa,oBAAoB,EAC/BX,OAAOY,gBAAgB,EACxB,GAAGV,IAAAA,uBAAgB;IAEpB,aAAa;IACb,MAAM,EACJC,WAAWU,oBAAoB,EAC/Bf,WAAWgB,sBAAsB,EAClC,GAAGR,IAAAA,mCAA4B,EAAC;QAC/BC,MAAMC;IACR;IAEA,OAAO;QACL,OAAO;QACP/B;QACAS;QACAC;QACAE;QAEA,OAAO;QACPG;QAEA,OAAO;QACPG;QACAE,kBAAkBA,oBAAoBO;QACtCL,uBAAuBA,yBAAyBM;QAChDJ;QACAc,oBAAoBtB;QAEpBgB;QACAC,iBAAiBA,mBAAmBG;QACpCF,sBAAsBA,wBAAwBG;QAC9CF;QACAI,mBAAmBR;QAEnB,OAAO;QACPrC;QACAD;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e929309af7e15239f71f10acb9eb64333746eed7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_n04x43rcn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_n04x43rcn();
cov_n04x43rcn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_n04x43rcn().s[1]++;
Object.defineProperty(exports, "useSMToken", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_n04x43rcn().f[0]++;
    cov_n04x43rcn().s[2]++;
    return useSMToken;
  }
});
const _wagmi =
/* istanbul ignore next */
(cov_n04x43rcn().s[3]++, require("wagmi"));
const _contracts =
/* istanbul ignore next */
(cov_n04x43rcn().s[4]++, require("../config/contracts"));
const _viem =
/* istanbul ignore next */
(cov_n04x43rcn().s[5]++, require("viem"));
function useSMToken() {
  /* istanbul ignore next */
  cov_n04x43rcn().f[1]++;
  const {
    address,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[6]++, (0, _wagmi.useAccount)());
  // 安全地计算角色哈希，避免硬编码
  const MINTER_ROLE =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[7]++, (0, _viem.keccak256)((0, _viem.toBytes)('MINTER_ROLE')));
  // 获取代币信息
  const {
    data: tokenName
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[8]++, (0, _wagmi.useReadContract)({
    address: _contracts.CONTRACT_ADDRESSES.token,
    abi: _contracts.SM_TOKEN_ABI,
    functionName: 'name',
    query: {
      enabled: isConnected
    }
  }));
  const {
    data: tokenSymbol
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[9]++, (0, _wagmi.useReadContract)({
    address: _contracts.CONTRACT_ADDRESSES.token,
    abi: _contracts.SM_TOKEN_ABI,
    functionName: 'symbol',
    query: {
      enabled: isConnected
    }
  }));
  // 获取用户余额
  const {
    data: balance,
    refetch: refetchBalance
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[10]++, (0, _wagmi.useReadContract)({
    address: _contracts.CONTRACT_ADDRESSES.token,
    abi: _contracts.SM_TOKEN_ABI,
    functionName: 'balanceOf',
    args: address ?
    /* istanbul ignore next */
    (cov_n04x43rcn().b[0][0]++, [address]) :
    /* istanbul ignore next */
    (cov_n04x43rcn().b[0][1]++, undefined),
    query: {
      enabled:
      /* istanbul ignore next */
      (cov_n04x43rcn().b[1][0]++, isConnected) &&
      /* istanbul ignore next */
      (cov_n04x43rcn().b[1][1]++, !!address)
    }
  }));
  // 检查用户角色
  const {
    data: hasMinterRole
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[11]++, (0, _wagmi.useReadContract)({
    address: _contracts.CONTRACT_ADDRESSES.token,
    abi: _contracts.SM_TOKEN_ABI,
    functionName: 'hasRole',
    args: address ?
    /* istanbul ignore next */
    (cov_n04x43rcn().b[2][0]++, [MINTER_ROLE, address]) :
    /* istanbul ignore next */
    (cov_n04x43rcn().b[2][1]++, undefined),
    query: {
      enabled:
      /* istanbul ignore next */
      (cov_n04x43rcn().b[3][0]++, isConnected) &&
      /* istanbul ignore next */
      (cov_n04x43rcn().b[3][1]++, !!address)
    }
  }));
  // 安排铸币函数
  const {
    data: scheduleMintData,
    writeContract: scheduleMint,
    isPending: isSchedulingMint,
    isSuccess: isScheduleMintSuccess,
    error: scheduleMintError
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[12]++, (0, _wagmi.useWriteContract)());
  // 等待铸币交易确认
  const {
    isLoading: isScheduleMintPending,
    isSuccess: isScheduleMintConfirmed
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[13]++, (0, _wagmi.useWaitForTransactionReceipt)({
    hash: scheduleMintData
  }));
  // 执行铸币函数
  const {
    data: executeMintData,
    writeContract: executeMint,
    isPending: isExecutingMint,
    isSuccess: isExecuteMintSuccess,
    error: executeMintError
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[14]++, (0, _wagmi.useWriteContract)());
  // 等待执行铸币交易确认
  const {
    isLoading: isExecuteMintPending,
    isSuccess: isExecuteMintConfirmed
  } =
  /* istanbul ignore next */
  (cov_n04x43rcn().s[15]++, (0, _wagmi.useWaitForTransactionReceipt)({
    hash: executeMintData
  }));
  /* istanbul ignore next */
  cov_n04x43rcn().s[16]++;
  return {
    // 代币信息
    tokenName,
    tokenSymbol,
    balance,
    refetchBalance,
    // 用户角色
    hasMinterRole,
    // 铸币功能
    scheduleMint,
    isSchedulingMint:
    /* istanbul ignore next */
    (cov_n04x43rcn().b[4][0]++, isSchedulingMint) ||
    /* istanbul ignore next */
    (cov_n04x43rcn().b[4][1]++, isScheduleMintPending),
    isScheduleMintSuccess:
    /* istanbul ignore next */
    (cov_n04x43rcn().b[5][0]++, isScheduleMintSuccess) &&
    /* istanbul ignore next */
    (cov_n04x43rcn().b[5][1]++, isScheduleMintConfirmed),
    scheduleMintError,
    scheduleMintTxHash: scheduleMintData,
    executeMint,
    isExecutingMint:
    /* istanbul ignore next */
    (cov_n04x43rcn().b[6][0]++, isExecutingMint) ||
    /* istanbul ignore next */
    (cov_n04x43rcn().b[6][1]++, isExecuteMintPending),
    isExecuteMintSuccess:
    /* istanbul ignore next */
    (cov_n04x43rcn().b[7][0]++, isExecuteMintSuccess) &&
    /* istanbul ignore next */
    (cov_n04x43rcn().b[7][1]++, isExecuteMintConfirmed),
    executeMintError,
    executeMintTxHash: executeMintData,
    // 连接状态
    isConnected,
    address
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,