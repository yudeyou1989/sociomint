4610d3eebc09cfd8db7f4264018c8e61
'use client';
"use strict";

/* istanbul ignore next */
function cov_i8fk2g5om() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/components/DailyReward/DailyFlowerCard.tsx";
  var hash = "8f7bcf36d187e789c12dbbe58f74fc175e1bb69a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/components/DailyReward/DailyFlowerCard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "7": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 83
        }
      },
      "8": {
        start: {
          line: 17,
          column: 35
        },
        end: {
          line: 17,
          column: 97
        }
      },
      "9": {
        start: {
          line: 18,
          column: 34
        },
        end: {
          line: 18,
          column: 95
        }
      },
      "10": {
        start: {
          line: 19,
          column: 30
        },
        end: {
          line: 19,
          column: 87
        }
      },
      "11": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 81
        }
      },
      "12": {
        start: {
          line: 21,
          column: 38
        },
        end: {
          line: 21,
          column: 103
        }
      },
      "13": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 83
        }
      },
      "14": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 87
        }
      },
      "15": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 24,
          column: 89
        }
      },
      "16": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 85
        }
      },
      "17": {
        start: {
          line: 26,
          column: 40
        },
        end: {
          line: 26,
          column: 107
        }
      },
      "18": {
        start: {
          line: 27,
          column: 36
        },
        end: {
          line: 27,
          column: 105
        }
      },
      "19": {
        start: {
          line: 28,
          column: 44
        },
        end: {
          line: 28,
          column: 121
        }
      },
      "20": {
        start: {
          line: 29,
          column: 31
        },
        end: {
          line: 29,
          column: 95
        }
      },
      "21": {
        start: {
          line: 30,
          column: 35
        },
        end: {
          line: 30,
          column: 103
        }
      },
      "22": {
        start: {
          line: 31,
          column: 32
        },
        end: {
          line: 31,
          column: 97
        }
      },
      "23": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 31
        }
      },
      "24": {
        start: {
          line: 33,
          column: 14
        },
        end: {
          line: 33,
          column: 29
        }
      },
      "25": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 34,
          column: 49
        }
      },
      "26": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "27": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 45
        }
      },
      "28": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "29": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 51
        }
      },
      "30": {
        start: {
          line: 43,
          column: 39
        },
        end: {
          line: 43,
          column: 51
        }
      },
      "31": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "32": {
        start: {
          line: 45,
          column: 27
        },
        end: {
          line: 45,
          column: 40
        }
      },
      "33": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 20
        }
      },
      "34": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 66
        }
      },
      "35": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "36": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 19
        }
      },
      "37": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "38": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 10
        }
      },
      "39": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 53
        }
      },
      "40": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "41": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "42": {
        start: {
          line: 63,
          column: 17
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "43": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 88
        }
      },
      "44": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "45": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "46": {
        start: {
          line: 69,
          column: 23
        },
        end: {
          line: 69,
          column: 95
        }
      },
      "47": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "48": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 57
        }
      },
      "49": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 39
        }
      },
      "50": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 25
        }
      },
      "51": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "52": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 31
        }
      },
      "53": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 18
        }
      },
      "54": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 527,
          column: 1
        }
      },
      "55": {
        start: {
          line: 84,
          column: 18
        },
        end: {
          line: 84,
          column: 53
        }
      },
      "56": {
        start: {
          line: 85,
          column: 37
        },
        end: {
          line: 85,
          column: 61
        }
      },
      "57": {
        start: {
          line: 87,
          column: 38
        },
        end: {
          line: 87,
          column: 65
        }
      },
      "58": {
        start: {
          line: 88,
          column: 40
        },
        end: {
          line: 88,
          column: 63
        }
      },
      "59": {
        start: {
          line: 90,
          column: 80
        },
        end: {
          line: 90,
          column: 127
        }
      },
      "60": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "61": {
        start: {
          line: 93,
          column: 25
        },
        end: {
          line: 95,
          column: 17
        }
      },
      "62": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 44
        }
      },
      "63": {
        start: {
          line: 94,
          column: 34
        },
        end: {
          line: 94,
          column: 42
        }
      },
      "64": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 43
        }
      },
      "65": {
        start: {
          line: 96,
          column: 19
        },
        end: {
          line: 96,
          column: 42
        }
      },
      "66": {
        start: {
          line: 99,
          column: 46
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "67": {
        start: {
          line: 113,
          column: 35
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "68": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "69": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 65
        }
      },
      "70": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 19
        }
      },
      "71": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "72": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 72
        }
      },
      "73": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 19
        }
      },
      "74": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "75": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 75
        }
      },
      "76": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 19
        }
      },
      "77": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "78": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 31
        }
      },
      "79": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 128,
          column: 48
        }
      },
      "80": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 74
        }
      },
      "81": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 74
        }
      },
      "82": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 22
        }
      },
      "83": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 62
        }
      },
      "84": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 86
        }
      },
      "85": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 32
        }
      },
      "86": {
        start: {
          line: 142,
          column: 29
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "87": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 38
        }
      },
      "88": {
        start: {
          line: 143,
          column: 28
        },
        end: {
          line: 143,
          column: 38
        }
      },
      "89": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 144,
          column: 37
        }
      },
      "90": {
        start: {
          line: 145,
          column: 26
        },
        end: {
          line: 145,
          column: 45
        }
      },
      "91": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "92": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 48
        }
      },
      "93": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 59
        }
      },
      "94": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "95": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 49
        }
      },
      "96": {
        start: {
          line: 153,
          column: 40
        },
        end: {
          line: 153,
          column: 49
        }
      },
      "97": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 86
        }
      },
      "98": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 33
        }
      },
      "99": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 60
        }
      },
      "100": {
        start: {
          line: 159,
          column: 34
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "101": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "102": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "103": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "104": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 174,
          column: 15
        }
      },
      "105": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "106": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 182,
          column: 15
        }
      },
      "107": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "108": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "109": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "110": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 526,
          column: 7
        }
      },
      "111": {
        start: {
          line: 287,
          column: 49
        },
        end: {
          line: 287,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 33
          }
        },
        loc: {
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 37
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 33
          }
        },
        loc: {
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 39
          },
          end: {
            line: 46,
            column: 40
          }
        },
        loc: {
          start: {
            line: 46,
            column: 61
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 34
          }
        },
        loc: {
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 50
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 24
          },
          end: {
            line: 83,
            column: 25
          }
        },
        loc: {
          start: {
            line: 83,
            column: 41
          },
          end: {
            line: 527,
            column: 1
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 92,
            column: 27
          }
        },
        loc: {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 92
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 93,
            column: 37
          },
          end: {
            line: 93,
            column: 38
          }
        },
        loc: {
          start: {
            line: 93,
            column: 41
          },
          end: {
            line: 95,
            column: 9
          }
        },
        line: 93
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 27
          }
        },
        loc: {
          start: {
            line: 94,
            column: 34
          },
          end: {
            line: 94,
            column: 42
          }
        },
        line: 94
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 96,
            column: 15
          },
          end: {
            line: 96,
            column: 16
          }
        },
        loc: {
          start: {
            line: 96,
            column: 19
          },
          end: {
            line: 96,
            column: 42
          }
        },
        line: 96
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 113,
            column: 35
          },
          end: {
            line: 113,
            column: 36
          }
        },
        loc: {
          start: {
            line: 113,
            column: 45
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 113
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 142,
            column: 30
          }
        },
        loc: {
          start: {
            line: 142,
            column: 33
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 142
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 152,
            column: 27
          },
          end: {
            line: 152,
            column: 28
          }
        },
        loc: {
          start: {
            line: 152,
            column: 31
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 152
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 159,
            column: 34
          },
          end: {
            line: 159,
            column: 35
          }
        },
        loc: {
          start: {
            line: 159,
            column: 38
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 159
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 287,
            column: 45
          },
          end: {
            line: 287,
            column: 46
          }
        },
        loc: {
          start: {
            line: 287,
            column: 49
          },
          end: {
            line: 287,
            column: 58
          }
        },
        line: 287
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 35
          },
          end: {
            line: 38,
            column: 38
          }
        }, {
          start: {
            line: 38,
            column: 41
          },
          end: {
            line: 40,
            column: 5
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 38,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 38,
            column: 14
          }
        }, {
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 38,
            column: 32
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 45
          }
        }, {
          start: {
            line: 47,
            column: 48
          },
          end: {
            line: 47,
            column: 65
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 24
          },
          end: {
            line: 51,
            column: 27
          }
        }, {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "7": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 54,
            column: 47
          }
        }, {
          start: {
            line: 54,
            column: 51
          },
          end: {
            line: 54,
            column: 76
          }
        }],
        line: 54
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: 60,
            column: 17
          },
          end: {
            line: 60,
            column: 31
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 53
          }
        }, {
          start: {
            line: 66,
            column: 57
          },
          end: {
            line: 66,
            column: 88
          }
        }],
        line: 66
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 29
          }
        }, {
          start: {
            line: 68,
            column: 33
          },
          end: {
            line: 68,
            column: 79
          }
        }],
        line: 68
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 69,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 47
          },
          end: {
            line: 69,
            column: 88
          }
        }, {
          start: {
            line: 69,
            column: 91
          },
          end: {
            line: 69,
            column: 95
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 74,
            column: 13
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 20
          }
        }, {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 70,
            column: 33
          }
        }, {
          start: {
            line: 70,
            column: 37
          },
          end: {
            line: 70,
            column: 45
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "17": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "18": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 24
          }
        }, {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 36
          }
        }],
        line: 114
      },
      "19": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "20": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "21": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 41
          }
        }, {
          start: {
            line: 122,
            column: 45
          },
          end: {
            line: 122,
            column: 78
          }
        }],
        line: 122
      },
      "22": {
        loc: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 136,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 136,
            column: 52
          }
        }, {
          start: {
            line: 136,
            column: 56
          },
          end: {
            line: 136,
            column: 84
          }
        }],
        line: 136
      },
      "23": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "24": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "25": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 153,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 153,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "26": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "27": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "28": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 168,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 168,
            column: 20
          }
        }, {
          start: {
            line: 168,
            column: 24
          },
          end: {
            line: 168,
            column: 56
          }
        }],
        line: 168
      },
      "29": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "30": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "31": {
        loc: {
          start: {
            line: 319,
            column: 54
          },
          end: {
            line: 319,
            column: 164
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 71
          },
          end: {
            line: 319,
            column: 158
          }
        }, {
          start: {
            line: 319,
            column: 161
          },
          end: {
            line: 319,
            column: 164
          }
        }],
        line: 319
      },
      "32": {
        loc: {
          start: {
            line: 339,
            column: 54
          },
          end: {
            line: 339,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 339,
            column: 71
          },
          end: {
            line: 339,
            column: 125
          }
        }, {
          start: {
            line: 339,
            column: 128
          },
          end: {
            line: 339,
            column: 131
          }
        }],
        line: 339
      },
      "33": {
        loc: {
          start: {
            line: 408,
            column: 24
          },
          end: {
            line: 426,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 24
          },
          end: {
            line: 408,
            column: 33
          }
        }, {
          start: {
            line: 408,
            column: 51
          },
          end: {
            line: 426,
            column: 26
          }
        }],
        line: 408
      },
      "34": {
        loc: {
          start: {
            line: 432,
            column: 38
          },
          end: {
            line: 432,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 432,
            column: 38
          },
          end: {
            line: 432,
            column: 47
          }
        }, {
          start: {
            line: 432,
            column: 51
          },
          end: {
            line: 432,
            column: 63
          }
        }, {
          start: {
            line: 432,
            column: 67
          },
          end: {
            line: 432,
            column: 76
          }
        }, {
          start: {
            line: 432,
            column: 80
          },
          end: {
            line: 432,
            column: 109
          }
        }],
        line: 432
      },
      "35": {
        loc: {
          start: {
            line: 434,
            column: 44
          },
          end: {
            line: 434,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 434,
            column: 91
          },
          end: {
            line: 434,
            column: 133
          }
        }, {
          start: {
            line: 434,
            column: 136
          },
          end: {
            line: 434,
            column: 162
          }
        }],
        line: 434
      },
      "36": {
        loc: {
          start: {
            line: 434,
            column: 44
          },
          end: {
            line: 434,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 434,
            column: 44
          },
          end: {
            line: 434,
            column: 52
          }
        }, {
          start: {
            line: 434,
            column: 56
          },
          end: {
            line: 434,
            column: 88
          }
        }],
        line: 434
      },
      "37": {
        loc: {
          start: {
            line: 443,
            column: 38
          },
          end: {
            line: 448,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 443,
            column: 64
          },
          end: {
            line: 448,
            column: 30
          }
        }, {
          start: {
            line: 448,
            column: 33
          },
          end: {
            line: 448,
            column: 139
          }
        }],
        line: 443
      },
      "38": {
        loc: {
          start: {
            line: 448,
            column: 33
          },
          end: {
            line: 448,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 448,
            column: 80
          },
          end: {
            line: 448,
            column: 108
          }
        }, {
          start: {
            line: 448,
            column: 111
          },
          end: {
            line: 448,
            column: 139
          }
        }],
        line: 448
      },
      "39": {
        loc: {
          start: {
            line: 448,
            column: 33
          },
          end: {
            line: 448,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 33
          },
          end: {
            line: 448,
            column: 41
          }
        }, {
          start: {
            line: 448,
            column: 45
          },
          end: {
            line: 448,
            column: 77
          }
        }],
        line: 448
      },
      "40": {
        loc: {
          start: {
            line: 472,
            column: 54
          },
          end: {
            line: 472,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 472,
            column: 71
          },
          end: {
            line: 472,
            column: 125
          }
        }, {
          start: {
            line: 472,
            column: 128
          },
          end: {
            line: 472,
            column: 131
          }
        }],
        line: 472
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/components/DailyReward/DailyFlowerCard.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { motion } from 'framer-motion';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Box,\n  LinearProgress,\n  Chip,\n  Avatar,\n  Divider,\n  Alert,\n  CircularProgress,\n  Tooltip\n} from '@mui/material';\nimport {\n  LocalFlorist,\n  AccessTime,\n  TrendingUp,\n  EmojiEvents,\n  AccountBalanceWallet,\n  Refresh,\n  CheckCircle,\n  Schedule\n} from '@mui/icons-material';\nimport { useAccount, useContractWrite, useContractRead } from 'wagmi';\nimport { parseEther, formatEther } from 'viem';\nimport { toast } from 'react-hot-toast';\nimport { useDailyReward } from '@/hooks/useDailyReward';\nimport { formatNumber, formatTimeRemaining } from '@/utils/format';\n\ninterface DailyFlowerCardProps {\n  className?: string;\n}\n\nexport const DailyFlowerCard: React.FC<DailyFlowerCardProps> = ({ className }) => {\n  const { t } = useTranslation();\n  const { address, isConnected } = useAccount();\n  \n  // \u72B6\u6001\u7BA1\u7406\n  const [isLoading, setIsLoading] = useState(false);\n  const [refreshKey, setRefreshKey] = useState(0);\n  \n  // \u81EA\u5B9A\u4E49 Hook\n  const {\n    userRewardInfo,\n    canClaim,\n    nextClaimTime,\n    isLoadingData,\n    refetch\n  } = useDailyReward(refreshKey);\n  \n  // \u81EA\u52A8\u5237\u65B0\u6570\u636E\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRefreshKey(prev => prev + 1);\n    }, 30000); // \u6BCF30\u79D2\u5237\u65B0\u4E00\u6B21\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  // \u5408\u7EA6\u5199\u5165\n  const { writeAsync: claimDailyFlowers } = useContractWrite({\n    address: process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS as `0x${string}`,\n    abi: [\n      {\n        name: 'claimDailyFlowers',\n        type: 'function',\n        inputs: [],\n        outputs: [],\n        stateMutability: 'nonpayable'\n      }\n    ],\n    functionName: 'claimDailyFlowers'\n  });\n  \n  // \u5904\u7406\u9886\u53D6\u6BCF\u65E5\u5956\u52B1\n  const handleClaimDailyReward = async () => {\n    if (!isConnected || !address) {\n      toast.error(t('wallet.connectFirst'));\n      return;\n    }\n    \n    if (!canClaim) {\n      toast.error(t('dailyReward.alreadyClaimed'));\n      return;\n    }\n    \n    if (!userRewardInfo?.dailyFlowers || userRewardInfo.dailyFlowers === 0) {\n      toast.error(t('dailyReward.noRewardAvailable'));\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      \n      const tx = await claimDailyFlowers();\n      \n      toast.success(t('dailyReward.claimSubmitted'));\n      \n      // \u7B49\u5F85\u4EA4\u6613\u786E\u8BA4\n      // await waitForTransaction({ hash: tx.hash });\n      \n      toast.success(t('dailyReward.claimConfirmed'));\n      refetch();\n      \n    } catch (error: any) {\n      console.error('Daily reward claim error:', error);\n      toast.error(error.message || t('dailyReward.claimFailed'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // \u8BA1\u7B97\u5012\u8BA1\u65F6\n  const getCountdownText = () => {\n    if (!nextClaimTime) return '';\n    \n    const now = Date.now() / 1000;\n    const remaining = nextClaimTime - now;\n    \n    if (remaining <= 0) {\n      return t('dailyReward.canClaimNow');\n    }\n    \n    return formatTimeRemaining(remaining);\n  };\n  \n  // \u8BA1\u7B97\u6301\u5E01\u5956\u52B1\u6BD4\u4F8B\n  const getRewardRatio = () => {\n    if (!userRewardInfo?.smBalance) return 0;\n    \n    const smBalance = parseFloat(formatEther(userRewardInfo.smBalance));\n    const maxRewardSm = 10000; // \u6700\u5927\u5956\u52B1\u5BF9\u5E94\u7684 SM \u6570\u91CF\n    \n    return Math.min((smBalance / maxRewardSm) * 100, 100);\n  };\n  \n  // \u6E32\u67D3\u72B6\u6001\u6307\u793A\u5668\n  const renderStatusIndicator = () => {\n    if (!isConnected) {\n      return (\n        <Chip \n          label={t('wallet.notConnected')} \n          color=\"default\" \n          size=\"small\"\n          icon={<AccountBalanceWallet />}\n        />\n      );\n    }\n    \n    if (canClaim && userRewardInfo?.dailyFlowers > 0) {\n      return (\n        <Chip \n          label={t('dailyReward.canClaim')} \n          color=\"success\" \n          size=\"small\"\n          icon={<CheckCircle />}\n        />\n      );\n    }\n    \n    if (!canClaim) {\n      return (\n        <Chip \n          label={t('dailyReward.alreadyClaimed')} \n          color=\"info\" \n          size=\"small\"\n          icon={<Schedule />}\n        />\n      );\n    }\n    \n    return (\n      <Chip \n        label={t('dailyReward.noReward')} \n        color=\"warning\" \n        size=\"small\"\n        icon={<LocalFlorist />}\n      />\n    );\n  };\n  \n  if (isLoadingData) {\n    return (\n      <Card className={className}>\n        <CardContent>\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n            <CircularProgress />\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <Card \n        className={className}\n        sx={{\n          background: 'linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)',\n          color: 'white',\n          borderRadius: 3,\n          overflow: 'hidden',\n          position: 'relative'\n        }}\n      >\n        {/* \u80CC\u666F\u88C5\u9970 */}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: -30,\n            right: -30,\n            width: 120,\n            height: 120,\n            borderRadius: '50%',\n            background: 'rgba(255, 255, 255, 0.1)',\n            zIndex: 0\n          }}\n        />\n        \n        <CardContent sx={{ position: 'relative', zIndex: 1 }}>\n          {/* \u5934\u90E8 */}\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              <Avatar sx={{ bgcolor: 'rgba(255, 255, 255, 0.2)' }}>\n                <LocalFlorist />\n              </Avatar>\n              <Box>\n                <Typography variant=\"h6\" fontWeight=\"bold\">\n                  {t('dailyReward.title')}\n                </Typography>\n                <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                  {t('dailyReward.subtitle')}\n                </Typography>\n              </Box>\n            </Box>\n            \n            <Button\n              size=\"small\"\n              onClick={() => refetch()}\n              sx={{ color: 'white', minWidth: 'auto' }}\n            >\n              <Refresh />\n            </Button>\n          </Box>\n          \n          {/* \u72B6\u6001\u6307\u793A\u5668 */}\n          <Box sx={{ mb: 3 }}>\n            {renderStatusIndicator()}\n          </Box>\n          \n          {/* \u7528\u6237\u6301\u5E01\u4FE1\u606F */}\n          <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 2, mb: 3 }}>\n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"h4\" fontWeight=\"bold\" color=\"primary.light\">\n                {userRewardInfo ? formatNumber(parseFloat(formatEther(userRewardInfo.smBalance))) : '0'}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                {t('dailyReward.smBalance')}\n              </Typography>\n            </Box>\n            \n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"h4\" fontWeight=\"bold\" color=\"secondary.light\">\n                {userRewardInfo ? formatNumber(userRewardInfo.dailyFlowers) : '0'}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                {t('dailyReward.dailyFlowers')}\n              </Typography>\n            </Box>\n          </Box>\n          \n          {/* \u5956\u52B1\u8FDB\u5EA6\u6761 */}\n          <Box sx={{ mb: 3 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                {t('dailyReward.rewardProgress')}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                {getRewardRatio().toFixed(1)}%\n              </Typography>\n            </Box>\n            <LinearProgress \n              variant=\"determinate\" \n              value={getRewardRatio()} \n              sx={{ \n                height: 8, \n                borderRadius: 4,\n                backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                '& .MuiLinearProgress-bar': {\n                  background: 'linear-gradient(45deg, #FFD700, #FFA500)'\n                }\n              }} \n            />\n            <Typography variant=\"caption\" sx={{ opacity: 0.6, mt: 1, display: 'block' }}>\n              {t('dailyReward.maxReward', { amount: '200' })}\n            </Typography>\n          </Box>\n          \n          {/* \u5012\u8BA1\u65F6\u4FE1\u606F */}\n          {!canClaim && (\n            <Alert \n              severity=\"info\" \n              sx={{ \n                mb: 3, \n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                color: 'white',\n                '& .MuiAlert-icon': { color: 'white' }\n              }}\n            >\n              <Typography variant=\"body2\">\n                {t('dailyReward.nextClaimIn')}: {getCountdownText()}\n              </Typography>\n            </Alert>\n          )}\n          \n          {/* \u9886\u53D6\u6309\u94AE */}\n          <Button\n            fullWidth\n            variant=\"contained\"\n            size=\"large\"\n            onClick={handleClaimDailyReward}\n            disabled={isLoading || !isConnected || !canClaim || !userRewardInfo?.dailyFlowers}\n            sx={{\n              background: canClaim && userRewardInfo?.dailyFlowers > 0 \n                ? 'linear-gradient(45deg, #FFD700, #FFA500)' \n                : 'rgba(255, 255, 255, 0.3)',\n              fontWeight: 'bold',\n              py: 1.5,\n              mb: 2,\n              '&:disabled': {\n                background: 'rgba(255, 255, 255, 0.3)',\n                color: 'rgba(255, 255, 255, 0.7)'\n              }\n            }}\n          >\n            {isLoading ? (\n              <CircularProgress size={24} sx={{ color: 'white' }} />\n            ) : canClaim && userRewardInfo?.dailyFlowers > 0 ? (\n              t('dailyReward.claimButton')\n            ) : (\n              t('dailyReward.cannotClaim')\n            )}\n          </Button>\n          \n          {/* \u7EDF\u8BA1\u4FE1\u606F */}\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"caption\" sx={{ opacity: 0.6 }}>\n                {t('dailyReward.totalClaimed')}\n              </Typography>\n              <Typography variant=\"body2\" fontWeight=\"bold\">\n                {userRewardInfo ? formatNumber(userRewardInfo.totalClaimed) : '0'}\n              </Typography>\n            </Box>\n            \n            <Divider orientation=\"vertical\" flexItem sx={{ borderColor: 'rgba(255, 255, 255, 0.3)' }} />\n            \n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"caption\" sx={{ opacity: 0.6 }}>\n                {t('dailyReward.formula')}\n              </Typography>\n              <Typography variant=\"body2\" fontWeight=\"bold\">\n                500 SM = 10 \uD83C\uDF38\n              </Typography>\n            </Box>\n          </Box>\n          \n          {/* \u63D0\u793A\u4FE1\u606F */}\n          <Box sx={{ mt: 2, p: 2, backgroundColor: 'rgba(255, 255, 255, 0.1)', borderRadius: 2 }}>\n            <Typography variant=\"caption\" sx={{ opacity: 0.8 }}>\n              \uD83D\uDCA1 {t('dailyReward.tip')}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n};\n"],
      names: ["DailyFlowerCard", "className", "t", "useTranslation", "address", "isConnected", "useAccount", "isLoading", "setIsLoading", "useState", "refreshKey", "setRefreshKey", "userRewardInfo", "canClaim", "nextClaimTime", "isLoadingData", "refetch", "useDailyReward", "useEffect", "interval", "setInterval", "prev", "clearInterval", "writeAsync", "claimDailyFlowers", "useContractWrite", "process", "env", "NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS", "abi", "name", "type", "inputs", "outputs", "stateMutability", "functionName", "handleClaimDailyReward", "toast", "error", "dailyFlowers", "tx", "success", "console", "message", "getCountdownText", "now", "Date", "remaining", "formatTimeRemaining", "getRewardRatio", "smBalance", "parseFloat", "formatEther", "maxRewardSm", "Math", "min", "renderStatusIndicator", "Chip", "label", "color", "size", "icon", "AccountBalanceWallet", "CheckCircle", "Schedule", "LocalFlorist", "Card", "CardContent", "Box", "sx", "display", "justifyContent", "p", "CircularProgress", "motion", "div", "initial", "opacity", "y", "animate", "transition", "duration", "background", "borderRadius", "overflow", "position", "top", "right", "width", "height", "zIndex", "alignItems", "mb", "gap", "Avatar", "bgcolor", "Typography", "variant", "fontWeight", "Button", "onClick", "minWidth", "Refresh", "gridTemplateColumns", "textAlign", "formatNumber", "toFixed", "LinearProgress", "value", "backgroundColor", "mt", "amount", "Alert", "severity", "fullWidth", "disabled", "py", "totalClaimed", "Divider", "orientation", "flexItem", "borderColor"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f7bcf36d187e789c12dbbe58f74fc175e1bb69a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_i8fk2g5om = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_i8fk2g5om();
cov_i8fk2g5om().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_i8fk2g5om().s[1]++;
Object.defineProperty(exports, "DailyFlowerCard", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[0]++;
    cov_i8fk2g5om().s[2]++;
    return DailyFlowerCard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_i8fk2g5om().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[4]++, _interop_require_wildcard(require("react")));
const _reacti18next =
/* istanbul ignore next */
(cov_i8fk2g5om().s[5]++, require("react-i18next"));
const _framermotion =
/* istanbul ignore next */
(cov_i8fk2g5om().s[6]++, require("framer-motion"));
const _Card =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[7]++, _interop_require_default(require("@mui/material/Card")));
const _CardContent =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[8]++, _interop_require_default(require("@mui/material/CardContent")));
const _Typography =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[9]++, _interop_require_default(require("@mui/material/Typography")));
const _Button =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[10]++, _interop_require_default(require("@mui/material/Button")));
const _Box =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[11]++, _interop_require_default(require("@mui/material/Box")));
const _LinearProgress =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[12]++, _interop_require_default(require("@mui/material/LinearProgress")));
const _Chip =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[13]++, _interop_require_default(require("@mui/material/Chip")));
const _Avatar =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[14]++, _interop_require_default(require("@mui/material/Avatar")));
const _Divider =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[15]++, _interop_require_default(require("@mui/material/Divider")));
const _Alert =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[16]++, _interop_require_default(require("@mui/material/Alert")));
const _CircularProgress =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[17]++, _interop_require_default(require("@mui/material/CircularProgress")));
const _LocalFlorist =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[18]++, _interop_require_default(require("@mui/icons-material/LocalFlorist")));
const _AccountBalanceWallet =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[19]++, _interop_require_default(require("@mui/icons-material/AccountBalanceWallet")));
const _Refresh =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[20]++, _interop_require_default(require("@mui/icons-material/Refresh")));
const _CheckCircle =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[21]++, _interop_require_default(require("@mui/icons-material/CheckCircle")));
const _Schedule =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[22]++, _interop_require_default(require("@mui/icons-material/Schedule")));
const _wagmi =
/* istanbul ignore next */
(cov_i8fk2g5om().s[23]++, require("wagmi"));
const _viem =
/* istanbul ignore next */
(cov_i8fk2g5om().s[24]++, require("viem"));
const _reacthottoast =
/* istanbul ignore next */
(cov_i8fk2g5om().s[25]++, require("react-hot-toast"));
const _useDailyReward =
/* istanbul ignore next */
(cov_i8fk2g5om().s[26]++, require("../../hooks/useDailyReward"));
const _format =
/* istanbul ignore next */
(cov_i8fk2g5om().s[27]++, require("../../utils/format"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_i8fk2g5om().f[1]++;
  cov_i8fk2g5om().s[28]++;
  return /* istanbul ignore next */(cov_i8fk2g5om().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_i8fk2g5om().f[2]++;
  cov_i8fk2g5om().s[29]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[2][0]++;
    cov_i8fk2g5om().s[30]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[31]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[32]++, new WeakMap());
  /* istanbul ignore next */
  cov_i8fk2g5om().s[33]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[3]++;
    cov_i8fk2g5om().s[34]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_i8fk2g5om().f[4]++;
  cov_i8fk2g5om().s[35]++;
  if (
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[4][0]++;
    cov_i8fk2g5om().s[36]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[4][1]++;
  }
  cov_i8fk2g5om().s[37]++;
  if (
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[6][0]++;
    cov_i8fk2g5om().s[38]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[39]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_i8fk2g5om().s[40]++;
  if (
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[8][0]++;
    cov_i8fk2g5om().s[41]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[42]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[43]++,
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_i8fk2g5om().s[44]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_i8fk2g5om().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_i8fk2g5om().s[46]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[13][1]++, null));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[47]++;
      if (
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_i8fk2g5om().b[14][0]++;
        cov_i8fk2g5om().s[48]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_i8fk2g5om().b[14][1]++;
        cov_i8fk2g5om().s[49]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_i8fk2g5om().s[50]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_i8fk2g5om().s[51]++;
  if (cache) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[16][0]++;
    cov_i8fk2g5om().s[52]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[16][1]++;
  }
  cov_i8fk2g5om().s[53]++;
  return newObj;
}
/* istanbul ignore next */
cov_i8fk2g5om().s[54]++;
const DailyFlowerCard = ({
  className
}) => {
  /* istanbul ignore next */
  cov_i8fk2g5om().f[5]++;
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[55]++, (0, _reacti18next.useTranslation)());
  const {
    address,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[56]++, (0, _wagmi.useAccount)());
  // 状态管理
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[57]++, (0, _react.useState)(false));
  const [refreshKey, setRefreshKey] =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[58]++, (0, _react.useState)(0));
  // 自定义 Hook
  const {
    userRewardInfo,
    canClaim,
    nextClaimTime,
    isLoadingData,
    refetch
  } =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[59]++, (0, _useDailyReward.useDailyReward)(refreshKey));
  // 自动刷新数据
  /* istanbul ignore next */
  cov_i8fk2g5om().s[60]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[6]++;
    const interval =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[61]++, setInterval(() => {
      /* istanbul ignore next */
      cov_i8fk2g5om().f[7]++;
      cov_i8fk2g5om().s[62]++;
      setRefreshKey(prev => {
        /* istanbul ignore next */
        cov_i8fk2g5om().f[8]++;
        cov_i8fk2g5om().s[63]++;
        return prev + 1;
      });
    }, 30000)); // 每30秒刷新一次
    /* istanbul ignore next */
    cov_i8fk2g5om().s[64]++;
    return () => {
      /* istanbul ignore next */
      cov_i8fk2g5om().f[9]++;
      cov_i8fk2g5om().s[65]++;
      return clearInterval(interval);
    };
  }, []);
  // 合约写入
  const {
    writeAsync: claimDailyFlowers
  } =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[66]++, (0, _wagmi.useContractWrite)({
    address: process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS,
    abi: [{
      name: 'claimDailyFlowers',
      type: 'function',
      inputs: [],
      outputs: [],
      stateMutability: 'nonpayable'
    }],
    functionName: 'claimDailyFlowers'
  }));
  // 处理领取每日奖励
  /* istanbul ignore next */
  cov_i8fk2g5om().s[67]++;
  const handleClaimDailyReward = async () => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[10]++;
    cov_i8fk2g5om().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[18][0]++, !isConnected) ||
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[18][1]++, !address)) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[17][0]++;
      cov_i8fk2g5om().s[69]++;
      _reacthottoast.toast.error(t('wallet.connectFirst'));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[70]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[17][1]++;
    }
    cov_i8fk2g5om().s[71]++;
    if (!canClaim) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[19][0]++;
      cov_i8fk2g5om().s[72]++;
      _reacthottoast.toast.error(t('dailyReward.alreadyClaimed'));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[73]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[19][1]++;
    }
    cov_i8fk2g5om().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[21][0]++, !userRewardInfo?.dailyFlowers) ||
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[21][1]++, userRewardInfo.dailyFlowers === 0)) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[20][0]++;
      cov_i8fk2g5om().s[75]++;
      _reacthottoast.toast.error(t('dailyReward.noRewardAvailable'));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[76]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[20][1]++;
    }
    cov_i8fk2g5om().s[77]++;
    try {
      /* istanbul ignore next */
      cov_i8fk2g5om().s[78]++;
      setIsLoading(true);
      const tx =
      /* istanbul ignore next */
      (cov_i8fk2g5om().s[79]++, await claimDailyFlowers());
      /* istanbul ignore next */
      cov_i8fk2g5om().s[80]++;
      _reacthottoast.toast.success(t('dailyReward.claimSubmitted'));
      // 等待交易确认
      // await waitForTransaction({ hash: tx.hash });
      /* istanbul ignore next */
      cov_i8fk2g5om().s[81]++;
      _reacthottoast.toast.success(t('dailyReward.claimConfirmed'));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[82]++;
      refetch();
    } catch (error) {
      /* istanbul ignore next */
      cov_i8fk2g5om().s[83]++;
      console.error('Daily reward claim error:', error);
      /* istanbul ignore next */
      cov_i8fk2g5om().s[84]++;
      _reacthottoast.toast.error(
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[22][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[22][1]++, t('dailyReward.claimFailed')));
    } finally {
      /* istanbul ignore next */
      cov_i8fk2g5om().s[85]++;
      setIsLoading(false);
    }
  };
  // 计算倒计时
  /* istanbul ignore next */
  cov_i8fk2g5om().s[86]++;
  const getCountdownText = () => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[11]++;
    cov_i8fk2g5om().s[87]++;
    if (!nextClaimTime) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[23][0]++;
      cov_i8fk2g5om().s[88]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[23][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[89]++, Date.now() / 1000);
    const remaining =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[90]++, nextClaimTime - now);
    /* istanbul ignore next */
    cov_i8fk2g5om().s[91]++;
    if (remaining <= 0) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[24][0]++;
      cov_i8fk2g5om().s[92]++;
      return t('dailyReward.canClaimNow');
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[24][1]++;
    }
    cov_i8fk2g5om().s[93]++;
    return (0, _format.formatTimeRemaining)(remaining);
  };
  // 计算持币奖励比例
  /* istanbul ignore next */
  cov_i8fk2g5om().s[94]++;
  const getRewardRatio = () => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[12]++;
    cov_i8fk2g5om().s[95]++;
    if (!userRewardInfo?.smBalance) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[25][0]++;
      cov_i8fk2g5om().s[96]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[25][1]++;
    }
    const smBalance =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[97]++, parseFloat((0, _viem.formatEther)(userRewardInfo.smBalance)));
    const maxRewardSm =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[98]++, 10000); // 最大奖励对应的 SM 数量
    /* istanbul ignore next */
    cov_i8fk2g5om().s[99]++;
    return Math.min(smBalance / maxRewardSm * 100, 100);
  };
  // 渲染状态指示器
  /* istanbul ignore next */
  cov_i8fk2g5om().s[100]++;
  const renderStatusIndicator = () => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[13]++;
    cov_i8fk2g5om().s[101]++;
    if (!isConnected) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[26][0]++;
      cov_i8fk2g5om().s[102]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_Chip.default, {
        label: t('wallet.notConnected'),
        color: "default",
        size: "small",
        icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_AccountBalanceWallet.default, {})
      });
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[26][1]++;
    }
    cov_i8fk2g5om().s[103]++;
    if (
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[28][0]++, canClaim) &&
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[28][1]++, userRewardInfo?.dailyFlowers > 0)) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[27][0]++;
      cov_i8fk2g5om().s[104]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_Chip.default, {
        label: t('dailyReward.canClaim'),
        color: "success",
        size: "small",
        icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_CheckCircle.default, {})
      });
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[27][1]++;
    }
    cov_i8fk2g5om().s[105]++;
    if (!canClaim) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[29][0]++;
      cov_i8fk2g5om().s[106]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_Chip.default, {
        label: t('dailyReward.alreadyClaimed'),
        color: "info",
        size: "small",
        icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_Schedule.default, {})
      });
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[29][1]++;
    }
    cov_i8fk2g5om().s[107]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_Chip.default, {
      label: t('dailyReward.noReward'),
      color: "warning",
      size: "small",
      icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_LocalFlorist.default, {})
    });
  };
  /* istanbul ignore next */
  cov_i8fk2g5om().s[108]++;
  if (isLoadingData) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[30][0]++;
    cov_i8fk2g5om().s[109]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.default, {
      className: className,
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_CardContent.default, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Box.default, {
          sx: {
            display: 'flex',
            justifyContent: 'center',
            p: 4
          },
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_CircularProgress.default, {})
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[30][1]++;
  }
  cov_i8fk2g5om().s[110]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_framermotion.motion.div, {
    initial: {
      opacity: 0,
      y: 20
    },
    animate: {
      opacity: 1,
      y: 0
    },
    transition: {
      duration: 0.5
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.default, {
      className: className,
      sx: {
        background: 'linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)',
        color: 'white',
        borderRadius: 3,
        overflow: 'hidden',
        position: 'relative'
      },
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Box.default, {
        sx: {
          position: 'absolute',
          top: -30,
          right: -30,
          width: 120,
          height: 120,
          borderRadius: '50%',
          background: 'rgba(255, 255, 255, 0.1)',
          zIndex: 0
        }
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_CardContent.default, {
        sx: {
          position: 'relative',
          zIndex: 1
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
          sx: {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'space-between',
            mb: 3
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
            sx: {
              display: 'flex',
              alignItems: 'center',
              gap: 2
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Avatar.default, {
              sx: {
                bgcolor: 'rgba(255, 255, 255, 0.2)'
              },
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LocalFlorist.default, {})
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
                variant: "h6",
                fontWeight: "bold",
                children: t('dailyReward.title')
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
                variant: "body2",
                sx: {
                  opacity: 0.8
                },
                children: t('dailyReward.subtitle')
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.default, {
            size: "small",
            onClick: () => {
              /* istanbul ignore next */
              cov_i8fk2g5om().f[14]++;
              cov_i8fk2g5om().s[111]++;
              return refetch();
            },
            sx: {
              color: 'white',
              minWidth: 'auto'
            },
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Refresh.default, {})
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Box.default, {
          sx: {
            mb: 3
          },
          children: renderStatusIndicator()
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
          sx: {
            display: 'grid',
            gridTemplateColumns: '1fr 1fr',
            gap: 2,
            mb: 3
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
            sx: {
              textAlign: 'center'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "h4",
              fontWeight: "bold",
              color: "primary.light",
              children: userRewardInfo ?
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[31][0]++, (0, _format.formatNumber)(parseFloat((0, _viem.formatEther)(userRewardInfo.smBalance)))) :
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[31][1]++, '0')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "body2",
              sx: {
                opacity: 0.8
              },
              children: t('dailyReward.smBalance')
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
            sx: {
              textAlign: 'center'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "h4",
              fontWeight: "bold",
              color: "secondary.light",
              children: userRewardInfo ?
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[32][0]++, (0, _format.formatNumber)(userRewardInfo.dailyFlowers)) :
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[32][1]++, '0')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "body2",
              sx: {
                opacity: 0.8
              },
              children: t('dailyReward.dailyFlowers')
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
          sx: {
            mb: 3
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
            sx: {
              display: 'flex',
              justifyContent: 'space-between',
              mb: 1
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "body2",
              sx: {
                opacity: 0.8
              },
              children: t('dailyReward.rewardProgress')
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Typography.default, {
              variant: "body2",
              sx: {
                opacity: 0.8
              },
              children: [getRewardRatio().toFixed(1), "%"]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_LinearProgress.default, {
            variant: "determinate",
            value: getRewardRatio(),
            sx: {
              height: 8,
              borderRadius: 4,
              backgroundColor: 'rgba(255, 255, 255, 0.2)',
              '& .MuiLinearProgress-bar': {
                background: 'linear-gradient(45deg, #FFD700, #FFA500)'
              }
            }
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
            variant: "caption",
            sx: {
              opacity: 0.6,
              mt: 1,
              display: 'block'
            },
            children: t('dailyReward.maxReward', {
              amount: '200'
            })
          })]
        }),
        /* istanbul ignore next */
        (cov_i8fk2g5om().b[33][0]++, !canClaim) &&
        /* istanbul ignore next */
        (cov_i8fk2g5om().b[33][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Alert.default, {
          severity: "info",
          sx: {
            mb: 3,
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            color: 'white',
            '& .MuiAlert-icon': {
              color: 'white'
            }
          },
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_Typography.default, {
            variant: "body2",
            children: [t('dailyReward.nextClaimIn'), ": ", getCountdownText()]
          })
        })), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.default, {
          fullWidth: true,
          variant: "contained",
          size: "large",
          onClick: handleClaimDailyReward,
          disabled:
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[34][0]++, isLoading) ||
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[34][1]++, !isConnected) ||
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[34][2]++, !canClaim) ||
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[34][3]++, !userRewardInfo?.dailyFlowers),
          sx: {
            background:
            /* istanbul ignore next */
            (cov_i8fk2g5om().b[36][0]++, canClaim) &&
            /* istanbul ignore next */
            (cov_i8fk2g5om().b[36][1]++, userRewardInfo?.dailyFlowers > 0) ?
            /* istanbul ignore next */
            (cov_i8fk2g5om().b[35][0]++, 'linear-gradient(45deg, #FFD700, #FFA500)') :
            /* istanbul ignore next */
            (cov_i8fk2g5om().b[35][1]++, 'rgba(255, 255, 255, 0.3)'),
            fontWeight: 'bold',
            py: 1.5,
            mb: 2,
            '&:disabled': {
              background: 'rgba(255, 255, 255, 0.3)',
              color: 'rgba(255, 255, 255, 0.7)'
            }
          },
          children: isLoading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_i8fk2g5om().b[37][0]++, (0, _jsxruntime.jsx)(_CircularProgress.default, {
            size: 24,
            sx: {
              color: 'white'
            }
          })) :
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[37][1]++,
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[39][0]++, canClaim) &&
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[39][1]++, userRewardInfo?.dailyFlowers > 0) ?
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[38][0]++, t('dailyReward.claimButton')) :
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[38][1]++, t('dailyReward.cannotClaim')))
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
          sx: {
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center'
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
            sx: {
              textAlign: 'center'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "caption",
              sx: {
                opacity: 0.6
              },
              children: t('dailyReward.totalClaimed')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "body2",
              fontWeight: "bold",
              children: userRewardInfo ?
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[40][0]++, (0, _format.formatNumber)(userRewardInfo.totalClaimed)) :
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[40][1]++, '0')
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Divider.default, {
            orientation: "vertical",
            flexItem: true,
            sx: {
              borderColor: 'rgba(255, 255, 255, 0.3)'
            }
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
            sx: {
              textAlign: 'center'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "caption",
              sx: {
                opacity: 0.6
              },
              children: t('dailyReward.formula')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "body2",
              fontWeight: "bold",
              children: "500 SM = 10 \uD83C\uDF38"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Box.default, {
          sx: {
            mt: 2,
            p: 2,
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            borderRadius: 2
          },
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_Typography.default, {
            variant: "caption",
            sx: {
              opacity: 0.8
            },
            children: ["\uD83D\uDCA1 ", t('dailyReward.tip')]
          })
        })]
      })]
    })
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,