{"version":3,"names":["cov_1fmepkaymk","actualCoverage","s","ClientOnly","children","fallback","b","f","hasMounted","setHasMounted","_react","useState","useEffect","_jsxruntime","jsx","Fragment"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/ClientOnly.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, ReactNode } from 'react';\n\ninterface ClientOnlyProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\n/**\n * 确保组件仅在客户端渲染，解决SSR与浏览器API不兼容的问题\n */\nexport default function ClientOnly({ children, fallback = null }: ClientOnlyProps) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYwB;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;AAHxB;;;AAGA;;;;;;WAAwBC,UAAA;;;;;;;;kCAVuB;AAUhC,SAASA,WAAW;EAAEC,QAAQ;EAAEC,QAAA;EAAA;EAAA,CAAAL,cAAA,GAAAM,CAAA,UAAW,IAAI;AAAA,CAAmB;EAAA;EAAAN,cAAA,GAAAO,CAAA;EAC/E,MAAM,CAACC,UAAA,EAAYC,aAAA,CAAc;EAAA;EAAA,CAAAT,cAAA,GAAAE,CAAA,OAAG,IAAAQ,MAAA,CAAAC,QAAQ,EAAC;EAAA;EAAAX,cAAA,GAAAE,CAAA;EAE7C,IAAAQ,MAAA,CAAAE,SAAS,EAAC;IAAA;IAAAZ,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAE,CAAA;IACRO,aAAA,CAAc;EAChB,GAAG,EAAE;EAAA;EAAAT,cAAA,GAAAE,CAAA;EAEL,IAAI,CAACM,UAAA,EAAY;IAAA;IAAAR,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAE,CAAA;IACf,oBAAO,IAAAW,WAAA,CAAAC,GAAA,EAAAD,WAAA,CAAAE,QAAA;gBAAGV;;EACZ;EAAA;EAAA;IAAAL,cAAA,GAAAM,CAAA;EAAA;EAAAN,cAAA,GAAAE,CAAA;EAEA,oBAAO,IAAAW,WAAA,CAAAC,GAAA,EAAAD,WAAA,CAAAE,QAAA;cAAGX;;AACZ","ignoreList":[]}