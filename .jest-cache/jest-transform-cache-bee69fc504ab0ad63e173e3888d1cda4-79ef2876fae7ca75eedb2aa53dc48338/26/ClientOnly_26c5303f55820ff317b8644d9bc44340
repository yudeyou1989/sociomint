3ccf596aade38ec21c13acd8c32303d7
'use client';
"use strict";

/* istanbul ignore next */
function cov_1fmepkaymk() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/ClientOnly.tsx";
  var hash = "7c8fb9ef92de3e24423593b7c68eef10307cac63";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/ClientOnly.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 26
        }
      },
      "3": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "4": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "5": {
        start: {
          line: 17,
          column: 40
        },
        end: {
          line: 17,
          column: 67
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 11
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "8": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "10": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "ClientOnly",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 19
          }
        },
        loc: {
          start: {
            line: 16,
            column: 51
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 27
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 16,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 43
          },
          end: {
            line: 16,
            column: 47
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/ClientOnly.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect, ReactNode } from 'react';\n\ninterface ClientOnlyProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\n/**\n * \u786E\u4FDD\u7EC4\u4EF6\u4EC5\u5728\u5BA2\u6237\u7AEF\u6E32\u67D3\uFF0C\u89E3\u51B3SSR\u4E0E\u6D4F\u89C8\u5668API\u4E0D\u517C\u5BB9\u7684\u95EE\u9898\n */\nexport default function ClientOnly({ children, fallback = null }: ClientOnlyProps) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n}\n"],
      names: ["ClientOnly", "children", "fallback", "hasMounted", "setHasMounted", "useState", "useEffect"],
      mappings: "AAAA;;;;;+BASA;;CAEC,GACD;;;eAAwBA;;;;uBAVuB;AAUhC,SAASA,WAAW,EAAEC,QAAQ,EAAEC,WAAW,IAAI,EAAmB;IAC/E,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,eAAQ,EAAC;IAE7CC,IAAAA,gBAAS,EAAC;QACRF,cAAc;IAChB,GAAG,EAAE;IAEL,IAAI,CAACD,YAAY;QACf,qBAAO;sBAAGD;;IACZ;IAEA,qBAAO;kBAAGD;;AACZ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7c8fb9ef92de3e24423593b7c68eef10307cac63"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fmepkaymk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fmepkaymk();
cov_1fmepkaymk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fmepkaymk().s[1]++;
Object.defineProperty(exports,
/**
* 确保组件仅在客户端渲染，解决SSR与浏览器API不兼容的问题
*/
"default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1fmepkaymk().f[0]++;
    cov_1fmepkaymk().s[2]++;
    return ClientOnly;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1fmepkaymk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1fmepkaymk().s[4]++, require("react"));
function ClientOnly({
  children,
  fallback =
  /* istanbul ignore next */
  (cov_1fmepkaymk().b[0][0]++, null)
}) {
  /* istanbul ignore next */
  cov_1fmepkaymk().f[1]++;
  const [hasMounted, setHasMounted] =
  /* istanbul ignore next */
  (cov_1fmepkaymk().s[5]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_1fmepkaymk().s[6]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1fmepkaymk().f[2]++;
    cov_1fmepkaymk().s[7]++;
    setHasMounted(true);
  }, []);
  /* istanbul ignore next */
  cov_1fmepkaymk().s[8]++;
  if (!hasMounted) {
    /* istanbul ignore next */
    cov_1fmepkaymk().b[1][0]++;
    cov_1fmepkaymk().s[9]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
      children: fallback
    });
  } else
  /* istanbul ignore next */
  {
    cov_1fmepkaymk().b[1][1]++;
  }
  cov_1fmepkaymk().s[10]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
    children: children
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWZtZXBrYXltayIsImFjdHVhbENvdmVyYWdlIiwicyIsIkNsaWVudE9ubHkiLCJjaGlsZHJlbiIsImZhbGxiYWNrIiwiYiIsImYiLCJoYXNNb3VudGVkIiwic2V0SGFzTW91bnRlZCIsIl9yZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJGcmFnbWVudCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWRleW91L0Rlc2t0b3Avc20vc29jaW9taW50L3NyYy9DbGllbnRPbmx5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIENsaWVudE9ubHlQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG4gIGZhbGxiYWNrPzogUmVhY3ROb2RlO1xufVxuXG4vKipcbiAqIOehruS/nee7hOS7tuS7heWcqOWuouaIt+err+a4suafk++8jOino+WGs1NTUuS4jua1j+iniOWZqEFQSeS4jeWFvOWuueeahOmXrumimFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDbGllbnRPbmx5KHsgY2hpbGRyZW4sIGZhbGxiYWNrID0gbnVsbCB9OiBDbGllbnRPbmx5UHJvcHMpIHtcbiAgY29uc3QgW2hhc01vdW50ZWQsIHNldEhhc01vdW50ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0SGFzTW91bnRlZCh0cnVlKTtcbiAgfSwgW10pO1xuXG4gIGlmICghaGFzTW91bnRlZCkge1xuICAgIHJldHVybiA8PntmYWxsYmFja308Lz47XG4gIH1cblxuICByZXR1cm4gPD57Y2hpbGRyZW59PC8+O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBWXdCO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFBQUEsY0FBQSxHQUFBRSxDQUFBOzs7Ozs7O0FBSHhCOzs7QUFHQTs7Ozs7O1dBQXdCQyxVQUFBOzs7Ozs7OztrQ0FWdUI7QUFVaEMsU0FBU0EsV0FBVztFQUFFQyxRQUFRO0VBQUVDLFFBQUE7RUFBQTtFQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxVQUFXLElBQUk7QUFBQSxDQUFtQjtFQUFBO0VBQUFOLGNBQUEsR0FBQU8sQ0FBQTtFQUMvRSxNQUFNLENBQUNDLFVBQUEsRUFBWUMsYUFBQSxDQUFjO0VBQUE7RUFBQSxDQUFBVCxjQUFBLEdBQUFFLENBQUEsT0FBRyxJQUFBUSxNQUFBLENBQUFDLFFBQVEsRUFBQztFQUFBO0VBQUFYLGNBQUEsR0FBQUUsQ0FBQTtFQUU3QyxJQUFBUSxNQUFBLENBQUFFLFNBQVMsRUFBQztJQUFBO0lBQUFaLGNBQUEsR0FBQU8sQ0FBQTtJQUFBUCxjQUFBLEdBQUFFLENBQUE7SUFDUk8sYUFBQSxDQUFjO0VBQ2hCLEdBQUcsRUFBRTtFQUFBO0VBQUFULGNBQUEsR0FBQUUsQ0FBQTtFQUVMLElBQUksQ0FBQ00sVUFBQSxFQUFZO0lBQUE7SUFBQVIsY0FBQSxHQUFBTSxDQUFBO0lBQUFOLGNBQUEsR0FBQUUsQ0FBQTtJQUNmLG9CQUFPLElBQUFXLFdBQUEsQ0FBQUMsR0FBQSxFQUFBRCxXQUFBLENBQUFFLFFBQUE7Z0JBQUdWOztFQUNaO0VBQUE7RUFBQTtJQUFBTCxjQUFBLEdBQUFNLENBQUE7RUFBQTtFQUFBTixjQUFBLEdBQUFFLENBQUE7RUFFQSxvQkFBTyxJQUFBVyxXQUFBLENBQUFDLEdBQUEsRUFBQUQsV0FBQSxDQUFBRSxRQUFBO2NBQUdYOztBQUNaIiwiaWdub3JlTGlzdCI6W119