{"version":3,"names":["_default","EXCHANGE_EVENT_ABI","cov_2rr6a9gfex","s","initialState","transactions","loading","error","formatTimestamp","timestamp","f","date","Date","toLocaleString","truncateHash","hash","slice","TransactionHistory","className","maxItems","b","address","isConnected","_wagmi","useAccount","state","setState","_react","useState","useEffect","fetchTransactionHistory","_walletService","hasEthereum","prev","provider","_ethers","ethers","BrowserProvider","window","ethereum","exchangeContract","Contract","_contracts","CONTRACT_ADDRESSES","exchange","filter","filters","TokensExchanged","events","queryFilter","txHistory","map","event","transactionHash","args","bnbAmount","formatEther","tokenAmount","Number","round","price","sortedHistory","sort","a","err","console","renderTableRows","useMemo","tx","index","_jsxruntime","jsxs","jsx","href","target","rel","parseFloat","toFixed","renderContent","length","Fragment"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/TransactionHistory.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { ethers, formatEther, parseEther } from 'ethers';\nimport { CONTRACT_ADDRESSES } from './constants/contracts';\nimport { useAccount } from 'wagmi';\nimport { hasEthereum } from './services/walletService';\n\n// 交易事件 ABI\nconst EXCHANGE_EVENT_ABI = [\n  \"event TokensExchanged(address indexed user, uint256 bnbAmount, uint256 tokenAmount, uint256 timestamp, uint256 round, uint256 price)\"\n];\n\ninterface Transaction {\n  hash: string;\n  bnbAmount: string;\n  tokenAmount: string;\n  timestamp: number;\n  round: number;\n  price: string;\n}\n\ninterface TransactionHistoryProps {\n  className?: string;\n  maxItems?: number;\n}\n\ninterface TransactionHistoryState {\n  transactions: Transaction[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: TransactionHistoryState = {\n  transactions: [],\n  loading: true,\n  error: null\n};\n\n// 工具函数\nconst formatTimestamp = (timestamp: number): string => {\n  const date = new Date(timestamp * 1000);\n  return date.toLocaleString();\n};\n\nconst truncateHash = (hash: string): string => {\n  return `${hash.slice(0, 6)}...${hash.slice(-4)}`;\n};\n\nconst TransactionHistory: React.FC<TransactionHistoryProps> = ({\n  className,\n  maxItems = 5\n}) => {\n  const { address, isConnected } = useAccount();\n  const [state, setState] = useState<TransactionHistoryState>(initialState);\n  const { transactions, loading, error } = state;\n\n  useEffect(() => {\n    const fetchTransactionHistory = async () => {\n      if (!isConnected || !address || !hasEthereum()) {\n        setState(prev => ({ ...prev, loading: false }));\n        return;\n      }\n\n      try {\n        setState(prev => ({ ...prev, loading: true, error: null }));\n\n        // 连接到以太坊网络\n        const provider = new ethers.BrowserProvider(window.ethereum);\n\n        // 创建合约实例\n        const exchangeContract = new ethers.Contract(\n          CONTRACT_ADDRESSES.exchange,\n          EXCHANGE_EVENT_ABI,\n          provider\n        );\n\n        // 创建过滤器，只获取当前用户的交易\n        const filter = exchangeContract.filters.TokensExchanged(address);\n\n        // 获取过去的事件（最近1000个区块）\n        const events = await exchangeContract.queryFilter(filter, -1000);\n\n        // 处理事件数据\n        const txHistory = events.map((event) => {\n          const { transactionHash, args } = event;\n\n          return {\n            hash: transactionHash,\n            bnbAmount: formatEther(args?.bnbAmount || 0),\n            tokenAmount: formatEther(args?.tokenAmount || 0),\n            timestamp: Number(args?.timestamp || 0),\n            round: Number(args?.round || 0),\n            price: formatEther(args?.price || 0)\n          };\n        });\n\n        // 按时间戳排序，最新的在前面\n        const sortedHistory = txHistory.sort((a, b) => b.timestamp - a.timestamp);\n\n        // 限制显示的条目数\n        setState({\n          transactions: sortedHistory.slice(0, maxItems),\n          loading: false,\n          error: null\n        });\n      } catch (err) {\n        console.error('获取交易历史失败:', err);\n        setState({\n          transactions: [],\n          loading: false,\n          error: '获取交易历史失败，请稍后再试'\n        });\n      }\n    };\n\n    fetchTransactionHistory();\n  }, [address, isConnected, maxItems]);\n\n  // 渲染表格行\n  const renderTableRows = useMemo(() => {\n    return transactions.map((tx, index) => (\n      <tr key={tx.hash} className={index % 2 === 0 ? 'bg-gray-900' : 'bg-gray-800'}>\n        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-blue-400\">\n          <a\n            href={`https://testnet.bscscan.com/tx/${tx.hash}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {truncateHash(tx.hash)}\n          </a>\n        </td>\n        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-white\">{parseFloat(tx.bnbAmount).toFixed(4)}</td>\n        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-white\">{parseFloat(tx.tokenAmount).toFixed(2)}</td>\n        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-white\">{formatTimestamp(tx.timestamp)}</td>\n        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-white\">{tx.round}</td>\n        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-white\">{parseFloat(tx.price).toFixed(12)}</td>\n      </tr>\n    ));\n  }, [transactions]);\n\n  // 渲染内容\n  const renderContent = () => {\n    if (!isConnected) {\n      return <p className=\"text-center text-gray-400\">请连接钱包查看您的交易历史</p>;\n    }\n\n    if (loading) {\n      return <p className=\"text-center text-gray-400\">加载中...</p>;\n    }\n\n    if (error) {\n      return <p className=\"text-center text-red-500\">{error}</p>;\n    }\n\n    if (transactions.length === 0) {\n      return (\n        <>\n          <h2 className=\"text-xl font-bold mb-4 text-white\">交易历史</h2>\n          <p className=\"text-center text-gray-400\">暂无交易记录</p>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <h2 className=\"text-xl font-bold mb-4 text-white\">交易历史</h2>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-700\">\n            <thead>\n              <tr>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">交易哈希</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">BNB 数量</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">SM 数量</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">时间</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">轮次</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">价格</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-700\">\n              {renderTableRows}\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div className={`p-4 rounded-lg bg-gray-800 ${className}`}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default TransactionHistory;\n"],"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","ignoreList":[]}