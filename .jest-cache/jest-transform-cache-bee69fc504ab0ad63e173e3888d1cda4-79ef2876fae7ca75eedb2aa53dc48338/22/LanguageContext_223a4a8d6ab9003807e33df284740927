fbccc81d9079f82ca5ce8fc2a2315e83
'use client';
"use strict";

/* istanbul ignore next */
function cov_149u1sv70l() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/LanguageContext.tsx";
  var hash = "bc77ac087ea59811d5197a111e8d132476b238d4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/LanguageContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 14
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "10": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "11": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "12": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "13": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "15": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 19
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "19": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "20": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "22": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "24": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "26": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "27": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "29": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "34": {
        start: {
          line: 64,
          column: 38
        },
        end: {
          line: 64,
          column: 74
        }
      },
      "35": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 73
        }
      },
      "36": {
        start: {
          line: 67,
          column: 14
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "37": {
        start: {
          line: 67,
          column: 21
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "38": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 75,
          column: 7
        }
      },
      "39": {
        start: {
          line: 78,
          column: 20
        },
        end: {
          line: 78,
          column: 59
        }
      },
      "40": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "41": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 78
        }
      },
      "42": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 23
          }
        },
        loc: {
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 16,
            column: 18
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 34
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "LanguageProvider",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 25
          }
        },
        loc: {
          start: {
            line: 65,
            column: 40
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 14
          },
          end: {
            line: 67,
            column: 15
          }
        },
        loc: {
          start: {
            line: 67,
            column: 21
          },
          end: {
            line: 67,
            column: 59
          }
        },
        line: 67
      },
      "8": {
        name: "useLanguage",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 20
          }
        },
        loc: {
          start: {
            line: 77,
            column: 23
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 65
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 47
          }
        }, {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 76
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 31
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 57
          },
          end: {
            line: 47,
            column: 88
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 79
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 88
          }
        }, {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 50,
            column: 95
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 33
          }
        }, {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/contexts/LanguageContext.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { Locale, defaultLocale, getTranslation } from '@/lib/i18n';\n\ninterface LanguageContextType {\n  locale: Locale;\n  setLocale: (locale: Locale) => void;\n  t: (key: string) => string;\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nexport function LanguageProvider({ children }: { children: React.ReactNode }) {\n  const [locale, setLocale] = useState<Locale>(defaultLocale);\n  const t = (key: string) => getTranslation(locale, key);\n\n  return (\n    <LanguageContext.Provider value={{ locale, setLocale, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n"],
      names: ["LanguageProvider", "useLanguage", "LanguageContext", "createContext", "undefined", "children", "locale", "setLocale", "useState", "defaultLocale", "t", "key", "getTranslation", "Provider", "value", "context", "useContext", "Error"],
      mappings: "AAAA;;;;;;;;;;;;IAagBA,gBAAgB;eAAhBA;;IAWAC,WAAW;eAAXA;;;;+DAtB2C;sBACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtD,MAAMC,gCAAkBC,IAAAA,oBAAa,EAAkCC;AAEhE,SAASJ,iBAAiB,EAAEK,QAAQ,EAAiC;IAC1E,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAASC,mBAAa;IAC1D,MAAMC,IAAI,CAACC,MAAgBC,IAAAA,oBAAc,EAACN,QAAQK;IAElD,qBACE,qBAACT,gBAAgBW,QAAQ;QAACC,OAAO;YAAER;YAAQC;YAAWG;QAAE;kBACrDL;;AAGP;AAEO,SAASJ;IACd,MAAMc,UAAUC,IAAAA,iBAAU,EAACd;IAC3B,IAAI,CAACa,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IACA,OAAOF;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bc77ac087ea59811d5197a111e8d132476b238d4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_149u1sv70l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_149u1sv70l();
cov_149u1sv70l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_149u1sv70l().f[0]++;
  cov_149u1sv70l().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_149u1sv70l().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_149u1sv70l().s[3]++;
_export(exports, {
  LanguageProvider: function () {
    /* istanbul ignore next */
    cov_149u1sv70l().f[1]++;
    cov_149u1sv70l().s[4]++;
    return LanguageProvider;
  },
  useLanguage: function () {
    /* istanbul ignore next */
    cov_149u1sv70l().f[2]++;
    cov_149u1sv70l().s[5]++;
    return useLanguage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_149u1sv70l().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_149u1sv70l().s[7]++, _interop_require_wildcard(require("react")));
const _i18n =
/* istanbul ignore next */
(cov_149u1sv70l().s[8]++, require("../lib/i18n"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_149u1sv70l().f[3]++;
  cov_149u1sv70l().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_149u1sv70l().b[0][0]++;
    cov_149u1sv70l().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_149u1sv70l().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_149u1sv70l().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_149u1sv70l().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_149u1sv70l().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_149u1sv70l().f[4]++;
    cov_149u1sv70l().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_149u1sv70l().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_149u1sv70l().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_149u1sv70l().f[5]++;
  cov_149u1sv70l().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_149u1sv70l().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_149u1sv70l().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_149u1sv70l().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_149u1sv70l().b[2][0]++;
    cov_149u1sv70l().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_149u1sv70l().b[2][1]++;
  }
  cov_149u1sv70l().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_149u1sv70l().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_149u1sv70l().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_149u1sv70l().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_149u1sv70l().b[4][0]++;
    cov_149u1sv70l().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_149u1sv70l().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_149u1sv70l().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_149u1sv70l().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_149u1sv70l().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_149u1sv70l().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_149u1sv70l().b[6][0]++;
    cov_149u1sv70l().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_149u1sv70l().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_149u1sv70l().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_149u1sv70l().s[23]++,
  /* istanbul ignore next */
  (cov_149u1sv70l().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_149u1sv70l().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_149u1sv70l().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_149u1sv70l().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_149u1sv70l().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_149u1sv70l().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_149u1sv70l().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_149u1sv70l().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_149u1sv70l().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_149u1sv70l().b[11][1]++, null));
      /* istanbul ignore next */
      cov_149u1sv70l().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_149u1sv70l().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_149u1sv70l().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_149u1sv70l().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_149u1sv70l().b[12][0]++;
        cov_149u1sv70l().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_149u1sv70l().b[12][1]++;
        cov_149u1sv70l().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_149u1sv70l().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_149u1sv70l().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_149u1sv70l().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_149u1sv70l().b[14][0]++;
    cov_149u1sv70l().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_149u1sv70l().b[14][1]++;
  }
  cov_149u1sv70l().s[33]++;
  return newObj;
}
const LanguageContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_149u1sv70l().s[34]++, (0, _react.createContext)(undefined));
function LanguageProvider({
  children
}) {
  /* istanbul ignore next */
  cov_149u1sv70l().f[6]++;
  const [locale, setLocale] =
  /* istanbul ignore next */
  (cov_149u1sv70l().s[35]++, (0, _react.useState)(_i18n.defaultLocale));
  /* istanbul ignore next */
  cov_149u1sv70l().s[36]++;
  const t = key => {
    /* istanbul ignore next */
    cov_149u1sv70l().f[7]++;
    cov_149u1sv70l().s[37]++;
    return (0, _i18n.getTranslation)(locale, key);
  };
  /* istanbul ignore next */
  cov_149u1sv70l().s[38]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(LanguageContext.Provider, {
    value: {
      locale,
      setLocale,
      t
    },
    children: children
  });
}
function useLanguage() {
  /* istanbul ignore next */
  cov_149u1sv70l().f[8]++;
  const context =
  /* istanbul ignore next */
  (cov_149u1sv70l().s[39]++, (0, _react.useContext)(LanguageContext));
  /* istanbul ignore next */
  cov_149u1sv70l().s[40]++;
  if (!context) {
    /* istanbul ignore next */
    cov_149u1sv70l().b[15][0]++;
    cov_149u1sv70l().s[41]++;
    throw new Error('useLanguage must be used within a LanguageProvider');
  } else
  /* istanbul ignore next */
  {
    cov_149u1sv70l().b[15][1]++;
  }
  cov_149u1sv70l().s[42]++;
  return context;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTQ5dTFzdjcwbCIsImFjdHVhbENvdmVyYWdlIiwicyIsIkxhbmd1YWdlUHJvdmlkZXIiLCJmIiwidXNlTGFuZ3VhZ2UiLCJMYW5ndWFnZUNvbnRleHQiLCJfcmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidW5kZWZpbmVkIiwiY2hpbGRyZW4iLCJsb2NhbGUiLCJzZXRMb2NhbGUiLCJ1c2VTdGF0ZSIsIl9pMThuIiwiZGVmYXVsdExvY2FsZSIsInQiLCJrZXkiLCJnZXRUcmFuc2xhdGlvbiIsIl9qc3hydW50aW1lIiwianN4IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImNvbnRleHQiLCJ1c2VDb250ZXh0IiwiYiIsIkVycm9yIl0sInNvdXJjZXMiOlsiL1VzZXJzL3l1ZGV5b3UvRGVza3RvcC9zbS9zb2Npb21pbnQvc3JjL2NvbnRleHRzL0xhbmd1YWdlQ29udGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMb2NhbGUsIGRlZmF1bHRMb2NhbGUsIGdldFRyYW5zbGF0aW9uIH0gZnJvbSAnQC9saWIvaTE4bic7XG5cbmludGVyZmFjZSBMYW5ndWFnZUNvbnRleHRUeXBlIHtcbiAgbG9jYWxlOiBMb2NhbGU7XG4gIHNldExvY2FsZTogKGxvY2FsZTogTG9jYWxlKSA9PiB2b2lkO1xuICB0OiAoa2V5OiBzdHJpbmcpID0+IHN0cmluZztcbn1cblxuY29uc3QgTGFuZ3VhZ2VDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxMYW5ndWFnZUNvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG5leHBvcnQgZnVuY3Rpb24gTGFuZ3VhZ2VQcm92aWRlcih7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG4gIGNvbnN0IFtsb2NhbGUsIHNldExvY2FsZV0gPSB1c2VTdGF0ZTxMb2NhbGU+KGRlZmF1bHRMb2NhbGUpO1xuICBjb25zdCB0ID0gKGtleTogc3RyaW5nKSA9PiBnZXRUcmFuc2xhdGlvbihsb2NhbGUsIGtleSk7XG5cbiAgcmV0dXJuIChcbiAgICA8TGFuZ3VhZ2VDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IGxvY2FsZSwgc2V0TG9jYWxlLCB0IH19PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvTGFuZ3VhZ2VDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlTGFuZ3VhZ2UoKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KExhbmd1YWdlQ29udGV4dCk7XG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlTGFuZ3VhZ2UgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIExhbmd1YWdlUHJvdmlkZXInKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXdCZ0I7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBWEFDLGdCQUFnQixXQUFBQSxDQUFBO0lBQUE7SUFBQUgsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtXQUFoQkMsZ0JBQUE7O0VBV0FFLFdBQVcsV0FBQUEsQ0FBQTtJQUFBO0lBQUFMLGNBQUEsR0FBQUksQ0FBQTtJQUFBSixjQUFBLEdBQUFFLENBQUE7V0FBWEcsV0FBQTs7Ozs7Ozs7eUVBdEIyQzs7O2tDQUNMOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUXRELE1BQU1DLGVBQUE7QUFBQTtBQUFBLGNBQUFOLGNBQUEsR0FBQUUsQ0FBQSxRQUFrQixJQUFBSyxNQUFBLENBQUFDLGFBQWEsRUFBa0NDLFNBQUE7QUFFaEUsU0FBU04saUJBQWlCO0VBQUVPO0FBQVEsQ0FBaUM7RUFBQTtFQUFBVixjQUFBLEdBQUFJLENBQUE7RUFDMUUsTUFBTSxDQUFDTyxNQUFBLEVBQVFDLFNBQUEsQ0FBVTtFQUFBO0VBQUEsQ0FBQVosY0FBQSxHQUFBRSxDQUFBLFFBQUcsSUFBQUssTUFBQSxDQUFBTSxRQUFRLEVBQVNDLEtBQUEsQ0FBQUMsYUFBYTtFQUFBO0VBQUFmLGNBQUEsR0FBQUUsQ0FBQTtFQUMxRCxNQUFNYyxDQUFBLEdBQUtDLEdBQUEsSUFBZ0I7SUFBQTtJQUFBakIsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtJQUFBLFdBQUFZLEtBQUEsQ0FBQUksY0FBYyxFQUFDUCxNQUFBLEVBQVFNLEdBQUE7RUFBQTtFQUFBO0VBQUFqQixjQUFBLEdBQUFFLENBQUE7RUFFbEQsb0JBQ0UsSUFBQWlCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDZCxlQUFBLENBQWdCZSxRQUFRO0lBQUNDLEtBQUEsRUFBTztNQUFFWCxNQUFBO01BQVFDLFNBQUE7TUFBV0k7SUFBRTtjQUNyRE47O0FBR1A7QUFFTyxTQUFTTCxZQUFBO0VBQUE7RUFBQUwsY0FBQSxHQUFBSSxDQUFBO0VBQ2QsTUFBTW1CLE9BQUE7RUFBQTtFQUFBLENBQUF2QixjQUFBLEdBQUFFLENBQUEsUUFBVSxJQUFBSyxNQUFBLENBQUFpQixVQUFVLEVBQUNsQixlQUFBO0VBQUE7RUFBQU4sY0FBQSxHQUFBRSxDQUFBO0VBQzNCLElBQUksQ0FBQ3FCLE9BQUEsRUFBUztJQUFBO0lBQUF2QixjQUFBLEdBQUF5QixDQUFBO0lBQUF6QixjQUFBLEdBQUFFLENBQUE7SUFDWixNQUFNLElBQUl3QixLQUFBLENBQU07RUFDbEI7RUFBQTtFQUFBO0lBQUExQixjQUFBLEdBQUF5QixDQUFBO0VBQUE7RUFBQXpCLGNBQUEsR0FBQUUsQ0FBQTtFQUNBLE9BQU9xQixPQUFBO0FBQ1QiLCJpZ25vcmVMaXN0IjpbXX0=