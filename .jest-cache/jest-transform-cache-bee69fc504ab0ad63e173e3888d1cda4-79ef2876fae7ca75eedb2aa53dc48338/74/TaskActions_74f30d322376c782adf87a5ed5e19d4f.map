{"version":3,"names":["_default","Option","cov_xnjq7mwhk","s","_antd","Select","confirm","Modal","taskStatusMap","taskTypeMap","TaskActions","taskId","mode","onSuccess","f","router","_router","useRouter","address","isConnected","signer","provider","_useWallet","useWallet","loading","setLoading","_react","useState","taskData","setTaskData","formData","setFormData","title","description","reward","deadline","maxParticipants","taskType","requirementText","attachments","submissionUrl","submissionText","feedback","creatorAmount","workerAmount","taskSystemAddress","process","env","NEXT_PUBLIC_TASK_SYSTEM_ADDRESS","taskEscrowAddress","NEXT_PUBLIC_TASK_ESCROW_ADDRESS","useEffect","b","fetchTaskData","response","_apiService","default","getTaskDetail","success","data","_reacthottoast","toast","error","console","handleInputChange","e","name","value","target","handleSelectChange","handleFileUpload","info","log","fileUrl","handleCreateTask","taskSystemContract","_ethers","ethers","Contract","_TaskSystemjson","taskEscrowContract","_TaskEscrowjson","rewardInWei","utils","parseEther","Math","floor","Date","getTime","parseInt","allowanceTx","approveFunds","wait","createTaskTx","createTask","JSON","stringify","push","message","handleJoinTask","joinTaskTx","joinTask","handleSubmitTask","submissionData","text","url","timestamp","now","submitTaskTx","submitTask","handleVerifyTask","isApproved","icon","_jsxruntime","jsx","_icons","ExclamationCircleOutlined","content","onOk","verifyTaskTx","verifyTask","submissions","participant_id","handleDisputeTask","disputeTaskTx","disputeTask","handleResolveDispute","resolveDisputeTx","resolveDispute","renderCreateTaskForm","jsxs","className","Input","onChange","placeholder","Textarea","rows","type","step","min","style","width","Object","entries","map","key","Upload","beforeUpload","Button","UploadOutlined","length","index","onClick","block","renderJoinTaskButton","formatEther","Tag","color","task_type","status","renderSubmitTaskForm","renderVerifyTaskForm","parse","href","rel","CheckCircleOutlined","backgroundColor","borderColor","danger","CloseCircleOutlined","renderDisputeForm","Alert","showIcon","renderResolveDisputeForm","renderContent","Spin","size"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/TaskComponents/TaskActions.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { ethers } from 'ethers';\nimport { useWallet } from '@/hooks/useWallet';\nimport { toast } from 'react-hot-toast';\nimport { Input, Button, Select, Textarea, Upload, Modal, Spin, Tag, Alert } from 'antd';\nimport { UploadOutlined, CheckCircleOutlined, CloseCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport TaskSystemABI from '@/abis/TaskSystem.json';\nimport TaskEscrowABI from '@/abis/TaskEscrow.json';\nimport apiService from '@/services/apiService';\n\nconst { Option } = Select;\nconst { confirm } = Modal;\n\n// 任务状态映射\nconst taskStatusMap = {\n  0: '草稿',\n  1: '开放',\n  2: '进行中',\n  3: '已完成',\n  4: '已取消',\n  5: '有争议'\n};\n\n// 任务类型映射\nconst taskTypeMap = {\n  0: '社交任务',\n  1: '开发任务',\n  2: '内容创作',\n  3: '测试任务',\n  4: '营销任务',\n  5: '其他'\n};\n\ninterface TaskActionsProps {\n  taskId?: string;\n  mode: 'create' | 'join' | 'submit' | 'verify' | 'dispute' | 'resolve';\n  onSuccess?: () => void;\n}\n\nconst TaskActions: React.FC<TaskActionsProps> = ({ taskId, mode, onSuccess }) => {\n  const router = useRouter();\n  const { address, isConnected, signer, provider } = useWallet();\n  const [loading, setLoading] = useState(false);\n  const [taskData, setTaskData] = useState<any>(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    reward: '',\n    deadline: '',\n    maxParticipants: '1',\n    taskType: '0',\n    requirementText: '',\n    attachments: [],\n    submissionUrl: '',\n    submissionText: '',\n    feedback: '',\n    creatorAmount: '0',\n    workerAmount: '0',\n  });\n\n  // 获取合约地址\n  const taskSystemAddress = process.env.NEXT_PUBLIC_TASK_SYSTEM_ADDRESS;\n  const taskEscrowAddress = process.env.NEXT_PUBLIC_TASK_ESCROW_ADDRESS;\n\n  // 初始化时获取任务数据\n  useEffect(() => {\n    if (taskId && mode !== 'create') {\n      fetchTaskData();\n    }\n  }, [taskId, mode]);\n\n  // 获取任务详情\n  const fetchTaskData = async () => {\n    setLoading(true);\n    try {\n      const response = await apiService.getTaskDetail(taskId!);\n      if (response.success && response.data) {\n        setTaskData(response.data);\n      } else {\n        toast.error('获取任务详情失败');\n      }\n    } catch (error) {\n      console.error('获取任务详情出错:', error);\n      toast.error('获取任务详情失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理表单输入变化\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  // 处理选择框变化\n  const handleSelectChange = (value: string, name: string) => {\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  // 处理文件上传\n  const handleFileUpload = (info: any) => {\n    // 这里可以接入IPFS或其他存储服务\n    console.log('文件上传:', info);\n    // 假设我们得到了文件URL\n    const fileUrl = 'https://example.com/files/sample.pdf';\n    \n    setFormData({\n      ...formData,\n      attachments: [...formData.attachments, fileUrl],\n    });\n  };\n\n  // 创建任务\n  const handleCreateTask = async () => {\n    if (!isConnected || !signer) {\n      toast.error('请先连接钱包');\n      return;\n    }\n\n    // 校验表单\n    if (!formData.title || !formData.description || !formData.reward) {\n      toast.error('请填写完整信息');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // 获取任务系统合约实例\n      const taskSystemContract = new ethers.Contract(\n        taskSystemAddress!,\n        TaskSystemABI,\n        signer\n      );\n\n      // 获取任务托管合约实例\n      const taskEscrowContract = new ethers.Contract(\n        taskEscrowAddress!,\n        TaskEscrowABI,\n        signer\n      );\n\n      // 准备任务数据\n      const rewardInWei = ethers.utils.parseEther(formData.reward);\n      const deadline = Math.floor(new Date(formData.deadline).getTime() / 1000);\n      const maxParticipants = parseInt(formData.maxParticipants);\n      const taskType = parseInt(formData.taskType);\n\n      // 先授权代币额度给托管合约\n      const allowanceTx = await taskEscrowContract.approveFunds(rewardInWei);\n      await allowanceTx.wait();\n      toast.success('代币授权成功');\n\n      // 创建任务\n      const createTaskTx = await taskSystemContract.createTask(\n        formData.title,\n        formData.description,\n        rewardInWei,\n        deadline,\n        maxParticipants,\n        taskType,\n        formData.requirementText,\n        JSON.stringify(formData.attachments)\n      );\n\n      await createTaskTx.wait();\n      toast.success('任务创建成功');\n\n      if (onSuccess) {\n        onSuccess();\n      } else {\n        router.push('/tasks');\n      }\n    } catch (error: any) {\n      console.error('创建任务失败:', error);\n      toast.error(`创建任务失败: ${error.message || '未知错误'}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 加入任务\n  const handleJoinTask = async () => {\n    if (!isConnected || !signer || !taskId) {\n      toast.error('请先连接钱包');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // 获取任务系统合约实例\n      const taskSystemContract = new ethers.Contract(\n        taskSystemAddress!,\n        TaskSystemABI,\n        signer\n      );\n\n      // 加入任务\n      const joinTaskTx = await taskSystemContract.joinTask(taskId);\n      await joinTaskTx.wait();\n      toast.success('成功加入任务');\n\n      if (onSuccess) {\n        onSuccess();\n      } else {\n        router.push(`/tasks/${taskId}`);\n      }\n    } catch (error: any) {\n      console.error('加入任务失败:', error);\n      toast.error(`加入任务失败: ${error.message || '未知错误'}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 提交任务\n  const handleSubmitTask = async () => {\n    if (!isConnected || !signer || !taskId) {\n      toast.error('请先连接钱包');\n      return;\n    }\n\n    // 校验表单\n    if (!formData.submissionText && !formData.submissionUrl) {\n      toast.error('请提供提交内容或URL');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // 获取任务系统合约实例\n      const taskSystemContract = new ethers.Contract(\n        taskSystemAddress!,\n        TaskSystemABI,\n        signer\n      );\n\n      // 准备提交数据\n      const submissionData = {\n        text: formData.submissionText,\n        url: formData.submissionUrl,\n        timestamp: Math.floor(Date.now() / 1000)\n      };\n\n      // 提交任务\n      const submitTaskTx = await taskSystemContract.submitTask(\n        taskId,\n        JSON.stringify(submissionData)\n      );\n      await submitTaskTx.wait();\n      toast.success('任务提交成功');\n\n      if (onSuccess) {\n        onSuccess();\n      } else {\n        router.push(`/tasks/${taskId}`);\n      }\n    } catch (error: any) {\n      console.error('提交任务失败:', error);\n      toast.error(`提交任务失败: ${error.message || '未知错误'}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 验证任务\n  const handleVerifyTask = async (isApproved: boolean) => {\n    if (!isConnected || !signer || !taskId || !taskData) {\n      toast.error('请先连接钱包');\n      return;\n    }\n\n    // 确认对话框\n    confirm({\n      title: isApproved ? '确认通过该任务提交?' : '确认拒绝该任务提交?',\n      icon: <ExclamationCircleOutlined />,\n      content: isApproved \n        ? '通过后，任务奖励将发放给参与者' \n        : '拒绝后，参与者需要重新提交任务',\n      onOk: async () => {\n        setLoading(true);\n        try {\n          // 获取任务系统合约实例\n          const taskSystemContract = new ethers.Contract(\n            taskSystemAddress!,\n            TaskSystemABI,\n            signer\n          );\n\n          // 验证任务\n          const verifyTaskTx = await taskSystemContract.verifyTask(\n            taskId,\n            taskData.submissions[0].participant_id,\n            isApproved,\n            formData.feedback\n          );\n          await verifyTaskTx.wait();\n          toast.success(isApproved ? '任务已验证通过' : '任务已拒绝');\n\n          if (onSuccess) {\n            onSuccess();\n          } else {\n            router.push(`/tasks/${taskId}`);\n          }\n        } catch (error: any) {\n          console.error('验证任务失败:', error);\n          toast.error(`验证任务失败: ${error.message || '未知错误'}`);\n        } finally {\n          setLoading(false);\n        }\n      },\n    });\n  };\n\n  // 发起争议\n  const handleDisputeTask = async () => {\n    if (!isConnected || !signer || !taskId) {\n      toast.error('请先连接钱包');\n      return;\n    }\n\n    // 确认对话框\n    confirm({\n      title: '确认发起争议?',\n      icon: <ExclamationCircleOutlined />,\n      content: '发起争议后，平台会介入处理。请确保您有充分的理由。',\n      onOk: async () => {\n        setLoading(true);\n        try {\n          // 获取任务系统合约实例\n          const taskSystemContract = new ethers.Contract(\n            taskSystemAddress!,\n            TaskSystemABI,\n            signer\n          );\n\n          // 发起争议\n          const disputeTaskTx = await taskSystemContract.disputeTask(\n            taskId,\n            formData.feedback\n          );\n          await disputeTaskTx.wait();\n          toast.success('争议已发起');\n\n          if (onSuccess) {\n            onSuccess();\n          } else {\n            router.push(`/tasks/${taskId}`);\n          }\n        } catch (error: any) {\n          console.error('发起争议失败:', error);\n          toast.error(`发起争议失败: ${error.message || '未知错误'}`);\n        } finally {\n          setLoading(false);\n        }\n      },\n    });\n  };\n\n  // 解决争议\n  const handleResolveDispute = async () => {\n    if (!isConnected || !signer || !taskId) {\n      toast.error('请先连接钱包');\n      return;\n    }\n\n    // 校验表单\n    if (!formData.creatorAmount || !formData.workerAmount) {\n      toast.error('请填写分配金额');\n      return;\n    }\n\n    // 确认对话框\n    confirm({\n      title: '确认解决争议?',\n      icon: <ExclamationCircleOutlined />,\n      content: `创建者将获得 ${formData.creatorAmount} ETH，工作者将获得 ${formData.workerAmount} ETH`,\n      onOk: async () => {\n        setLoading(true);\n        try {\n          // 获取任务托管合约实例\n          const taskEscrowContract = new ethers.Contract(\n            taskEscrowAddress!,\n            TaskEscrowABI,\n            signer\n          );\n\n          // 解决争议\n          const creatorAmount = ethers.utils.parseEther(formData.creatorAmount);\n          const workerAmount = ethers.utils.parseEther(formData.workerAmount);\n          \n          const resolveDisputeTx = await taskEscrowContract.resolveDispute(\n            taskId,\n            creatorAmount,\n            workerAmount\n          );\n          await resolveDisputeTx.wait();\n          toast.success('争议已解决');\n\n          if (onSuccess) {\n            onSuccess();\n          } else {\n            router.push(`/tasks/${taskId}`);\n          }\n        } catch (error: any) {\n          console.error('解决争议失败:', error);\n          toast.error(`解决争议失败: ${error.message || '未知错误'}`);\n        } finally {\n          setLoading(false);\n        }\n      },\n    });\n  };\n\n  // 渲染创建任务表单\n  const renderCreateTaskForm = () => (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-xl font-bold\">创建新任务</h2>\n      \n      <div>\n        <label className=\"block mb-1\">任务标题</label>\n        <Input \n          name=\"title\"\n          value={formData.title}\n          onChange={handleInputChange}\n          placeholder=\"输入任务标题\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">任务描述</label>\n        <Textarea \n          name=\"description\"\n          value={formData.description}\n          onChange={handleInputChange}\n          placeholder=\"详细描述任务内容和要求\"\n          rows={4}\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">奖励金额 (ETH)</label>\n        <Input \n          name=\"reward\"\n          value={formData.reward}\n          onChange={handleInputChange}\n          placeholder=\"0.1\"\n          type=\"number\"\n          step=\"0.01\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">截止日期</label>\n        <Input \n          name=\"deadline\"\n          value={formData.deadline}\n          onChange={handleInputChange}\n          type=\"datetime-local\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">最大参与人数</label>\n        <Input \n          name=\"maxParticipants\"\n          value={formData.maxParticipants}\n          onChange={handleInputChange}\n          placeholder=\"1\"\n          type=\"number\"\n          min=\"1\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">任务类型</label>\n        <Select\n          value={formData.taskType}\n          onChange={(value) => handleSelectChange(value, 'taskType')}\n          style={{ width: '100%' }}\n        >\n          {Object.entries(taskTypeMap).map(([key, value]) => (\n            <Option key={key} value={key}>{value}</Option>\n          ))}\n        </Select>\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">要求详情</label>\n        <Textarea \n          name=\"requirementText\"\n          value={formData.requirementText}\n          onChange={handleInputChange}\n          placeholder=\"详细描述完成任务需要满足的要求\"\n          rows={3}\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">附件</label>\n        <Upload \n          beforeUpload={() => false}\n          onChange={handleFileUpload}\n        >\n          <Button icon={<UploadOutlined />}>上传文件</Button>\n        </Upload>\n        {formData.attachments.length > 0 && (\n          <div className=\"mt-2\">\n            {formData.attachments.map((url, index) => (\n              <div key={index} className=\"text-sm text-blue-500\">{url}</div>\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"mt-6\">\n        <Button \n          type=\"primary\" \n          onClick={handleCreateTask} \n          loading={loading}\n          block\n        >\n          创建任务\n        </Button>\n      </div>\n    </div>\n  );\n\n  // 渲染加入任务按钮\n  const renderJoinTaskButton = () => (\n    <div>\n      {taskData && (\n        <div className=\"mb-4\">\n          <h3 className=\"text-lg font-bold\">{taskData.title}</h3>\n          <p className=\"text-sm text-gray-500\">奖励: {ethers.utils.formatEther(taskData.reward)} ETH</p>\n          <div className=\"mt-2\">\n            <Tag color=\"blue\">{taskTypeMap[taskData.task_type]}</Tag>\n            <Tag color=\"green\">{taskStatusMap[taskData.status]}</Tag>\n          </div>\n        </div>\n      )}\n      \n      <Button \n        type=\"primary\" \n        onClick={handleJoinTask} \n        loading={loading}\n        block\n      >\n        加入任务\n      </Button>\n    </div>\n  );\n\n  // 渲染提交任务表单\n  const renderSubmitTaskForm = () => (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-xl font-bold\">提交任务</h2>\n      \n      {taskData && (\n        <div className=\"mb-4\">\n          <h3 className=\"text-lg\">{taskData.title}</h3>\n          <div className=\"mt-1\">\n            <Tag color=\"blue\">{taskTypeMap[taskData.task_type]}</Tag>\n          </div>\n        </div>\n      )}\n      \n      <div>\n        <label className=\"block mb-1\">提交内容</label>\n        <Textarea \n          name=\"submissionText\"\n          value={formData.submissionText}\n          onChange={handleInputChange}\n          placeholder=\"描述您的工作成果\"\n          rows={4}\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">提交URL</label>\n        <Input \n          name=\"submissionUrl\"\n          value={formData.submissionUrl}\n          onChange={handleInputChange}\n          placeholder=\"相关链接或作品URL\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">附件</label>\n        <Upload \n          beforeUpload={() => false}\n          onChange={handleFileUpload}\n        >\n          <Button icon={<UploadOutlined />}>上传文件</Button>\n        </Upload>\n      </div>\n      \n      <div className=\"mt-6\">\n        <Button \n          type=\"primary\" \n          onClick={handleSubmitTask} \n          loading={loading}\n          block\n        >\n          提交任务\n        </Button>\n      </div>\n    </div>\n  );\n\n  // 渲染验证任务表单\n  const renderVerifyTaskForm = () => (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-xl font-bold\">验证任务</h2>\n      \n      {taskData && (\n        <div className=\"mb-4\">\n          <h3 className=\"text-lg\">{taskData.title}</h3>\n          {taskData.submissions && taskData.submissions.length > 0 && (\n            <div className=\"mt-4 p-4 bg-gray-50 rounded-md\">\n              <h4 className=\"font-medium\">提交内容:</h4>\n              <p className=\"mt-2\">{JSON.parse(taskData.submissions[0].content).text}</p>\n              {JSON.parse(taskData.submissions[0].content).url && (\n                <p className=\"mt-1\">\n                  <a \n                    href={JSON.parse(taskData.submissions[0].content).url} \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"text-blue-500 underline\"\n                  >\n                    查看提交链接\n                  </a>\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      \n      <div>\n        <label className=\"block mb-1\">反馈意见</label>\n        <Textarea \n          name=\"feedback\"\n          value={formData.feedback}\n          onChange={handleInputChange}\n          placeholder=\"可选的反馈意见\"\n          rows={3}\n        />\n      </div>\n      \n      <div className=\"flex space-x-4 mt-6\">\n        <Button \n          type=\"primary\" \n          onClick={() => handleVerifyTask(true)} \n          icon={<CheckCircleOutlined />}\n          loading={loading}\n          style={{ backgroundColor: '#52c41a', borderColor: '#52c41a' }}\n        >\n          通过\n        </Button>\n        <Button \n          danger\n          onClick={() => handleVerifyTask(false)} \n          icon={<CloseCircleOutlined />}\n          loading={loading}\n        >\n          拒绝\n        </Button>\n      </div>\n    </div>\n  );\n\n  // 渲染发起争议表单\n  const renderDisputeForm = () => (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-xl font-bold\">发起争议</h2>\n      <Alert\n        message=\"重要提示\"\n        description=\"发起争议后，平台管理员将介入处理。请确保您有充分的理由支持您的争议。\"\n        type=\"warning\"\n        showIcon\n        className=\"mb-4\"\n      />\n      \n      {taskData && (\n        <div className=\"mb-4\">\n          <h3 className=\"text-lg\">{taskData.title}</h3>\n          <div className=\"mt-1\">\n            <Tag color=\"blue\">{taskTypeMap[taskData.task_type]}</Tag>\n            <Tag color=\"red\">争议中</Tag>\n          </div>\n        </div>\n      )}\n      \n      <div>\n        <label className=\"block mb-1\">争议理由</label>\n        <Textarea \n          name=\"feedback\"\n          value={formData.feedback}\n          onChange={handleInputChange}\n          placeholder=\"请详细描述您发起争议的原因...\"\n          rows={4}\n        />\n      </div>\n      \n      <div className=\"mt-6\">\n        <Button \n          danger\n          onClick={handleDisputeTask} \n          loading={loading}\n          block\n        >\n          发起争议\n        </Button>\n      </div>\n    </div>\n  );\n\n  // 渲染解决争议表单\n  const renderResolveDisputeForm = () => (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-xl font-bold\">解决争议</h2>\n      <Alert\n        message=\"重要提示\"\n        description=\"作为管理员，您需要公正地分配奖励资金。请确保您已充分了解争议情况。\"\n        type=\"warning\"\n        showIcon\n        className=\"mb-4\"\n      />\n      \n      {taskData && (\n        <div className=\"mb-4\">\n          <h3 className=\"text-lg\">{taskData.title}</h3>\n          <p className=\"text-sm text-gray-500\">总奖励: {ethers.utils.formatEther(taskData.reward)} ETH</p>\n          <div className=\"mt-1\">\n            <Tag color=\"red\">争议中</Tag>\n          </div>\n        </div>\n      )}\n      \n      <div>\n        <label className=\"block mb-1\">给创建者的金额 (ETH)</label>\n        <Input \n          name=\"creatorAmount\"\n          value={formData.creatorAmount}\n          onChange={handleInputChange}\n          placeholder=\"0.05\"\n          type=\"number\"\n          step=\"0.01\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block mb-1\">给工作者的金额 (ETH)</label>\n        <Input \n          name=\"workerAmount\"\n          value={formData.workerAmount}\n          onChange={handleInputChange}\n          placeholder=\"0.05\"\n          type=\"number\"\n          step=\"0.01\"\n        />\n      </div>\n      \n      <div className=\"mt-6\">\n        <Button \n          type=\"primary\" \n          onClick={handleResolveDispute} \n          loading={loading}\n          block\n        >\n          解决争议\n        </Button>\n      </div>\n    </div>\n  );\n\n  // 根据模式渲染不同组件\n  const renderContent = () => {\n    if (loading && !taskData && mode !== 'create') {\n      return <div className=\"flex justify-center my-8\"><Spin size=\"large\" /></div>;\n    }\n\n    switch (mode) {\n      case 'create':\n        return renderCreateTaskForm();\n      case 'join':\n        return renderJoinTaskButton();\n      case 'submit':\n        return renderSubmitTaskForm();\n      case 'verify':\n        return renderVerifyTaskForm();\n      case 'dispute':\n        return renderDisputeForm();\n      case 'resolve':\n        return renderResolveDisputeForm();\n      default:\n        return <div>未知操作模式</div>;\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default TaskActions; "],"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","ignoreList":[]}