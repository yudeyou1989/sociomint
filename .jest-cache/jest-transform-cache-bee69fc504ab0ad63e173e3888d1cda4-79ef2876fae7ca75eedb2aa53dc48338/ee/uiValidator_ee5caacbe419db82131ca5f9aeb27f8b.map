{"version":3,"names":["cov_2qa90om6bc","actualCoverage","s","UIAutoFixer","f","UIValidator","default","_default","getUISummary","validateUI","DEFAULT_CONFIG","checkAccessibility","checkResponsive","checkPerformance","checkUsability","minTouchTarget","maxTextLength","minContrast","constructor","config","b","issues","validatePage","imagesWithoutAlt","document","querySelectorAll","forEach","img","index","addIssue","type","category","element","description","suggestion","severity","inputsWithoutLabels","input","hasLabel","closest","querySelector","id","buttonsWithoutText","button","checkColorContrast","checkFocusManagement","viewportMeta","clickableElements","rect","getBoundingClientRect","width","height","tagName","toLowerCase","Math","round","body","scrollWidth","window","innerWidth","images","naturalWidth","naturalHeight","unoptimizedImages","length","elementsWithInlineStyles","textElements","text","textContent","includes","loadingElements","buttons","errorElements","getAttribute","styles","getComputedStyle","color","backgroundColor","contrast","calculateContrast","toFixed","focusableElements","skipLink","modals","modal","focusableInModal","color1","color2","random","issue","push","getIssueSummary","summary","total","errors","filter","warnings","info","byCategory","accessibility","responsive","performance","usability","bySeverity","high","medium","low","generateFixSuggestions","suggestions","map","Set","autoFix","fixMissingAltAttributes","fixMissingLabels","fixTouchTargets","fixFocusManagement","setAttribute","inputs","style","minWidth","minHeight","classList","contains","add","validator"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/utils/uiValidator.ts"],"sourcesContent":["/**\n * UI界面验证和修复工具\n * 检测和修复常见的界面问题\n */\n\n// 界面问题类型\nexport interface UIIssue {\n  type: 'error' | 'warning' | 'info';\n  category: 'accessibility' | 'responsive' | 'performance' | 'usability';\n  element: string;\n  description: string;\n  suggestion: string;\n  severity: 'high' | 'medium' | 'low';\n}\n\n// 验证规则配置\nexport interface ValidationConfig {\n  checkAccessibility: boolean;\n  checkResponsive: boolean;\n  checkPerformance: boolean;\n  checkUsability: boolean;\n  minTouchTarget: number; // 最小触摸目标大小\n  maxTextLength: number; // 最大文本长度\n  minContrast: number; // 最小对比度\n}\n\n// 默认配置\nconst DEFAULT_CONFIG: ValidationConfig = {\n  checkAccessibility: true,\n  checkResponsive: true,\n  checkPerformance: true,\n  checkUsability: true,\n  minTouchTarget: 44, // 44px\n  maxTextLength: 80, // 80字符\n  minContrast: 4.5 // WCAG AA标准\n};\n\n// UI验证器类\nexport class UIValidator {\n  private config: ValidationConfig;\n  private issues: UIIssue[] = [];\n\n  constructor(config: Partial<ValidationConfig> = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  // 验证页面\n  validatePage(): UIIssue[] {\n    this.issues = [];\n\n    if (this.config.checkAccessibility) {\n      this.checkAccessibility();\n    }\n\n    if (this.config.checkResponsive) {\n      this.checkResponsive();\n    }\n\n    if (this.config.checkPerformance) {\n      this.checkPerformance();\n    }\n\n    if (this.config.checkUsability) {\n      this.checkUsability();\n    }\n\n    return this.issues;\n  }\n\n  // 检查可访问性\n  private checkAccessibility() {\n    // 检查缺少alt属性的图片\n    const imagesWithoutAlt = document.querySelectorAll('img:not([alt])');\n    imagesWithoutAlt.forEach((img, index) => {\n      this.addIssue({\n        type: 'error',\n        category: 'accessibility',\n        element: `img[${index}]`,\n        description: '图片缺少alt属性',\n        suggestion: '为图片添加描述性的alt属性',\n        severity: 'high'\n      });\n    });\n\n    // 检查缺少标签的表单元素\n    const inputsWithoutLabels = document.querySelectorAll('input:not([aria-label]):not([aria-labelledby])');\n    inputsWithoutLabels.forEach((input, index) => {\n      const hasLabel = input.closest('label') || document.querySelector(`label[for=\"${input.id}\"]`);\n      if (!hasLabel) {\n        this.addIssue({\n          type: 'error',\n          category: 'accessibility',\n          element: `input[${index}]`,\n          description: '表单元素缺少标签',\n          suggestion: '为表单元素添加label或aria-label',\n          severity: 'high'\n        });\n      }\n    });\n\n    // 检查按钮的可访问性\n    const buttonsWithoutText = document.querySelectorAll('button:empty:not([aria-label]):not([aria-labelledby])');\n    buttonsWithoutText.forEach((button, index) => {\n      this.addIssue({\n        type: 'error',\n        category: 'accessibility',\n        element: `button[${index}]`,\n        description: '按钮缺少文本或标签',\n        suggestion: '为按钮添加文本内容或aria-label',\n        severity: 'high'\n      });\n    });\n\n    // 检查颜色对比度\n    this.checkColorContrast();\n\n    // 检查焦点管理\n    this.checkFocusManagement();\n  }\n\n  // 检查响应式设计\n  private checkResponsive() {\n    // 检查视口元标签\n    const viewportMeta = document.querySelector('meta[name=\"viewport\"]');\n    if (!viewportMeta) {\n      this.addIssue({\n        type: 'error',\n        category: 'responsive',\n        element: 'head',\n        description: '缺少viewport元标签',\n        suggestion: '添加<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">',\n        severity: 'high'\n      });\n    }\n\n    // 检查触摸目标大小\n    const clickableElements = document.querySelectorAll('button, a, input[type=\"button\"], input[type=\"submit\"]');\n    clickableElements.forEach((element, index) => {\n      const rect = element.getBoundingClientRect();\n      if (rect.width < this.config.minTouchTarget || rect.height < this.config.minTouchTarget) {\n        this.addIssue({\n          type: 'warning',\n          category: 'responsive',\n          element: `${element.tagName.toLowerCase()}[${index}]`,\n          description: `触摸目标过小 (${Math.round(rect.width)}x${Math.round(rect.height)}px)`,\n          suggestion: `确保触摸目标至少为${this.config.minTouchTarget}x${this.config.minTouchTarget}px`,\n          severity: 'medium'\n        });\n      }\n    });\n\n    // 检查水平滚动\n    if (document.body.scrollWidth > window.innerWidth) {\n      this.addIssue({\n        type: 'warning',\n        category: 'responsive',\n        element: 'body',\n        description: '页面出现水平滚动',\n        suggestion: '检查元素宽度，确保内容适应视口',\n        severity: 'medium'\n      });\n    }\n  }\n\n  // 检查性能问题\n  private checkPerformance() {\n    // 检查大图片\n    const images = document.querySelectorAll('img');\n    images.forEach((img, index) => {\n      if (img.naturalWidth > 2000 || img.naturalHeight > 2000) {\n        this.addIssue({\n          type: 'warning',\n          category: 'performance',\n          element: `img[${index}]`,\n          description: `图片尺寸过大 (${img.naturalWidth}x${img.naturalHeight})`,\n          suggestion: '优化图片尺寸或使用响应式图片',\n          severity: 'medium'\n        });\n      }\n    });\n\n    // 检查未优化的图片格式\n    const unoptimizedImages = document.querySelectorAll('img[src$=\".png\"], img[src$=\".jpg\"], img[src$=\".jpeg\"]');\n    if (unoptimizedImages.length > 0) {\n      this.addIssue({\n        type: 'info',\n        category: 'performance',\n        element: 'images',\n        description: `发现${unoptimizedImages.length}个未优化的图片`,\n        suggestion: '考虑使用WebP或AVIF格式',\n        severity: 'low'\n      });\n    }\n\n    // 检查内联样式\n    const elementsWithInlineStyles = document.querySelectorAll('[style]');\n    if (elementsWithInlineStyles.length > 10) {\n      this.addIssue({\n        type: 'warning',\n        category: 'performance',\n        element: 'various',\n        description: `发现${elementsWithInlineStyles.length}个内联样式`,\n        suggestion: '将样式移至CSS文件以提高缓存效率',\n        severity: 'low'\n      });\n    }\n  }\n\n  // 检查可用性\n  private checkUsability() {\n    // 检查长文本\n    const textElements = document.querySelectorAll('p, div, span');\n    textElements.forEach((element, index) => {\n      const text = element.textContent || '';\n      if (text.length > this.config.maxTextLength && !text.includes(' ')) {\n        this.addIssue({\n          type: 'warning',\n          category: 'usability',\n          element: `${element.tagName.toLowerCase()}[${index}]`,\n          description: '文本过长且无换行',\n          suggestion: '添加换行或缩短文本',\n          severity: 'medium'\n        });\n      }\n    });\n\n    // 检查加载状态\n    const loadingElements = document.querySelectorAll('[data-loading=\"true\"]');\n    if (loadingElements.length === 0) {\n      const buttons = document.querySelectorAll('button[disabled]');\n      if (buttons.length > 0) {\n        this.addIssue({\n          type: 'info',\n          category: 'usability',\n          element: 'buttons',\n          description: '禁用的按钮可能需要加载状态指示',\n          suggestion: '为异步操作添加加载指示器',\n          severity: 'low'\n        });\n      }\n    }\n\n    // 检查错误状态\n    const errorElements = document.querySelectorAll('.error, [data-error=\"true\"]');\n    errorElements.forEach((element, index) => {\n      if (!element.getAttribute('role') && !element.getAttribute('aria-live')) {\n        this.addIssue({\n          type: 'warning',\n          category: 'usability',\n          element: `error[${index}]`,\n          description: '错误信息缺少可访问性属性',\n          suggestion: '添加role=\"alert\"或aria-live=\"polite\"',\n          severity: 'medium'\n        });\n      }\n    });\n  }\n\n  // 检查颜色对比度\n  private checkColorContrast() {\n    const textElements = document.querySelectorAll('p, span, div, h1, h2, h3, h4, h5, h6, a, button');\n    \n    textElements.forEach((element, index) => {\n      const styles = window.getComputedStyle(element);\n      const color = styles.color;\n      const backgroundColor = styles.backgroundColor;\n      \n      // 简化的对比度检查（实际应用中需要更复杂的算法）\n      if (color && backgroundColor && color !== 'rgba(0, 0, 0, 0)' && backgroundColor !== 'rgba(0, 0, 0, 0)') {\n        const contrast = this.calculateContrast(color, backgroundColor);\n        if (contrast < this.config.minContrast) {\n          this.addIssue({\n            type: 'warning',\n            category: 'accessibility',\n            element: `${element.tagName.toLowerCase()}[${index}]`,\n            description: `颜色对比度不足 (${contrast.toFixed(2)}:1)`,\n            suggestion: `提高对比度至至少${this.config.minContrast}:1`,\n            severity: 'medium'\n          });\n        }\n      }\n    });\n  }\n\n  // 检查焦点管理\n  private checkFocusManagement() {\n    const focusableElements = document.querySelectorAll(\n      'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    // 检查跳过链接\n    const skipLink = document.querySelector('a[href^=\"#\"]:first-child');\n    if (!skipLink) {\n      this.addIssue({\n        type: 'info',\n        category: 'accessibility',\n        element: 'navigation',\n        description: '缺少跳过链接',\n        suggestion: '添加跳过导航的链接',\n        severity: 'low'\n      });\n    }\n\n    // 检查焦点陷阱（模态框）\n    const modals = document.querySelectorAll('[role=\"dialog\"], .modal');\n    modals.forEach((modal, index) => {\n      const focusableInModal = modal.querySelectorAll(\n        'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n      );\n      \n      if (focusableInModal.length === 0) {\n        this.addIssue({\n          type: 'warning',\n          category: 'accessibility',\n          element: `modal[${index}]`,\n          description: '模态框中没有可聚焦元素',\n          suggestion: '确保模态框中有可聚焦的元素',\n          severity: 'medium'\n        });\n      }\n    });\n  }\n\n  // 简化的对比度计算（实际应用中应使用更精确的算法）\n  private calculateContrast(color1: string, color2: string): number {\n    // 这里应该实现真正的对比度计算\n    // 为了简化，返回一个模拟值\n    return Math.random() * 10 + 1;\n  }\n\n  // 添加问题\n  private addIssue(issue: UIIssue) {\n    this.issues.push(issue);\n  }\n\n  // 获取问题统计\n  getIssueSummary() {\n    const summary = {\n      total: this.issues.length,\n      errors: this.issues.filter(issue => issue.type === 'error').length,\n      warnings: this.issues.filter(issue => issue.type === 'warning').length,\n      info: this.issues.filter(issue => issue.type === 'info').length,\n      byCategory: {\n        accessibility: this.issues.filter(issue => issue.category === 'accessibility').length,\n        responsive: this.issues.filter(issue => issue.category === 'responsive').length,\n        performance: this.issues.filter(issue => issue.category === 'performance').length,\n        usability: this.issues.filter(issue => issue.category === 'usability').length,\n      },\n      bySeverity: {\n        high: this.issues.filter(issue => issue.severity === 'high').length,\n        medium: this.issues.filter(issue => issue.severity === 'medium').length,\n        low: this.issues.filter(issue => issue.severity === 'low').length,\n      }\n    };\n\n    return summary;\n  }\n\n  // 生成修复建议\n  generateFixSuggestions(): string[] {\n    const suggestions = this.issues\n      .filter(issue => issue.severity === 'high')\n      .map(issue => issue.suggestion);\n\n    return [...new Set(suggestions)]; // 去重\n  }\n}\n\n// 自动修复工具\nexport class UIAutoFixer {\n  // 自动修复常见问题\n  static autoFix() {\n    this.fixMissingAltAttributes();\n    this.fixMissingLabels();\n    this.fixTouchTargets();\n    this.fixFocusManagement();\n  }\n\n  // 修复缺少alt属性的图片\n  private static fixMissingAltAttributes() {\n    const images = document.querySelectorAll('img:not([alt])');\n    images.forEach(img => {\n      img.setAttribute('alt', '图片');\n    });\n  }\n\n  // 修复缺少标签的表单元素\n  private static fixMissingLabels() {\n    const inputs = document.querySelectorAll('input:not([aria-label]):not([aria-labelledby])');\n    inputs.forEach(input => {\n      if (!input.closest('label') && !document.querySelector(`label[for=\"${input.id}\"]`)) {\n        input.setAttribute('aria-label', input.getAttribute('placeholder') || '输入字段');\n      }\n    });\n  }\n\n  // 修复触摸目标大小\n  private static fixTouchTargets() {\n    const clickableElements = document.querySelectorAll('button, a, input[type=\"button\"], input[type=\"submit\"]');\n    clickableElements.forEach(element => {\n      const rect = element.getBoundingClientRect();\n      if (rect.width < 44 || rect.height < 44) {\n        (element as HTMLElement).style.minWidth = '44px';\n        (element as HTMLElement).style.minHeight = '44px';\n      }\n    });\n  }\n\n  // 修复焦点管理\n  private static fixFocusManagement() {\n    // 为所有交互元素添加焦点样式\n    const focusableElements = document.querySelectorAll(\n      'a, button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    \n    focusableElements.forEach(element => {\n      if (!element.classList.contains('focus-visible')) {\n        element.classList.add('focus-visible');\n      }\n    });\n  }\n}\n\n// 导出验证函数\nexport const validateUI = (config?: Partial<ValidationConfig>) => {\n  const validator = new UIValidator(config);\n  return validator.validatePage();\n};\n\nexport const getUISummary = (config?: Partial<ValidationConfig>) => {\n  const validator = new UIValidator(config);\n  validator.validatePage();\n  return validator.getIssueSummary();\n};\n\nexport default {\n  UIValidator,\n  UIAutoFixer,\n  validateUI,\n  getUISummary\n};\n"],"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","ignoreList":[]}