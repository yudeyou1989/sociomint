{"version":3,"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/__tests__/utils.test.ts"],"sourcesContent":["// 简单的工具函数测试\ndescribe('Utils', () => {\n  describe('formatAddress', () => {\n    it('formats long addresses correctly', () => {\n      const formatAddress = (address: string) => {\n        if (!address) return '';\n        if (address.length <= 10) return address;\n        return `${address.slice(0, 6)}...${address.slice(-4)}`;\n      };\n\n      const longAddress = '0x1234567890abcdef1234567890abcdef12345678';\n      expect(formatAddress(longAddress)).toBe('0x1234...5678');\n    });\n\n    it('returns short addresses as is', () => {\n      const formatAddress = (address: string) => {\n        if (!address) return '';\n        if (address.length <= 10) return address;\n        return `${address.slice(0, 6)}...${address.slice(-4)}`;\n      };\n\n      const shortAddress = '0x123';\n      expect(formatAddress(shortAddress)).toBe('0x123');\n    });\n\n    it('handles empty addresses', () => {\n      const formatAddress = (address: string) => {\n        if (!address) return '';\n        if (address.length <= 10) return address;\n        return `${address.slice(0, 6)}...${address.slice(-4)}`;\n      };\n\n      expect(formatAddress('')).toBe('');\n    });\n  });\n\n  describe('formatNumber', () => {\n    it('formats numbers with commas', () => {\n      const formatNumber = (num: number) => {\n        return num.toLocaleString('zh-CN');\n      };\n\n      expect(formatNumber(1000)).toBe('1,000');\n      expect(formatNumber(1000000)).toBe('1,000,000');\n    });\n\n    it('handles decimal numbers', () => {\n      const formatNumber = (num: number, decimals: number = 2) => {\n        return num.toLocaleString('zh-CN', {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        });\n      };\n\n      expect(formatNumber(1000.123, 2)).toBe('1,000.12');\n    });\n  });\n\n  describe('validateAddress', () => {\n    it('validates Ethereum addresses', () => {\n      const validateAddress = (address: string) => {\n        return /^0x[a-fA-F0-9]{40}$/.test(address);\n      };\n\n      expect(validateAddress('0x1234567890abcdef1234567890abcdef12345678')).toBe(true);\n      expect(validateAddress('0x123')).toBe(false);\n      expect(validateAddress('invalid')).toBe(false);\n    });\n  });\n\n  describe('sleep', () => {\n    it('delays execution', async () => {\n      const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n      \n      const start = Date.now();\n      await sleep(100);\n      const end = Date.now();\n      \n      expect(end - start).toBeGreaterThanOrEqual(90); // 允许一些误差\n    });\n  });\n});\n"],"names":["describe","it","formatAddress","address","length","slice","longAddress","expect","toBe","shortAddress","formatNumber","num","toLocaleString","decimals","minimumFractionDigits","maximumFractionDigits","validateAddress","test","sleep","ms","Promise","resolve","setTimeout","start","Date","now","end","toBeGreaterThanOrEqual"],"mappings":"AAAA,YAAY;;AACZA,SAAS,SAAS;IAChBA,SAAS,iBAAiB;QACxBC,GAAG,oCAAoC;YACrC,MAAMC,gBAAgB,CAACC;gBACrB,IAAI,CAACA,SAAS,OAAO;gBACrB,IAAIA,QAAQC,MAAM,IAAI,IAAI,OAAOD;gBACjC,OAAO,GAAGA,QAAQE,KAAK,CAAC,GAAG,GAAG,GAAG,EAAEF,QAAQE,KAAK,CAAC,CAAC,IAAI;YACxD;YAEA,MAAMC,cAAc;YACpBC,OAAOL,cAAcI,cAAcE,IAAI,CAAC;QAC1C;QAEAP,GAAG,iCAAiC;YAClC,MAAMC,gBAAgB,CAACC;gBACrB,IAAI,CAACA,SAAS,OAAO;gBACrB,IAAIA,QAAQC,MAAM,IAAI,IAAI,OAAOD;gBACjC,OAAO,GAAGA,QAAQE,KAAK,CAAC,GAAG,GAAG,GAAG,EAAEF,QAAQE,KAAK,CAAC,CAAC,IAAI;YACxD;YAEA,MAAMI,eAAe;YACrBF,OAAOL,cAAcO,eAAeD,IAAI,CAAC;QAC3C;QAEAP,GAAG,2BAA2B;YAC5B,MAAMC,gBAAgB,CAACC;gBACrB,IAAI,CAACA,SAAS,OAAO;gBACrB,IAAIA,QAAQC,MAAM,IAAI,IAAI,OAAOD;gBACjC,OAAO,GAAGA,QAAQE,KAAK,CAAC,GAAG,GAAG,GAAG,EAAEF,QAAQE,KAAK,CAAC,CAAC,IAAI;YACxD;YAEAE,OAAOL,cAAc,KAAKM,IAAI,CAAC;QACjC;IACF;IAEAR,SAAS,gBAAgB;QACvBC,GAAG,+BAA+B;YAChC,MAAMS,eAAe,CAACC;gBACpB,OAAOA,IAAIC,cAAc,CAAC;YAC5B;YAEAL,OAAOG,aAAa,OAAOF,IAAI,CAAC;YAChCD,OAAOG,aAAa,UAAUF,IAAI,CAAC;QACrC;QAEAP,GAAG,2BAA2B;YAC5B,MAAMS,eAAe,CAACC,KAAaE,WAAmB,CAAC;gBACrD,OAAOF,IAAIC,cAAc,CAAC,SAAS;oBACjCE,uBAAuBD;oBACvBE,uBAAuBF;gBACzB;YACF;YAEAN,OAAOG,aAAa,UAAU,IAAIF,IAAI,CAAC;QACzC;IACF;IAEAR,SAAS,mBAAmB;QAC1BC,GAAG,gCAAgC;YACjC,MAAMe,kBAAkB,CAACb;gBACvB,OAAO,sBAAsBc,IAAI,CAACd;YACpC;YAEAI,OAAOS,gBAAgB,+CAA+CR,IAAI,CAAC;YAC3ED,OAAOS,gBAAgB,UAAUR,IAAI,CAAC;YACtCD,OAAOS,gBAAgB,YAAYR,IAAI,CAAC;QAC1C;IACF;IAEAR,SAAS,SAAS;QAChBC,GAAG,oBAAoB;YACrB,MAAMiB,QAAQ,CAACC,KAAe,IAAIC,QAAQC,CAAAA,UAAWC,WAAWD,SAASF;YAEzE,MAAMI,QAAQC,KAAKC,GAAG;YACtB,MAAMP,MAAM;YACZ,MAAMQ,MAAMF,KAAKC,GAAG;YAEpBlB,OAAOmB,MAAMH,OAAOI,sBAAsB,CAAC,KAAK,SAAS;QAC3D;IACF;AACF"}