{"version":3,"names":["cov_8ek61dtt2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","SecureHttpClient","secureHttpClient","constructor","baseURL","defaultTimeout","defaultRetries","request","endpoint","config","method","headers","body","timeout","retries","rateLimitKey","skipCSRF","_security","RateLimiter","isRateLimited","success","error","code","url","startsWith","requestHeaders","includes","csrfToken","CSRFProtection","getToken","refreshCSRFToken","newToken","console","warn","requestBody","JSON","stringify","attempt","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","result","parseResponse","Error","message","Promise","resolve","Math","pow","contentType","get","data","json","ok","status","text","token","setToken","post","put","delete","patch"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/secureHttpClient.ts"],"sourcesContent":["/**\n * 安全HTTP客户端\n * 提供CSRF保护、速率限制、输入验证等安全功能\n */\n\nimport { CSRFProtection, RateLimiter } from './security';\n\nexport interface RequestConfig {\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n  headers?: Record<string, string>;\n  body?: any;\n  timeout?: number;\n  retries?: number;\n  rateLimitKey?: string;\n  skipCSRF?: boolean;\n}\n\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  code?: string;\n  message?: string;\n}\n\nclass SecureHttpClient {\n  private baseURL: string;\n  private defaultTimeout: number = 10000; // 10秒超时\n  private defaultRetries: number = 3;\n\n  constructor(baseURL: string = '/api') {\n    this.baseURL = baseURL;\n  }\n\n  /**\n   * 发送安全的HTTP请求\n   */\n  async request<T = any>(\n    endpoint: string,\n    config: RequestConfig = {}\n  ): Promise<ApiResponse<T>> {\n    const {\n      method = 'GET',\n      headers = {},\n      body,\n      timeout = this.defaultTimeout,\n      retries = this.defaultRetries,\n      rateLimitKey,\n      skipCSRF = false\n    } = config;\n\n    // 速率限制检查\n    if (rateLimitKey) {\n      if (RateLimiter.isRateLimited(rateLimitKey, 10, 60000)) {\n        return {\n          success: false,\n          error: 'Too many requests. Please try again later.',\n          code: 'RATE_LIMIT_EXCEEDED'\n        };\n      }\n    }\n\n    // 构建完整URL\n    const url = endpoint.startsWith('http') ? endpoint : `${this.baseURL}${endpoint}`;\n\n    // 准备请求头\n    const requestHeaders: Record<string, string> = {\n      'Content-Type': 'application/json',\n      ...headers\n    };\n\n    // 添加CSRF令牌（对于非GET请求）\n    if (!skipCSRF && ['POST', 'PUT', 'DELETE', 'PATCH'].includes(method)) {\n      const csrfToken = CSRFProtection.getToken();\n      if (csrfToken) {\n        requestHeaders['X-CSRF-Token'] = csrfToken;\n      } else {\n        // 如果没有CSRF令牌，先获取一个\n        try {\n          await this.refreshCSRFToken();\n          const newToken = CSRFProtection.getToken();\n          if (newToken) {\n            requestHeaders['X-CSRF-Token'] = newToken;\n          }\n        } catch (error) {\n          console.warn('Failed to get CSRF token:', error);\n        }\n      }\n    }\n\n    // 准备请求体\n    let requestBody: string | undefined;\n    if (body && ['POST', 'PUT', 'PATCH'].includes(method)) {\n      try {\n        requestBody = JSON.stringify(body);\n      } catch (error) {\n        return {\n          success: false,\n          error: 'Invalid request body',\n          code: 'INVALID_BODY'\n        };\n      }\n    }\n\n    // 执行请求（带重试机制）\n    for (let attempt = 0; attempt <= retries; attempt++) {\n      try {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n        const response = await fetch(url, {\n          method,\n          headers: requestHeaders,\n          body: requestBody,\n          signal: controller.signal,\n        });\n\n        clearTimeout(timeoutId);\n\n        // 解析响应\n        const result = await this.parseResponse<T>(response);\n\n        // 如果是CSRF错误，尝试刷新令牌并重试\n        if (!result.success && result.code === 'CSRF_TOKEN_INVALID' && attempt === 0) {\n          try {\n            await this.refreshCSRFToken();\n            continue; // 重试请求\n          } catch (error) {\n            console.warn('Failed to refresh CSRF token:', error);\n          }\n        }\n\n        return result;\n\n      } catch (error) {\n        console.error(`Request attempt ${attempt + 1} failed:`, error);\n\n        // 如果是最后一次尝试，返回错误\n        if (attempt === retries) {\n          if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n              return {\n                success: false,\n                error: 'Request timeout',\n                code: 'TIMEOUT'\n              };\n            }\n            return {\n              success: false,\n              error: error.message,\n              code: 'NETWORK_ERROR'\n            };\n          }\n          return {\n            success: false,\n            error: 'Unknown error occurred',\n            code: 'UNKNOWN_ERROR'\n          };\n        }\n\n        // 等待一段时间后重试\n        await new Promise(resolve => setTimeout(resolve, Math.pow(2, attempt) * 1000));\n      }\n    }\n\n    return {\n      success: false,\n      error: 'Max retries exceeded',\n      code: 'MAX_RETRIES_EXCEEDED'\n    };\n  }\n\n  /**\n   * 解析响应\n   */\n  private async parseResponse<T>(response: Response): Promise<ApiResponse<T>> {\n    try {\n      const contentType = response.headers.get('content-type');\n      \n      if (contentType && contentType.includes('application/json')) {\n        const data = await response.json();\n        \n        if (response.ok) {\n          return {\n            success: true,\n            data: data.data || data,\n            message: data.message\n          };\n        } else {\n          return {\n            success: false,\n            error: data.error || `HTTP ${response.status}`,\n            code: data.code || `HTTP_${response.status}`,\n            message: data.message\n          };\n        }\n      } else {\n        const text = await response.text();\n        \n        if (response.ok) {\n          return {\n            success: true,\n            data: text as any\n          };\n        } else {\n          return {\n            success: false,\n            error: text || `HTTP ${response.status}`,\n            code: `HTTP_${response.status}`\n          };\n        }\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Failed to parse response',\n        code: 'PARSE_ERROR'\n      };\n    }\n  }\n\n  /**\n   * 刷新CSRF令牌\n   */\n  private async refreshCSRFToken(): Promise<void> {\n    try {\n      const response = await fetch('/api/security/csrf', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.token) {\n          CSRFProtection.setToken(data.token);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to refresh CSRF token:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * GET请求\n   */\n  async get<T = any>(endpoint: string, config?: Omit<RequestConfig, 'method' | 'body'>): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, { ...config, method: 'GET' });\n  }\n\n  /**\n   * POST请求\n   */\n  async post<T = any>(endpoint: string, body?: any, config?: Omit<RequestConfig, 'method'>): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, { ...config, method: 'POST', body });\n  }\n\n  /**\n   * PUT请求\n   */\n  async put<T = any>(endpoint: string, body?: any, config?: Omit<RequestConfig, 'method'>): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, { ...config, method: 'PUT', body });\n  }\n\n  /**\n   * DELETE请求\n   */\n  async delete<T = any>(endpoint: string, config?: Omit<RequestConfig, 'method' | 'body'>): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, { ...config, method: 'DELETE' });\n  }\n\n  /**\n   * PATCH请求\n   */\n  async patch<T = any>(endpoint: string, body?: any, config?: Omit<RequestConfig, 'method'>): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, { ...config, method: 'PATCH', body });\n  }\n}\n\n// 创建默认实例\nexport const secureHttpClient = new SecureHttpClient();\n\n// 导出类以便创建自定义实例\nexport { SecureHttpClient };\n"],"mappings":"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","ignoreList":[]}