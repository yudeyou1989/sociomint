9d6279b6a6127f632d44eda6ef3ca526
'use client';
"use strict";

/* istanbul ignore next */
function cov_1orgfv57c8() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/services/multisigService.ts";
  var hash = "bd92e621d05e2478020e877a74a95597e9adbcb4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/services/multisigService.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 39
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 31
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 34
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "14": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 33
        }
      },
      "15": {
        start: {
          line: 45,
          column: 30
        },
        end: {
          line: 45,
          column: 75
        }
      },
      "16": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 52
        }
      },
      "17": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 6
        }
      },
      "18": {
        start: {
          line: 53,
          column: 15
        },
        end: {
          line: 55,
          column: 2
        }
      },
      "19": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 83,
          column: 1
        }
      },
      "20": {
        start: {
          line: 85,
          column: 25
        },
        end: {
          line: 85,
          column: 72
        }
      },
      "21": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 56
        }
      },
      "22": {
        start: {
          line: 88,
          column: 24
        },
        end: {
          line: 88,
          column: 65
        }
      },
      "23": {
        start: {
          line: 89,
          column: 17
        },
        end: {
          line: 89,
          column: 88
        }
      },
      "24": {
        start: {
          line: 90,
          column: 44
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "25": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 65
        }
      },
      "26": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 69
        }
      },
      "27": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 69
        }
      },
      "28": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 55
        }
      },
      "29": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 61
        }
      },
      "30": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 73
        }
      },
      "31": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 47
        }
      },
      "32": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 35
        }
      },
      "33": {
        start: {
          line: 100,
          column: 46
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "34": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 53
        }
      },
      "35": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 57
        }
      },
      "36": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 55
        }
      },
      "37": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 51
        }
      },
      "38": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 37
        }
      },
      "39": {
        start: {
          line: 109,
          column: 32
        },
        end: {
          line: 111,
          column: 1
        }
      },
      "40": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 81
        }
      },
      "41": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 139,
          column: 1
        }
      },
      "42": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "43": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 114,
          column: 54
        }
      },
      "44": {
        start: {
          line: 116,
          column: 23
        },
        end: {
          line: 116,
          column: 49
        }
      },
      "45": {
        start: {
          line: 118,
          column: 38
        },
        end: {
          line: 118,
          column: 63
        }
      },
      "46": {
        start: {
          line: 120,
          column: 33
        },
        end: {
          line: 120,
          column: 66
        }
      },
      "47": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 67
        }
      },
      "48": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 129,
          column: 10
        }
      },
      "49": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "50": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 20
        }
      },
      "51": {
        start: {
          line: 140,
          column: 23
        },
        end: {
          line: 207,
          column: 1
        }
      },
      "52": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "53": {
        start: {
          line: 142,
          column: 25
        },
        end: {
          line: 142,
          column: 54
        }
      },
      "54": {
        start: {
          line: 144,
          column: 53
        },
        end: {
          line: 144,
          column: 95
        }
      },
      "55": {
        start: {
          line: 146,
          column: 30
        },
        end: {
          line: 146,
          column: 80
        }
      },
      "56": {
        start: {
          line: 148,
          column: 38
        },
        end: {
          line: 148,
          column: 63
        }
      },
      "57": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "58": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 32
        }
      },
      "59": {
        start: {
          line: 153,
          column: 15
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "60": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 33
        }
      },
      "61": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 31
        }
      },
      "62": {
        start: {
          line: 159,
          column: 40
        },
        end: {
          line: 159,
          column: 169
        }
      },
      "63": {
        start: {
          line: 161,
          column: 19
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "64": {
        start: {
          line: 162,
          column: 26
        },
        end: {
          line: 162,
          column: 28
        }
      },
      "65": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 163,
          column: 53
        }
      },
      "66": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "67": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 42
        }
      },
      "68": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 51
        }
      },
      "69": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 69
        }
      },
      "70": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "71": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 178,
          column: 17
        }
      },
      "72": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 39
        }
      },
      "73": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 178,
          column: 17
        }
      },
      "74": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 42
        }
      },
      "75": {
        start: {
          line: 176,
          column: 23
        },
        end: {
          line: 178,
          column: 17
        }
      },
      "76": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 177,
          column: 48
        }
      },
      "77": {
        start: {
          line: 179,
          column: 19
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "78": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 40
        }
      },
      "79": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 196,
          column: 10
        }
      },
      "80": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "81": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 20
        }
      },
      "82": {
        start: {
          line: 208,
          column: 27
        },
        end: {
          line: 230,
          column: 1
        }
      },
      "83": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "84": {
        start: {
          line: 210,
          column: 25
        },
        end: {
          line: 210,
          column: 54
        }
      },
      "85": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 212,
          column: 66
        }
      },
      "86": {
        start: {
          line: 214,
          column: 29
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "87": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "88": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 21
        }
      },
      "89": {
        start: {
          line: 216,
          column: 32
        },
        end: {
          line: 216,
          column: 65
        }
      },
      "90": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 43
        }
      },
      "91": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 54
        }
      },
      "92": {
        start: {
          line: 220,
          column: 41
        },
        end: {
          line: 220,
          column: 52
        }
      },
      "93": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 227,
          column: 11
        }
      },
      "94": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 20
        }
      },
      "95": {
        start: {
          line: 231,
          column: 26
        },
        end: {
          line: 278,
          column: 1
        }
      },
      "96": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "97": {
        start: {
          line: 233,
          column: 25
        },
        end: {
          line: 233,
          column: 52
        }
      },
      "98": {
        start: {
          line: 235,
          column: 27
        },
        end: {
          line: 235,
          column: 57
        }
      },
      "99": {
        start: {
          line: 237,
          column: 19
        },
        end: {
          line: 237,
          column: 82
        }
      },
      "100": {
        start: {
          line: 238,
          column: 24
        },
        end: {
          line: 238,
          column: 39
        }
      },
      "101": {
        start: {
          line: 240,
          column: 32
        },
        end: {
          line: 240,
          column: 83
        }
      },
      "102": {
        start: {
          line: 240,
          column: 58
        },
        end: {
          line: 240,
          column: 82
        }
      },
      "103": {
        start: {
          line: 241,
          column: 30
        },
        end: {
          line: 241,
          column: 77
        }
      },
      "104": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "105": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 40
        }
      },
      "106": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 255,
          column: 11
        }
      },
      "107": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 264,
          column: 11
        }
      },
      "108": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 29
        }
      },
      "109": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 275,
          column: 11
        }
      },
      "110": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 20
        }
      },
      "111": {
        start: {
          line: 279,
          column: 27
        },
        end: {
          line: 302,
          column: 1
        }
      },
      "112": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "113": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 281,
          column: 52
        }
      },
      "114": {
        start: {
          line: 283,
          column: 19
        },
        end: {
          line: 283,
          column: 67
        }
      },
      "115": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 24
        }
      },
      "116": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 290,
          column: 11
        }
      },
      "117": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 20
        }
      },
      "118": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 299,
          column: 11
        }
      },
      "119": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 20
        }
      },
      "120": {
        start: {
          line: 303,
          column: 27
        },
        end: {
          line: 326,
          column: 1
        }
      },
      "121": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "122": {
        start: {
          line: 305,
          column: 25
        },
        end: {
          line: 305,
          column: 52
        }
      },
      "123": {
        start: {
          line: 307,
          column: 19
        },
        end: {
          line: 307,
          column: 67
        }
      },
      "124": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 24
        }
      },
      "125": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "126": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 20
        }
      },
      "127": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 323,
          column: 11
        }
      },
      "128": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 20
        }
      },
      "129": {
        start: {
          line: 327,
          column: 27
        },
        end: {
          line: 359,
          column: 1
        }
      },
      "130": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 358,
          column: 5
        }
      },
      "131": {
        start: {
          line: 329,
          column: 25
        },
        end: {
          line: 329,
          column: 52
        }
      },
      "132": {
        start: {
          line: 331,
          column: 19
        },
        end: {
          line: 331,
          column: 67
        }
      },
      "133": {
        start: {
          line: 332,
          column: 24
        },
        end: {
          line: 332,
          column: 39
        }
      },
      "134": {
        start: {
          line: 334,
          column: 31
        },
        end: {
          line: 334,
          column: 81
        }
      },
      "135": {
        start: {
          line: 334,
          column: 57
        },
        end: {
          line: 334,
          column: 80
        }
      },
      "136": {
        start: {
          line: 335,
          column: 38
        },
        end: {
          line: 335,
          column: 95
        }
      },
      "137": {
        start: {
          line: 335,
          column: 64
        },
        end: {
          line: 335,
          column: 94
        }
      },
      "138": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 336,
          column: 66
        }
      },
      "139": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 340,
          column: 47
        }
      },
      "140": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 347,
          column: 11
        }
      },
      "141": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 23
        }
      },
      "142": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "143": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 20
        }
      },
      "144": {
        start: {
          line: 362,
          column: 28
        },
        end: {
          line: 370,
          column: 1
        }
      },
      "145": {
        start: {
          line: 371,
          column: 17
        },
        end: {
          line: 371,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 13,
            column: 32
          }
        },
        loc: {
          start: {
            line: 13,
            column: 42
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 16,
            column: 30
          }
        },
        loc: {
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 25
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 13
          },
          end: {
            line: 22,
            column: 14
          }
        },
        loc: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 25
          }
        },
        loc: {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 21
          },
          end: {
            line: 31,
            column: 22
          }
        },
        loc: {
          start: {
            line: 31,
            column: 32
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 21
          }
        },
        loc: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 25
          }
        },
        loc: {
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 24
          }
        },
        loc: {
          start: {
            line: 40,
            column: 34
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 33
          }
        },
        loc: {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 90,
            column: 44
          },
          end: {
            line: 90,
            column: 45
          }
        },
        loc: {
          start: {
            line: 90,
            column: 78
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 90
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 100,
            column: 46
          },
          end: {
            line: 100,
            column: 47
          }
        },
        loc: {
          start: {
            line: 100,
            column: 82
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 100
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 109,
            column: 32
          },
          end: {
            line: 109,
            column: 33
          }
        },
        loc: {
          start: {
            line: 109,
            column: 44
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 109
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 112,
            column: 25
          }
        },
        loc: {
          start: {
            line: 112,
            column: 42
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 112
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 140,
            column: 23
          },
          end: {
            line: 140,
            column: 24
          }
        },
        loc: {
          start: {
            line: 140,
            column: 56
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 140
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 208,
            column: 27
          },
          end: {
            line: 208,
            column: 28
          }
        },
        loc: {
          start: {
            line: 208,
            column: 45
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 208
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 220,
            column: 33
          },
          end: {
            line: 220,
            column: 34
          }
        },
        loc: {
          start: {
            line: 220,
            column: 41
          },
          end: {
            line: 220,
            column: 52
          }
        },
        line: 220
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 231,
            column: 26
          },
          end: {
            line: 231,
            column: 27
          }
        },
        loc: {
          start: {
            line: 231,
            column: 87
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 231
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 240,
            column: 53
          },
          end: {
            line: 240,
            column: 54
          }
        },
        loc: {
          start: {
            line: 240,
            column: 58
          },
          end: {
            line: 240,
            column: 82
          }
        },
        line: 240
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 279,
            column: 27
          },
          end: {
            line: 279,
            column: 28
          }
        },
        loc: {
          start: {
            line: 279,
            column: 58
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 279
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 303,
            column: 28
          }
        },
        loc: {
          start: {
            line: 303,
            column: 58
          },
          end: {
            line: 326,
            column: 1
          }
        },
        line: 303
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 327,
            column: 27
          },
          end: {
            line: 327,
            column: 28
          }
        },
        loc: {
          start: {
            line: 327,
            column: 58
          },
          end: {
            line: 359,
            column: 1
          }
        },
        line: 327
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 334,
            column: 52
          },
          end: {
            line: 334,
            column: 53
          }
        },
        loc: {
          start: {
            line: 334,
            column: 57
          },
          end: {
            line: 334,
            column: 80
          }
        },
        line: 334
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 335,
            column: 59
          },
          end: {
            line: 335,
            column: 60
          }
        },
        loc: {
          start: {
            line: 335,
            column: 64
          },
          end: {
            line: 335,
            column: 94
          }
        },
        line: 335
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 48,
            column: 38
          }
        }, {
          start: {
            line: 48,
            column: 41
          },
          end: {
            line: 50,
            column: 5
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 14
          }
        }, {
          start: {
            line: 48,
            column: 18
          },
          end: {
            line: 48,
            column: 32
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 89,
            column: 47
          },
          end: {
            line: 89,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 47
          },
          end: {
            line: 89,
            column: 58
          }
        }, {
          start: {
            line: 89,
            column: 62
          },
          end: {
            line: 89,
            column: 64
          }
        }],
        line: 89
      },
      "3": {
        loc: {
          start: {
            line: 89,
            column: 66
          },
          end: {
            line: 89,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 66
          },
          end: {
            line: 89,
            column: 81
          }
        }, {
          start: {
            line: 89,
            column: 85
          },
          end: {
            line: 89,
            column: 87
          }
        }],
        line: 89
      },
      "4": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: 153,
            column: 15
          },
          end: {
            line: 157,
            column: 9
          }
        }],
        line: 151
      },
      "5": {
        loc: {
          start: {
            line: 153,
            column: 15
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 15
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: 155,
            column: 15
          },
          end: {
            line: 157,
            column: 9
          }
        }],
        line: 153
      },
      "6": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: 168,
            column: 15
          },
          end: {
            line: 183,
            column: 9
          }
        }],
        line: 164
      },
      "7": {
        loc: {
          start: {
            line: 165,
            column: 19
          },
          end: {
            line: 165,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 19
          },
          end: {
            line: 165,
            column: 30
          }
        }, {
          start: {
            line: 165,
            column: 34
          },
          end: {
            line: 165,
            column: 41
          }
        }],
        line: 165
      },
      "8": {
        loc: {
          start: {
            line: 166,
            column: 26
          },
          end: {
            line: 166,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 26
          },
          end: {
            line: 166,
            column: 44
          }
        }, {
          start: {
            line: 166,
            column: 48
          },
          end: {
            line: 166,
            column: 50
          }
        }],
        line: 166
      },
      "9": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        }, {
          start: {
            line: 179,
            column: 19
          },
          end: {
            line: 182,
            column: 13
          }
        }],
        line: 170
      },
      "10": {
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 170,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 170,
            column: 48
          }
        }, {
          start: {
            line: 170,
            column: 52
          },
          end: {
            line: 170,
            column: 73
          }
        }],
        line: 170
      },
      "11": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        }, {
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 178,
            column: 17
          }
        }],
        line: 172
      },
      "12": {
        loc: {
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 178,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 178,
            column: 17
          }
        }, {
          start: {
            line: 176,
            column: 23
          },
          end: {
            line: 178,
            column: 17
          }
        }],
        line: 174
      },
      "13": {
        loc: {
          start: {
            line: 176,
            column: 23
          },
          end: {
            line: 178,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 23
          },
          end: {
            line: 178,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "14": {
        loc: {
          start: {
            line: 179,
            column: 19
          },
          end: {
            line: 182,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 19
          },
          end: {
            line: 182,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "15": {
        loc: {
          start: {
            line: 179,
            column: 23
          },
          end: {
            line: 179,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 23
          },
          end: {
            line: 179,
            column: 34
          }
        }, {
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 179,
            column: 51
          }
        }],
        line: 179
      },
      "16": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "17": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 242,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 242,
            column: 26
          }
        }, {
          start: {
            line: 242,
            column: 30
          },
          end: {
            line: 242,
            column: 49
          }
        }],
        line: 242
      },
      "18": {
        loc: {
          start: {
            line: 336,
            column: 24
          },
          end: {
            line: 336,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 24
          },
          end: {
            line: 336,
            column: 40
          }
        }, {
          start: {
            line: 336,
            column: 44
          },
          end: {
            line: 336,
            column: 66
          }
        }],
        line: 336
      },
      "19": {
        loc: {
          start: {
            line: 339,
            column: 20
          },
          end: {
            line: 339,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 339,
            column: 30
          },
          end: {
            line: 339,
            column: 40
          }
        }, {
          start: {
            line: 339,
            column: 43
          },
          end: {
            line: 339,
            column: 51
          }
        }],
        line: 339
      },
      "20": {
        loc: {
          start: {
            line: 341,
            column: 20
          },
          end: {
            line: 341,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 341,
            column: 30
          },
          end: {
            line: 341,
            column: 37
          }
        }, {
          start: {
            line: 341,
            column: 40
          },
          end: {
            line: 341,
            column: 48
          }
        }],
        line: 341
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/services/multisigService.ts"],
      sourcesContent: ["'use client';\n\n/**\n * \u591A\u7B7E\u94B1\u5305\u670D\u52A1\n * \n * \u8BE5\u670D\u52A1\u63D0\u4F9B\u4E0E\u591A\u7B7E\u94B1\u5305\u4EA4\u4E92\u7684\u529F\u80FD\uFF0C\u5305\u62EC\u67E5\u8BE2\u591A\u7B7E\u94B1\u5305\u4FE1\u606F\u3001\u63D0\u4EA4\u4EA4\u6613\u548C\u67E5\u8BE2\u4EA4\u6613\u72B6\u6001\u7B49\u3002\n */\n\nimport { ethers, formatEther, parseEther } from 'ethers';\nimport Logger from './logger';\nimport { createClient } from '@supabase/supabase-js';\n\n// \u521B\u5EFA\u65E5\u5FD7\u8BB0\u5F55\u5668\nconst logger = Logger.createContextLogger({ component: 'MultisigService' });\n\n// \u591A\u7B7E\u94B1\u5305ABI - \u7B80\u5316\u7248\uFF0C\u4EC5\u5305\u542B\u6211\u4EEC\u9700\u8981\u7684\u51FD\u6570\nconst MULTISIG_ABI = [\n  // \u67E5\u8BE2\u6240\u6709\u8005\n  'function getOwners() view returns (address[])',\n  // \u67E5\u8BE2\u786E\u8BA4\u6570\n  'function getConfirmationCount(uint256 transactionId) view returns (uint256)',\n  // \u67E5\u8BE2\u6240\u9700\u786E\u8BA4\u6570\n  'function required() view returns (uint256)',\n  // \u67E5\u8BE2\u4EA4\u6613\u6570\u91CF\n  'function transactionCount() view returns (uint256)',\n  // \u67E5\u8BE2\u4EA4\u6613\n  'function transactions(uint256 transactionId) view returns (address destination, uint256 value, bytes data, bool executed)',\n  // \u67E5\u8BE2\u786E\u8BA4\u72B6\u6001\n  'function isConfirmed(uint256 transactionId) view returns (bool)',\n  // \u63D0\u4EA4\u4EA4\u6613\n  'function submitTransaction(address destination, uint256 value, bytes data) returns (uint256 transactionId)',\n  // \u786E\u8BA4\u4EA4\u6613\n  'function confirmTransaction(uint256 transactionId)',\n  // \u64A4\u9500\u786E\u8BA4\n  'function revokeConfirmation(uint256 transactionId)',\n  // \u6267\u884C\u4EA4\u6613\n  'function executeTransaction(uint256 transactionId)',\n  // \u4E8B\u4EF6\n  'event Submission(uint256 indexed transactionId)',\n  'event Confirmation(address indexed sender, uint256 indexed transactionId)',\n  'event Execution(uint256 indexed transactionId)',\n  'event ExecutionFailure(uint256 indexed transactionId)',\n];\n\n// \u591A\u7B7E\u94B1\u5305\u5730\u5740\nconst MULTISIG_ADDRESS = process.env.NEXT_PUBLIC_MULTISIG_WALLET_ADDRESS as string;\n\n// Supabase\u5BA2\u6237\u7AEF\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\nconst supabase = createClient(supabaseUrl || '', supabaseAnonKey || '');\n\n// \u4EA4\u6613\u7C7B\u578B\nexport enum MultisigTransactionType {\n  TRANSFER_FUNDS = 'transfer_funds',\n  UPGRADE_CONTRACT = 'upgrade_contract',\n  CHANGE_PARAMETER = 'change_parameter',\n  ADD_OWNER = 'add_owner',\n  REMOVE_OWNER = 'remove_owner',\n  CHANGE_REQUIREMENT = 'change_requirement',\n  OTHER = 'other',\n}\n\n// \u4EA4\u6613\u72B6\u6001\nexport enum MultisigTransactionStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  EXECUTED = 'executed',\n  FAILED = 'failed',\n}\n\n// \u4EA4\u6613\u4FE1\u606F\u63A5\u53E3\nexport interface MultisigTransaction {\n  id: number;\n  destination: string;\n  value: string;\n  data: string;\n  executed: boolean;\n  confirmations: number;\n  requiredConfirmations: number;\n  type: MultisigTransactionType;\n  status: MultisigTransactionStatus;\n  description?: string;\n  createdAt: number;\n}\n\n/**\n * \u83B7\u53D6\u591A\u7B7E\u94B1\u5305\u5408\u7EA6\u5B9E\u4F8B\n */\nconst getMultisigContract = (provider: any) => {\n  return new ethers.Contract(MULTISIG_ADDRESS, MULTISIG_ABI, provider);\n};\n\n/**\n * \u83B7\u53D6\u591A\u7B7E\u94B1\u5305\u4FE1\u606F\n */\nexport const getMultisigInfo = async (provider: any) => {\n  try {\n    const contract = getMultisigContract(provider);\n    \n    // \u83B7\u53D6\u6240\u6709\u8005\n    const owners = await contract.getOwners();\n    \n    // \u83B7\u53D6\u6240\u9700\u786E\u8BA4\u6570\n    const requiredConfirmations = await contract.required();\n    \n    // \u83B7\u53D6\u4EA4\u6613\u6570\u91CF\n    const transactionCount = await contract.transactionCount();\n    \n    // \u83B7\u53D6\u94B1\u5305\u4F59\u989D\n    const balance = await provider.getBalance(MULTISIG_ADDRESS);\n    \n    return {\n      address: MULTISIG_ADDRESS,\n      owners,\n      requiredConfirmations: requiredConfirmations.toNumber(),\n      transactionCount: transactionCount.toNumber(),\n      balance: formatEther(balance),\n    };\n  } catch (error) {\n    logger.error('\u83B7\u53D6\u591A\u7B7E\u94B1\u5305\u4FE1\u606F\u5931\u8D25', {\n      action: 'getMultisigInfo',\n      additionalData: { error },\n    });\n    throw error;\n  }\n};\n\n/**\n * \u83B7\u53D6\u4EA4\u6613\u4FE1\u606F\n */\nexport const getTransaction = async (\n  provider: any,\n  transactionId: number\n): Promise<MultisigTransaction> => {\n  try {\n    const contract = getMultisigContract(provider);\n    \n    // \u83B7\u53D6\u4EA4\u6613\u4FE1\u606F\n    const [destination, value, data, executed] = await contract.transactions(transactionId);\n    \n    // \u83B7\u53D6\u786E\u8BA4\u6570\n    const confirmations = await contract.getConfirmationCount(transactionId);\n    \n    // \u83B7\u53D6\u6240\u9700\u786E\u8BA4\u6570\n    const requiredConfirmations = await contract.required();\n    \n    // \u786E\u5B9A\u4EA4\u6613\u72B6\u6001\n    let status: MultisigTransactionStatus;\n    if (executed) {\n      status = MultisigTransactionStatus.EXECUTED;\n    } else if (confirmations.toNumber() >= requiredConfirmations.toNumber()) {\n      status = MultisigTransactionStatus.CONFIRMED;\n    } else {\n      status = MultisigTransactionStatus.PENDING;\n    }\n    \n    // \u4ECE\u6570\u636E\u5E93\u83B7\u53D6\u4EA4\u6613\u63CF\u8FF0\u548C\u7C7B\u578B\n    const { data: txData, error } = await supabase\n      .from('multisig_transactions')\n      .select('description, type, created_at')\n      .eq('transaction_id', transactionId)\n      .single();\n    \n    // \u786E\u5B9A\u4EA4\u6613\u7C7B\u578B\n    let type = MultisigTransactionType.OTHER;\n    let description = '';\n    let createdAt = Math.floor(Date.now() / 1000);\n    \n    if (txData) {\n      type = txData.type || MultisigTransactionType.OTHER;\n      description = txData.description || '';\n      createdAt = new Date(txData.created_at).getTime() / 1000;\n    } else {\n      // \u5C1D\u8BD5\u4ECE\u4EA4\u6613\u6570\u636E\u63A8\u65AD\u7C7B\u578B\n      if (destination === MULTISIG_ADDRESS && data.startsWith('0x')) {\n        // \u53EF\u80FD\u662F\u66F4\u6539\u6240\u6709\u8005\u6216\u8981\u6C42\u7684\u4EA4\u6613\n        if (data.includes('addOwner')) {\n          type = MultisigTransactionType.ADD_OWNER;\n        } else if (data.includes('removeOwner')) {\n          type = MultisigTransactionType.REMOVE_OWNER;\n        } else if (data.includes('changeRequirement')) {\n          type = MultisigTransactionType.CHANGE_REQUIREMENT;\n        }\n      } else if (value.gt(0) && data === '0x') {\n        // \u7B80\u5355\u7684\u8D44\u91D1\u8F6C\u79FB\n        type = MultisigTransactionType.TRANSFER_FUNDS;\n      }\n    }\n    \n    return {\n      id: transactionId,\n      destination,\n      value: formatEther(value),\n      data,\n      executed,\n      confirmations: confirmations.toNumber(),\n      requiredConfirmations: requiredConfirmations.toNumber(),\n      type,\n      status,\n      description,\n      createdAt,\n    };\n  } catch (error) {\n    logger.error('\u83B7\u53D6\u4EA4\u6613\u4FE1\u606F\u5931\u8D25', {\n      action: 'getTransaction',\n      additionalData: { error, transactionId },\n    });\n    throw error;\n  }\n};\n\n/**\n * \u83B7\u53D6\u6240\u6709\u4EA4\u6613\n */\nexport const getAllTransactions = async (\n  provider: any\n): Promise<MultisigTransaction[]> => {\n  try {\n    const contract = getMultisigContract(provider);\n    \n    // \u83B7\u53D6\u4EA4\u6613\u6570\u91CF\n    const transactionCount = await contract.transactionCount();\n    \n    // \u83B7\u53D6\u6240\u6709\u4EA4\u6613\n    const transactions: MultisigTransaction[] = [];\n    for (let i = 0; i < transactionCount.toNumber(); i++) {\n      const transaction = await getTransaction(provider, i);\n      transactions.push(transaction);\n    }\n    \n    // \u6309ID\u964D\u5E8F\u6392\u5E8F\uFF08\u6700\u65B0\u7684\u4EA4\u6613\u5728\u524D\u9762\uFF09\n    return transactions.sort((a, b) => b.id - a.id);\n  } catch (error) {\n    logger.error('\u83B7\u53D6\u6240\u6709\u4EA4\u6613\u5931\u8D25', {\n      action: 'getAllTransactions',\n      additionalData: { error },\n    });\n    throw error;\n  }\n};\n\n/**\n * \u63D0\u4EA4\u4EA4\u6613\n */\nexport const submitTransaction = async (\n  signer: any,\n  destination: string,\n  value: string,\n  data: string,\n  type: MultisigTransactionType,\n  description: string\n): Promise<number> => {\n  try {\n    const contract = getMultisigContract(signer);\n    \n    // \u8F6C\u6362\u503C\u4E3AWei\n    const valueInWei = parseEther(value);\n    \n    // \u63D0\u4EA4\u4EA4\u6613\n    const tx = await contract.submitTransaction(destination, valueInWei, data);\n    const receipt = await tx.wait();\n    \n    // \u4ECE\u4E8B\u4EF6\u4E2D\u83B7\u53D6\u4EA4\u6613ID\n    const submissionEvent = receipt.events?.find(e => e.event === 'Submission');\n    const transactionId = submissionEvent?.args?.transactionId.toNumber();\n    \n    if (!transactionId && transactionId !== 0) {\n      throw new Error('\u65E0\u6CD5\u83B7\u53D6\u4EA4\u6613ID');\n    }\n    \n    // \u5C06\u4EA4\u6613\u4FE1\u606F\u4FDD\u5B58\u5230\u6570\u636E\u5E93\n    await supabase.from('multisig_transactions').insert({\n      transaction_id: transactionId,\n      destination,\n      value,\n      data,\n      type,\n      description,\n      status: MultisigTransactionStatus.PENDING,\n      created_at: new Date().toISOString(),\n    });\n    \n    logger.info('\u4EA4\u6613\u5DF2\u63D0\u4EA4', {\n      action: 'submitTransaction',\n      additionalData: { transactionId, destination, value, type },\n    });\n    \n    return transactionId;\n  } catch (error) {\n    logger.error('\u63D0\u4EA4\u4EA4\u6613\u5931\u8D25', {\n      action: 'submitTransaction',\n      additionalData: { error, destination, value, data },\n    });\n    throw error;\n  }\n};\n\n/**\n * \u786E\u8BA4\u4EA4\u6613\n */\nexport const confirmTransaction = async (\n  signer: any,\n  transactionId: number\n): Promise<boolean> => {\n  try {\n    const contract = getMultisigContract(signer);\n    \n    // \u786E\u8BA4\u4EA4\u6613\n    const tx = await contract.confirmTransaction(transactionId);\n    await tx.wait();\n    \n    logger.info('\u4EA4\u6613\u5DF2\u786E\u8BA4', {\n      action: 'confirmTransaction',\n      additionalData: { transactionId },\n    });\n    \n    return true;\n  } catch (error) {\n    logger.error('\u786E\u8BA4\u4EA4\u6613\u5931\u8D25', {\n      action: 'confirmTransaction',\n      additionalData: { error, transactionId },\n    });\n    throw error;\n  }\n};\n\n/**\n * \u64A4\u9500\u786E\u8BA4\n */\nexport const revokeConfirmation = async (\n  signer: any,\n  transactionId: number\n): Promise<boolean> => {\n  try {\n    const contract = getMultisigContract(signer);\n    \n    // \u64A4\u9500\u786E\u8BA4\n    const tx = await contract.revokeConfirmation(transactionId);\n    await tx.wait();\n    \n    logger.info('\u786E\u8BA4\u5DF2\u64A4\u9500', {\n      action: 'revokeConfirmation',\n      additionalData: { transactionId },\n    });\n    \n    return true;\n  } catch (error) {\n    logger.error('\u64A4\u9500\u786E\u8BA4\u5931\u8D25', {\n      action: 'revokeConfirmation',\n      additionalData: { error, transactionId },\n    });\n    throw error;\n  }\n};\n\n/**\n * \u6267\u884C\u4EA4\u6613\n */\nexport const executeTransaction = async (\n  signer: any,\n  transactionId: number\n): Promise<boolean> => {\n  try {\n    const contract = getMultisigContract(signer);\n    \n    // \u6267\u884C\u4EA4\u6613\n    const tx = await contract.executeTransaction(transactionId);\n    const receipt = await tx.wait();\n    \n    // \u68C0\u67E5\u662F\u5426\u6267\u884C\u6210\u529F\n    const executionEvent = receipt.events?.find(e => e.event === 'Execution');\n    const executionFailureEvent = receipt.events?.find(e => e.event === 'ExecutionFailure');\n    \n    const success = !!executionEvent && !executionFailureEvent;\n    \n    // \u66F4\u65B0\u6570\u636E\u5E93\u4E2D\u7684\u4EA4\u6613\u72B6\u6001\n    await supabase.from('multisig_transactions').update({\n      status: success ? MultisigTransactionStatus.EXECUTED : MultisigTransactionStatus.FAILED,\n    }).eq('transaction_id', transactionId);\n    \n    logger.info(success ? '\u4EA4\u6613\u5DF2\u6267\u884C' : '\u4EA4\u6613\u6267\u884C\u5931\u8D25', {\n      action: 'executeTransaction',\n      additionalData: { transactionId, success },\n    });\n    \n    return success;\n  } catch (error) {\n    logger.error('\u6267\u884C\u4EA4\u6613\u5931\u8D25', {\n      action: 'executeTransaction',\n      additionalData: { error, transactionId },\n    });\n    throw error;\n  }\n};\n\n/**\n * \u591A\u7B7E\u94B1\u5305\u670D\u52A1\n */\nconst MultisigService = {\n  getMultisigInfo,\n  getTransaction,\n  getAllTransactions,\n  submitTransaction,\n  confirmTransaction,\n  revokeConfirmation,\n  executeTransaction,\n};\n\nexport default MultisigService;\n"],
      names: ["MultisigTransactionStatus", "MultisigTransactionType", "confirmTransaction", "executeTransaction", "getAllTransactions", "getMultisigInfo", "getTransaction", "revokeConfirmation", "submitTransaction", "logger", "Logger", "createContextLogger", "component", "MULTISIG_ABI", "MULTISIG_ADDRESS", "process", "env", "NEXT_PUBLIC_MULTISIG_WALLET_ADDRESS", "supabaseUrl", "NEXT_PUBLIC_SUPABASE_URL", "supabaseAnonKey", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "supabase", "createClient", "getMultisigContract", "provider", "ethers", "Contract", "contract", "owners", "getOwners", "requiredConfirmations", "required", "transactionCount", "balance", "getBalance", "address", "toNumber", "formatEther", "error", "action", "additionalData", "transactionId", "destination", "value", "data", "executed", "transactions", "confirmations", "getConfirmationCount", "status", "txData", "from", "select", "eq", "single", "type", "description", "createdAt", "Math", "floor", "Date", "now", "created_at", "getTime", "startsWith", "includes", "gt", "id", "i", "transaction", "push", "sort", "a", "b", "signer", "valueInWei", "parseEther", "tx", "receipt", "wait", "submissionEvent", "events", "find", "e", "event", "args", "Error", "insert", "transaction_id", "toISOString", "info", "executionEvent", "executionFailureEvent", "success", "update", "MultisigService"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bd92e621d05e2478020e877a74a95597e9adbcb4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1orgfv57c8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1orgfv57c8();
cov_1orgfv57c8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[0]++;
  cov_1orgfv57c8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1orgfv57c8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1orgfv57c8().s[3]++;
_export(exports, {
  MultisigTransactionStatus: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[1]++;
    cov_1orgfv57c8().s[4]++;
    return MultisigTransactionStatus;
  },
  MultisigTransactionType: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[2]++;
    cov_1orgfv57c8().s[5]++;
    return MultisigTransactionType;
  },
  confirmTransaction: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[3]++;
    cov_1orgfv57c8().s[6]++;
    return confirmTransaction;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[4]++;
    cov_1orgfv57c8().s[7]++;
    return _default;
  },
  executeTransaction: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[5]++;
    cov_1orgfv57c8().s[8]++;
    return executeTransaction;
  },
  getAllTransactions: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[6]++;
    cov_1orgfv57c8().s[9]++;
    return getAllTransactions;
  },
  getMultisigInfo: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[7]++;
    cov_1orgfv57c8().s[10]++;
    return getMultisigInfo;
  },
  getTransaction: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[8]++;
    cov_1orgfv57c8().s[11]++;
    return getTransaction;
  },
  revokeConfirmation: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[9]++;
    cov_1orgfv57c8().s[12]++;
    return revokeConfirmation;
  },
  submitTransaction: function () {
    /* istanbul ignore next */
    cov_1orgfv57c8().f[10]++;
    cov_1orgfv57c8().s[13]++;
    return submitTransaction;
  }
});
const _ethers =
/* istanbul ignore next */
(cov_1orgfv57c8().s[14]++, require("ethers"));
const _logger =
/* istanbul ignore next */
(/*#__PURE__*/cov_1orgfv57c8().s[15]++, _interop_require_default(require("./logger")));
const _supabasejs =
/* istanbul ignore next */
(cov_1orgfv57c8().s[16]++, require("@supabase/supabase-js"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[11]++;
  cov_1orgfv57c8().s[17]++;
  return /* istanbul ignore next */(cov_1orgfv57c8().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1orgfv57c8().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1orgfv57c8().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1orgfv57c8().b[0][1]++, {
    default: obj
  });
}
// 创建日志记录器
const logger =
/* istanbul ignore next */
(cov_1orgfv57c8().s[18]++, _logger.default.createContextLogger({
  component: 'MultisigService'
}));
// 多签钱包ABI - 简化版，仅包含我们需要的函数
const MULTISIG_ABI =
/* istanbul ignore next */
(cov_1orgfv57c8().s[19]++, [
// 查询所有者
'function getOwners() view returns (address[])',
// 查询确认数
'function getConfirmationCount(uint256 transactionId) view returns (uint256)',
// 查询所需确认数
'function required() view returns (uint256)',
// 查询交易数量
'function transactionCount() view returns (uint256)',
// 查询交易
'function transactions(uint256 transactionId) view returns (address destination, uint256 value, bytes data, bool executed)',
// 查询确认状态
'function isConfirmed(uint256 transactionId) view returns (bool)',
// 提交交易
'function submitTransaction(address destination, uint256 value, bytes data) returns (uint256 transactionId)',
// 确认交易
'function confirmTransaction(uint256 transactionId)',
// 撤销确认
'function revokeConfirmation(uint256 transactionId)',
// 执行交易
'function executeTransaction(uint256 transactionId)',
// 事件
'event Submission(uint256 indexed transactionId)', 'event Confirmation(address indexed sender, uint256 indexed transactionId)', 'event Execution(uint256 indexed transactionId)', 'event ExecutionFailure(uint256 indexed transactionId)']);
// 多签钱包地址
const MULTISIG_ADDRESS =
/* istanbul ignore next */
(cov_1orgfv57c8().s[20]++, process.env.NEXT_PUBLIC_MULTISIG_WALLET_ADDRESS);
// Supabase客户端
const supabaseUrl =
/* istanbul ignore next */
(cov_1orgfv57c8().s[21]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseAnonKey =
/* istanbul ignore next */
(cov_1orgfv57c8().s[22]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
const supabase =
/* istanbul ignore next */
(cov_1orgfv57c8().s[23]++, (0, _supabasejs.createClient)(
/* istanbul ignore next */
(cov_1orgfv57c8().b[2][0]++, supabaseUrl) ||
/* istanbul ignore next */
(cov_1orgfv57c8().b[2][1]++, ''),
/* istanbul ignore next */
(cov_1orgfv57c8().b[3][0]++, supabaseAnonKey) ||
/* istanbul ignore next */
(cov_1orgfv57c8().b[3][1]++, '')));
var MultisigTransactionType =
/* istanbul ignore next */
(/*#__PURE__*/cov_1orgfv57c8().s[24]++, function (MultisigTransactionType) {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[12]++;
  cov_1orgfv57c8().s[25]++;
  MultisigTransactionType["TRANSFER_FUNDS"] = "transfer_funds";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[26]++;
  MultisigTransactionType["UPGRADE_CONTRACT"] = "upgrade_contract";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[27]++;
  MultisigTransactionType["CHANGE_PARAMETER"] = "change_parameter";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[28]++;
  MultisigTransactionType["ADD_OWNER"] = "add_owner";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[29]++;
  MultisigTransactionType["REMOVE_OWNER"] = "remove_owner";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[30]++;
  MultisigTransactionType["CHANGE_REQUIREMENT"] = "change_requirement";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[31]++;
  MultisigTransactionType["OTHER"] = "other";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[32]++;
  return MultisigTransactionType;
}({}));
var MultisigTransactionStatus =
/* istanbul ignore next */
(/*#__PURE__*/cov_1orgfv57c8().s[33]++, function (MultisigTransactionStatus) {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[13]++;
  cov_1orgfv57c8().s[34]++;
  MultisigTransactionStatus["PENDING"] = "pending";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[35]++;
  MultisigTransactionStatus["CONFIRMED"] = "confirmed";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[36]++;
  MultisigTransactionStatus["EXECUTED"] = "executed";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[37]++;
  MultisigTransactionStatus["FAILED"] = "failed";
  /* istanbul ignore next */
  cov_1orgfv57c8().s[38]++;
  return MultisigTransactionStatus;
}({}));
/**
 * 获取多签钱包合约实例
 */
/* istanbul ignore next */
cov_1orgfv57c8().s[39]++;
const getMultisigContract = provider => {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[14]++;
  cov_1orgfv57c8().s[40]++;
  return new _ethers.ethers.Contract(MULTISIG_ADDRESS, MULTISIG_ABI, provider);
};
/* istanbul ignore next */
cov_1orgfv57c8().s[41]++;
const getMultisigInfo = async provider => {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[15]++;
  cov_1orgfv57c8().s[42]++;
  try {
    const contract =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[43]++, getMultisigContract(provider));
    // 获取所有者
    const owners =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[44]++, await contract.getOwners());
    // 获取所需确认数
    const requiredConfirmations =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[45]++, await contract.required());
    // 获取交易数量
    const transactionCount =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[46]++, await contract.transactionCount());
    // 获取钱包余额
    const balance =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[47]++, await provider.getBalance(MULTISIG_ADDRESS));
    /* istanbul ignore next */
    cov_1orgfv57c8().s[48]++;
    return {
      address: MULTISIG_ADDRESS,
      owners,
      requiredConfirmations: requiredConfirmations.toNumber(),
      transactionCount: transactionCount.toNumber(),
      balance: (0, _ethers.formatEther)(balance)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1orgfv57c8().s[49]++;
    logger.error('获取多签钱包信息失败', {
      action: 'getMultisigInfo',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[50]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_1orgfv57c8().s[51]++;
const getTransaction = async (provider, transactionId) => {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[16]++;
  cov_1orgfv57c8().s[52]++;
  try {
    const contract =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[53]++, getMultisigContract(provider));
    // 获取交易信息
    const [destination, value, data, executed] =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[54]++, await contract.transactions(transactionId));
    // 获取确认数
    const confirmations =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[55]++, await contract.getConfirmationCount(transactionId));
    // 获取所需确认数
    const requiredConfirmations =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[56]++, await contract.required());
    // 确定交易状态
    let status;
    /* istanbul ignore next */
    cov_1orgfv57c8().s[57]++;
    if (executed) {
      /* istanbul ignore next */
      cov_1orgfv57c8().b[4][0]++;
      cov_1orgfv57c8().s[58]++;
      status = "executed";
    } else {
      /* istanbul ignore next */
      cov_1orgfv57c8().b[4][1]++;
      cov_1orgfv57c8().s[59]++;
      if (confirmations.toNumber() >= requiredConfirmations.toNumber()) {
        /* istanbul ignore next */
        cov_1orgfv57c8().b[5][0]++;
        cov_1orgfv57c8().s[60]++;
        status = "confirmed";
      } else {
        /* istanbul ignore next */
        cov_1orgfv57c8().b[5][1]++;
        cov_1orgfv57c8().s[61]++;
        status = "pending";
      }
    }
    // 从数据库获取交易描述和类型
    const {
      data: txData,
      error
    } =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[62]++, await supabase.from('multisig_transactions').select('description, type, created_at').eq('transaction_id', transactionId).single());
    // 确定交易类型
    let type =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[63]++, "other");
    let description =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[64]++, '');
    let createdAt =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[65]++, Math.floor(Date.now() / 1000));
    /* istanbul ignore next */
    cov_1orgfv57c8().s[66]++;
    if (txData) {
      /* istanbul ignore next */
      cov_1orgfv57c8().b[6][0]++;
      cov_1orgfv57c8().s[67]++;
      type =
      /* istanbul ignore next */
      (cov_1orgfv57c8().b[7][0]++, txData.type) ||
      /* istanbul ignore next */
      (cov_1orgfv57c8().b[7][1]++, "other");
      /* istanbul ignore next */
      cov_1orgfv57c8().s[68]++;
      description =
      /* istanbul ignore next */
      (cov_1orgfv57c8().b[8][0]++, txData.description) ||
      /* istanbul ignore next */
      (cov_1orgfv57c8().b[8][1]++, '');
      /* istanbul ignore next */
      cov_1orgfv57c8().s[69]++;
      createdAt = new Date(txData.created_at).getTime() / 1000;
    } else {
      /* istanbul ignore next */
      cov_1orgfv57c8().b[6][1]++;
      cov_1orgfv57c8().s[70]++;
      // 尝试从交易数据推断类型
      if (
      /* istanbul ignore next */
      (cov_1orgfv57c8().b[10][0]++, destination === MULTISIG_ADDRESS) &&
      /* istanbul ignore next */
      (cov_1orgfv57c8().b[10][1]++, data.startsWith('0x'))) {
        /* istanbul ignore next */
        cov_1orgfv57c8().b[9][0]++;
        cov_1orgfv57c8().s[71]++;
        // 可能是更改所有者或要求的交易
        if (data.includes('addOwner')) {
          /* istanbul ignore next */
          cov_1orgfv57c8().b[11][0]++;
          cov_1orgfv57c8().s[72]++;
          type = "add_owner";
        } else {
          /* istanbul ignore next */
          cov_1orgfv57c8().b[11][1]++;
          cov_1orgfv57c8().s[73]++;
          if (data.includes('removeOwner')) {
            /* istanbul ignore next */
            cov_1orgfv57c8().b[12][0]++;
            cov_1orgfv57c8().s[74]++;
            type = "remove_owner";
          } else {
            /* istanbul ignore next */
            cov_1orgfv57c8().b[12][1]++;
            cov_1orgfv57c8().s[75]++;
            if (data.includes('changeRequirement')) {
              /* istanbul ignore next */
              cov_1orgfv57c8().b[13][0]++;
              cov_1orgfv57c8().s[76]++;
              type = "change_requirement";
            } else
            /* istanbul ignore next */
            {
              cov_1orgfv57c8().b[13][1]++;
            }
          }
        }
      } else {
        /* istanbul ignore next */
        cov_1orgfv57c8().b[9][1]++;
        cov_1orgfv57c8().s[77]++;
        if (
        /* istanbul ignore next */
        (cov_1orgfv57c8().b[15][0]++, value.gt(0)) &&
        /* istanbul ignore next */
        (cov_1orgfv57c8().b[15][1]++, data === '0x')) {
          /* istanbul ignore next */
          cov_1orgfv57c8().b[14][0]++;
          cov_1orgfv57c8().s[78]++;
          // 简单的资金转移
          type = "transfer_funds";
        } else
        /* istanbul ignore next */
        {
          cov_1orgfv57c8().b[14][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1orgfv57c8().s[79]++;
    return {
      id: transactionId,
      destination,
      value: (0, _ethers.formatEther)(value),
      data,
      executed,
      confirmations: confirmations.toNumber(),
      requiredConfirmations: requiredConfirmations.toNumber(),
      type,
      status,
      description,
      createdAt
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1orgfv57c8().s[80]++;
    logger.error('获取交易信息失败', {
      action: 'getTransaction',
      additionalData: {
        error,
        transactionId
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[81]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_1orgfv57c8().s[82]++;
const getAllTransactions = async provider => {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[17]++;
  cov_1orgfv57c8().s[83]++;
  try {
    const contract =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[84]++, getMultisigContract(provider));
    // 获取交易数量
    const transactionCount =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[85]++, await contract.transactionCount());
    // 获取所有交易
    const transactions =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[86]++, []);
    /* istanbul ignore next */
    cov_1orgfv57c8().s[87]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[88]++, 0); i < transactionCount.toNumber(); i++) {
      const transaction =
      /* istanbul ignore next */
      (cov_1orgfv57c8().s[89]++, await getTransaction(provider, i));
      /* istanbul ignore next */
      cov_1orgfv57c8().s[90]++;
      transactions.push(transaction);
    }
    // 按ID降序排序（最新的交易在前面）
    /* istanbul ignore next */
    cov_1orgfv57c8().s[91]++;
    return transactions.sort((a, b) => {
      /* istanbul ignore next */
      cov_1orgfv57c8().f[18]++;
      cov_1orgfv57c8().s[92]++;
      return b.id - a.id;
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1orgfv57c8().s[93]++;
    logger.error('获取所有交易失败', {
      action: 'getAllTransactions',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[94]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_1orgfv57c8().s[95]++;
const submitTransaction = async (signer, destination, value, data, type, description) => {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[19]++;
  cov_1orgfv57c8().s[96]++;
  try {
    const contract =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[97]++, getMultisigContract(signer));
    // 转换值为Wei
    const valueInWei =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[98]++, (0, _ethers.parseEther)(value));
    // 提交交易
    const tx =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[99]++, await contract.submitTransaction(destination, valueInWei, data));
    const receipt =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[100]++, await tx.wait());
    // 从事件中获取交易ID
    const submissionEvent =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[101]++, receipt.events?.find(e => {
      /* istanbul ignore next */
      cov_1orgfv57c8().f[20]++;
      cov_1orgfv57c8().s[102]++;
      return e.event === 'Submission';
    }));
    const transactionId =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[103]++, submissionEvent?.args?.transactionId.toNumber());
    /* istanbul ignore next */
    cov_1orgfv57c8().s[104]++;
    if (
    /* istanbul ignore next */
    (cov_1orgfv57c8().b[17][0]++, !transactionId) &&
    /* istanbul ignore next */
    (cov_1orgfv57c8().b[17][1]++, transactionId !== 0)) {
      /* istanbul ignore next */
      cov_1orgfv57c8().b[16][0]++;
      cov_1orgfv57c8().s[105]++;
      throw new Error('无法获取交易ID');
    } else
    /* istanbul ignore next */
    {
      cov_1orgfv57c8().b[16][1]++;
    }
    // 将交易信息保存到数据库
    cov_1orgfv57c8().s[106]++;
    await supabase.from('multisig_transactions').insert({
      transaction_id: transactionId,
      destination,
      value,
      data,
      type,
      description,
      status: "pending",
      created_at: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[107]++;
    logger.info('交易已提交', {
      action: 'submitTransaction',
      additionalData: {
        transactionId,
        destination,
        value,
        type
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[108]++;
    return transactionId;
  } catch (error) {
    /* istanbul ignore next */
    cov_1orgfv57c8().s[109]++;
    logger.error('提交交易失败', {
      action: 'submitTransaction',
      additionalData: {
        error,
        destination,
        value,
        data
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[110]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_1orgfv57c8().s[111]++;
const confirmTransaction = async (signer, transactionId) => {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[21]++;
  cov_1orgfv57c8().s[112]++;
  try {
    const contract =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[113]++, getMultisigContract(signer));
    // 确认交易
    const tx =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[114]++, await contract.confirmTransaction(transactionId));
    /* istanbul ignore next */
    cov_1orgfv57c8().s[115]++;
    await tx.wait();
    /* istanbul ignore next */
    cov_1orgfv57c8().s[116]++;
    logger.info('交易已确认', {
      action: 'confirmTransaction',
      additionalData: {
        transactionId
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[117]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_1orgfv57c8().s[118]++;
    logger.error('确认交易失败', {
      action: 'confirmTransaction',
      additionalData: {
        error,
        transactionId
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[119]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_1orgfv57c8().s[120]++;
const revokeConfirmation = async (signer, transactionId) => {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[22]++;
  cov_1orgfv57c8().s[121]++;
  try {
    const contract =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[122]++, getMultisigContract(signer));
    // 撤销确认
    const tx =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[123]++, await contract.revokeConfirmation(transactionId));
    /* istanbul ignore next */
    cov_1orgfv57c8().s[124]++;
    await tx.wait();
    /* istanbul ignore next */
    cov_1orgfv57c8().s[125]++;
    logger.info('确认已撤销', {
      action: 'revokeConfirmation',
      additionalData: {
        transactionId
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[126]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_1orgfv57c8().s[127]++;
    logger.error('撤销确认失败', {
      action: 'revokeConfirmation',
      additionalData: {
        error,
        transactionId
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[128]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_1orgfv57c8().s[129]++;
const executeTransaction = async (signer, transactionId) => {
  /* istanbul ignore next */
  cov_1orgfv57c8().f[23]++;
  cov_1orgfv57c8().s[130]++;
  try {
    const contract =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[131]++, getMultisigContract(signer));
    // 执行交易
    const tx =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[132]++, await contract.executeTransaction(transactionId));
    const receipt =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[133]++, await tx.wait());
    // 检查是否执行成功
    const executionEvent =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[134]++, receipt.events?.find(e => {
      /* istanbul ignore next */
      cov_1orgfv57c8().f[24]++;
      cov_1orgfv57c8().s[135]++;
      return e.event === 'Execution';
    }));
    const executionFailureEvent =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[136]++, receipt.events?.find(e => {
      /* istanbul ignore next */
      cov_1orgfv57c8().f[25]++;
      cov_1orgfv57c8().s[137]++;
      return e.event === 'ExecutionFailure';
    }));
    const success =
    /* istanbul ignore next */
    (cov_1orgfv57c8().s[138]++,
    /* istanbul ignore next */
    (cov_1orgfv57c8().b[18][0]++, !!executionEvent) &&
    /* istanbul ignore next */
    (cov_1orgfv57c8().b[18][1]++, !executionFailureEvent));
    // 更新数据库中的交易状态
    /* istanbul ignore next */
    cov_1orgfv57c8().s[139]++;
    await supabase.from('multisig_transactions').update({
      status: success ?
      /* istanbul ignore next */
      (cov_1orgfv57c8().b[19][0]++, "executed") :
      /* istanbul ignore next */
      (cov_1orgfv57c8().b[19][1]++, "failed")
    }).eq('transaction_id', transactionId);
    /* istanbul ignore next */
    cov_1orgfv57c8().s[140]++;
    logger.info(success ?
    /* istanbul ignore next */
    (cov_1orgfv57c8().b[20][0]++, '交易已执行') :
    /* istanbul ignore next */
    (cov_1orgfv57c8().b[20][1]++, '交易执行失败'), {
      action: 'executeTransaction',
      additionalData: {
        transactionId,
        success
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[141]++;
    return success;
  } catch (error) {
    /* istanbul ignore next */
    cov_1orgfv57c8().s[142]++;
    logger.error('执行交易失败', {
      action: 'executeTransaction',
      additionalData: {
        error,
        transactionId
      }
    });
    /* istanbul ignore next */
    cov_1orgfv57c8().s[143]++;
    throw error;
  }
};
/**
 * 多签钱包服务
 */
const MultisigService =
/* istanbul ignore next */
(cov_1orgfv57c8().s[144]++, {
  getMultisigInfo,
  getTransaction,
  getAllTransactions,
  submitTransaction,
  confirmTransaction,
  revokeConfirmation,
  executeTransaction
});
const _default =
/* istanbul ignore next */
(cov_1orgfv57c8().s[145]++, MultisigService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW9yZ2Z2NTdjOCIsImFjdHVhbENvdmVyYWdlIiwicyIsIk11bHRpc2lnVHJhbnNhY3Rpb25TdGF0dXMiLCJmIiwiTXVsdGlzaWdUcmFuc2FjdGlvblR5cGUiLCJjb25maXJtVHJhbnNhY3Rpb24iLCJkZWZhdWx0IiwiX2RlZmF1bHQiLCJleGVjdXRlVHJhbnNhY3Rpb24iLCJnZXRBbGxUcmFuc2FjdGlvbnMiLCJnZXRNdWx0aXNpZ0luZm8iLCJnZXRUcmFuc2FjdGlvbiIsInJldm9rZUNvbmZpcm1hdGlvbiIsInN1Ym1pdFRyYW5zYWN0aW9uIiwibG9nZ2VyIiwiX2xvZ2dlciIsImNyZWF0ZUNvbnRleHRMb2dnZXIiLCJjb21wb25lbnQiLCJNVUxUSVNJR19BQkkiLCJNVUxUSVNJR19BRERSRVNTIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX01VTFRJU0lHX1dBTExFVF9BRERSRVNTIiwic3VwYWJhc2VVcmwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlIiwiX3N1cGFiYXNlanMiLCJjcmVhdGVDbGllbnQiLCJiIiwiZ2V0TXVsdGlzaWdDb250cmFjdCIsInByb3ZpZGVyIiwiX2V0aGVycyIsImV0aGVycyIsIkNvbnRyYWN0IiwiY29udHJhY3QiLCJvd25lcnMiLCJnZXRPd25lcnMiLCJyZXF1aXJlZENvbmZpcm1hdGlvbnMiLCJyZXF1aXJlZCIsInRyYW5zYWN0aW9uQ291bnQiLCJiYWxhbmNlIiwiZ2V0QmFsYW5jZSIsImFkZHJlc3MiLCJ0b051bWJlciIsImZvcm1hdEV0aGVyIiwiZXJyb3IiLCJhY3Rpb24iLCJhZGRpdGlvbmFsRGF0YSIsInRyYW5zYWN0aW9uSWQiLCJkZXN0aW5hdGlvbiIsInZhbHVlIiwiZGF0YSIsImV4ZWN1dGVkIiwidHJhbnNhY3Rpb25zIiwiY29uZmlybWF0aW9ucyIsImdldENvbmZpcm1hdGlvbkNvdW50Iiwic3RhdHVzIiwidHhEYXRhIiwiZnJvbSIsInNlbGVjdCIsImVxIiwic2luZ2xlIiwidHlwZSIsImRlc2NyaXB0aW9uIiwiY3JlYXRlZEF0IiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsImNyZWF0ZWRfYXQiLCJnZXRUaW1lIiwic3RhcnRzV2l0aCIsImluY2x1ZGVzIiwiZ3QiLCJpZCIsImkiLCJ0cmFuc2FjdGlvbiIsInB1c2giLCJzb3J0IiwiYSIsInNpZ25lciIsInZhbHVlSW5XZWkiLCJwYXJzZUV0aGVyIiwidHgiLCJyZWNlaXB0Iiwid2FpdCIsInN1Ym1pc3Npb25FdmVudCIsImV2ZW50cyIsImZpbmQiLCJlIiwiZXZlbnQiLCJhcmdzIiwiRXJyb3IiLCJpbnNlcnQiLCJ0cmFuc2FjdGlvbl9pZCIsInRvSVNPU3RyaW5nIiwiaW5mbyIsImV4ZWN1dGlvbkV2ZW50IiwiZXhlY3V0aW9uRmFpbHVyZUV2ZW50Iiwic3VjY2VzcyIsInVwZGF0ZSIsIk11bHRpc2lnU2VydmljZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWRleW91L0Rlc2t0b3Avc20vc29jaW9taW50L3NyYy9zZXJ2aWNlcy9tdWx0aXNpZ1NlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG4vKipcbiAqIOWkmuetvumSseWMheacjeWKoVxuICogXG4gKiDor6XmnI3liqHmj5DkvpvkuI7lpJrnrb7pkrHljIXkuqTkupLnmoTlip/og73vvIzljIXmi6zmn6Xor6LlpJrnrb7pkrHljIXkv6Hmga/jgIHmj5DkuqTkuqTmmJPlkozmn6Xor6LkuqTmmJPnirbmgIHnrYnjgIJcbiAqL1xuXG5pbXBvcnQgeyBldGhlcnMsIGZvcm1hdEV0aGVyLCBwYXJzZUV0aGVyIH0gZnJvbSAnZXRoZXJzJztcbmltcG9ydCBMb2dnZXIgZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcblxuLy8g5Yib5bu65pel5b+X6K6w5b2V5ZmoXG5jb25zdCBsb2dnZXIgPSBMb2dnZXIuY3JlYXRlQ29udGV4dExvZ2dlcih7IGNvbXBvbmVudDogJ011bHRpc2lnU2VydmljZScgfSk7XG5cbi8vIOWkmuetvumSseWMhUFCSSAtIOeugOWMlueJiO+8jOS7heWMheWQq+aIkeS7rOmcgOimgeeahOWHveaVsFxuY29uc3QgTVVMVElTSUdfQUJJID0gW1xuICAvLyDmn6Xor6LmiYDmnInogIVcbiAgJ2Z1bmN0aW9uIGdldE93bmVycygpIHZpZXcgcmV0dXJucyAoYWRkcmVzc1tdKScsXG4gIC8vIOafpeivouehruiupOaVsFxuICAnZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uQ291bnQodWludDI1NiB0cmFuc2FjdGlvbklkKSB2aWV3IHJldHVybnMgKHVpbnQyNTYpJyxcbiAgLy8g5p+l6K+i5omA6ZyA56Gu6K6k5pWwXG4gICdmdW5jdGlvbiByZXF1aXJlZCgpIHZpZXcgcmV0dXJucyAodWludDI1NiknLFxuICAvLyDmn6Xor6LkuqTmmJPmlbDph49cbiAgJ2Z1bmN0aW9uIHRyYW5zYWN0aW9uQ291bnQoKSB2aWV3IHJldHVybnMgKHVpbnQyNTYpJyxcbiAgLy8g5p+l6K+i5Lqk5piTXG4gICdmdW5jdGlvbiB0cmFuc2FjdGlvbnModWludDI1NiB0cmFuc2FjdGlvbklkKSB2aWV3IHJldHVybnMgKGFkZHJlc3MgZGVzdGluYXRpb24sIHVpbnQyNTYgdmFsdWUsIGJ5dGVzIGRhdGEsIGJvb2wgZXhlY3V0ZWQpJyxcbiAgLy8g5p+l6K+i56Gu6K6k54q25oCBXG4gICdmdW5jdGlvbiBpc0NvbmZpcm1lZCh1aW50MjU2IHRyYW5zYWN0aW9uSWQpIHZpZXcgcmV0dXJucyAoYm9vbCknLFxuICAvLyDmj5DkuqTkuqTmmJNcbiAgJ2Z1bmN0aW9uIHN1Ym1pdFRyYW5zYWN0aW9uKGFkZHJlc3MgZGVzdGluYXRpb24sIHVpbnQyNTYgdmFsdWUsIGJ5dGVzIGRhdGEpIHJldHVybnMgKHVpbnQyNTYgdHJhbnNhY3Rpb25JZCknLFxuICAvLyDnoa7orqTkuqTmmJNcbiAgJ2Z1bmN0aW9uIGNvbmZpcm1UcmFuc2FjdGlvbih1aW50MjU2IHRyYW5zYWN0aW9uSWQpJyxcbiAgLy8g5pKk6ZSA56Gu6K6kXG4gICdmdW5jdGlvbiByZXZva2VDb25maXJtYXRpb24odWludDI1NiB0cmFuc2FjdGlvbklkKScsXG4gIC8vIOaJp+ihjOS6pOaYk1xuICAnZnVuY3Rpb24gZXhlY3V0ZVRyYW5zYWN0aW9uKHVpbnQyNTYgdHJhbnNhY3Rpb25JZCknLFxuICAvLyDkuovku7ZcbiAgJ2V2ZW50IFN1Ym1pc3Npb24odWludDI1NiBpbmRleGVkIHRyYW5zYWN0aW9uSWQpJyxcbiAgJ2V2ZW50IENvbmZpcm1hdGlvbihhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCB1aW50MjU2IGluZGV4ZWQgdHJhbnNhY3Rpb25JZCknLFxuICAnZXZlbnQgRXhlY3V0aW9uKHVpbnQyNTYgaW5kZXhlZCB0cmFuc2FjdGlvbklkKScsXG4gICdldmVudCBFeGVjdXRpb25GYWlsdXJlKHVpbnQyNTYgaW5kZXhlZCB0cmFuc2FjdGlvbklkKScsXG5dO1xuXG4vLyDlpJrnrb7pkrHljIXlnLDlnYBcbmNvbnN0IE1VTFRJU0lHX0FERFJFU1MgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19NVUxUSVNJR19XQUxMRVRfQUREUkVTUyBhcyBzdHJpbmc7XG5cbi8vIFN1cGFiYXNl5a6i5oi356uvXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTDtcbmNvbnN0IHN1cGFiYXNlQW5vbktleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZO1xuY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwgfHwgJycsIHN1cGFiYXNlQW5vbktleSB8fCAnJyk7XG5cbi8vIOS6pOaYk+exu+Wei1xuZXhwb3J0IGVudW0gTXVsdGlzaWdUcmFuc2FjdGlvblR5cGUge1xuICBUUkFOU0ZFUl9GVU5EUyA9ICd0cmFuc2Zlcl9mdW5kcycsXG4gIFVQR1JBREVfQ09OVFJBQ1QgPSAndXBncmFkZV9jb250cmFjdCcsXG4gIENIQU5HRV9QQVJBTUVURVIgPSAnY2hhbmdlX3BhcmFtZXRlcicsXG4gIEFERF9PV05FUiA9ICdhZGRfb3duZXInLFxuICBSRU1PVkVfT1dORVIgPSAncmVtb3ZlX293bmVyJyxcbiAgQ0hBTkdFX1JFUVVJUkVNRU5UID0gJ2NoYW5nZV9yZXF1aXJlbWVudCcsXG4gIE9USEVSID0gJ290aGVyJyxcbn1cblxuLy8g5Lqk5piT54q25oCBXG5leHBvcnQgZW51bSBNdWx0aXNpZ1RyYW5zYWN0aW9uU3RhdHVzIHtcbiAgUEVORElORyA9ICdwZW5kaW5nJyxcbiAgQ09ORklSTUVEID0gJ2NvbmZpcm1lZCcsXG4gIEVYRUNVVEVEID0gJ2V4ZWN1dGVkJyxcbiAgRkFJTEVEID0gJ2ZhaWxlZCcsXG59XG5cbi8vIOS6pOaYk+S/oeaBr+aOpeWPo1xuZXhwb3J0IGludGVyZmFjZSBNdWx0aXNpZ1RyYW5zYWN0aW9uIHtcbiAgaWQ6IG51bWJlcjtcbiAgZGVzdGluYXRpb246IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbiAgZGF0YTogc3RyaW5nO1xuICBleGVjdXRlZDogYm9vbGVhbjtcbiAgY29uZmlybWF0aW9uczogbnVtYmVyO1xuICByZXF1aXJlZENvbmZpcm1hdGlvbnM6IG51bWJlcjtcbiAgdHlwZTogTXVsdGlzaWdUcmFuc2FjdGlvblR5cGU7XG4gIHN0YXR1czogTXVsdGlzaWdUcmFuc2FjdGlvblN0YXR1cztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIGNyZWF0ZWRBdDogbnVtYmVyO1xufVxuXG4vKipcbiAqIOiOt+WPluWkmuetvumSseWMheWQiOe6puWunuS+i1xuICovXG5jb25zdCBnZXRNdWx0aXNpZ0NvbnRyYWN0ID0gKHByb3ZpZGVyOiBhbnkpID0+IHtcbiAgcmV0dXJuIG5ldyBldGhlcnMuQ29udHJhY3QoTVVMVElTSUdfQUREUkVTUywgTVVMVElTSUdfQUJJLCBwcm92aWRlcik7XG59O1xuXG4vKipcbiAqIOiOt+WPluWkmuetvumSseWMheS/oeaBr1xuICovXG5leHBvcnQgY29uc3QgZ2V0TXVsdGlzaWdJbmZvID0gYXN5bmMgKHByb3ZpZGVyOiBhbnkpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjb250cmFjdCA9IGdldE11bHRpc2lnQ29udHJhY3QocHJvdmlkZXIpO1xuICAgIFxuICAgIC8vIOiOt+WPluaJgOacieiAhVxuICAgIGNvbnN0IG93bmVycyA9IGF3YWl0IGNvbnRyYWN0LmdldE93bmVycygpO1xuICAgIFxuICAgIC8vIOiOt+WPluaJgOmcgOehruiupOaVsFxuICAgIGNvbnN0IHJlcXVpcmVkQ29uZmlybWF0aW9ucyA9IGF3YWl0IGNvbnRyYWN0LnJlcXVpcmVkKCk7XG4gICAgXG4gICAgLy8g6I635Y+W5Lqk5piT5pWw6YePXG4gICAgY29uc3QgdHJhbnNhY3Rpb25Db3VudCA9IGF3YWl0IGNvbnRyYWN0LnRyYW5zYWN0aW9uQ291bnQoKTtcbiAgICBcbiAgICAvLyDojrflj5bpkrHljIXkvZnpop1cbiAgICBjb25zdCBiYWxhbmNlID0gYXdhaXQgcHJvdmlkZXIuZ2V0QmFsYW5jZShNVUxUSVNJR19BRERSRVNTKTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgYWRkcmVzczogTVVMVElTSUdfQUREUkVTUyxcbiAgICAgIG93bmVycyxcbiAgICAgIHJlcXVpcmVkQ29uZmlybWF0aW9uczogcmVxdWlyZWRDb25maXJtYXRpb25zLnRvTnVtYmVyKCksXG4gICAgICB0cmFuc2FjdGlvbkNvdW50OiB0cmFuc2FjdGlvbkNvdW50LnRvTnVtYmVyKCksXG4gICAgICBiYWxhbmNlOiBmb3JtYXRFdGhlcihiYWxhbmNlKSxcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGxvZ2dlci5lcnJvcign6I635Y+W5aSa562+6ZKx5YyF5L+h5oGv5aSx6LSlJywge1xuICAgICAgYWN0aW9uOiAnZ2V0TXVsdGlzaWdJbmZvJyxcbiAgICAgIGFkZGl0aW9uYWxEYXRhOiB7IGVycm9yIH0sXG4gICAgfSk7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbi8qKlxuICog6I635Y+W5Lqk5piT5L+h5oGvXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRUcmFuc2FjdGlvbiA9IGFzeW5jIChcbiAgcHJvdmlkZXI6IGFueSxcbiAgdHJhbnNhY3Rpb25JZDogbnVtYmVyXG4pOiBQcm9taXNlPE11bHRpc2lnVHJhbnNhY3Rpb24+ID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjb250cmFjdCA9IGdldE11bHRpc2lnQ29udHJhY3QocHJvdmlkZXIpO1xuICAgIFxuICAgIC8vIOiOt+WPluS6pOaYk+S/oeaBr1xuICAgIGNvbnN0IFtkZXN0aW5hdGlvbiwgdmFsdWUsIGRhdGEsIGV4ZWN1dGVkXSA9IGF3YWl0IGNvbnRyYWN0LnRyYW5zYWN0aW9ucyh0cmFuc2FjdGlvbklkKTtcbiAgICBcbiAgICAvLyDojrflj5bnoa7orqTmlbBcbiAgICBjb25zdCBjb25maXJtYXRpb25zID0gYXdhaXQgY29udHJhY3QuZ2V0Q29uZmlybWF0aW9uQ291bnQodHJhbnNhY3Rpb25JZCk7XG4gICAgXG4gICAgLy8g6I635Y+W5omA6ZyA56Gu6K6k5pWwXG4gICAgY29uc3QgcmVxdWlyZWRDb25maXJtYXRpb25zID0gYXdhaXQgY29udHJhY3QucmVxdWlyZWQoKTtcbiAgICBcbiAgICAvLyDnoa7lrprkuqTmmJPnirbmgIFcbiAgICBsZXQgc3RhdHVzOiBNdWx0aXNpZ1RyYW5zYWN0aW9uU3RhdHVzO1xuICAgIGlmIChleGVjdXRlZCkge1xuICAgICAgc3RhdHVzID0gTXVsdGlzaWdUcmFuc2FjdGlvblN0YXR1cy5FWEVDVVRFRDtcbiAgICB9IGVsc2UgaWYgKGNvbmZpcm1hdGlvbnMudG9OdW1iZXIoKSA+PSByZXF1aXJlZENvbmZpcm1hdGlvbnMudG9OdW1iZXIoKSkge1xuICAgICAgc3RhdHVzID0gTXVsdGlzaWdUcmFuc2FjdGlvblN0YXR1cy5DT05GSVJNRUQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXR1cyA9IE11bHRpc2lnVHJhbnNhY3Rpb25TdGF0dXMuUEVORElORztcbiAgICB9XG4gICAgXG4gICAgLy8g5LuO5pWw5o2u5bqT6I635Y+W5Lqk5piT5o+P6L+w5ZKM57G75Z6LXG4gICAgY29uc3QgeyBkYXRhOiB0eERhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ211bHRpc2lnX3RyYW5zYWN0aW9ucycpXG4gICAgICAuc2VsZWN0KCdkZXNjcmlwdGlvbiwgdHlwZSwgY3JlYXRlZF9hdCcpXG4gICAgICAuZXEoJ3RyYW5zYWN0aW9uX2lkJywgdHJhbnNhY3Rpb25JZClcbiAgICAgIC5zaW5nbGUoKTtcbiAgICBcbiAgICAvLyDnoa7lrprkuqTmmJPnsbvlnotcbiAgICBsZXQgdHlwZSA9IE11bHRpc2lnVHJhbnNhY3Rpb25UeXBlLk9USEVSO1xuICAgIGxldCBkZXNjcmlwdGlvbiA9ICcnO1xuICAgIGxldCBjcmVhdGVkQXQgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcbiAgICBcbiAgICBpZiAodHhEYXRhKSB7XG4gICAgICB0eXBlID0gdHhEYXRhLnR5cGUgfHwgTXVsdGlzaWdUcmFuc2FjdGlvblR5cGUuT1RIRVI7XG4gICAgICBkZXNjcmlwdGlvbiA9IHR4RGF0YS5kZXNjcmlwdGlvbiB8fCAnJztcbiAgICAgIGNyZWF0ZWRBdCA9IG5ldyBEYXRlKHR4RGF0YS5jcmVhdGVkX2F0KS5nZXRUaW1lKCkgLyAxMDAwO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyDlsJ3or5Xku47kuqTmmJPmlbDmja7mjqjmlq3nsbvlnotcbiAgICAgIGlmIChkZXN0aW5hdGlvbiA9PT0gTVVMVElTSUdfQUREUkVTUyAmJiBkYXRhLnN0YXJ0c1dpdGgoJzB4JykpIHtcbiAgICAgICAgLy8g5Y+v6IO95piv5pu05pS55omA5pyJ6ICF5oiW6KaB5rGC55qE5Lqk5piTXG4gICAgICAgIGlmIChkYXRhLmluY2x1ZGVzKCdhZGRPd25lcicpKSB7XG4gICAgICAgICAgdHlwZSA9IE11bHRpc2lnVHJhbnNhY3Rpb25UeXBlLkFERF9PV05FUjtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhLmluY2x1ZGVzKCdyZW1vdmVPd25lcicpKSB7XG4gICAgICAgICAgdHlwZSA9IE11bHRpc2lnVHJhbnNhY3Rpb25UeXBlLlJFTU9WRV9PV05FUjtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhLmluY2x1ZGVzKCdjaGFuZ2VSZXF1aXJlbWVudCcpKSB7XG4gICAgICAgICAgdHlwZSA9IE11bHRpc2lnVHJhbnNhY3Rpb25UeXBlLkNIQU5HRV9SRVFVSVJFTUVOVDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh2YWx1ZS5ndCgwKSAmJiBkYXRhID09PSAnMHgnKSB7XG4gICAgICAgIC8vIOeugOWNleeahOi1hOmHkei9rOenu1xuICAgICAgICB0eXBlID0gTXVsdGlzaWdUcmFuc2FjdGlvblR5cGUuVFJBTlNGRVJfRlVORFM7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBpZDogdHJhbnNhY3Rpb25JZCxcbiAgICAgIGRlc3RpbmF0aW9uLFxuICAgICAgdmFsdWU6IGZvcm1hdEV0aGVyKHZhbHVlKSxcbiAgICAgIGRhdGEsXG4gICAgICBleGVjdXRlZCxcbiAgICAgIGNvbmZpcm1hdGlvbnM6IGNvbmZpcm1hdGlvbnMudG9OdW1iZXIoKSxcbiAgICAgIHJlcXVpcmVkQ29uZmlybWF0aW9uczogcmVxdWlyZWRDb25maXJtYXRpb25zLnRvTnVtYmVyKCksXG4gICAgICB0eXBlLFxuICAgICAgc3RhdHVzLFxuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBjcmVhdGVkQXQsXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoJ+iOt+WPluS6pOaYk+S/oeaBr+Wksei0pScsIHtcbiAgICAgIGFjdGlvbjogJ2dldFRyYW5zYWN0aW9uJyxcbiAgICAgIGFkZGl0aW9uYWxEYXRhOiB7IGVycm9yLCB0cmFuc2FjdGlvbklkIH0sXG4gICAgfSk7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbi8qKlxuICog6I635Y+W5omA5pyJ5Lqk5piTXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRBbGxUcmFuc2FjdGlvbnMgPSBhc3luYyAoXG4gIHByb3ZpZGVyOiBhbnlcbik6IFByb21pc2U8TXVsdGlzaWdUcmFuc2FjdGlvbltdPiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgY29udHJhY3QgPSBnZXRNdWx0aXNpZ0NvbnRyYWN0KHByb3ZpZGVyKTtcbiAgICBcbiAgICAvLyDojrflj5bkuqTmmJPmlbDph49cbiAgICBjb25zdCB0cmFuc2FjdGlvbkNvdW50ID0gYXdhaXQgY29udHJhY3QudHJhbnNhY3Rpb25Db3VudCgpO1xuICAgIFxuICAgIC8vIOiOt+WPluaJgOacieS6pOaYk1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uczogTXVsdGlzaWdUcmFuc2FjdGlvbltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmFuc2FjdGlvbkNvdW50LnRvTnVtYmVyKCk7IGkrKykge1xuICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSBhd2FpdCBnZXRUcmFuc2FjdGlvbihwcm92aWRlciwgaSk7XG4gICAgICB0cmFuc2FjdGlvbnMucHVzaCh0cmFuc2FjdGlvbik7XG4gICAgfVxuICAgIFxuICAgIC8vIOaMiUlE6ZmN5bqP5o6S5bqP77yI5pyA5paw55qE5Lqk5piT5Zyo5YmN6Z2i77yJXG4gICAgcmV0dXJuIHRyYW5zYWN0aW9ucy5zb3J0KChhLCBiKSA9PiBiLmlkIC0gYS5pZCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCfojrflj5bmiYDmnInkuqTmmJPlpLHotKUnLCB7XG4gICAgICBhY3Rpb246ICdnZXRBbGxUcmFuc2FjdGlvbnMnLFxuICAgICAgYWRkaXRpb25hbERhdGE6IHsgZXJyb3IgfSxcbiAgICB9KTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxuLyoqXG4gKiDmj5DkuqTkuqTmmJNcbiAqL1xuZXhwb3J0IGNvbnN0IHN1Ym1pdFRyYW5zYWN0aW9uID0gYXN5bmMgKFxuICBzaWduZXI6IGFueSxcbiAgZGVzdGluYXRpb246IHN0cmluZyxcbiAgdmFsdWU6IHN0cmluZyxcbiAgZGF0YTogc3RyaW5nLFxuICB0eXBlOiBNdWx0aXNpZ1RyYW5zYWN0aW9uVHlwZSxcbiAgZGVzY3JpcHRpb246IHN0cmluZ1xuKTogUHJvbWlzZTxudW1iZXI+ID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjb250cmFjdCA9IGdldE11bHRpc2lnQ29udHJhY3Qoc2lnbmVyKTtcbiAgICBcbiAgICAvLyDovazmjaLlgLzkuLpXZWlcbiAgICBjb25zdCB2YWx1ZUluV2VpID0gcGFyc2VFdGhlcih2YWx1ZSk7XG4gICAgXG4gICAgLy8g5o+Q5Lqk5Lqk5piTXG4gICAgY29uc3QgdHggPSBhd2FpdCBjb250cmFjdC5zdWJtaXRUcmFuc2FjdGlvbihkZXN0aW5hdGlvbiwgdmFsdWVJbldlaSwgZGF0YSk7XG4gICAgY29uc3QgcmVjZWlwdCA9IGF3YWl0IHR4LndhaXQoKTtcbiAgICBcbiAgICAvLyDku47kuovku7bkuK3ojrflj5bkuqTmmJNJRFxuICAgIGNvbnN0IHN1Ym1pc3Npb25FdmVudCA9IHJlY2VpcHQuZXZlbnRzPy5maW5kKGUgPT4gZS5ldmVudCA9PT0gJ1N1Ym1pc3Npb24nKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbklkID0gc3VibWlzc2lvbkV2ZW50Py5hcmdzPy50cmFuc2FjdGlvbklkLnRvTnVtYmVyKCk7XG4gICAgXG4gICAgaWYgKCF0cmFuc2FjdGlvbklkICYmIHRyYW5zYWN0aW9uSWQgIT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcign5peg5rOV6I635Y+W5Lqk5piTSUQnKTtcbiAgICB9XG4gICAgXG4gICAgLy8g5bCG5Lqk5piT5L+h5oGv5L+d5a2Y5Yiw5pWw5o2u5bqTXG4gICAgYXdhaXQgc3VwYWJhc2UuZnJvbSgnbXVsdGlzaWdfdHJhbnNhY3Rpb25zJykuaW5zZXJ0KHtcbiAgICAgIHRyYW5zYWN0aW9uX2lkOiB0cmFuc2FjdGlvbklkLFxuICAgICAgZGVzdGluYXRpb24sXG4gICAgICB2YWx1ZSxcbiAgICAgIGRhdGEsXG4gICAgICB0eXBlLFxuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBzdGF0dXM6IE11bHRpc2lnVHJhbnNhY3Rpb25TdGF0dXMuUEVORElORyxcbiAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICB9KTtcbiAgICBcbiAgICBsb2dnZXIuaW5mbygn5Lqk5piT5bey5o+Q5LqkJywge1xuICAgICAgYWN0aW9uOiAnc3VibWl0VHJhbnNhY3Rpb24nLFxuICAgICAgYWRkaXRpb25hbERhdGE6IHsgdHJhbnNhY3Rpb25JZCwgZGVzdGluYXRpb24sIHZhbHVlLCB0eXBlIH0sXG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uSWQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCfmj5DkuqTkuqTmmJPlpLHotKUnLCB7XG4gICAgICBhY3Rpb246ICdzdWJtaXRUcmFuc2FjdGlvbicsXG4gICAgICBhZGRpdGlvbmFsRGF0YTogeyBlcnJvciwgZGVzdGluYXRpb24sIHZhbHVlLCBkYXRhIH0sXG4gICAgfSk7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbi8qKlxuICog56Gu6K6k5Lqk5piTXG4gKi9cbmV4cG9ydCBjb25zdCBjb25maXJtVHJhbnNhY3Rpb24gPSBhc3luYyAoXG4gIHNpZ25lcjogYW55LFxuICB0cmFuc2FjdGlvbklkOiBudW1iZXJcbik6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNvbnRyYWN0ID0gZ2V0TXVsdGlzaWdDb250cmFjdChzaWduZXIpO1xuICAgIFxuICAgIC8vIOehruiupOS6pOaYk1xuICAgIGNvbnN0IHR4ID0gYXdhaXQgY29udHJhY3QuY29uZmlybVRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uSWQpO1xuICAgIGF3YWl0IHR4LndhaXQoKTtcbiAgICBcbiAgICBsb2dnZXIuaW5mbygn5Lqk5piT5bey56Gu6K6kJywge1xuICAgICAgYWN0aW9uOiAnY29uZmlybVRyYW5zYWN0aW9uJyxcbiAgICAgIGFkZGl0aW9uYWxEYXRhOiB7IHRyYW5zYWN0aW9uSWQgfSxcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoJ+ehruiupOS6pOaYk+Wksei0pScsIHtcbiAgICAgIGFjdGlvbjogJ2NvbmZpcm1UcmFuc2FjdGlvbicsXG4gICAgICBhZGRpdGlvbmFsRGF0YTogeyBlcnJvciwgdHJhbnNhY3Rpb25JZCB9LFxuICAgIH0pO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG4vKipcbiAqIOaSpOmUgOehruiupFxuICovXG5leHBvcnQgY29uc3QgcmV2b2tlQ29uZmlybWF0aW9uID0gYXN5bmMgKFxuICBzaWduZXI6IGFueSxcbiAgdHJhbnNhY3Rpb25JZDogbnVtYmVyXG4pOiBQcm9taXNlPGJvb2xlYW4+ID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjb250cmFjdCA9IGdldE11bHRpc2lnQ29udHJhY3Qoc2lnbmVyKTtcbiAgICBcbiAgICAvLyDmkqTplIDnoa7orqRcbiAgICBjb25zdCB0eCA9IGF3YWl0IGNvbnRyYWN0LnJldm9rZUNvbmZpcm1hdGlvbih0cmFuc2FjdGlvbklkKTtcbiAgICBhd2FpdCB0eC53YWl0KCk7XG4gICAgXG4gICAgbG9nZ2VyLmluZm8oJ+ehruiupOW3suaSpOmUgCcsIHtcbiAgICAgIGFjdGlvbjogJ3Jldm9rZUNvbmZpcm1hdGlvbicsXG4gICAgICBhZGRpdGlvbmFsRGF0YTogeyB0cmFuc2FjdGlvbklkIH0sXG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCfmkqTplIDnoa7orqTlpLHotKUnLCB7XG4gICAgICBhY3Rpb246ICdyZXZva2VDb25maXJtYXRpb24nLFxuICAgICAgYWRkaXRpb25hbERhdGE6IHsgZXJyb3IsIHRyYW5zYWN0aW9uSWQgfSxcbiAgICB9KTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxuLyoqXG4gKiDmiafooYzkuqTmmJNcbiAqL1xuZXhwb3J0IGNvbnN0IGV4ZWN1dGVUcmFuc2FjdGlvbiA9IGFzeW5jIChcbiAgc2lnbmVyOiBhbnksXG4gIHRyYW5zYWN0aW9uSWQ6IG51bWJlclxuKTogUHJvbWlzZTxib29sZWFuPiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgY29udHJhY3QgPSBnZXRNdWx0aXNpZ0NvbnRyYWN0KHNpZ25lcik7XG4gICAgXG4gICAgLy8g5omn6KGM5Lqk5piTXG4gICAgY29uc3QgdHggPSBhd2FpdCBjb250cmFjdC5leGVjdXRlVHJhbnNhY3Rpb24odHJhbnNhY3Rpb25JZCk7XG4gICAgY29uc3QgcmVjZWlwdCA9IGF3YWl0IHR4LndhaXQoKTtcbiAgICBcbiAgICAvLyDmo4Dmn6XmmK/lkKbmiafooYzmiJDlip9cbiAgICBjb25zdCBleGVjdXRpb25FdmVudCA9IHJlY2VpcHQuZXZlbnRzPy5maW5kKGUgPT4gZS5ldmVudCA9PT0gJ0V4ZWN1dGlvbicpO1xuICAgIGNvbnN0IGV4ZWN1dGlvbkZhaWx1cmVFdmVudCA9IHJlY2VpcHQuZXZlbnRzPy5maW5kKGUgPT4gZS5ldmVudCA9PT0gJ0V4ZWN1dGlvbkZhaWx1cmUnKTtcbiAgICBcbiAgICBjb25zdCBzdWNjZXNzID0gISFleGVjdXRpb25FdmVudCAmJiAhZXhlY3V0aW9uRmFpbHVyZUV2ZW50O1xuICAgIFxuICAgIC8vIOabtOaWsOaVsOaNruW6k+S4reeahOS6pOaYk+eKtuaAgVxuICAgIGF3YWl0IHN1cGFiYXNlLmZyb20oJ211bHRpc2lnX3RyYW5zYWN0aW9ucycpLnVwZGF0ZSh7XG4gICAgICBzdGF0dXM6IHN1Y2Nlc3MgPyBNdWx0aXNpZ1RyYW5zYWN0aW9uU3RhdHVzLkVYRUNVVEVEIDogTXVsdGlzaWdUcmFuc2FjdGlvblN0YXR1cy5GQUlMRUQsXG4gICAgfSkuZXEoJ3RyYW5zYWN0aW9uX2lkJywgdHJhbnNhY3Rpb25JZCk7XG4gICAgXG4gICAgbG9nZ2VyLmluZm8oc3VjY2VzcyA/ICfkuqTmmJPlt7LmiafooYwnIDogJ+S6pOaYk+aJp+ihjOWksei0pScsIHtcbiAgICAgIGFjdGlvbjogJ2V4ZWN1dGVUcmFuc2FjdGlvbicsXG4gICAgICBhZGRpdGlvbmFsRGF0YTogeyB0cmFuc2FjdGlvbklkLCBzdWNjZXNzIH0sXG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCfmiafooYzkuqTmmJPlpLHotKUnLCB7XG4gICAgICBhY3Rpb246ICdleGVjdXRlVHJhbnNhY3Rpb24nLFxuICAgICAgYWRkaXRpb25hbERhdGE6IHsgZXJyb3IsIHRyYW5zYWN0aW9uSWQgfSxcbiAgICB9KTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxuLyoqXG4gKiDlpJrnrb7pkrHljIXmnI3liqFcbiAqL1xuY29uc3QgTXVsdGlzaWdTZXJ2aWNlID0ge1xuICBnZXRNdWx0aXNpZ0luZm8sXG4gIGdldFRyYW5zYWN0aW9uLFxuICBnZXRBbGxUcmFuc2FjdGlvbnMsXG4gIHN1Ym1pdFRyYW5zYWN0aW9uLFxuICBjb25maXJtVHJhbnNhY3Rpb24sXG4gIHJldm9rZUNvbmZpcm1hdGlvbixcbiAgZXhlY3V0ZVRyYW5zYWN0aW9uLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTXVsdGlzaWdTZXJ2aWNlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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QUFLQyxDQUFBLElBQUs7TUFBQTtNQUFBNUYsY0FBQSxHQUFBSSxDQUFBO01BQUFKLGNBQUEsR0FBQUUsQ0FBQTtNQUFBLE9BQUEwRixDQUFBLENBQUVDLEtBQUssS0FBSztJQUFBO0lBRXBFLE1BQU1TLE9BQUE7SUFBQTtJQUFBLENBQUF0RyxjQUFBLEdBQUFFLENBQUE7SUFBVTtJQUFBLENBQUFGLGNBQUEsR0FBQStCLENBQUEsWUFBQyxDQUFDcUUsY0FBQTtJQUFBO0lBQUEsQ0FBQXBHLGNBQUEsR0FBQStCLENBQUEsV0FBa0IsQ0FBQ3NFLHFCQUFBO0lBRXJDO0lBQUE7SUFBQXJHLGNBQUEsR0FBQUUsQ0FBQTtJQUNBLE1BQU0wQixRQUFBLENBQVNpQyxJQUFJLENBQUMseUJBQXlCMEMsTUFBTSxDQUFDO01BQ2xENUMsTUFBQSxFQUFRMkMsT0FBQTtNQUFBO01BQUEsQ0FBQXRHLGNBQUEsR0FBQStCLENBQUE7TUFBQTtNQUFBLENBQUEvQixjQUFBLEdBQUErQixDQUFBO0lBQ1YsR0FBR2dDLEVBQUUsQ0FBQyxrQkFBa0JaLGFBQUE7SUFBQTtJQUFBbkQsY0FBQSxHQUFBRSxDQUFBO0lBRXhCYSxNQUFBLENBQU9vRixJQUFJLENBQUNHLE9BQUE7SUFBQTtJQUFBLENBQUF0RyxjQUFBLEdBQUErQixDQUFBLFdBQVU7SUFBQTtJQUFBLENBQUEvQixjQUFBLEdBQUErQixDQUFBLFdBQVUsV0FBVTtNQUN4Q2tCLE1BQUEsRUFBUTtNQUNSQyxjQUFBLEVBQWdCO1FBQUVDLGFBQUE7UUFBZW1EO01BQVE7SUFDM0M7SUFBQTtJQUFBdEcsY0FBQSxHQUFBRSxDQUFBO0lBRUEsT0FBT29HLE9BQUE7RUFDVCxFQUFFLE9BQU90RCxLQUFBLEVBQU87SUFBQTtJQUFBaEQsY0FBQSxHQUFBRSxDQUFBO0lBQ2RhLE1BQUEsQ0FBT2lDLEtBQUssQ0FBQyxVQUFVO01BQ3JCQyxNQUFBLEVBQVE7TUFDUkMsY0FBQSxFQUFnQjtRQUFFRixLQUFBO1FBQU9HO01BQWM7SUFDekM7SUFBQTtJQUFBbkQsY0FBQSxHQUFBRSxDQUFBO0lBQ0EsTUFBTThDLEtBQUE7RUFDUjtBQUNGO0FBRUE7OztBQUdBLE1BQU13RCxlQUFBO0FBQUE7QUFBQSxDQUFBeEcsY0FBQSxHQUFBRSxDQUFBLFNBQWtCO0VBQ3RCUyxlQUFBO0VBQ0FDLGNBQUE7RUFDQUYsa0JBQUE7RUFDQUksaUJBQUE7RUFDQVIsa0JBQUE7RUFDQU8sa0JBQUE7RUFDQUo7QUFDRjtNQUVBRCxRQUFBO0FBQUE7QUFBQSxDQUFBUixjQUFBLEdBQUFFLENBQUEsU0FBZXNHLGVBQUEiLCJpZ25vcmVMaXN0IjpbXX0=