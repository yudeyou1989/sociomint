{"version":3,"names":["configureChains","cov_1ubdu6lcnl","f","s","contractAbis","contractAddresses","default","_default","getDefaultChain","supportedChains","DEFAULT_CHAIN_ID","Number","b","process","env","NEXT_PUBLIC_CHAIN_ID","_chains","bsc","bscTestnet","getRpcUrl","chainId","NEXT_PUBLIC_BSC_MAINNET_RPC_URL","NEXT_PUBLIC_BSC_TESTNET_RPC_URL","undefined","smToken","NEXT_PUBLIC_SM_TOKEN_ADDRESS","smTokenExchange","NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS","customizedChains","map","chain","rpcUrl","id","_viem","defineChain","rpcUrls","http","public","find","_SMTokenjson","_SMTokenExchangejson"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/config/contracts.ts"],"sourcesContent":["import { defineChain } from 'viem';\nimport { bsc, bscTestnet } from 'viem/chains';\nimport SMTokenAbi from '../abis/SMToken.json';\nimport SMTokenExchangeAbi from '../abis/SMTokenExchange.json';\n\n// 从环境变量读取配置\nconst DEFAULT_CHAIN_ID = Number(process.env.NEXT_PUBLIC_CHAIN_ID || '97');\n\n// 支持的链\nexport const supportedChains = [\n  bsc,\n  bscTestnet,\n  // 可以根据需要添加更多链\n];\n\n// 从环境变量获取 RPC URLs\nconst getRpcUrl = (chainId: number): string | undefined => {\n  switch (chainId) {\n    case 56: // BSC Mainnet\n      return process.env.NEXT_PUBLIC_BSC_MAINNET_RPC_URL;\n    case 97: // BSC Testnet\n      return process.env.NEXT_PUBLIC_BSC_TESTNET_RPC_URL;\n    default:\n      return undefined;\n  }\n};\n\n// 合约地址配置\nexport const contractAddresses = {\n  smToken: process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS as `0x${string}` | undefined,\n  smTokenExchange: process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS as `0x${string}` | undefined,\n};\n\n// 为 viem 配置链\nexport const configureChains = () => {\n  const customizedChains = supportedChains.map(chain => {\n    const rpcUrl = getRpcUrl(chain.id);\n    if (rpcUrl) {\n      return defineChain({\n        ...chain,\n        rpcUrls: {\n          ...chain.rpcUrls,\n          default: {\n            http: [rpcUrl],\n          },\n          public: {\n            http: [rpcUrl],\n          },\n        },\n      });\n    }\n    return chain;\n  });\n\n  return customizedChains;\n};\n\n// 获取默认链\nexport const getDefaultChain = () => {\n  return supportedChains.find(chain => chain.id === DEFAULT_CHAIN_ID) || bscTestnet;\n};\n\n// 合约 ABI\nexport const contractAbis = {\n  smToken: SMTokenAbi,\n  smTokenExchange: SMTokenExchangeAbi,\n};\n\n// ExchangeStats 类型定义\nexport interface ExchangeStats {\n  totalTokensSold: bigint;\n  totalTokensRemaining: bigint;\n  totalBnbRaised: bigint;\n  currentPrice: bigint;\n  nextRoundPrice: bigint;\n  isActive: boolean;\n  currentRound: number;\n}\n\nexport default {\n  supportedChains,\n  contractAddresses,\n  contractAbis,\n  getDefaultChain,\n  configureChains,\n}; "],"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","ignoreList":[]}