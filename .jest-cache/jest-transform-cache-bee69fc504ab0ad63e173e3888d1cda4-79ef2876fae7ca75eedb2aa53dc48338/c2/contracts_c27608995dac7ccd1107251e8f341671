02d8d4b1b35e57b6784da67faca1cdd0
"use strict";

/* istanbul ignore next */
function cov_1ubdu6lcnl() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/config/contracts.ts";
  var hash = "8bac34285bae009a06b3cc9a5efa84aa7f6d977b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/config/contracts.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "10": {
        start: {
          line: 31,
          column: 14
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "11": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "12": {
        start: {
          line: 33,
          column: 35
        },
        end: {
          line: 33,
          column: 92
        }
      },
      "13": {
        start: {
          line: 34,
          column: 43
        },
        end: {
          line: 34,
          column: 108
        }
      },
      "14": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "15": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 73
        }
      },
      "16": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "17": {
        start: {
          line: 47,
          column: 18
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "19": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 63
        }
      },
      "20": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 63
        }
      },
      "21": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 29
        }
      },
      "22": {
        start: {
          line: 57,
          column: 26
        },
        end: {
          line: 60,
          column: 1
        }
      },
      "23": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "24": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 83,
          column: 6
        }
      },
      "25": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "26": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "27": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "28": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 21
        }
      },
      "29": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 28
        }
      },
      "30": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 88,
          column: 1
        }
      },
      "31": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 94
        }
      },
      "32": {
        start: {
          line: 87,
          column: 41
        },
        end: {
          line: 87,
          column: 70
        }
      },
      "33": {
        start: {
          line: 89,
          column: 21
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "34": {
        start: {
          line: 93,
          column: 17
        },
        end: {
          line: 99,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 22
          }
        },
        loc: {
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 19
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 24
          }
        },
        loc: {
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 21
          },
          end: {
            line: 24,
            column: 22
          }
        },
        loc: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 21
          },
          end: {
            line: 27,
            column: 22
          }
        },
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 33
          }
        },
        loc: {
          start: {
            line: 35,
            column: 39
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 47,
            column: 18
          },
          end: {
            line: 47,
            column: 19
          }
        },
        loc: {
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 47
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 61,
            column: 25
          }
        },
        loc: {
          start: {
            line: 61,
            column: 28
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 61
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 62,
            column: 49
          },
          end: {
            line: 62,
            column: 50
          }
        },
        loc: {
          start: {
            line: 62,
            column: 58
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 62
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 86,
            column: 24
          },
          end: {
            line: 86,
            column: 25
          }
        },
        loc: {
          start: {
            line: 86,
            column: 28
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 86
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 33
          }
        },
        loc: {
          start: {
            line: 87,
            column: 41
          },
          end: {
            line: 87,
            column: 70
          }
        },
        line: 87
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 36,
            column: 38
          }
        }, {
          start: {
            line: 36,
            column: 41
          },
          end: {
            line: 38,
            column: 5
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 14
          }
        }, {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 36,
            column: 32
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 64
          }
        }, {
          start: {
            line: 41,
            column: 68
          },
          end: {
            line: 41,
            column: 72
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 63
          }
        }, {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 52,
            column: 63
          }
        }, {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 54,
            column: 29
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 11
          },
          end: {
            line: 87,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 11
          },
          end: {
            line: 87,
            column: 71
          }
        }, {
          start: {
            line: 87,
            column: 75
          },
          end: {
            line: 87,
            column: 93
          }
        }],
        line: 87
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/config/contracts.ts"],
      sourcesContent: ["import { defineChain } from 'viem';\nimport { bsc, bscTestnet } from 'viem/chains';\nimport SMTokenAbi from '../abis/SMToken.json';\nimport SMTokenExchangeAbi from '../abis/SMTokenExchange.json';\n\n// \u4ECE\u73AF\u5883\u53D8\u91CF\u8BFB\u53D6\u914D\u7F6E\nconst DEFAULT_CHAIN_ID = Number(process.env.NEXT_PUBLIC_CHAIN_ID || '97');\n\n// \u652F\u6301\u7684\u94FE\nexport const supportedChains = [\n  bsc,\n  bscTestnet,\n  // \u53EF\u4EE5\u6839\u636E\u9700\u8981\u6DFB\u52A0\u66F4\u591A\u94FE\n];\n\n// \u4ECE\u73AF\u5883\u53D8\u91CF\u83B7\u53D6 RPC URLs\nconst getRpcUrl = (chainId: number): string | undefined => {\n  switch (chainId) {\n    case 56: // BSC Mainnet\n      return process.env.NEXT_PUBLIC_BSC_MAINNET_RPC_URL;\n    case 97: // BSC Testnet\n      return process.env.NEXT_PUBLIC_BSC_TESTNET_RPC_URL;\n    default:\n      return undefined;\n  }\n};\n\n// \u5408\u7EA6\u5730\u5740\u914D\u7F6E\nexport const contractAddresses = {\n  smToken: process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS as `0x${string}` | undefined,\n  smTokenExchange: process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS as `0x${string}` | undefined,\n};\n\n// \u4E3A viem \u914D\u7F6E\u94FE\nexport const configureChains = () => {\n  const customizedChains = supportedChains.map(chain => {\n    const rpcUrl = getRpcUrl(chain.id);\n    if (rpcUrl) {\n      return defineChain({\n        ...chain,\n        rpcUrls: {\n          ...chain.rpcUrls,\n          default: {\n            http: [rpcUrl],\n          },\n          public: {\n            http: [rpcUrl],\n          },\n        },\n      });\n    }\n    return chain;\n  });\n\n  return customizedChains;\n};\n\n// \u83B7\u53D6\u9ED8\u8BA4\u94FE\nexport const getDefaultChain = () => {\n  return supportedChains.find(chain => chain.id === DEFAULT_CHAIN_ID) || bscTestnet;\n};\n\n// \u5408\u7EA6 ABI\nexport const contractAbis = {\n  smToken: SMTokenAbi,\n  smTokenExchange: SMTokenExchangeAbi,\n};\n\n// ExchangeStats \u7C7B\u578B\u5B9A\u4E49\nexport interface ExchangeStats {\n  totalTokensSold: bigint;\n  totalTokensRemaining: bigint;\n  totalBnbRaised: bigint;\n  currentPrice: bigint;\n  nextRoundPrice: bigint;\n  isActive: boolean;\n  currentRound: number;\n}\n\nexport default {\n  supportedChains,\n  contractAddresses,\n  contractAbis,\n  getDefaultChain,\n  configureChains,\n}; "],
      names: ["configureChains", "contractAbis", "contractAddresses", "getDefaultChain", "supportedChains", "DEFAULT_CHAIN_ID", "Number", "process", "env", "NEXT_PUBLIC_CHAIN_ID", "bsc", "bscTestnet", "getRpcUrl", "chainId", "NEXT_PUBLIC_BSC_MAINNET_RPC_URL", "NEXT_PUBLIC_BSC_TESTNET_RPC_URL", "undefined", "smToken", "NEXT_PUBLIC_SM_TOKEN_ADDRESS", "smTokenExchange", "NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS", "customizedChains", "map", "chain", "rpcUrl", "id", "defineChain", "rpcUrls", "default", "http", "public", "find", "SMTokenAbi", "SMTokenExchangeAbi"],
      mappings: ";;;;;;;;;;;IAkCaA,eAAe;eAAfA;;IA6BAC,YAAY;eAAZA;;IAnCAC,iBAAiB;eAAjBA;;IAmDb,OAME;eANF;;IArBaC,eAAe;eAAfA;;IAjDAC,eAAe;eAAfA;;;sBATe;wBACI;oEACT;4EACQ;;;;;;AAE/B,YAAY;AACZ,MAAMC,mBAAmBC,OAAOC,QAAQC,GAAG,CAACC,oBAAoB,IAAI;AAG7D,MAAML,kBAAkB;IAC7BM,WAAG;IACHC,kBAAU;CAEX;AAED,mBAAmB;AACnB,MAAMC,YAAY,CAACC;IACjB,OAAQA;QACN,KAAK;YACH,OAAON,QAAQC,GAAG,CAACM,+BAA+B;QACpD,KAAK;YACH,OAAOP,QAAQC,GAAG,CAACO,+BAA+B;QACpD;YACE,OAAOC;IACX;AACF;AAGO,MAAMd,oBAAoB;IAC/Be,SAASV,QAAQC,GAAG,CAACU,4BAA4B;IACjDC,iBAAiBZ,QAAQC,GAAG,CAACY,qCAAqC;AACpE;AAGO,MAAMpB,kBAAkB;IAC7B,MAAMqB,mBAAmBjB,gBAAgBkB,GAAG,CAACC,CAAAA;QAC3C,MAAMC,SAASZ,UAAUW,MAAME,EAAE;QACjC,IAAID,QAAQ;YACV,OAAOE,IAAAA,iBAAW,EAAC;gBACjB,GAAGH,KAAK;gBACRI,SAAS;oBACP,GAAGJ,MAAMI,OAAO;oBAChBC,SAAS;wBACPC,MAAM;4BAACL;yBAAO;oBAChB;oBACAM,QAAQ;wBACND,MAAM;4BAACL;yBAAO;oBAChB;gBACF;YACF;QACF;QACA,OAAOD;IACT;IAEA,OAAOF;AACT;AAGO,MAAMlB,kBAAkB;IAC7B,OAAOC,gBAAgB2B,IAAI,CAACR,CAAAA,QAASA,MAAME,EAAE,KAAKpB,qBAAqBM,kBAAU;AACnF;AAGO,MAAMV,eAAe;IAC1BgB,SAASe,oBAAU;IACnBb,iBAAiBc,4BAAkB;AACrC;MAaA,WAAe;IACb7B;IACAF;IACAD;IACAE;IACAH;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8bac34285bae009a06b3cc9a5efa84aa7f6d977b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ubdu6lcnl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ubdu6lcnl();
cov_1ubdu6lcnl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1ubdu6lcnl().f[0]++;
  cov_1ubdu6lcnl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1ubdu6lcnl().s[3]++;
_export(exports, {
  configureChains: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[1]++;
    cov_1ubdu6lcnl().s[4]++;
    return configureChains;
  },
  contractAbis: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[2]++;
    cov_1ubdu6lcnl().s[5]++;
    return contractAbis;
  },
  contractAddresses: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[3]++;
    cov_1ubdu6lcnl().s[6]++;
    return contractAddresses;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[4]++;
    cov_1ubdu6lcnl().s[7]++;
    return _default;
  },
  getDefaultChain: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[5]++;
    cov_1ubdu6lcnl().s[8]++;
    return getDefaultChain;
  },
  supportedChains: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[6]++;
    cov_1ubdu6lcnl().s[9]++;
    return supportedChains;
  }
});
const _viem =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[10]++, require("viem"));
const _chains =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[11]++, require("viem/chains"));
const _SMTokenjson =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ubdu6lcnl().s[12]++, _interop_require_default(require("../abis/SMToken.json")));
const _SMTokenExchangejson =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ubdu6lcnl().s[13]++, _interop_require_default(require("../abis/SMTokenExchange.json")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1ubdu6lcnl().f[7]++;
  cov_1ubdu6lcnl().s[14]++;
  return /* istanbul ignore next */(cov_1ubdu6lcnl().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[0][1]++, {
    default: obj
  });
}
// 从环境变量读取配置
const DEFAULT_CHAIN_ID =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[15]++, Number(
/* istanbul ignore next */
(cov_1ubdu6lcnl().b[2][0]++, process.env.NEXT_PUBLIC_CHAIN_ID) ||
/* istanbul ignore next */
(cov_1ubdu6lcnl().b[2][1]++, '97')));
const supportedChains =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[16]++, [_chains.bsc, _chains.bscTestnet]);
// 从环境变量获取 RPC URLs
/* istanbul ignore next */
cov_1ubdu6lcnl().s[17]++;
const getRpcUrl = chainId => {
  /* istanbul ignore next */
  cov_1ubdu6lcnl().f[8]++;
  cov_1ubdu6lcnl().s[18]++;
  switch (chainId) {
    case 56:
      /* istanbul ignore next */
      cov_1ubdu6lcnl().b[3][0]++;
      cov_1ubdu6lcnl().s[19]++;
      return process.env.NEXT_PUBLIC_BSC_MAINNET_RPC_URL;
    case 97:
      /* istanbul ignore next */
      cov_1ubdu6lcnl().b[3][1]++;
      cov_1ubdu6lcnl().s[20]++;
      return process.env.NEXT_PUBLIC_BSC_TESTNET_RPC_URL;
    default:
      /* istanbul ignore next */
      cov_1ubdu6lcnl().b[3][2]++;
      cov_1ubdu6lcnl().s[21]++;
      return undefined;
  }
};
const contractAddresses =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[22]++, {
  smToken: process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS,
  smTokenExchange: process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS
});
/* istanbul ignore next */
cov_1ubdu6lcnl().s[23]++;
const configureChains = () => {
  /* istanbul ignore next */
  cov_1ubdu6lcnl().f[9]++;
  const customizedChains =
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().s[24]++, supportedChains.map(chain => {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[10]++;
    const rpcUrl =
    /* istanbul ignore next */
    (cov_1ubdu6lcnl().s[25]++, getRpcUrl(chain.id));
    /* istanbul ignore next */
    cov_1ubdu6lcnl().s[26]++;
    if (rpcUrl) {
      /* istanbul ignore next */
      cov_1ubdu6lcnl().b[4][0]++;
      cov_1ubdu6lcnl().s[27]++;
      return (0, _viem.defineChain)({
        ...chain,
        rpcUrls: {
          ...chain.rpcUrls,
          default: {
            http: [rpcUrl]
          },
          public: {
            http: [rpcUrl]
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ubdu6lcnl().b[4][1]++;
    }
    cov_1ubdu6lcnl().s[28]++;
    return chain;
  }));
  /* istanbul ignore next */
  cov_1ubdu6lcnl().s[29]++;
  return customizedChains;
};
/* istanbul ignore next */
cov_1ubdu6lcnl().s[30]++;
const getDefaultChain = () => {
  /* istanbul ignore next */
  cov_1ubdu6lcnl().f[11]++;
  cov_1ubdu6lcnl().s[31]++;
  return /* istanbul ignore next */(cov_1ubdu6lcnl().b[5][0]++, supportedChains.find(chain => {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[12]++;
    cov_1ubdu6lcnl().s[32]++;
    return chain.id === DEFAULT_CHAIN_ID;
  })) ||
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[5][1]++, _chains.bscTestnet);
};
const contractAbis =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[33]++, {
  smToken: _SMTokenjson.default,
  smTokenExchange: _SMTokenExchangejson.default
});
const _default =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[34]++, {
  supportedChains,
  contractAddresses,
  contractAbis,
  getDefaultChain,
  configureChains
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,