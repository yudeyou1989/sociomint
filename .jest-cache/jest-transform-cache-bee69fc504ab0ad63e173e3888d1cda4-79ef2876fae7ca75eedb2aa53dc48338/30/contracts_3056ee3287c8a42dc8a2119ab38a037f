43ee639fe0c41bea6f294f36c2d5de75
// 合约地址配置
"use strict";

/* istanbul ignore next */
function cov_1ubdu6lcnl() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/config/contracts.ts";
  var hash = "15d58b2f5b9baf77f2990ca9ddf64bead35a9afb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/config/contracts.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 37
        }
      },
      "12": {
        start: {
          line: 38,
          column: 18
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "13": {
        start: {
          line: 56,
          column: 31
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "14": {
        start: {
          line: 60,
          column: 30
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "15": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "16": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "17": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 225,
          column: 1
        }
      },
      "18": {
        start: {
          line: 227,
          column: 24
        },
        end: {
          line: 302,
          column: 1
        }
      },
      "19": {
        start: {
          line: 303,
          column: 26
        },
        end: {
          line: 303,
          column: 44
        }
      },
      "20": {
        start: {
          line: 304,
          column: 21
        },
        end: {
          line: 307,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 13,
            column: 29
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 16
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 25
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 22
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 19
          }
        },
        loc: {
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 19
          }
        },
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 34,
            column: 28
          }
        },
        loc: {
          start: {
            line: 34,
            column: 38
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 60,
            column: 31
          }
        },
        loc: {
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 60
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 61,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 61,
            column: 44
          }
        }, {
          start: {
            line: 61,
            column: 48
          },
          end: {
            line: 61,
            column: 74
          }
        }],
        line: 61
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 64,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 64,
            column: 51
          }
        }, {
          start: {
            line: 64,
            column: 55
          },
          end: {
            line: 64,
            column: 86
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 14
          },
          end: {
            line: 65,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 14
          },
          end: {
            line: 65,
            column: 57
          }
        }, {
          start: {
            line: 65,
            column: 61
          },
          end: {
            line: 65,
            column: 90
          }
        }],
        line: 65
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/config/contracts.ts"],
      sourcesContent: ["// \u5408\u7EA6\u5730\u5740\u914D\u7F6E\nexport const CONTRACTS = {\n  // \u4E3B\u7F51\n  MAINNET: {\n    SM_TOKEN: \"0x8A791620dd6260079BF849Dc5567aDC3F2FdC318\", // \u751F\u4EA7\u73AF\u5883SMToken\u5408\u7EA6\u5730\u5740\n    SM_EXCHANGE: \"0x9B73F7d66d4aa53B073A5178CCd5FB381052EfeA\", // \u751F\u4EA7\u73AF\u5883SMTokenExchange\u5408\u7EA6\u5730\u5740\n  },\n  // \u6D4B\u8BD5\u7F51\n  TESTNET: {\n    SM_TOKEN: \"0xd7d7dd989642222B6f685aF0220dc0065F489ae0\", // SMToken\u6D4B\u8BD5\u7F51\u5408\u7EA6\u5730\u5740\n    SM_EXCHANGE: \"0xF0c4729f07d7B2F03E2E2F2feED36386Dc8bFb8E\", // SMTokenExchange\u6D4B\u8BD5\u7F51\u5408\u7EA6\u5730\u5740\n    SM_TOKEN_TEST: \"0xa1f5Fba244B0030bbc6fD115E0351a731521DfD9\", // SMToken_test\u6D4B\u8BD5\u7F51\u5408\u7EA6\u5730\u5740 (1\u5206\u949F\u65F6\u95F4\u9501)\n  },\n  // \u672C\u5730\u5F00\u53D1\u73AF\u5883\n  LOCAL: {\n    SM_TOKEN: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\", // SMToken\u672C\u5730\u5408\u7EA6\u5730\u5740\n    SM_EXCHANGE: \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\", // SMTokenExchange\u672C\u5730\u5408\u7EA6\u5730\u5740\n  }\n};\n\n// \u5B9D\u7BB1\u7CFB\u7EDF\u5408\u7EA6\u5730\u5740\ninterface BoxContractAddresses {\n  [networkId: number]: string;\n}\n\nexport const BOX_CONTRACT_ADDRESSES: BoxContractAddresses = {\n  97: '0x5FbDB2315678afecb367f032d93F642f64180aa3', // BSC Testnet\n  56: '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318'  // BSC Mainnet\n}\n\n/**\n * \u83B7\u53D6\u5F53\u524D\u7F51\u7EDC\u7684\u5B9D\u7BB1\u5408\u7EA6\u5730\u5740\n * @param networkId \u7F51\u7EDCID\n * @returns \u5B9D\u7BB1\u5408\u7EA6\u5730\u5740\n */\nexport const getBoxContractAddress = (networkId: number): string => {\n  return BOX_CONTRACT_ADDRESSES[networkId] || BOX_CONTRACT_ADDRESSES[97]; // \u9ED8\u8BA4\u8FD4\u56DE\u6D4B\u8BD5\u7F51\u5730\u5740\n};\n\n// \u5BFC\u51FA\u5408\u7EA6\u5730\u5740\u5E38\u91CF\uFF0C\u7528\u4E8E\u524D\u7AEF\u7EC4\u4EF6\nexport const CONTRACT_ADDRESSES = {\n  token: process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS || CONTRACTS.TESTNET.SM_TOKEN_TEST, // \u4F7F\u7528\u6D4B\u8BD5\u4EE3\u5E01\n  exchange: process.env.NEXT_PUBLIC_SM_EXCHANGE_ADDRESS || CONTRACTS.TESTNET.SM_EXCHANGE,\n  tokenTest: CONTRACTS.TESTNET.SM_TOKEN_TEST,\n};\n\n// SMToken ABI\nconst SM_TOKEN_ABI = [\n  {\n    \"inputs\": [],\n    \"name\": \"MINTER_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"PAUSER_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"DEFAULT_ADMIN_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"scheduleMint\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"actionHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"executeMint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"hasRole\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\n// SMTokenExchange ABI\nconst SM_EXCHANGE_ABI = [\n  {\n    \"inputs\": [],\n    \"name\": \"exchangeTokens\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getExchangeStats\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalTokensSold\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalTokensRemaining\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalBnbRaised\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"currentPrice\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"nextRoundPrice\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"userData\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint128\",\n        \"name\": \"totalPurchases\",\n        \"type\": \"uint128\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isVerified\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"lastPurchaseTime\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"hasRefundRequest\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\n// \u4E3A\u4E86\u5411\u540E\u517C\u5BB9\uFF0C\u6DFB\u52A0\u8FD9\u4E9B\u5BFC\u51FA\nexport const contractAddresses = CONTRACT_ADDRESSES;\nexport const contractAbis = {\n  smToken: SM_TOKEN_ABI,\n  smTokenExchange: SM_EXCHANGE_ABI,\n};\n\n// \u5BFC\u51FAABI\u5E38\u91CF\nexport { SM_TOKEN_ABI, SM_EXCHANGE_ABI };\n\n// \u5BFC\u51FA\u7C7B\u578B\u5B9A\u4E49\nexport interface ExchangeStats {\n  totalTokensSold: bigint;\n  totalTokensRemaining: bigint;\n  totalBnbRaised: bigint;\n  currentPrice: bigint;\n  nextRoundPrice: bigint;\n  isActive: boolean;\n  currentRound: number;\n}\n"],
      names: ["BOX_CONTRACT_ADDRESSES", "CONTRACTS", "CONTRACT_ADDRESSES", "SM_EXCHANGE_ABI", "SM_TOKEN_ABI", "contractAbis", "contractAddresses", "getBoxContractAddress", "MAINNET", "SM_TOKEN", "SM_EXCHANGE", "TESTNET", "SM_TOKEN_TEST", "LOCAL", "networkId", "token", "process", "env", "NEXT_PUBLIC_SM_TOKEN_ADDRESS", "exchange", "NEXT_PUBLIC_SM_EXCHANGE_ADDRESS", "tokenTest", "smToken", "smTokenExchange"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "15d58b2f5b9baf77f2990ca9ddf64bead35a9afb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ubdu6lcnl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ubdu6lcnl();
cov_1ubdu6lcnl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1ubdu6lcnl().f[0]++;
  cov_1ubdu6lcnl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1ubdu6lcnl().s[3]++;
_export(exports, {
  BOX_CONTRACT_ADDRESSES: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[1]++;
    cov_1ubdu6lcnl().s[4]++;
    return BOX_CONTRACT_ADDRESSES;
  },
  CONTRACTS: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[2]++;
    cov_1ubdu6lcnl().s[5]++;
    return CONTRACTS;
  },
  CONTRACT_ADDRESSES: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[3]++;
    cov_1ubdu6lcnl().s[6]++;
    return CONTRACT_ADDRESSES;
  },
  SM_EXCHANGE_ABI: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[4]++;
    cov_1ubdu6lcnl().s[7]++;
    return SM_EXCHANGE_ABI;
  },
  SM_TOKEN_ABI: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[5]++;
    cov_1ubdu6lcnl().s[8]++;
    return SM_TOKEN_ABI;
  },
  contractAbis: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[6]++;
    cov_1ubdu6lcnl().s[9]++;
    return contractAbis;
  },
  contractAddresses: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[7]++;
    cov_1ubdu6lcnl().s[10]++;
    return contractAddresses;
  },
  getBoxContractAddress: function () {
    /* istanbul ignore next */
    cov_1ubdu6lcnl().f[8]++;
    cov_1ubdu6lcnl().s[11]++;
    return getBoxContractAddress;
  }
});
const CONTRACTS =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[12]++, {
  // 主网
  MAINNET: {
    SM_TOKEN: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
    SM_EXCHANGE: "0x9B73F7d66d4aa53B073A5178CCd5FB381052EfeA"
  },
  // 测试网
  TESTNET: {
    SM_TOKEN: "0xd7d7dd989642222B6f685aF0220dc0065F489ae0",
    SM_EXCHANGE: "0xF0c4729f07d7B2F03E2E2F2feED36386Dc8bFb8E",
    SM_TOKEN_TEST: "0xa1f5Fba244B0030bbc6fD115E0351a731521DfD9"
  },
  // 本地开发环境
  LOCAL: {
    SM_TOKEN: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    SM_EXCHANGE: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
  }
});
const BOX_CONTRACT_ADDRESSES =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[13]++, {
  97: '0x5FbDB2315678afecb367f032d93F642f64180aa3',
  56: '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318' // BSC Mainnet
});
/* istanbul ignore next */
cov_1ubdu6lcnl().s[14]++;
const getBoxContractAddress = networkId => {
  /* istanbul ignore next */
  cov_1ubdu6lcnl().f[9]++;
  cov_1ubdu6lcnl().s[15]++;
  return /* istanbul ignore next */(cov_1ubdu6lcnl().b[0][0]++, BOX_CONTRACT_ADDRESSES[networkId]) ||
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[0][1]++, BOX_CONTRACT_ADDRESSES[97]); // 默认返回测试网地址
};
const CONTRACT_ADDRESSES =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[16]++, {
  token:
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[1][0]++, process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS) ||
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[1][1]++, CONTRACTS.TESTNET.SM_TOKEN_TEST),
  exchange:
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[2][0]++, process.env.NEXT_PUBLIC_SM_EXCHANGE_ADDRESS) ||
  /* istanbul ignore next */
  (cov_1ubdu6lcnl().b[2][1]++, CONTRACTS.TESTNET.SM_EXCHANGE),
  tokenTest: CONTRACTS.TESTNET.SM_TOKEN_TEST
});
// SMToken ABI
const SM_TOKEN_ABI =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[17]++, [{
  "inputs": [],
  "name": "MINTER_ROLE",
  "outputs": [{
    "internalType": "bytes32",
    "name": "",
    "type": "bytes32"
  }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "PAUSER_ROLE",
  "outputs": [{
    "internalType": "bytes32",
    "name": "",
    "type": "bytes32"
  }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "DEFAULT_ADMIN_ROLE",
  "outputs": [{
    "internalType": "bytes32",
    "name": "",
    "type": "bytes32"
  }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{
    "internalType": "address",
    "name": "to",
    "type": "address"
  }, {
    "internalType": "uint256",
    "name": "amount",
    "type": "uint256"
  }],
  "name": "scheduleMint",
  "outputs": [{
    "internalType": "bytes32",
    "name": "",
    "type": "bytes32"
  }],
  "stateMutability": "nonpayable",
  "type": "function"
}, {
  "inputs": [{
    "internalType": "bytes32",
    "name": "actionHash",
    "type": "bytes32"
  }, {
    "internalType": "address",
    "name": "to",
    "type": "address"
  }, {
    "internalType": "uint256",
    "name": "amount",
    "type": "uint256"
  }],
  "name": "executeMint",
  "outputs": [],
  "stateMutability": "nonpayable",
  "type": "function"
}, {
  "inputs": [{
    "internalType": "bytes32",
    "name": "role",
    "type": "bytes32"
  }, {
    "internalType": "address",
    "name": "account",
    "type": "address"
  }],
  "name": "hasRole",
  "outputs": [{
    "internalType": "bool",
    "name": "",
    "type": "bool"
  }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "name",
  "outputs": [{
    "internalType": "string",
    "name": "",
    "type": "string"
  }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "symbol",
  "outputs": [{
    "internalType": "string",
    "name": "",
    "type": "string"
  }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{
    "internalType": "address",
    "name": "account",
    "type": "address"
  }],
  "name": "balanceOf",
  "outputs": [{
    "internalType": "uint256",
    "name": "",
    "type": "uint256"
  }],
  "stateMutability": "view",
  "type": "function"
}]);
// SMTokenExchange ABI
const SM_EXCHANGE_ABI =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[18]++, [{
  "inputs": [],
  "name": "exchangeTokens",
  "outputs": [],
  "stateMutability": "payable",
  "type": "function"
}, {
  "inputs": [],
  "name": "getExchangeStats",
  "outputs": [{
    "internalType": "uint256",
    "name": "totalTokensSold",
    "type": "uint256"
  }, {
    "internalType": "uint256",
    "name": "totalTokensRemaining",
    "type": "uint256"
  }, {
    "internalType": "uint256",
    "name": "totalBnbRaised",
    "type": "uint256"
  }, {
    "internalType": "uint256",
    "name": "currentPrice",
    "type": "uint256"
  }, {
    "internalType": "uint256",
    "name": "nextRoundPrice",
    "type": "uint256"
  }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{
    "internalType": "address",
    "name": "user",
    "type": "address"
  }],
  "name": "userData",
  "outputs": [{
    "internalType": "uint128",
    "name": "totalPurchases",
    "type": "uint128"
  }, {
    "internalType": "bool",
    "name": "isVerified",
    "type": "bool"
  }, {
    "internalType": "uint64",
    "name": "lastPurchaseTime",
    "type": "uint64"
  }, {
    "internalType": "bool",
    "name": "hasRefundRequest",
    "type": "bool"
  }],
  "stateMutability": "view",
  "type": "function"
}]);
const contractAddresses =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[19]++, CONTRACT_ADDRESSES);
const contractAbis =
/* istanbul ignore next */
(cov_1ubdu6lcnl().s[20]++, {
  smToken: SM_TOKEN_ABI,
  smTokenExchange: SM_EXCHANGE_ABI
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,