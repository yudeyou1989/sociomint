{"version":3,"names":["cov_ih00dp1lj","actualCoverage","s","_default","TokenChart","f","timeRange","setTimeRange","_react","useState","priceData","setPriceData","isLoading","setIsLoading","useEffect","timer","setTimeout","dataPoints","b","basePrice","volatility","now","Date","data","i","date","setHours","getHours","setDate","getDate","randomFactor","Math","random","price","volume","floor","push","toISOString","parseFloat","toFixed","clearTimeout","calculatePriceChange","length","firstPrice","lastPrice","change","getHighLowPrices","high","low","prices","map","p","max","min","priceChange","renderChart","maxPrice","minPrice","range","points","point","index","heightPercent","x","y","pathData","join","areaPathData","_jsxruntime","jsxs","className","viewBox","preserveAspectRatio","jsx","d","fill","stroke","strokeWidth","cx","cy","r","onClick","Fragment","abs","toLocaleString"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/vault/TokenChart.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n// // import { \"📈\", FaCalendarAlt } from 'react-icons/fa'; // 临时注释以修复构建 // 临时注释以修复构建\n\n// 价格数据点类型\ninterface PriceDataPoint {\n  date: string;\n  price: number;\n  volume: number;\n}\n\n// 图表时间范围类型\ntype TimeRange = '24h' | '7d' | '30d' | '90d' | 'all';\n\n// 通证价格历史图表组件\nconst TokenChart = () => {\n  const [timeRange, setTimeRange] = useState<TimeRange>('7d');\n  const [priceData, setPriceData] = useState<PriceDataPoint[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // 生成模拟价格数据\n  useEffect(() => {\n    setIsLoading(true);\n\n    // 模拟API请求延迟\n    const timer = setTimeout(() => {\n      // 根据所选时间范围确定数据点数量\n      const dataPoints =\n        timeRange === '24h'\n          ? 24\n          : timeRange === '7d'\n            ? 7\n            : timeRange === '30d'\n              ? 30\n              : timeRange === '90d'\n                ? 90\n                : 180;\n\n      // 生成基础价格和随机波动\n      const basePrice = 12.5;\n      const volatility =\n        timeRange === '24h'\n          ? 0.05\n          : timeRange === '7d'\n            ? 0.1\n            : timeRange === '30d'\n              ? 0.2\n              : timeRange === '90d'\n                ? 0.3\n                : 0.5;\n\n      // 生成日期和价格数据\n      const now = new Date();\n      const data: PriceDataPoint[] = [];\n\n      for (let i = 0; i < dataPoints; i++) {\n        const date = new Date(now);\n\n        if (timeRange === '24h') {\n          date.setHours(date.getHours() - (dataPoints - i));\n        } else {\n          date.setDate(date.getDate() - (dataPoints - i));\n        }\n\n        // 添加随机波动\n        const randomFactor = 1 + (Math.random() * volatility * 2 - volatility);\n        const price = basePrice * randomFactor;\n\n        // 生成随机交易量\n        const volume = Math.floor(Math.random() * 10000) + 5000;\n\n        data.push({\n          date: date.toISOString(),\n          price: parseFloat(price.toFixed(2)),\n          volume,\n        });\n      }\n\n      setPriceData(data);\n      setIsLoading(false);\n    }, 800);\n\n    return () => clearTimeout(timer);\n  }, [timeRange]);\n\n  // 计算价格变化百分比\n  const calculatePriceChange = () => {\n    if (priceData.length < 2) return 0;\n\n    const firstPrice = priceData[0].price;\n    const lastPrice = priceData[priceData.length - 1].price;\n    const change = ((lastPrice - firstPrice) / firstPrice) * 100;\n\n    return parseFloat(change.toFixed(2));\n  };\n\n  // 获取最高价和最低价\n  const getHighLowPrices = () => {\n    if (priceData.length === 0) return { high: 0, low: 0 };\n\n    const prices = priceData.map((p) => p.price);\n    return {\n      high: Math.max(...prices),\n      low: Math.min(...prices),\n    };\n  };\n\n  const priceChange = calculatePriceChange();\n  const { high, low } = getHighLowPrices();\n\n  // 绘制简单的价格图表\n  const renderChart = () => {\n    if (priceData.length === 0) return null;\n\n    // 获取最高和最低价格，用于计算比例\n    const prices = priceData.map((p) => p.price);\n    const maxPrice = Math.max(...prices);\n    const minPrice = Math.min(...prices);\n    const range = maxPrice - minPrice;\n\n    // 计算每个数据点的高度百分比\n    const points = priceData.map((point, index) => {\n      const heightPercent =\n        range > 0 ? ((point.price - minPrice) / range) * 100 : 50;\n\n      // 将数据点映射到0-100的范围上\n      const x = (index / (priceData.length - 1)) * 100;\n      const y = 100 - heightPercent;\n\n      return { x, y, ...point };\n    });\n\n    // 生成SVG路径\n    const pathData = points\n      .map(\n        (point, index) => (index === 0 ? 'M' : 'L') + point.x + ',' + point.y,\n      )\n      .join(' ');\n\n    // 生成填充区域\n    const areaPathData = pathData + ' L100,100 L0,100 Z';\n\n    return (\n      <div className=\"relative h-64 w-full\">\n        <svg\n          className=\"w-full h-full\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"none\"\n        >\n          {/* 填充区域 */}\n          <path\n            d={areaPathData}\n            fill={\n              priceChange >= 0\n                ? 'rgba(52, 211, 153, 0.1)'\n                : 'rgba(239, 68, 68, 0.1)'\n            }\n            stroke=\"none\"\n          />\n\n          {/* 价格线 */}\n          <path\n            d={pathData}\n            fill=\"none\"\n            stroke={priceChange >= 0 ? 'rgb(52, 211, 153)' : 'rgb(239, 68, 68)'}\n            strokeWidth=\"0.5\"\n          />\n\n          {/* 数据点 */}\n          {points.map((point, index) => (\n            <circle\n              key={index}\n              cx={point.x}\n              cy={point.y}\n              r=\"0.5\"\n              fill={priceChange >= 0 ? 'rgb(52, 211, 153)' : 'rgb(239, 68, 68)'}\n              className=\"opacity-0 hover:opacity-100 transition-opacity\"\n            />\n          ))}\n        </svg>\n\n        {/* 价格标签 */}\n        <div className=\"absolute top-0 right-0 text-xs text-gray-400\">\n          {maxPrice.toFixed(2)} SM\n        </div>\n        <div className=\"absolute bottom-0 right-0 text-xs text-gray-400\">\n          {minPrice.toFixed(2)} SM\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-gray-800/30 border border-gray-700 rounded-md p-4\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h3 className=\"font-medium flex items-center\">\n          📈\n          通证价格历史\n        </h3>\n\n        <div className=\"flex space-x-1 text-xs\">\n          {(['24h', '7d', '30d', '90d', 'all'] as TimeRange[]).map((range) => (\n            <button\n              key={range}\n              onClick={() => setTimeRange(range)}\n              className={`px-2 py-1 rounded ${\n                timeRange === range\n                  ? 'bg-primary text-white'\n                  : 'bg-gray-800 text-gray-400 hover:bg-gray-700'\n              }`}\n            >\n              {range}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {isLoading ? (\n        <div className=\"h-64 flex items-center justify-center\">\n          <div className=\"w-6 h-6 border-2 border-t-transparent border-primary rounded-full animate-spin\"></div>\n        </div>\n      ) : (\n        <>\n          <div className=\"mb-4\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <div className=\"text-2xl font-bold\">\n                  {priceData.length > 0\n                    ? priceData[priceData.length - 1].price.toFixed(2)\n                    : '0.00'}{' '}\n                  SM\n                </div>\n                <div\n                  className={`text-sm flex items-center ${priceChange >= 0 ? 'text-green-500' : 'text-red-500'}`}\n                >\n                  {priceChange >= 0 ? '↑' : '↓'} {Math.abs(priceChange)}%\n                  <span className=\"text-gray-500 ml-1\">\n                    (\n                    {timeRange === '24h'\n                      ? '24小时'\n                      : timeRange === '7d'\n                        ? '7天'\n                        : timeRange === '30d'\n                          ? '30天'\n                          : timeRange === '90d'\n                            ? '90天'\n                            : '全部'}\n                    )\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"text-right text-sm\">\n                <div className=\"text-gray-400\">\n                  最高: <span className=\"text-white\">{high.toFixed(2)} SM</span>\n                </div>\n                <div className=\"text-gray-400\">\n                  最低: <span className=\"text-white\">{low.toFixed(2)} SM</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {renderChart()}\n\n          <div className=\"mt-4 text-xs text-gray-500 flex items-center justify-center\">\n            📅\n            数据更新时间: {new Date().toLocaleString()}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TokenChart;\n"],"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","ignoreList":[]}