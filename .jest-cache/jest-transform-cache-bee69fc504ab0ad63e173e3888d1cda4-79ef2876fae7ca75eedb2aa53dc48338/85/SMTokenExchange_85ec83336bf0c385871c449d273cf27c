82a4248b319ef7b43776b81880412431
"use strict";

/* istanbul ignore next */
function cov_c4wjchrgm() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/abis/SMTokenExchange.ts";
  var hash = "8becfa422705df485ae07f9ece2022ca02945f90";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/abis/SMTokenExchange.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 43
        },
        end: {
          line: 19,
          column: 102
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "8": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "9": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 12,
            column: 25
          }
        },
        loc: {
          start: {
            line: 12,
            column: 35
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 21,
            column: 38
          }
        }, {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 32
          }
        }],
        line: 21
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/abis/SMTokenExchange.ts"],
      sourcesContent: ["import SMTokenExchangeArtifact from './SMTokenExchange.json';\n\nexport const SMTokenExchangeABI = SMTokenExchangeArtifact.abi;\nexport default SMTokenExchangeABI;\n"],
      names: ["SMTokenExchangeABI", "SMTokenExchangeArtifact", "abi"],
      mappings: ";;;;;;;;;;;IAEaA,kBAAkB;eAAlBA;;IACb,OAAkC;eAAlC;;;4EAHoC;;;;;;AAE7B,MAAMA,qBAAqBC,4BAAuB,CAACC,GAAG;MAC7D,WAAeF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8becfa422705df485ae07f9ece2022ca02945f90"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_c4wjchrgm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_c4wjchrgm();
cov_c4wjchrgm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_c4wjchrgm().f[0]++;
  cov_c4wjchrgm().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_c4wjchrgm().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_c4wjchrgm().s[3]++;
_export(exports, {
  SMTokenExchangeABI: function () {
    /* istanbul ignore next */
    cov_c4wjchrgm().f[1]++;
    cov_c4wjchrgm().s[4]++;
    return SMTokenExchangeABI;
  },
  default: function () {
    /* istanbul ignore next */
    cov_c4wjchrgm().f[2]++;
    cov_c4wjchrgm().s[5]++;
    return _default;
  }
});
const _SMTokenExchangejson =
/* istanbul ignore next */
(/*#__PURE__*/cov_c4wjchrgm().s[6]++, _interop_require_default(require("./SMTokenExchange.json")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_c4wjchrgm().f[3]++;
  cov_c4wjchrgm().s[7]++;
  return /* istanbul ignore next */(cov_c4wjchrgm().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_c4wjchrgm().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_c4wjchrgm().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_c4wjchrgm().b[0][1]++, {
    default: obj
  });
}
const SMTokenExchangeABI =
/* istanbul ignore next */
(cov_c4wjchrgm().s[8]++, _SMTokenExchangejson.default.abi);
const _default =
/* istanbul ignore next */
(cov_c4wjchrgm().s[9]++, SMTokenExchangeABI);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTTVRva2VuRXhjaGFuZ2VBQkkiLCJjb3ZfYzR3amNocmdtIiwiZiIsInMiLCJkZWZhdWx0IiwiX2RlZmF1bHQiLCJfU01Ub2tlbkV4Y2hhbmdlanNvbiIsImFiaSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWRleW91L0Rlc2t0b3Avc20vc29jaW9taW50L3NyYy9hYmlzL1NNVG9rZW5FeGNoYW5nZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU01Ub2tlbkV4Y2hhbmdlQXJ0aWZhY3QgZnJvbSAnLi9TTVRva2VuRXhjaGFuZ2UuanNvbic7XG5cbmV4cG9ydCBjb25zdCBTTVRva2VuRXhjaGFuZ2VBQkkgPSBTTVRva2VuRXhjaGFuZ2VBcnRpZmFjdC5hYmk7XG5leHBvcnQgZGVmYXVsdCBTTVRva2VuRXhjaGFuZ2VBQkk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBRWFBLGtCQUFrQixXQUFBQSxDQUFBO0lBQUE7SUFBQUMsYUFBQSxHQUFBQyxDQUFBO0lBQUFELGFBQUEsR0FBQUUsQ0FBQTtXQUFsQkgsa0JBQUE7O0VBQ2JJLE9BQWtDLFdBQUFBLENBQUE7SUFBQTtJQUFBSCxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQWxDRSxRQUFBOzs7Ozt1RUFIb0M7Ozs7Ozs7Ozs7Ozs7OztBQUU3QixNQUFNTCxrQkFBQTtBQUFBO0FBQUEsQ0FBQUMsYUFBQSxHQUFBRSxDQUFBLE9BQXFCRyxvQkFBQSxDQUFBRixPQUF1QixDQUFDRyxHQUFHO01BQzdERixRQUFBO0FBQUE7QUFBQSxDQUFBSixhQUFBLEdBQUFFLENBQUEsT0FBZUgsa0JBQUEiLCJpZ25vcmVMaXN0IjpbXX0=