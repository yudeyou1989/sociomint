{"version":3,"sources":["/Users/yudeyou/Desktop/sm/sociomint/jest.setup.js"],"sourcesContent":["// 导入测试库\nimport '@testing-library/jest-dom';\n\n// 解决BigInt序列化问题\nBigInt.prototype.toJSON = function() {\n  return this.toString();\n};\n\n// 全局模拟\nglobal.fetch = jest.fn();\n\n// 模拟 window.ethereum (只在未定义时创建)\nif (!window.ethereum) {\n  Object.defineProperty(window, 'ethereum', {\n    writable: true,\n    configurable: true,\n    value: {\n      request: jest.fn(),\n      on: jest.fn(),\n      removeListener: jest.fn(),\n      isMetaMask: true,\n    },\n  });\n}\n\n// 模拟 ResizeObserver\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}));\n\n// 模拟 IntersectionObserver\nglobal.IntersectionObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}));\n\n// 模拟 matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// 模拟 localStorage\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\nglobal.localStorage = localStorageMock;\n\n// 模拟 sessionStorage\nconst sessionStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\nglobal.sessionStorage = sessionStorageMock;\n\n// 模拟console.error以捕获React警告\nconst originalConsoleError = console.error;\nconsole.error = (...args) => {\n  if (/Warning.*not wrapped in act/.test(args[0])) {\n    return;\n  }\n  originalConsoleError(...args);\n};\n"],"names":["BigInt","prototype","toJSON","toString","global","fetch","jest","fn","window","ethereum","Object","defineProperty","writable","configurable","value","request","on","removeListener","isMetaMask","ResizeObserver","mockImplementation","observe","unobserve","disconnect","IntersectionObserver","query","matches","media","onchange","addListener","addEventListener","removeEventListener","dispatchEvent","localStorageMock","getItem","setItem","removeItem","clear","localStorage","sessionStorageMock","sessionStorage","originalConsoleError","console","error","args","test"],"mappings":"AAAA,QAAQ;;;;;QACD;AAEP,gBAAgB;AAChBA,OAAOC,SAAS,CAACC,MAAM,GAAG;IACxB,OAAO,IAAI,CAACC,QAAQ;AACtB;AAEA,OAAO;AACPC,OAAOC,KAAK,GAAGC,KAAKC,EAAE;AAEtB,gCAAgC;AAChC,IAAI,CAACC,OAAOC,QAAQ,EAAE;IACpBC,OAAOC,cAAc,CAACH,QAAQ,YAAY;QACxCI,UAAU;QACVC,cAAc;QACdC,OAAO;YACLC,SAAST,KAAKC,EAAE;YAChBS,IAAIV,KAAKC,EAAE;YACXU,gBAAgBX,KAAKC,EAAE;YACvBW,YAAY;QACd;IACF;AACF;AAEA,oBAAoB;AACpBd,OAAOe,cAAc,GAAGb,KAAKC,EAAE,GAAGa,kBAAkB,CAAC,IAAO,CAAA;QAC1DC,SAASf,KAAKC,EAAE;QAChBe,WAAWhB,KAAKC,EAAE;QAClBgB,YAAYjB,KAAKC,EAAE;IACrB,CAAA;AAEA,0BAA0B;AAC1BH,OAAOoB,oBAAoB,GAAGlB,KAAKC,EAAE,GAAGa,kBAAkB,CAAC,IAAO,CAAA;QAChEC,SAASf,KAAKC,EAAE;QAChBe,WAAWhB,KAAKC,EAAE;QAClBgB,YAAYjB,KAAKC,EAAE;IACrB,CAAA;AAEA,gBAAgB;AAChBG,OAAOC,cAAc,CAACH,QAAQ,cAAc;IAC1CI,UAAU;IACVE,OAAOR,KAAKC,EAAE,GAAGa,kBAAkB,CAACK,CAAAA,QAAU,CAAA;YAC5CC,SAAS;YACTC,OAAOF;YACPG,UAAU;YACVC,aAAavB,KAAKC,EAAE;YACpBU,gBAAgBX,KAAKC,EAAE;YACvBuB,kBAAkBxB,KAAKC,EAAE;YACzBwB,qBAAqBzB,KAAKC,EAAE;YAC5ByB,eAAe1B,KAAKC,EAAE;QACxB,CAAA;AACF;AAEA,kBAAkB;AAClB,MAAM0B,mBAAmB;IACvBC,SAAS5B,KAAKC,EAAE;IAChB4B,SAAS7B,KAAKC,EAAE;IAChB6B,YAAY9B,KAAKC,EAAE;IACnB8B,OAAO/B,KAAKC,EAAE;AAChB;AACAH,OAAOkC,YAAY,GAAGL;AAEtB,oBAAoB;AACpB,MAAMM,qBAAqB;IACzBL,SAAS5B,KAAKC,EAAE;IAChB4B,SAAS7B,KAAKC,EAAE;IAChB6B,YAAY9B,KAAKC,EAAE;IACnB8B,OAAO/B,KAAKC,EAAE;AAChB;AACAH,OAAOoC,cAAc,GAAGD;AAExB,4BAA4B;AAC5B,MAAME,uBAAuBC,QAAQC,KAAK;AAC1CD,QAAQC,KAAK,GAAG,CAAC,GAAGC;IAClB,IAAI,8BAA8BC,IAAI,CAACD,IAAI,CAAC,EAAE,GAAG;QAC/C;IACF;IACAH,wBAAwBG;AAC1B"}