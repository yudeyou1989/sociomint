713bfa1cd88a044af10ac4f82b0bf4e4
'use client';
"use strict";

/* istanbul ignore next */
function cov_13hn3mjchg() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/components/ClientOnly.tsx";
  var hash = "17855665084f75c4b0e6e632e295a68bce023cad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/components/ClientOnly.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 26
        }
      },
      "3": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "4": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "6": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "7": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "8": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "15": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "18": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "19": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 88
        }
      },
      "20": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "22": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "23": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "25": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "26": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "27": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "28": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "29": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "30": {
        start: {
          line: 58,
          column: 40
        },
        end: {
          line: 58,
          column: 67
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 28
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "34": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "35": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "ClientOnly",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 19
          }
        },
        loc: {
          start: {
            line: 57,
            column: 51
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 26
          },
          end: {
            line: 59,
            column: 27
          }
        },
        loc: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 65
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 88
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 33
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 57,
            column: 32
          },
          end: {
            line: 57,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 57,
            column: 47
          }
        }],
        line: 57
      },
      "16": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/components/ClientOnly.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect, ReactNode } from 'react';\n\ninterface ClientOnlyProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\n/**\n * \u786E\u4FDD\u7EC4\u4EF6\u4EC5\u5728\u5BA2\u6237\u7AEF\u6E32\u67D3\uFF0C\u89E3\u51B3SSR\u4E0E\u6D4F\u89C8\u5668API\u4E0D\u517C\u5BB9\u7684\u95EE\u9898\n */\nexport default function ClientOnly({ children, fallback = null }: ClientOnlyProps) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n}\n"],
      names: ["ClientOnly", "children", "fallback", "hasMounted", "setHasMounted", "useState", "useEffect"],
      mappings: "AAAA;;;;;+BASA;;CAEC,GACD;;;eAAwBA;;;;+DAV8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUvC,SAASA,WAAW,EAAEC,QAAQ,EAAEC,WAAW,IAAI,EAAmB;IAC/E,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,eAAQ,EAAC;IAE7CC,IAAAA,gBAAS,EAAC;QACRF,cAAc;IAChB,GAAG,EAAE;IAEL,IAAI,CAACD,YAAY;QACf,qBAAO;sBAAGD;;IACZ;IAEA,qBAAO;kBAAGD;;AACZ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "17855665084f75c4b0e6e632e295a68bce023cad"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13hn3mjchg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13hn3mjchg();
cov_13hn3mjchg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_13hn3mjchg().s[1]++;
Object.defineProperty(exports,
/**
* 确保组件仅在客户端渲染，解决SSR与浏览器API不兼容的问题
*/
"default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_13hn3mjchg().f[0]++;
    cov_13hn3mjchg().s[2]++;
    return ClientOnly;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_13hn3mjchg().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_13hn3mjchg().s[4]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_13hn3mjchg().f[1]++;
  cov_13hn3mjchg().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_13hn3mjchg().b[0][0]++;
    cov_13hn3mjchg().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_13hn3mjchg().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_13hn3mjchg().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_13hn3mjchg().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_13hn3mjchg().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_13hn3mjchg().f[2]++;
    cov_13hn3mjchg().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_13hn3mjchg().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_13hn3mjchg().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_13hn3mjchg().f[3]++;
  cov_13hn3mjchg().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_13hn3mjchg().b[2][0]++;
    cov_13hn3mjchg().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_13hn3mjchg().b[2][1]++;
  }
  cov_13hn3mjchg().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_13hn3mjchg().b[4][0]++;
    cov_13hn3mjchg().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_13hn3mjchg().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_13hn3mjchg().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_13hn3mjchg().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_13hn3mjchg().b[6][0]++;
    cov_13hn3mjchg().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_13hn3mjchg().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_13hn3mjchg().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_13hn3mjchg().s[19]++,
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_13hn3mjchg().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_13hn3mjchg().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_13hn3mjchg().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_13hn3mjchg().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_13hn3mjchg().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_13hn3mjchg().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_13hn3mjchg().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_13hn3mjchg().b[11][1]++, null));
      /* istanbul ignore next */
      cov_13hn3mjchg().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_13hn3mjchg().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_13hn3mjchg().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_13hn3mjchg().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_13hn3mjchg().b[12][0]++;
        cov_13hn3mjchg().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_13hn3mjchg().b[12][1]++;
        cov_13hn3mjchg().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_13hn3mjchg().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_13hn3mjchg().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_13hn3mjchg().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_13hn3mjchg().b[14][0]++;
    cov_13hn3mjchg().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_13hn3mjchg().b[14][1]++;
  }
  cov_13hn3mjchg().s[29]++;
  return newObj;
}
function ClientOnly({
  children,
  fallback =
  /* istanbul ignore next */
  (cov_13hn3mjchg().b[15][0]++, null)
}) {
  /* istanbul ignore next */
  cov_13hn3mjchg().f[4]++;
  const [hasMounted, setHasMounted] =
  /* istanbul ignore next */
  (cov_13hn3mjchg().s[30]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_13hn3mjchg().s[31]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_13hn3mjchg().f[5]++;
    cov_13hn3mjchg().s[32]++;
    setHasMounted(true);
  }, []);
  /* istanbul ignore next */
  cov_13hn3mjchg().s[33]++;
  if (!hasMounted) {
    /* istanbul ignore next */
    cov_13hn3mjchg().b[16][0]++;
    cov_13hn3mjchg().s[34]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
      children: fallback
    });
  } else
  /* istanbul ignore next */
  {
    cov_13hn3mjchg().b[16][1]++;
  }
  cov_13hn3mjchg().s[35]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
    children: children
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDbGllbnRPbmx5IiwiY2hpbGRyZW4iLCJmYWxsYmFjayIsImNvdl8xM2huM21qY2hnIiwiYiIsImYiLCJoYXNNb3VudGVkIiwic2V0SGFzTW91bnRlZCIsInMiLCJfcmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIl9qc3hydW50aW1lIiwianN4IiwiRnJhZ21lbnQiXSwic291cmNlcyI6WyIvVXNlcnMveXVkZXlvdS9EZXNrdG9wL3NtL3NvY2lvbWludC9zcmMvY29tcG9uZW50cy9DbGllbnRPbmx5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBDbGllbnRPbmx5UHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICBmYWxsYmFjaz86IFJlYWN0Tm9kZTtcbn1cblxuLyoqXG4gKiDnoa7kv53nu4Tku7bku4XlnKjlrqLmiLfnq6/muLLmn5PvvIzop6PlhrNTU1LkuI7mtY/op4jlmahBUEnkuI3lhbzlrrnnmoTpl67pophcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ2xpZW50T25seSh7IGNoaWxkcmVuLCBmYWxsYmFjayA9IG51bGwgfTogQ2xpZW50T25seVByb3BzKSB7XG4gIGNvbnN0IFtoYXNNb3VudGVkLCBzZXRIYXNNb3VudGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEhhc01vdW50ZWQodHJ1ZSk7XG4gIH0sIFtdKTtcblxuICBpZiAoIWhhc01vdW50ZWQpIHtcbiAgICByZXR1cm4gPD57ZmFsbGJhY2t9PC8+O1xuICB9XG5cbiAgcmV0dXJuIDw+e2NoaWxkcmVufTwvPjtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU0E7OztBQUdBOzs7Ozs7V0FBd0JBLFVBQUE7Ozs7Ozs7O3lFQVY4Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVV2QyxTQUFTQSxXQUFXO0VBQUVDLFFBQVE7RUFBRUMsUUFBQTtFQUFBO0VBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLFdBQVcsSUFBSTtBQUFBLENBQW1CO0VBQUE7RUFBQUQsY0FBQSxHQUFBRSxDQUFBO0VBQy9FLE1BQU0sQ0FBQ0MsVUFBQSxFQUFZQyxhQUFBLENBQWM7RUFBQTtFQUFBLENBQUFKLGNBQUEsR0FBQUssQ0FBQSxRQUFHLElBQUFDLE1BQUEsQ0FBQUMsUUFBUSxFQUFDO0VBQUE7RUFBQVAsY0FBQSxHQUFBSyxDQUFBO0VBRTdDLElBQUFDLE1BQUEsQ0FBQUUsU0FBUyxFQUFDO0lBQUE7SUFBQVIsY0FBQSxHQUFBRSxDQUFBO0lBQUFGLGNBQUEsR0FBQUssQ0FBQTtJQUNSRCxhQUFBLENBQWM7RUFDaEIsR0FBRyxFQUFFO0VBQUE7RUFBQUosY0FBQSxHQUFBSyxDQUFBO0VBRUwsSUFBSSxDQUFDRixVQUFBLEVBQVk7SUFBQTtJQUFBSCxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBSyxDQUFBO0lBQ2Ysb0JBQU8sSUFBQUksV0FBQSxDQUFBQyxHQUFBLEVBQUFELFdBQUEsQ0FBQUUsUUFBQTtnQkFBR1o7O0VBQ1o7RUFBQTtFQUFBO0lBQUFDLGNBQUEsR0FBQUMsQ0FBQTtFQUFBO0VBQUFELGNBQUEsR0FBQUssQ0FBQTtFQUVBLG9CQUFPLElBQUFJLFdBQUEsQ0FBQUMsR0FBQSxFQUFBRCxXQUFBLENBQUFFLFFBQUE7Y0FBR2I7O0FBQ1oiLCJpZ25vcmVMaXN0IjpbXX0=