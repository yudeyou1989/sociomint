{"version":3,"names":["TokenExchange","Button","children","onClick","disabled","cov_16pfqv5xu7","b","className","f","s","_jsxruntime","jsx","Input","value","onChange","placeholder","type","SwapIcon","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","t","_reacti18next","useTranslation","wallet","_WalletContext","useWallet","fromAmount","setFromAmount","_react","useState","toAmount","setToAmount","exchangeMode","setExchangeMode","isLoading","setIsLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isVerified","setIsVerified","typedWallet","isConnected","address","exchangeRate","feePercentage","handleFromAmountChange","e","target","replace","numValue","parseFloat","toString","bnbAmount","feeAmount","error","toggleExchangeMode","prevMode","handleExchange","connect","fromAmountNum","isNaN","minAmount","amount","Promise","resolve","setTimeout","from","to","console","message","useEffect","handleVerificationSuccess","jsxs","percentage","maxAmount","cx","cy","r","_XPlatformVerification","default","onVerificationSuccess"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/exchange/TokenExchange.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useWallet } from '@/contexts/WalletContext';\nimport XPlatformVerification from '../presale/XPlatformVerification';\nimport { formatEther, parseEther } from 'viem';\n\n// 简化的UI组件\ninterface ButtonProps {\n  children: React.ReactNode;\n  onClick: () => void;\n  disabled?: boolean;\n  className?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, onClick, disabled = false, className = '' }) => (\n  <button\n    onClick={onClick}\n    disabled={disabled}\n    className={`w-full px-4 py-2 rounded-md font-medium transition-colors ${\n      disabled\n        ? 'bg-gray-700 text-gray-400 cursor-not-allowed'\n        : 'bg-gradient-to-r from-[#0de5ff] to-[#8b3dff] hover:from-[#0bc9e0] hover:to-[#7a35e0] text-white'\n    } ${className}`}\n  >\n    {children}\n  </button>\n);\n\ninterface InputProps {\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  disabled?: boolean;\n  className?: string;\n}\n\nconst Input: React.FC<InputProps> = ({ value, onChange, placeholder, disabled = false, className = '' }) => (\n  <input\n    type=\"text\"\n    value={value}\n    onChange={onChange}\n    placeholder={placeholder}\n    disabled={disabled}\n    className={`w-full bg-gray-800 border border-gray-700 text-white px-3 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n      disabled ? 'opacity-50 cursor-not-allowed' : ''\n    } ${className}`}\n  />\n);\n\n// 图标组件\nconst SwapIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\" />\n  </svg>\n);\n\n// 代币兑换模式\ntype ExchangeMode = 'BNB_TO_SM' | 'SM_TO_BNB';\n\nexport default function TokenExchange() {\n  const { t } = useTranslation();\n  const { wallet } = useWallet();\n  \n  const [fromAmount, setFromAmount] = useState<string>('0.0');\n  const [toAmount, setToAmount] = useState<string>('0');\n  const [exchangeMode, setExchangeMode] = useState<ExchangeMode>('BNB_TO_SM');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [isVerified, setIsVerified] = useState(false);\n\n  // 转换钱包类型\n  const typedWallet = wallet as any;\n  const isConnected = typedWallet?.isConnected || false;\n  const address = typedWallet?.address || '';\n\n  // 汇率常量\n  const exchangeRate = 100; // 1 BNB = 100 SM\n  const feePercentage = 5; // 5% 手续费\n\n  // 当输入金额变化时计算输出金额\n  const handleFromAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^0-9.]/g, '');\n    setFromAmount(value);\n    \n    try {\n      const numValue = parseFloat(value) || 0;\n      if (exchangeMode === 'BNB_TO_SM') {\n        // BNB → SM: 没有手续费\n        setToAmount((numValue * exchangeRate).toString());\n      } else {\n        // SM → BNB: 扣除5%手续费\n        const bnbAmount = numValue / exchangeRate;\n        const feeAmount = bnbAmount * (feePercentage / 100);\n        setToAmount((bnbAmount - feeAmount).toString());\n      }\n    } catch (error) {\n      setToAmount('0');\n    }\n  };\n\n  // 切换兑换模式\n  const toggleExchangeMode = () => {\n    setExchangeMode(prevMode => prevMode === 'BNB_TO_SM' ? 'SM_TO_BNB' : 'BNB_TO_SM');\n    setFromAmount('0.0');\n    setToAmount('0');\n  };\n\n  // 执行兑换操作\n  const handleExchange = async () => {\n    if (!isConnected) {\n      if (typedWallet?.connect) {\n        await typedWallet.connect();\n      }\n      return;\n    }\n\n    if (!isVerified) {\n      setErrorMessage(t('exchange.pleaseVerify'));\n      return;\n    }\n\n    const fromAmountNum = parseFloat(fromAmount);\n    if (isNaN(fromAmountNum) || fromAmountNum <= 0) {\n      setErrorMessage(t('exchange.invalidAmount'));\n      return;\n    }\n\n    // 检查最小兑换金额限制（根据模式不同）\n    const minAmount = exchangeMode === 'BNB_TO_SM' ? 0.01 : 1;\n    if (fromAmountNum < minAmount) {\n      setErrorMessage(\n        exchangeMode === 'BNB_TO_SM'\n          ? t('exchange.minBnbAmount', { amount: minAmount })\n          : t('exchange.minSmAmount', { amount: minAmount })\n      );\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setErrorMessage(null);\n      setSuccessMessage(null);\n\n      // 模拟兑换过程\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // 成功消息\n      setSuccessMessage(\n        exchangeMode === 'BNB_TO_SM'\n          ? t('exchange.bnbToSmSuccess', { from: fromAmount, to: toAmount })\n          : t('exchange.smToBnbSuccess', { from: fromAmount, to: toAmount })\n      );\n\n      // 重置输入\n      setFromAmount('0.0');\n      setToAmount('0');\n    } catch (error: any) {\n      console.error('兑换错误:', error);\n      setErrorMessage(error.message || t('exchange.error'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 监听兑换模式变化\n  useEffect(() => {\n    // 重新计算兑换金额\n    if (fromAmount && fromAmount !== '0.0') {\n      handleFromAmountChange({ target: { value: fromAmount } } as React.ChangeEvent<HTMLInputElement>);\n    }\n  }, [exchangeMode]);\n\n  // 自定义验证成功处理函数\n  const handleVerificationSuccess = () => {\n    setIsVerified(true);\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n      {/* 左侧：兑换面板 */}\n      <div className=\"bg-gray-900 rounded-xl p-6 shadow-xl border border-gray-800\">\n        <h2 className=\"text-2xl font-bold mb-6 text-center bg-clip-text text-transparent bg-gradient-to-r from-[#0de5ff] to-[#8b3dff]\">\n          {t('exchange.title')}\n        </h2>\n        \n        <div className=\"space-y-6\">\n          {/* 当前汇率显示 */}\n          <div className=\"bg-gray-800 p-3 rounded-lg text-center\">\n            <div className=\"flex items-center justify-center space-x-2\">\n              <span className=\"text-sm text-gray-400\">{t('exchange.currentRate')}:</span>\n              <span className=\"font-medium\">1 BNB = {exchangeRate} SM</span>\n            </div>\n            {exchangeMode === 'SM_TO_BNB' && (\n              <div className=\"text-xs text-yellow-500 mt-1\">\n                {t('exchange.feeWarning', { percentage: feePercentage })}\n              </div>\n            )}\n          </div>\n          \n          {/* 从金额输入 */}\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between\">\n              <label className=\"text-sm text-gray-400\">\n                {exchangeMode === 'BNB_TO_SM' ? t('exchange.fromBnb') : t('exchange.fromSm')}\n              </label>\n              {isConnected && (\n                <button \n                  className=\"text-xs text-blue-400 hover:text-blue-300\" \n                  onClick={() => {\n                    // 模拟最大可用余额\n                    const maxAmount = exchangeMode === 'BNB_TO_SM' ? '1.5' : '150';\n                    setFromAmount(maxAmount);\n                    handleFromAmountChange({ target: { value: maxAmount } } as React.ChangeEvent<HTMLInputElement>);\n                  }}\n                >\n                  {t('exchange.max')}\n                </button>\n              )}\n            </div>\n            <div className=\"relative\">\n              <Input\n                value={fromAmount}\n                onChange={handleFromAmountChange}\n                placeholder=\"0.0\"\n                disabled={isLoading || !isConnected}\n              />\n              <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 font-medium\">\n                {exchangeMode === 'BNB_TO_SM' ? 'BNB' : 'SM'}\n              </div>\n            </div>\n          </div>\n          \n          {/* 切换按钮 */}\n          <div className=\"flex justify-center\">\n            <button \n              onClick={toggleExchangeMode}\n              className=\"p-2 rounded-full hover:bg-gray-800 transition-colors\"\n            >\n              <SwapIcon />\n            </button>\n          </div>\n          \n          {/* 到金额显示 */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm text-gray-400\">\n              {exchangeMode === 'BNB_TO_SM' ? t('exchange.toSm') : t('exchange.toBnb')}\n            </label>\n            <div className=\"relative\">\n              <Input\n                value={toAmount}\n                placeholder=\"0.0\"\n                disabled={true}\n                className=\"opacity-80\"\n              />\n              <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 font-medium\">\n                {exchangeMode === 'BNB_TO_SM' ? 'SM' : 'BNB'}\n              </div>\n            </div>\n          </div>\n          \n          {/* 错误和成功消息 */}\n          {errorMessage && (\n            <div className=\"bg-red-900/30 text-red-400 p-3 rounded-md text-sm\">\n              {errorMessage}\n            </div>\n          )}\n          \n          {successMessage && (\n            <div className=\"bg-green-900/30 text-green-400 p-3 rounded-md text-sm\">\n              {successMessage}\n            </div>\n          )}\n          \n          {/* 兑换按钮 */}\n          <Button\n            onClick={handleExchange}\n            disabled={isLoading || !isConnected || parseFloat(fromAmount) <= 0}\n          >\n            {isLoading ? (\n              <div className=\"flex items-center justify-center\">\n                <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                {t('common.loading')}\n              </div>\n            ) : !isConnected ? (\n              t('wallet.connect')\n            ) : (\n              exchangeMode === 'BNB_TO_SM' \n                ? t('exchange.exchangeToSm') \n                : t('exchange.exchangeToBnb')\n            )}\n          </Button>\n          \n          {/* Gas费提醒 */}\n          <div className=\"text-center text-xs text-gray-500\">\n            {t('exchange.gasFeeNotice')}\n          </div>\n        </div>\n      </div>\n      \n      {/* 右侧：社交验证面板 */}\n      <div className=\"bg-gray-900 rounded-xl p-6 shadow-xl border border-gray-800\">\n        <XPlatformVerification onVerificationSuccess={handleVerificationSuccess} />\n      </div>\n    </div>\n  );\n} "],"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","ignoreList":[]}