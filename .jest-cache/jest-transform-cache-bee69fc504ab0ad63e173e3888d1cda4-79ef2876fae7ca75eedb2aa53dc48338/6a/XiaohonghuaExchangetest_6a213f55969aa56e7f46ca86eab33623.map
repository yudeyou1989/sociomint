{"version":3,"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/__tests__/XiaohonghuaExchange.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, waitFor, fireEvent } from '@testing-library/react';\nimport XiaohonghuaExchange from '../XiaohonghuaExchange';\nimport { useAccount } from 'wagmi';\nimport { createClient } from '@supabase/supabase-js';\n\n// 模拟依赖\njest.mock('wagmi', () => ({\n  useAccount: jest.fn(),\n}));\n\njest.mock('@supabase/supabase-js', () => ({\n  createClient: jest.fn(),\n}));\n\n// 模拟fetch\nglobal.fetch = jest.fn();\n\ndescribe('XiaohonghuaExchange', () => {\n  // 模拟Supabase客户端\n  const mockSupabase = {\n    auth: {\n      getSession: jest.fn().mockResolvedValue({\n        data: {\n          session: {\n            user: { id: 'user-123' },\n            access_token: 'mock-token',\n          },\n        },\n        error: null,\n      }),\n    },\n    from: jest.fn().mockImplementation((table) => ({\n      select: jest.fn().mockReturnThis(),\n      eq: jest.fn().mockReturnThis(),\n      single: jest.fn().mockResolvedValue({\n        data: table === 'users' \n          ? { xiaohonghua_balance: 100 } \n          : { xiaohonghua_to_sm_rate: 10 },\n        error: null,\n      }),\n    })),\n  };\n\n  beforeEach(() => {\n    // 重置所有模拟\n    jest.clearAllMocks();\n    \n    // 默认模拟值\n    (useAccount as jest.Mock).mockReturnValue({\n      address: '0x123456789abcdef',\n      isConnected: true,\n    });\n    \n    (createClient as jest.Mock).mockReturnValue(mockSupabase);\n    \n    // 模拟fetch\n    (global.fetch as jest.Mock).mockResolvedValue({\n      ok: true,\n      json: jest.fn().mockResolvedValue({\n        success: true,\n        data: {\n          smAmount: 1000,\n        },\n      }),\n    });\n  });\n\n  it('renders wallet not connected message when not connected', () => {\n    (useAccount as jest.Mock).mockReturnValue({\n      address: undefined,\n      isConnected: false,\n    });\n    \n    render(<XiaohonghuaExchange />);\n    expect(screen.getByText('请连接钱包使用兑换功能')).toBeInTheDocument();\n  });\n\n  it('renders login required message when not logged in', () => {\n    // 模拟未登录\n    mockSupabase.auth.getSession.mockResolvedValueOnce({\n      data: { session: null },\n      error: null,\n    });\n    \n    render(<XiaohonghuaExchange />);\n    \n    // 等待异步操作完成\n    return waitFor(() => {\n      expect(screen.getByText('请登录以使用兑换功能')).toBeInTheDocument();\n    });\n  });\n\n  it('renders exchange form with correct user data', async () => {\n    render(<XiaohonghuaExchange />);\n    \n    await waitFor(() => {\n      // 检查标题\n      expect(screen.getByText('小红花兑换')).toBeInTheDocument();\n      \n      // 检查余额\n      expect(screen.getByText('100')).toBeInTheDocument();\n      \n      // 检查兑换比率\n      expect(screen.getByText('1 小红花 = 10 SM')).toBeInTheDocument();\n      \n      // 检查兑换按钮\n      expect(screen.getByText('兑换')).toBeInTheDocument();\n      expect(screen.getByText('兑换')).toBeDisabled();\n    });\n  });\n\n  it('updates exchange amount and estimated SM when input changes', async () => {\n    render(<XiaohonghuaExchange />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('小红花兑换')).toBeInTheDocument();\n    });\n    \n    // 找到输入框\n    const input = screen.getByPlaceholderText('输入小红花数量');\n    \n    // 输入兑换数量\n    fireEvent.change(input, { target: { value: '50' } });\n    \n    // 检查预计获得的SM数量\n    await waitFor(() => {\n      expect(screen.getByText('500 SM')).toBeInTheDocument();\n    });\n    \n    // 检查兑换按钮是否启用\n    expect(screen.getByText('兑换')).not.toBeDisabled();\n  });\n\n  it('sets max amount when max button is clicked', async () => {\n    render(<XiaohonghuaExchange />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('小红花兑换')).toBeInTheDocument();\n    });\n    \n    // 找到最大按钮\n    const maxButton = screen.getByText('最大');\n    \n    // 点击最大按钮\n    fireEvent.click(maxButton);\n    \n    // 检查输入框的值\n    const input = screen.getByPlaceholderText('输入小红花数量') as HTMLInputElement;\n    expect(input.value).toBe('100');\n    \n    // 检查预计获得的SM数量\n    await waitFor(() => {\n      expect(screen.getByText('1,000 SM')).toBeInTheDocument();\n    });\n  });\n\n  it('shows error when exchange amount exceeds balance', async () => {\n    render(<XiaohonghuaExchange />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('小红花兑换')).toBeInTheDocument();\n    });\n    \n    // 找到输入框\n    const input = screen.getByPlaceholderText('输入小红花数量');\n    \n    // 输入超过余额的数量\n    fireEvent.change(input, { target: { value: '150' } });\n    \n    // 检查输入框的值是否被限制为最大余额\n    const inputElement = input as HTMLInputElement;\n    expect(inputElement.value).toBe('100');\n  });\n\n  it('submits exchange request and shows success message', async () => {\n    render(<XiaohonghuaExchange onExchangeComplete={jest.fn()} />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('小红花兑换')).toBeInTheDocument();\n    });\n    \n    // 找到输入框和兑换按钮\n    const input = screen.getByPlaceholderText('输入小红花数量');\n    \n    // 输入兑换数量\n    fireEvent.change(input, { target: { value: '50' } });\n    \n    // 等待按钮启用\n    await waitFor(() => {\n      expect(screen.getByText('兑换')).not.toBeDisabled();\n    });\n    \n    // 点击兑换按钮\n    fireEvent.click(screen.getByText('兑换'));\n    \n    // 检查是否显示处理中\n    expect(screen.getByText('处理中...')).toBeInTheDocument();\n    \n    // 等待成功消息\n    await waitFor(() => {\n      expect(screen.getByText('成功兑换 1000 SM')).toBeInTheDocument();\n    });\n    \n    // 检查余额是否更新\n    expect(screen.getByText('50')).toBeInTheDocument();\n  });\n\n  it('shows error message when exchange fails', async () => {\n    // 模拟请求失败\n    (global.fetch as jest.Mock).mockResolvedValueOnce({\n      ok: false,\n      json: jest.fn().mockResolvedValue({\n        message: '兑换失败，小红花余额不足',\n      }),\n    });\n    \n    render(<XiaohonghuaExchange />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('小红花兑换')).toBeInTheDocument();\n    });\n    \n    // 找到输入框和兑换按钮\n    const input = screen.getByPlaceholderText('输入小红花数量');\n    \n    // 输入兑换数量\n    fireEvent.change(input, { target: { value: '50' } });\n    \n    // 等待按钮启用\n    await waitFor(() => {\n      expect(screen.getByText('兑换')).not.toBeDisabled();\n    });\n    \n    // 点击兑换按钮\n    fireEvent.click(screen.getByText('兑换'));\n    \n    // 等待错误消息\n    await waitFor(() => {\n      expect(screen.getByText('兑换失败，小红花余额不足')).toBeInTheDocument();\n    });\n  });\n\n  it('calls onExchangeComplete callback when exchange succeeds', async () => {\n    const mockCallback = jest.fn();\n    render(<XiaohonghuaExchange onExchangeComplete={mockCallback} />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('小红花兑换')).toBeInTheDocument();\n    });\n    \n    // 找到输入框和兑换按钮\n    const input = screen.getByPlaceholderText('输入小红花数量');\n    \n    // 输入兑换数量\n    fireEvent.change(input, { target: { value: '50' } });\n    \n    // 等待按钮启用\n    await waitFor(() => {\n      expect(screen.getByText('兑换')).not.toBeDisabled();\n    });\n    \n    // 点击兑换按钮\n    fireEvent.click(screen.getByText('兑换'));\n    \n    // 等待成功消息\n    await waitFor(() => {\n      expect(screen.getByText('成功兑换 1000 SM')).toBeInTheDocument();\n    });\n    \n    // 检查回调是否被调用\n    expect(mockCallback).toHaveBeenCalled();\n  });\n});\n"],"names":["jest","mock","useAccount","fn","createClient","global","fetch","describe","mockSupabase","auth","getSession","mockResolvedValue","data","session","user","id","access_token","error","from","mockImplementation","table","select","mockReturnThis","eq","single","xiaohonghua_balance","xiaohonghua_to_sm_rate","beforeEach","clearAllMocks","mockReturnValue","address","isConnected","ok","json","success","smAmount","it","undefined","render","XiaohonghuaExchange","expect","screen","getByText","toBeInTheDocument","mockResolvedValueOnce","waitFor","toBeDisabled","input","getByPlaceholderText","fireEvent","change","target","value","not","maxButton","click","toBe","inputElement","onExchangeComplete","message","mockCallback","toHaveBeenCalled"],"mappings":"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"}