98f546fedd4bdd5ebb82981776ca8ff4
"use strict";

/* istanbul ignore next */
function cov_1upcrxd630() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/config/wagmi.ts";
  var hash = "de8986d75816a8209dbfb8fa0324312ae26c6fc8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/config/wagmi.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 22
        }
      },
      "7": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "8": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "9": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "10": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 48
        }
      },
      "11": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 105
        }
      },
      "12": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "13": {
        start: {
          line: 33,
          column: 15
        },
        end: {
          line: 49,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 67
          }
        }, {
          start: {
            line: 27,
            column: 71
          },
          end: {
            line: 27,
            column: 105
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/config/wagmi.ts"],
      sourcesContent: ["import { createConfig } from 'wagmi';\nimport { bsc, bscTestnet } from 'viem/chains';\nimport { http } from 'viem';\nimport { injected, walletConnect } from '@wagmi/connectors';\n\n// \u5BFC\u51FA\u94FE\u914D\u7F6E\nexport { bsc, bscTestnet };\n\n// WalletConnect\u9879\u76EEID\nconst projectId = process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID || 'fced525820007c9c024132cf432ffcae';\n\n// \u5B9A\u4E49\u94FE\nconst chains = [bsc, bscTestnet];\n\n// \u521B\u5EFAWagmi\u914D\u7F6E\nexport const config = createConfig({\n  chains,\n  transports: {\n    [bsc.id]: http(),\n    [bscTestnet.id]: http(),\n  },\n  connectors: [\n    injected({ chains }),\n    walletConnect({\n      projectId,\n      chains,\n      showQrModal: true,\n    }),\n  ],\n});\n"],
      names: ["bsc", "bscTestnet", "config", "projectId", "process", "env", "NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID", "chains", "createConfig", "transports", "id", "http", "connectors", "injected", "walletConnect", "showQrModal"],
      mappings: ";;;;;;;;;;;IAMSA,GAAG;eAAHA,WAAG;;IAAEC,UAAU;eAAVA,kBAAU;;IASXC,MAAM;eAANA;;;uBAfgB;wBACG;sBACX;4BACmB;AAKxC,oBAAoB;AACpB,MAAMC,YAAYC,QAAQC,GAAG,CAACC,qCAAqC,IAAI;AAEvE,MAAM;AACN,MAAMC,SAAS;IAACP,WAAG;IAAEC,kBAAU;CAAC;AAGzB,MAAMC,SAASM,IAAAA,mBAAY,EAAC;IACjCD;IACAE,YAAY;QACV,CAACT,WAAG,CAACU,EAAE,CAAC,EAAEC,IAAAA,UAAI;QACd,CAACV,kBAAU,CAACS,EAAE,CAAC,EAAEC,IAAAA,UAAI;IACvB;IACAC,YAAY;QACVC,IAAAA,oBAAQ,EAAC;YAAEN;QAAO;QAClBO,IAAAA,yBAAa,EAAC;YACZX;YACAI;YACAQ,aAAa;QACf;KACD;AACH"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de8986d75816a8209dbfb8fa0324312ae26c6fc8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1upcrxd630 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1upcrxd630();
cov_1upcrxd630().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1upcrxd630().f[0]++;
  cov_1upcrxd630().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1upcrxd630().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1upcrxd630().s[3]++;
_export(exports, {
  bsc: function () {
    /* istanbul ignore next */
    cov_1upcrxd630().f[1]++;
    cov_1upcrxd630().s[4]++;
    return _chains.bsc;
  },
  bscTestnet: function () {
    /* istanbul ignore next */
    cov_1upcrxd630().f[2]++;
    cov_1upcrxd630().s[5]++;
    return _chains.bscTestnet;
  },
  config: function () {
    /* istanbul ignore next */
    cov_1upcrxd630().f[3]++;
    cov_1upcrxd630().s[6]++;
    return config;
  }
});
const _wagmi =
/* istanbul ignore next */
(cov_1upcrxd630().s[7]++, require("wagmi"));
const _chains =
/* istanbul ignore next */
(cov_1upcrxd630().s[8]++, require("viem/chains"));
const _viem =
/* istanbul ignore next */
(cov_1upcrxd630().s[9]++, require("viem"));
const _connectors =
/* istanbul ignore next */
(cov_1upcrxd630().s[10]++, require("@wagmi/connectors"));
// WalletConnect项目ID
const projectId =
/* istanbul ignore next */
(cov_1upcrxd630().s[11]++,
/* istanbul ignore next */
(cov_1upcrxd630().b[0][0]++, process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID) ||
/* istanbul ignore next */
(cov_1upcrxd630().b[0][1]++, 'fced525820007c9c024132cf432ffcae'));
// 定义链
const chains =
/* istanbul ignore next */
(cov_1upcrxd630().s[12]++, [_chains.bsc, _chains.bscTestnet]);
const config =
/* istanbul ignore next */
(cov_1upcrxd630().s[13]++, (0, _wagmi.createConfig)({
  chains,
  transports: {
    [_chains.bsc.id]: (0, _viem.http)(),
    [_chains.bscTestnet.id]: (0, _viem.http)()
  },
  connectors: [(0, _connectors.injected)({
    chains
  }), (0, _connectors.walletConnect)({
    projectId,
    chains,
    showQrModal: true
  })]
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJic2MiLCJjb3ZfMXVwY3J4ZDYzMCIsImYiLCJzIiwiX2NoYWlucyIsImJzY1Rlc3RuZXQiLCJjb25maWciLCJwcm9qZWN0SWQiLCJiIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1dBTExFVF9DT05ORUNUX1BST0pFQ1RfSUQiLCJjaGFpbnMiLCJfd2FnbWkiLCJjcmVhdGVDb25maWciLCJ0cmFuc3BvcnRzIiwiaWQiLCJfdmllbSIsImh0dHAiLCJjb25uZWN0b3JzIiwiX2Nvbm5lY3RvcnMiLCJpbmplY3RlZCIsIndhbGxldENvbm5lY3QiLCJzaG93UXJNb2RhbCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWRleW91L0Rlc2t0b3Avc20vc29jaW9taW50L3NyYy9jb25maWcvd2FnbWkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29uZmlnIH0gZnJvbSAnd2FnbWknO1xuaW1wb3J0IHsgYnNjLCBic2NUZXN0bmV0IH0gZnJvbSAndmllbS9jaGFpbnMnO1xuaW1wb3J0IHsgaHR0cCB9IGZyb20gJ3ZpZW0nO1xuaW1wb3J0IHsgaW5qZWN0ZWQsIHdhbGxldENvbm5lY3QgfSBmcm9tICdAd2FnbWkvY29ubmVjdG9ycyc7XG5cbi8vIOWvvOWHuumTvumFjee9rlxuZXhwb3J0IHsgYnNjLCBic2NUZXN0bmV0IH07XG5cbi8vIFdhbGxldENvbm5lY3Tpobnnm65JRFxuY29uc3QgcHJvamVjdElkID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfV0FMTEVUX0NPTk5FQ1RfUFJPSkVDVF9JRCB8fCAnZmNlZDUyNTgyMDAwN2M5YzAyNDEzMmNmNDMyZmZjYWUnO1xuXG4vLyDlrprkuYnpk75cbmNvbnN0IGNoYWlucyA9IFtic2MsIGJzY1Rlc3RuZXRdO1xuXG4vLyDliJvlu7pXYWdtaemFjee9rlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGNyZWF0ZUNvbmZpZyh7XG4gIGNoYWlucyxcbiAgdHJhbnNwb3J0czoge1xuICAgIFtic2MuaWRdOiBodHRwKCksXG4gICAgW2JzY1Rlc3RuZXQuaWRdOiBodHRwKCksXG4gIH0sXG4gIGNvbm5lY3RvcnM6IFtcbiAgICBpbmplY3RlZCh7IGNoYWlucyB9KSxcbiAgICB3YWxsZXRDb25uZWN0KHtcbiAgICAgIHByb2plY3RJZCxcbiAgICAgIGNoYWlucyxcbiAgICAgIHNob3dRck1vZGFsOiB0cnVlLFxuICAgIH0pLFxuICBdLFxufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQU1TQSxHQUFHLFdBQUFBLENBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQUhDLE9BQUEsQ0FBQUosR0FBRzs7RUFBRUssVUFBVSxXQUFBQSxDQUFBO0lBQUE7SUFBQUosY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFWQyxPQUFBLENBQUFDLFVBQVU7O0VBU1hDLE1BQU0sV0FBQUEsQ0FBQTtJQUFBO0lBQUFMLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBTkcsTUFBQTs7Ozs7a0NBZmdCOzs7a0NBQ0c7OztrQ0FDWDs7O21DQUNtQjtBQUt4QztBQUNBLE1BQU1DLFNBQUE7QUFBQTtBQUFBLENBQUFOLGNBQUEsR0FBQUUsQ0FBQTtBQUFZO0FBQUEsQ0FBQUYsY0FBQSxHQUFBTyxDQUFBLFVBQUFDLE9BQUEsQ0FBUUMsR0FBRyxDQUFDQyxxQ0FBcUM7QUFBQTtBQUFBLENBQUFWLGNBQUEsR0FBQU8sQ0FBQSxVQUFJO0FBRXZFO0FBQ0EsTUFBTUksTUFBQTtBQUFBO0FBQUEsQ0FBQVgsY0FBQSxHQUFBRSxDQUFBLFFBQVMsQ0FBQ0MsT0FBQSxDQUFBSixHQUFHLEVBQUVJLE9BQUEsQ0FBQUMsVUFBVSxDQUFDO0FBR3pCLE1BQU1DLE1BQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUUsQ0FBQSxRQUFTLElBQUFVLE1BQUEsQ0FBQUMsWUFBWSxFQUFDO0VBQ2pDRixNQUFBO0VBQ0FHLFVBQUEsRUFBWTtJQUNWLENBQUNYLE9BQUEsQ0FBQUosR0FBRyxDQUFDZ0IsRUFBRSxHQUFHLElBQUFDLEtBQUEsQ0FBQUMsSUFBSTtJQUNkLENBQUNkLE9BQUEsQ0FBQUMsVUFBVSxDQUFDVyxFQUFFLEdBQUcsSUFBQUMsS0FBQSxDQUFBQyxJQUFJO0VBQ3ZCO0VBQ0FDLFVBQUEsRUFBWSxDQUNWLElBQUFDLFdBQUEsQ0FBQUMsUUFBUSxFQUFDO0lBQUVUO0VBQU8sSUFDbEIsSUFBQVEsV0FBQSxDQUFBRSxhQUFhLEVBQUM7SUFDWmYsU0FBQTtJQUNBSyxNQUFBO0lBQ0FXLFdBQUEsRUFBYTtFQUNmO0FBRUoiLCJpZ25vcmVMaXN0IjpbXX0=