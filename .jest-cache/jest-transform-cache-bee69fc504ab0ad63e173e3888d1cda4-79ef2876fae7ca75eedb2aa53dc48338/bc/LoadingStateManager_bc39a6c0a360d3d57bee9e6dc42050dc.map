{"version":3,"names":["cov_1y8iapgusn","actualCoverage","s","CardSkeleton","f","LoadingStateProvider","PageLoadingOverlay","SkeletonLoader","SmartLoadingIndicator","TableSkeleton","default","_default","useButtonLoading","useDataLoading","useFormLoading","useLoadingState","LoadingContext","_react","createContext","undefined","children","loadingStates","setLoadingStates","useState","setLoading","useCallback","key","loading","prev","isLoading","b","isAnyLoading","Object","values","some","clearAllLoading","_jsxruntime","jsx","Provider","value","context","useContext","Error","loadingKey","fallback","minLoadingTime","delay","showLoading","setShowLoading","startTime","setStartTime","delayTimer","minTimer","setTimeout","Date","now","elapsed","remaining","clearTimeout","Fragment","DefaultLoadingFallback","className","jsxs","withLoading","asyncFn","formKey","submitWithLoading","submitFn","onSuccess","onError","result","error","dataKey","fetchWithLoading","fetchFn","data","lines","animated","Array","from","length","map","_","index","style","width","Math","random","rows","columns","rowIndex","colIndex"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/common/LoadingStateManager.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useState, useCallback, ReactNode } from 'react';\n\n// 加载状态类型\ninterface LoadingState {\n  [key: string]: boolean;\n}\n\ninterface LoadingContextType {\n  loadingStates: LoadingState;\n  setLoading: (key: string, loading: boolean) => void;\n  isLoading: (key: string) => boolean;\n  isAnyLoading: () => boolean;\n  clearAllLoading: () => void;\n}\n\nconst LoadingContext = createContext<LoadingContextType | undefined>(undefined);\n\n// 全局加载状态管理器\nexport function LoadingStateProvider({ children }: { children: ReactNode }) {\n  const [loadingStates, setLoadingStates] = useState<LoadingState>({});\n\n  const setLoading = useCallback((key: string, loading: boolean) => {\n    setLoadingStates(prev => ({\n      ...prev,\n      [key]: loading\n    }));\n  }, []);\n\n  const isLoading = useCallback((key: string) => {\n    return loadingStates[key] || false;\n  }, [loadingStates]);\n\n  const isAnyLoading = useCallback(() => {\n    return Object.values(loadingStates).some(loading => loading);\n  }, [loadingStates]);\n\n  const clearAllLoading = useCallback(() => {\n    setLoadingStates({});\n  }, []);\n\n  return (\n    <LoadingContext.Provider value={{\n      loadingStates,\n      setLoading,\n      isLoading,\n      isAnyLoading,\n      clearAllLoading\n    }}>\n      {children}\n    </LoadingContext.Provider>\n  );\n}\n\n// 使用加载状态的Hook\nexport function useLoadingState() {\n  const context = useContext(LoadingContext);\n  if (!context) {\n    throw new Error('useLoadingState must be used within LoadingStateProvider');\n  }\n  return context;\n}\n\n// 智能加载指示器组件\ninterface SmartLoadingIndicatorProps {\n  loadingKey: string;\n  children: ReactNode;\n  fallback?: ReactNode;\n  minLoadingTime?: number; // 最小加载时间，避免闪烁\n  delay?: number; // 延迟显示时间\n}\n\nexport function SmartLoadingIndicator({\n  loadingKey,\n  children,\n  fallback,\n  minLoadingTime = 300,\n  delay = 200\n}: SmartLoadingIndicatorProps) {\n  const { isLoading } = useLoadingState();\n  const [showLoading, setShowLoading] = useState(false);\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  const loading = isLoading(loadingKey);\n\n  // 处理延迟显示和最小加载时间\n  useState(() => {\n    let delayTimer: NodeJS.Timeout;\n    let minTimer: NodeJS.Timeout;\n\n    if (loading) {\n      // 延迟显示加载状态\n      delayTimer = setTimeout(() => {\n        setShowLoading(true);\n        setStartTime(Date.now());\n      }, delay);\n    } else if (showLoading && startTime) {\n      // 确保最小加载时间\n      const elapsed = Date.now() - startTime;\n      const remaining = minLoadingTime - elapsed;\n      \n      if (remaining > 0) {\n        minTimer = setTimeout(() => {\n          setShowLoading(false);\n          setStartTime(null);\n        }, remaining);\n      } else {\n        setShowLoading(false);\n        setStartTime(null);\n      }\n    }\n\n    return () => {\n      clearTimeout(delayTimer);\n      clearTimeout(minTimer);\n    };\n  });\n\n  if (showLoading) {\n    return (\n      <>\n        {fallback || <DefaultLoadingFallback />}\n      </>\n    );\n  }\n\n  return <>{children}</>;\n}\n\n// 默认加载回退组件\nconst DefaultLoadingFallback = () => (\n  <div className=\"flex items-center justify-center p-8\">\n    <div className=\"w-8 h-8 border-4 border-[#0de5ff] border-t-transparent rounded-full animate-spin\"></div>\n  </div>\n);\n\n// 页面级加载覆盖层\nexport function PageLoadingOverlay() {\n  const { isAnyLoading } = useLoadingState();\n\n  if (!isAnyLoading()) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/20 backdrop-blur-sm z-50 flex items-center justify-center\">\n      <div className=\"bg-gray-900/90 rounded-lg p-6 flex flex-col items-center gap-4\">\n        <div className=\"w-12 h-12 border-4 border-[#0de5ff] border-t-transparent rounded-full animate-spin\"></div>\n        <p className=\"text-white text-sm\">处理中...</p>\n      </div>\n    </div>\n  );\n}\n\n// 按钮加载状态Hook\nexport function useButtonLoading(key: string) {\n  const { setLoading, isLoading } = useLoadingState();\n\n  const withLoading = useCallback(async (asyncFn: () => Promise<any>) => {\n    setLoading(key, true);\n    try {\n      return await asyncFn();\n    } finally {\n      setLoading(key, false);\n    }\n  }, [key, setLoading]);\n\n  return {\n    loading: isLoading(key),\n    withLoading\n  };\n}\n\n// 表单提交加载Hook\nexport function useFormLoading(formKey: string) {\n  const { setLoading, isLoading } = useLoadingState();\n\n  const submitWithLoading = useCallback(async (\n    submitFn: () => Promise<any>,\n    onSuccess?: () => void,\n    onError?: (error: any) => void\n  ) => {\n    setLoading(formKey, true);\n    try {\n      const result = await submitFn();\n      onSuccess?.();\n      return result;\n    } catch (error) {\n      onError?.(error);\n      throw error;\n    } finally {\n      setLoading(formKey, false);\n    }\n  }, [formKey, setLoading]);\n\n  return {\n    loading: isLoading(formKey),\n    submitWithLoading\n  };\n}\n\n// 数据获取加载Hook\nexport function useDataLoading(dataKey: string) {\n  const { setLoading, isLoading } = useLoadingState();\n\n  const fetchWithLoading = useCallback(async <T>(\n    fetchFn: () => Promise<T>,\n    onSuccess?: (data: T) => void,\n    onError?: (error: any) => void\n  ): Promise<T | null> => {\n    setLoading(dataKey, true);\n    try {\n      const data = await fetchFn();\n      onSuccess?.(data);\n      return data;\n    } catch (error) {\n      onError?.(error);\n      return null;\n    } finally {\n      setLoading(dataKey, false);\n    }\n  }, [dataKey, setLoading]);\n\n  return {\n    loading: isLoading(dataKey),\n    fetchWithLoading\n  };\n}\n\n// 骨架屏组件\nexport function SkeletonLoader({ \n  lines = 3, \n  className = '',\n  animated = true \n}: { \n  lines?: number; \n  className?: string;\n  animated?: boolean;\n}) {\n  return (\n    <div className={`space-y-3 ${className}`}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <div\n          key={index}\n          className={`h-4 bg-gray-800/50 rounded ${animated ? 'animate-pulse' : ''}`}\n          style={{\n            width: `${Math.random() * 40 + 60}%`\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\n// 卡片骨架屏\nexport function CardSkeleton({ className = '' }: { className?: string }) {\n  return (\n    <div className={`bg-gray-800/50 rounded-lg p-6 animate-pulse ${className}`}>\n      <div className=\"h-6 bg-gray-700/50 rounded mb-4 w-3/4\"></div>\n      <div className=\"space-y-2\">\n        <div className=\"h-4 bg-gray-700/50 rounded w-full\"></div>\n        <div className=\"h-4 bg-gray-700/50 rounded w-5/6\"></div>\n        <div className=\"h-4 bg-gray-700/50 rounded w-4/6\"></div>\n      </div>\n      <div className=\"mt-4 h-10 bg-gray-700/50 rounded w-1/3\"></div>\n    </div>\n  );\n}\n\n// 表格骨架屏\nexport function TableSkeleton({ \n  rows = 5, \n  columns = 4,\n  className = '' \n}: { \n  rows?: number; \n  columns?: number;\n  className?: string;\n}) {\n  return (\n    <div className={`animate-pulse ${className}`}>\n      {/* 表头 */}\n      <div className=\"flex gap-4 mb-4\">\n        {Array.from({ length: columns }).map((_, index) => (\n          <div key={index} className=\"h-6 bg-gray-700/50 rounded flex-1\"></div>\n        ))}\n      </div>\n      \n      {/* 表格行 */}\n      {Array.from({ length: rows }).map((_, rowIndex) => (\n        <div key={rowIndex} className=\"flex gap-4 mb-2\">\n          {Array.from({ length: columns }).map((_, colIndex) => (\n            <div key={colIndex} className=\"h-8 bg-gray-800/50 rounded flex-1\"></div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default LoadingStateProvider;\n"],"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","ignoreList":[]}