b700823dce0905074aeab3024c5753cf
'use client';
"use strict";

/* istanbul ignore next */
function cov_1l6gjjy4o6() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/components/assets/ExchangeCard.tsx";
  var hash = "4958ea47d8674092c902e8c54a14583b9723b147";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/components/assets/ExchangeCard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 91,
          column: 1
        }
      },
      "6": {
        start: {
          line: 15,
          column: 42
        },
        end: {
          line: 15,
          column: 66
        }
      },
      "7": {
        start: {
          line: 16,
          column: 44
        },
        end: {
          line: 16,
          column: 68
        }
      },
      "8": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "9": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "12": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "15": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 90
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 90,
          column: 7
        }
      },
      "17": {
        start: {
          line: 92,
          column: 17
        },
        end: {
          line: 92,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 22
          }
        },
        loc: {
          start: {
            line: 14,
            column: 71
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 17,
            column: 31
          }
        },
        loc: {
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 26,
            column: 9
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 17
          }
        }, {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 46
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 28,
            column: 67
          }
        }, {
          start: {
            line: 28,
            column: 70
          },
          end: {
            line: 28,
            column: 90
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 38
          }
        }, {
          start: {
            line: 86,
            column: 42
          },
          end: {
            line: 86,
            column: 61
          }
        }],
        line: 86
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/components/assets/ExchangeCard.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\n\ninterface ExchangeCardProps {\n  type: 'bnb-to-sm' | 'flower-to-sm';\n  title: string;\n  inputLabel: string;\n  outputLabel: string;\n  rate: number;\n}\n\nconst ExchangeCard = ({\n  type,\n  title,\n  inputLabel,\n  outputLabel,\n  rate,\n}: ExchangeCardProps) => {\n  const [inputAmount, setInputAmount] = useState<string>('');\n  const [outputAmount, setOutputAmount] = useState<string>('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setInputAmount(value);\n\n    // \u8BA1\u7B97\u8F93\u51FA\u91D1\u989D\n    if (value && !isNaN(parseFloat(value))) {\n      const calculated = parseFloat(value) * rate;\n      setOutputAmount(calculated.toFixed(2));\n    } else {\n      setOutputAmount('');\n    }\n  };\n\n  const rateDisplay =\n    type === 'bnb-to-sm' ? `1 BNB = ${rate} SM` : `1 \u5C0F\u7EA2\u82B1 = ${rate} SM`;\n\n  return (\n    <div className=\"tech-card relative overflow-hidden mb-8\">\n      <h2 className=\"text-xl font-bold mb-6\">{title}</h2>\n\n      <div className=\"mb-4\">\n        <label\n          htmlFor={`${type}-input`}\n          className=\"block text-sm font-medium text-gray-300 mb-2\"\n        >\n          {inputLabel}\n        </label>\n        <input\n          id={`${type}-input`}\n          type=\"number\"\n          placeholder=\"0.0\"\n          value={inputAmount}\n          onChange={handleInputChange}\n          className=\"input-field w-full\"\n          min=\"0\"\n          step=\"0.01\"\n        />\n      </div>\n\n      <div className=\"text-sm text-gray-400 mb-4\">\u52A8\u6001\u6C47\u7387: {rateDisplay}</div>\n\n      <div className=\"mb-4\">\n        <label\n          htmlFor={`${type}-output`}\n          className=\"block text-sm font-medium text-gray-300 mb-2\"\n        >\n          {outputLabel}\n        </label>\n        <input\n          id={`${type}-output`}\n          type=\"text\"\n          readOnly\n          value={outputAmount}\n          className=\"input-field w-full bg-gray-800/50 cursor-not-allowed\"\n        />\n      </div>\n\n      <div className=\"text-xs text-gray-400 mb-4\">Gas \u8D39\u7531\u7528\u6237\u627F\u62C5</div>\n\n      <button\n        className=\"neon-button w-full\"\n        disabled={!inputAmount || inputAmount === '0'}\n      >\n        \u5151\u6362\n      </button>\n    </div>\n  );\n};\n\nexport default ExchangeCard;\n"],
      names: ["ExchangeCard", "type", "title", "inputLabel", "outputLabel", "rate", "inputAmount", "setInputAmount", "useState", "outputAmount", "setOutputAmount", "handleInputChange", "e", "value", "target", "isNaN", "parseFloat", "calculated", "toFixed", "rateDisplay", "div", "className", "h2", "label", "htmlFor", "input", "id", "placeholder", "onChange", "min", "step", "readOnly", "button", "disabled"],
      mappings: "AAAA;;;;;+BA2FA;;;eAAA;;;;uBAzFyB;AAUzB,MAAMA,eAAe,CAAC,EACpBC,IAAI,EACJC,KAAK,EACLC,UAAU,EACVC,WAAW,EACXC,IAAI,EACc;IAClB,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAS;IACvD,MAAM,CAACC,cAAcC,gBAAgB,GAAGF,IAAAA,eAAQ,EAAS;IAEzD,MAAMG,oBAAoB,CAACC;QACzB,MAAMC,QAAQD,EAAEE,MAAM,CAACD,KAAK;QAC5BN,eAAeM;QAEf,SAAS;QACT,IAAIA,SAAS,CAACE,MAAMC,WAAWH,SAAS;YACtC,MAAMI,aAAaD,WAAWH,SAASR;YACvCK,gBAAgBO,WAAWC,OAAO,CAAC;QACrC,OAAO;YACLR,gBAAgB;QAClB;IACF;IAEA,MAAMS,cACJlB,SAAS,cAAc,CAAC,QAAQ,EAAEI,KAAK,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAEA,KAAK,GAAG,CAAC;IAEpE,qBACE,sBAACe;QAAIC,WAAU;;0BACb,qBAACC;gBAAGD,WAAU;0BAA0BnB;;0BAExC,sBAACkB;gBAAIC,WAAU;;kCACb,qBAACE;wBACCC,SAAS,GAAGvB,KAAK,MAAM,CAAC;wBACxBoB,WAAU;kCAETlB;;kCAEH,qBAACsB;wBACCC,IAAI,GAAGzB,KAAK,MAAM,CAAC;wBACnBA,MAAK;wBACL0B,aAAY;wBACZd,OAAOP;wBACPsB,UAAUjB;wBACVU,WAAU;wBACVQ,KAAI;wBACJC,MAAK;;;;0BAIT,sBAACV;gBAAIC,WAAU;;oBAA6B;oBAAOF;;;0BAEnD,sBAACC;gBAAIC,WAAU;;kCACb,qBAACE;wBACCC,SAAS,GAAGvB,KAAK,OAAO,CAAC;wBACzBoB,WAAU;kCAETjB;;kCAEH,qBAACqB;wBACCC,IAAI,GAAGzB,KAAK,OAAO,CAAC;wBACpBA,MAAK;wBACL8B,QAAQ;wBACRlB,OAAOJ;wBACPY,WAAU;;;;0BAId,qBAACD;gBAAIC,WAAU;0BAA6B;;0BAE5C,qBAACW;gBACCX,WAAU;gBACVY,UAAU,CAAC3B,eAAeA,gBAAgB;0BAC3C;;;;AAKP;MAEA,WAAeN"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4958ea47d8674092c902e8c54a14583b9723b147"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1l6gjjy4o6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1l6gjjy4o6();
cov_1l6gjjy4o6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1l6gjjy4o6().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1l6gjjy4o6().f[0]++;
    cov_1l6gjjy4o6().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1l6gjjy4o6().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1l6gjjy4o6().s[4]++, require("react"));
/* istanbul ignore next */
cov_1l6gjjy4o6().s[5]++;
const ExchangeCard = ({
  type,
  title,
  inputLabel,
  outputLabel,
  rate
}) => {
  /* istanbul ignore next */
  cov_1l6gjjy4o6().f[1]++;
  const [inputAmount, setInputAmount] =
  /* istanbul ignore next */
  (cov_1l6gjjy4o6().s[6]++, (0, _react.useState)(''));
  const [outputAmount, setOutputAmount] =
  /* istanbul ignore next */
  (cov_1l6gjjy4o6().s[7]++, (0, _react.useState)(''));
  /* istanbul ignore next */
  cov_1l6gjjy4o6().s[8]++;
  const handleInputChange = e => {
    /* istanbul ignore next */
    cov_1l6gjjy4o6().f[2]++;
    const value =
    /* istanbul ignore next */
    (cov_1l6gjjy4o6().s[9]++, e.target.value);
    /* istanbul ignore next */
    cov_1l6gjjy4o6().s[10]++;
    setInputAmount(value);
    // 计算输出金额
    /* istanbul ignore next */
    cov_1l6gjjy4o6().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_1l6gjjy4o6().b[1][0]++, value) &&
    /* istanbul ignore next */
    (cov_1l6gjjy4o6().b[1][1]++, !isNaN(parseFloat(value)))) {
      /* istanbul ignore next */
      cov_1l6gjjy4o6().b[0][0]++;
      const calculated =
      /* istanbul ignore next */
      (cov_1l6gjjy4o6().s[12]++, parseFloat(value) * rate);
      /* istanbul ignore next */
      cov_1l6gjjy4o6().s[13]++;
      setOutputAmount(calculated.toFixed(2));
    } else {
      /* istanbul ignore next */
      cov_1l6gjjy4o6().b[0][1]++;
      cov_1l6gjjy4o6().s[14]++;
      setOutputAmount('');
    }
  };
  const rateDisplay =
  /* istanbul ignore next */
  (cov_1l6gjjy4o6().s[15]++, type === 'bnb-to-sm' ?
  /* istanbul ignore next */
  (cov_1l6gjjy4o6().b[2][0]++, `1 BNB = ${rate} SM`) :
  /* istanbul ignore next */
  (cov_1l6gjjy4o6().b[2][1]++, `1 小红花 = ${rate} SM`));
  /* istanbul ignore next */
  cov_1l6gjjy4o6().s[16]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "tech-card relative overflow-hidden mb-8",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
      className: "text-xl font-bold mb-6",
      children: title
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        htmlFor: `${type}-input`,
        className: "block text-sm font-medium text-gray-300 mb-2",
        children: inputLabel
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        id: `${type}-input`,
        type: "number",
        placeholder: "0.0",
        value: inputAmount,
        onChange: handleInputChange,
        className: "input-field w-full",
        min: "0",
        step: "0.01"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-sm text-gray-400 mb-4",
      children: ["动态汇率: ", rateDisplay]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        htmlFor: `${type}-output`,
        className: "block text-sm font-medium text-gray-300 mb-2",
        children: outputLabel
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        id: `${type}-output`,
        type: "text",
        readOnly: true,
        value: outputAmount,
        className: "input-field w-full bg-gray-800/50 cursor-not-allowed"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "text-xs text-gray-400 mb-4",
      children: "Gas 费由用户承担"
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
      className: "neon-button w-full",
      disabled:
      /* istanbul ignore next */
      (cov_1l6gjjy4o6().b[3][0]++, !inputAmount) ||
      /* istanbul ignore next */
      (cov_1l6gjjy4o6().b[3][1]++, inputAmount === '0'),
      children: "兑换"
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_1l6gjjy4o6().s[17]++, ExchangeCard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWw2Z2pqeTRvNiIsImFjdHVhbENvdmVyYWdlIiwicyIsIl9kZWZhdWx0IiwiRXhjaGFuZ2VDYXJkIiwidHlwZSIsInRpdGxlIiwiaW5wdXRMYWJlbCIsIm91dHB1dExhYmVsIiwicmF0ZSIsImYiLCJpbnB1dEFtb3VudCIsInNldElucHV0QW1vdW50IiwiX3JlYWN0IiwidXNlU3RhdGUiLCJvdXRwdXRBbW91bnQiLCJzZXRPdXRwdXRBbW91bnQiLCJoYW5kbGVJbnB1dENoYW5nZSIsImUiLCJ2YWx1ZSIsInRhcmdldCIsImIiLCJpc05hTiIsInBhcnNlRmxvYXQiLCJjYWxjdWxhdGVkIiwidG9GaXhlZCIsInJhdGVEaXNwbGF5IiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiY2xhc3NOYW1lIiwianN4IiwiaHRtbEZvciIsImlkIiwicGxhY2Vob2xkZXIiLCJvbkNoYW5nZSIsIm1pbiIsInN0ZXAiLCJyZWFkT25seSIsImRpc2FibGVkIl0sInNvdXJjZXMiOlsiL1VzZXJzL3l1ZGV5b3UvRGVza3RvcC9zbS9zb2Npb21pbnQvc3JjL2NvbXBvbmVudHMvYXNzZXRzL0V4Y2hhbmdlQ2FyZC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIEV4Y2hhbmdlQ2FyZFByb3BzIHtcbiAgdHlwZTogJ2JuYi10by1zbScgfCAnZmxvd2VyLXRvLXNtJztcbiAgdGl0bGU6IHN0cmluZztcbiAgaW5wdXRMYWJlbDogc3RyaW5nO1xuICBvdXRwdXRMYWJlbDogc3RyaW5nO1xuICByYXRlOiBudW1iZXI7XG59XG5cbmNvbnN0IEV4Y2hhbmdlQ2FyZCA9ICh7XG4gIHR5cGUsXG4gIHRpdGxlLFxuICBpbnB1dExhYmVsLFxuICBvdXRwdXRMYWJlbCxcbiAgcmF0ZSxcbn06IEV4Y2hhbmdlQ2FyZFByb3BzKSA9PiB7XG4gIGNvbnN0IFtpbnB1dEFtb3VudCwgc2V0SW5wdXRBbW91bnRdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG4gIGNvbnN0IFtvdXRwdXRBbW91bnQsIHNldE91dHB1dEFtb3VudF0gPSB1c2VTdGF0ZTxzdHJpbmc+KCcnKTtcblxuICBjb25zdCBoYW5kbGVJbnB1dENoYW5nZSA9IChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgc2V0SW5wdXRBbW91bnQodmFsdWUpO1xuXG4gICAgLy8g6K6h566X6L6T5Ye66YeR6aKdXG4gICAgaWYgKHZhbHVlICYmICFpc05hTihwYXJzZUZsb2F0KHZhbHVlKSkpIHtcbiAgICAgIGNvbnN0IGNhbGN1bGF0ZWQgPSBwYXJzZUZsb2F0KHZhbHVlKSAqIHJhdGU7XG4gICAgICBzZXRPdXRwdXRBbW91bnQoY2FsY3VsYXRlZC50b0ZpeGVkKDIpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3V0cHV0QW1vdW50KCcnKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgcmF0ZURpc3BsYXkgPVxuICAgIHR5cGUgPT09ICdibmItdG8tc20nID8gYDEgQk5CID0gJHtyYXRlfSBTTWAgOiBgMSDlsI/nuqLoirEgPSAke3JhdGV9IFNNYDtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwidGVjaC1jYXJkIHJlbGF0aXZlIG92ZXJmbG93LWhpZGRlbiBtYi04XCI+XG4gICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC14bCBmb250LWJvbGQgbWItNlwiPnt0aXRsZX08L2gyPlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTRcIj5cbiAgICAgICAgPGxhYmVsXG4gICAgICAgICAgaHRtbEZvcj17YCR7dHlwZX0taW5wdXRgfVxuICAgICAgICAgIGNsYXNzTmFtZT1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTMwMCBtYi0yXCJcbiAgICAgICAgPlxuICAgICAgICAgIHtpbnB1dExhYmVsfVxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICBpZD17YCR7dHlwZX0taW5wdXRgfVxuICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiMC4wXCJcbiAgICAgICAgICB2YWx1ZT17aW5wdXRBbW91bnR9XG4gICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUlucHV0Q2hhbmdlfVxuICAgICAgICAgIGNsYXNzTmFtZT1cImlucHV0LWZpZWxkIHctZnVsbFwiXG4gICAgICAgICAgbWluPVwiMFwiXG4gICAgICAgICAgc3RlcD1cIjAuMDFcIlxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNDAwIG1iLTRcIj7liqjmgIHmsYfnjoc6IHtyYXRlRGlzcGxheX08L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi00XCI+XG4gICAgICAgIDxsYWJlbFxuICAgICAgICAgIGh0bWxGb3I9e2Ake3R5cGV9LW91dHB1dGB9XG4gICAgICAgICAgY2xhc3NOYW1lPVwiYmxvY2sgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktMzAwIG1iLTJcIlxuICAgICAgICA+XG4gICAgICAgICAge291dHB1dExhYmVsfVxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICBpZD17YCR7dHlwZX0tb3V0cHV0YH1cbiAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgcmVhZE9ubHlcbiAgICAgICAgICB2YWx1ZT17b3V0cHV0QW1vdW50fVxuICAgICAgICAgIGNsYXNzTmFtZT1cImlucHV0LWZpZWxkIHctZnVsbCBiZy1ncmF5LTgwMC81MCBjdXJzb3Itbm90LWFsbG93ZWRcIlxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LWdyYXktNDAwIG1iLTRcIj5HYXMg6LS555Sx55So5oi35om/5ouFPC9kaXY+XG5cbiAgICAgIDxidXR0b25cbiAgICAgICAgY2xhc3NOYW1lPVwibmVvbi1idXR0b24gdy1mdWxsXCJcbiAgICAgICAgZGlzYWJsZWQ9eyFpbnB1dEFtb3VudCB8fCBpbnB1dEFtb3VudCA9PT0gJzAnfVxuICAgICAgPlxuICAgICAgICDlhZHmjaJcbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRXhjaGFuZ2VDYXJkO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW9CUztJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQXVFVDs7Ozs7O1dBQUFDLFFBQUE7Ozs7Ozs7O2tDQXpGeUI7QUFBQTtBQUFBSCxjQUFBLEdBQUFFLENBQUE7QUFVekIsTUFBTUUs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