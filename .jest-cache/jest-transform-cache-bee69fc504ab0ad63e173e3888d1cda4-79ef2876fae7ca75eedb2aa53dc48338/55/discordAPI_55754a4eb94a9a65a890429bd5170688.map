{"version":3,"names":["cov_2jo4x4eabz","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","DiscordActionType","bindDiscordAccount","exchangeCodeForToken","generateAuthUrl","getUserDiscordStats","getUserGuilds","getUserInfo","recordDiscordAction","refreshAccessToken","sendWebhookMessage","verifyGuildMembership","DISCORD_CLIENT_ID","process","env","DISCORD_CLIENT_SECRET","DISCORD_BOT_TOKEN","SUPABASE_URL","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_SERVICE_KEY","SUPABASE_SERVICE_ROLE_KEY","supabase","_supabasejs","createClient","DISCORD_API_BASE","OAUTH_CONFIG","clientId","clientSecret","redirectUri","NEXT_PUBLIC_APP_URL","scopes","REWARD_CONFIG","state","params","URLSearchParams","client_id","redirect_uri","response_type","scope","join","toString","code","response","fetch","method","headers","body","client_secret","grant_type","ok","Error","statusText","json","accessToken","walletAddress","refreshToken","discordUser","userGuilds","data","existingBinding","from","select","eq","username","discriminator","single","success","error","updateError","update","discord_username","discord_verified","verified","discord_user_id","id","updated_at","Date","toISOString","tokenError","upsert","user_wallet","platform","access_token","refresh_token","expires_at","now","sociomintGuildId","DISCORD_GUILD_ID","joinedSociomint","some","guild","rewardUser","guild_name","guild_count","length","user","guilds","console","message","guildId","userProfile","status","member","actionType","targetId","metadata","reward","rewardAmount","existingAction","actionError","insert","action_type","target_id","reward_amount","created_at","rewardError","amount","source_type","source_id","balanceError","rpc","p_wallet_address","p_red_flower_amount","actions","order","ascending","total_actions","total_rewards","actions_by_type","guilds_joined","actionsByType","totalRewards","forEach","action","guildsJoined","last_action_at","webhookUrl","content","embeds","JSON","stringify"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/social/discordAPI.ts"],"sourcesContent":["/**\n * Discord API 集成模块\n * 支持 OAuth 2.0 认证和服务器活动追踪\n */\n\nimport { createClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase';\n\n// 环境变量\nconst DISCORD_CLIENT_ID = process.env.DISCORD_CLIENT_ID!;\nconst DISCORD_CLIENT_SECRET = process.env.DISCORD_CLIENT_SECRET!;\nconst DISCORD_BOT_TOKEN = process.env.DISCORD_BOT_TOKEN!;\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY!;\n\n// 初始化客户端\nconst supabase = createClient<Database>(SUPABASE_URL, SUPABASE_SERVICE_KEY);\n\n// Discord API 基础 URL\nconst DISCORD_API_BASE = 'https://discord.com/api/v10';\n\n// OAuth 2.0 配置\nconst OAUTH_CONFIG = {\n  clientId: DISCORD_CLIENT_ID,\n  clientSecret: DISCORD_CLIENT_SECRET,\n  redirectUri: `${process.env.NEXT_PUBLIC_APP_URL}/api/auth/discord/callback`,\n  scopes: ['identify', 'guilds', 'guilds.members.read']\n};\n\n// 用户行为类型\nexport enum DiscordActionType {\n  JOIN_GUILD = 'join_guild',\n  MESSAGE = 'message',\n  REACTION = 'reaction',\n  VOICE_JOIN = 'voice_join',\n  BOOST = 'boost',\n  INVITE = 'invite'\n}\n\n// 奖励配置\nconst REWARD_CONFIG = {\n  [DiscordActionType.JOIN_GUILD]: 100,   // 加入服务器奖励 100 小红花\n  [DiscordActionType.MESSAGE]: 15,      // 发送消息奖励 15 小红花\n  [DiscordActionType.REACTION]: 5,      // 添加反应奖励 5 小红花\n  [DiscordActionType.VOICE_JOIN]: 20,   // 加入语音频道奖励 20 小红花\n  [DiscordActionType.BOOST]: 500,      // 服务器加速奖励 500 小红花\n  [DiscordActionType.INVITE]: 50       // 邀请用户奖励 50 小红花\n};\n\n// 接口定义\ninterface DiscordUser {\n  id: string;\n  username: string;\n  discriminator: string;\n  avatar?: string;\n  verified?: boolean;\n  email?: string;\n  flags?: number;\n  premium_type?: number;\n}\n\ninterface DiscordGuild {\n  id: string;\n  name: string;\n  icon?: string;\n  owner: boolean;\n  permissions: string;\n  features: string[];\n}\n\ninterface BindingResult {\n  success: boolean;\n  user?: DiscordUser;\n  guilds?: DiscordGuild[];\n  error?: string;\n  accessToken?: string;\n  refreshToken?: string;\n}\n\n/**\n * 生成 OAuth 2.0 授权 URL\n */\nexport function generateAuthUrl(state: string): string {\n  const params = new URLSearchParams({\n    client_id: OAUTH_CONFIG.clientId,\n    redirect_uri: OAUTH_CONFIG.redirectUri,\n    response_type: 'code',\n    scope: OAUTH_CONFIG.scopes.join(' '),\n    state: state\n  });\n\n  return `${DISCORD_API_BASE}/oauth2/authorize?${params.toString()}`;\n}\n\n/**\n * 交换授权码获取访问令牌\n */\nexport async function exchangeCodeForToken(code: string): Promise<{\n  access_token: string;\n  refresh_token: string;\n  expires_in: number;\n  token_type: string;\n  scope: string;\n}> {\n  const response = await fetch(`${DISCORD_API_BASE}/oauth2/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: new URLSearchParams({\n      client_id: OAUTH_CONFIG.clientId,\n      client_secret: OAUTH_CONFIG.clientSecret,\n      grant_type: 'authorization_code',\n      code: code,\n      redirect_uri: OAUTH_CONFIG.redirectUri\n    })\n  });\n\n  if (!response.ok) {\n    throw new Error(`Token exchange failed: ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\n/**\n * 获取用户信息\n */\nexport async function getUserInfo(accessToken: string): Promise<DiscordUser> {\n  const response = await fetch(`${DISCORD_API_BASE}/users/@me`, {\n    headers: {\n      'Authorization': `Bearer ${accessToken}`\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error(`Failed to get user info: ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\n/**\n * 获取用户的服务器列表\n */\nexport async function getUserGuilds(accessToken: string): Promise<DiscordGuild[]> {\n  const response = await fetch(`${DISCORD_API_BASE}/users/@me/guilds`, {\n    headers: {\n      'Authorization': `Bearer ${accessToken}`\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error(`Failed to get user guilds: ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\n/**\n * 绑定 Discord 账号\n */\nexport async function bindDiscordAccount(\n  walletAddress: string,\n  accessToken: string,\n  refreshToken: string\n): Promise<BindingResult> {\n  try {\n    // 获取用户信息\n    const discordUser = await getUserInfo(accessToken);\n    const userGuilds = await getUserGuilds(accessToken);\n    \n    // 检查是否已绑定\n    const { data: existingBinding } = await supabase\n      .from('user_profiles')\n      .select('discord_username')\n      .eq('discord_username', `${discordUser.username}#${discordUser.discriminator}`)\n      .single();\n\n    if (existingBinding) {\n      return {\n        success: false,\n        error: 'Discord account already bound to another wallet'\n      };\n    }\n\n    // 更新用户资料\n    const { error: updateError } = await supabase\n      .from('user_profiles')\n      .update({\n        discord_username: `${discordUser.username}#${discordUser.discriminator}`,\n        discord_verified: discordUser.verified || false,\n        discord_user_id: discordUser.id,\n        updated_at: new Date().toISOString()\n      })\n      .eq('wallet_address', walletAddress);\n\n    if (updateError) {\n      throw updateError;\n    }\n\n    // 保存访问令牌\n    const { error: tokenError } = await supabase\n      .from('social_tokens')\n      .upsert({\n        user_wallet: walletAddress,\n        platform: 'discord',\n        access_token: accessToken,\n        refresh_token: refreshToken,\n        expires_at: new Date(Date.now() + 604800 * 1000).toISOString(), // 7天后过期\n        updated_at: new Date().toISOString()\n      });\n\n    if (tokenError) {\n      throw tokenError;\n    }\n\n    // 检查是否加入了 SocioMint 官方服务器\n    const sociomintGuildId = process.env.DISCORD_GUILD_ID;\n    const joinedSociomint = sociomintGuildId && userGuilds.some(guild => guild.id === sociomintGuildId);\n\n    if (joinedSociomint) {\n      // 发放加入服务器奖励\n      await rewardUser(walletAddress, DiscordActionType.JOIN_GUILD, sociomintGuildId!, {\n        discord_username: `${discordUser.username}#${discordUser.discriminator}`,\n        guild_name: 'SocioMint Official'\n      });\n    }\n\n    // 发放绑定奖励\n    await rewardUser(walletAddress, DiscordActionType.JOIN_GUILD, 'account_binding', {\n      discord_username: `${discordUser.username}#${discordUser.discriminator}`,\n      guild_count: userGuilds.length\n    });\n\n    return {\n      success: true,\n      user: discordUser,\n      guilds: userGuilds,\n      accessToken,\n      refreshToken\n    };\n\n  } catch (error: any) {\n    console.error('Discord binding error:', error);\n    return {\n      success: false,\n      error: error.message || 'Failed to bind Discord account'\n    };\n  }\n}\n\n/**\n * 验证用户在指定服务器的成员身份\n */\nexport async function verifyGuildMembership(\n  walletAddress: string,\n  guildId: string\n): Promise<{ success: boolean; member?: any; error?: string }> {\n  try {\n    // 获取用户的 Discord ID\n    const { data: userProfile } = await supabase\n      .from('user_profiles')\n      .select('discord_user_id')\n      .eq('wallet_address', walletAddress)\n      .single();\n\n    if (!userProfile?.discord_user_id) {\n      return { success: false, error: 'Discord account not bound' };\n    }\n\n    // 使用 Bot Token 检查成员身份\n    const response = await fetch(`${DISCORD_API_BASE}/guilds/${guildId}/members/${userProfile.discord_user_id}`, {\n      headers: {\n        'Authorization': `Bot ${DISCORD_BOT_TOKEN}`\n      }\n    });\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        return { success: false, error: 'User not found in guild' };\n      }\n      throw new Error(`Failed to verify membership: ${response.statusText}`);\n    }\n\n    const member = await response.json();\n    return { success: true, member };\n\n  } catch (error: any) {\n    console.error('Guild membership verification error:', error);\n    return { success: false, error: error.message };\n  }\n}\n\n/**\n * 记录用户行为并发放奖励\n */\nexport async function recordDiscordAction(\n  walletAddress: string,\n  actionType: DiscordActionType,\n  targetId: string,\n  metadata: Record<string, any> = {}\n): Promise<{ success: boolean; reward?: number; error?: string }> {\n  try {\n    const reward = await rewardUser(walletAddress, actionType, targetId, metadata);\n    return { success: true, reward };\n  } catch (error: any) {\n    console.error('Discord action recording error:', error);\n    return { success: false, error: error.message };\n  }\n}\n\n/**\n * 发放用户奖励\n */\nasync function rewardUser(\n  walletAddress: string,\n  actionType: DiscordActionType,\n  targetId: string,\n  metadata: Record<string, any> = {}\n): Promise<number> {\n  const rewardAmount = REWARD_CONFIG[actionType];\n\n  // 检查是否已经奖励过\n  const { data: existingAction } = await supabase\n    .from('user_actions')\n    .select('id')\n    .eq('user_wallet', walletAddress)\n    .eq('platform', 'discord')\n    .eq('action_type', actionType)\n    .eq('target_id', targetId)\n    .single();\n\n  if (existingAction) {\n    throw new Error('Action already rewarded');\n  }\n\n  // 记录用户行为\n  const { error: actionError } = await supabase\n    .from('user_actions')\n    .insert({\n      user_wallet: walletAddress,\n      platform: 'discord',\n      action_type: actionType,\n      target_id: targetId,\n      reward_amount: rewardAmount,\n      metadata: metadata,\n      created_at: new Date().toISOString()\n    });\n\n  if (actionError) {\n    throw actionError;\n  }\n\n  // 记录小红花奖励\n  const { error: rewardError } = await supabase\n    .from('red_flower_rewards')\n    .insert({\n      user_wallet: walletAddress,\n      amount: rewardAmount,\n      source_type: 'social_action',\n      source_id: `discord_${actionType}_${targetId}`,\n      platform: 'discord',\n      action_type: actionType,\n      created_at: new Date().toISOString()\n    });\n\n  if (rewardError) {\n    throw rewardError;\n  }\n\n  // 更新用户余额\n  const { error: balanceError } = await supabase.rpc('update_user_balance', {\n    p_wallet_address: walletAddress,\n    p_red_flower_amount: rewardAmount\n  });\n\n  if (balanceError) {\n    console.error('Balance update error:', balanceError);\n  }\n\n  return rewardAmount;\n}\n\n/**\n * 刷新访问令牌\n */\nexport async function refreshAccessToken(refreshToken: string): Promise<{\n  access_token: string;\n  refresh_token: string;\n  expires_in: number;\n  token_type: string;\n  scope: string;\n}> {\n  const response = await fetch(`${DISCORD_API_BASE}/oauth2/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: new URLSearchParams({\n      client_id: OAUTH_CONFIG.clientId,\n      client_secret: OAUTH_CONFIG.clientSecret,\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken\n    })\n  });\n\n  if (!response.ok) {\n    throw new Error(`Token refresh failed: ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\n/**\n * 获取用户的 Discord 统计信息\n */\nexport async function getUserDiscordStats(walletAddress: string): Promise<{\n  total_actions: number;\n  total_rewards: number;\n  actions_by_type: Record<string, number>;\n  last_action_at?: string;\n  guilds_joined: number;\n}> {\n  const { data: actions } = await supabase\n    .from('user_actions')\n    .select('action_type, reward_amount, created_at')\n    .eq('user_wallet', walletAddress)\n    .eq('platform', 'discord')\n    .order('created_at', { ascending: false });\n\n  if (!actions || actions.length === 0) {\n    return {\n      total_actions: 0,\n      total_rewards: 0,\n      actions_by_type: {},\n      guilds_joined: 0\n    };\n  }\n\n  const actionsByType: Record<string, number> = {};\n  let totalRewards = 0;\n\n  actions.forEach(action => {\n    actionsByType[action.action_type] = (actionsByType[action.action_type] || 0) + 1;\n    totalRewards += action.reward_amount || 0;\n  });\n\n  const guildsJoined = actionsByType[DiscordActionType.JOIN_GUILD] || 0;\n\n  return {\n    total_actions: actions.length,\n    total_rewards: totalRewards,\n    actions_by_type: actionsByType,\n    last_action_at: actions[0]?.created_at,\n    guilds_joined: guildsJoined\n  };\n}\n\n/**\n * Discord Webhook 发送消息\n */\nexport async function sendWebhookMessage(\n  webhookUrl: string,\n  content: string,\n  embeds?: any[]\n): Promise<void> {\n  const response = await fetch(webhookUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      content,\n      embeds\n    })\n  });\n\n  if (!response.ok) {\n    throw new Error(`Webhook message failed: ${response.statusText}`);\n  }\n}\n"],"mappings":"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","ignoreList":[]}