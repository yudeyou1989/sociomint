089d2068cf3ffe24ed3e1a4166bf60a7
'use client';
"use strict";

/* istanbul ignore next */
function cov_i8fk2g5om() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/components/DailyReward/DailyFlowerCard.tsx";
  var hash = "5f1d33bae34e8f791a027d4e1ba17e2a813cb7f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/components/DailyReward/DailyFlowerCard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "7": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "8": {
        start: {
          line: 17,
          column: 36
        },
        end: {
          line: 17,
          column: 105
        }
      },
      "9": {
        start: {
          line: 18,
          column: 44
        },
        end: {
          line: 18,
          column: 121
        }
      },
      "10": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 95
        }
      },
      "11": {
        start: {
          line: 20,
          column: 35
        },
        end: {
          line: 20,
          column: 103
        }
      },
      "12": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 21,
          column: 97
        }
      },
      "13": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "14": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "15": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "16": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "17": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 45
        }
      },
      "18": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "19": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "20": {
        start: {
          line: 33,
          column: 39
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "21": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "22": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "23": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 20
        }
      },
      "24": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 66
        }
      },
      "25": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "26": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "27": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "28": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "29": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "30": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "31": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 30
        }
      },
      "32": {
        start: {
          line: 53,
          column: 17
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "33": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 56,
          column: 88
        }
      },
      "34": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "35": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "36": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 95
        }
      },
      "37": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "38": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "39": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "40": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "41": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "42": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "43": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "44": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 517,
          column: 1
        }
      },
      "45": {
        start: {
          line: 74,
          column: 18
        },
        end: {
          line: 74,
          column: 53
        }
      },
      "46": {
        start: {
          line: 75,
          column: 37
        },
        end: {
          line: 75,
          column: 61
        }
      },
      "47": {
        start: {
          line: 77,
          column: 38
        },
        end: {
          line: 77,
          column: 65
        }
      },
      "48": {
        start: {
          line: 78,
          column: 40
        },
        end: {
          line: 78,
          column: 63
        }
      },
      "49": {
        start: {
          line: 80,
          column: 80
        },
        end: {
          line: 80,
          column: 127
        }
      },
      "50": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "51": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 85,
          column: 17
        }
      },
      "52": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 44
        }
      },
      "53": {
        start: {
          line: 84,
          column: 34
        },
        end: {
          line: 84,
          column: 42
        }
      },
      "54": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 43
        }
      },
      "55": {
        start: {
          line: 86,
          column: 19
        },
        end: {
          line: 86,
          column: 42
        }
      },
      "56": {
        start: {
          line: 89,
          column: 46
        },
        end: {
          line: 101,
          column: 6
        }
      },
      "57": {
        start: {
          line: 103,
          column: 35
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "58": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "59": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 65
        }
      },
      "60": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "61": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "62": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 72
        }
      },
      "63": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "64": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "65": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 75
        }
      },
      "66": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "67": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "68": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 31
        }
      },
      "69": {
        start: {
          line: 118,
          column: 23
        },
        end: {
          line: 118,
          column: 48
        }
      },
      "70": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 74
        }
      },
      "71": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 74
        }
      },
      "72": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 22
        }
      },
      "73": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 62
        }
      },
      "74": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 86
        }
      },
      "75": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 32
        }
      },
      "76": {
        start: {
          line: 132,
          column: 29
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "77": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 38
        }
      },
      "78": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 133,
          column: 38
        }
      },
      "79": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 37
        }
      },
      "80": {
        start: {
          line: 135,
          column: 26
        },
        end: {
          line: 135,
          column: 45
        }
      },
      "81": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "82": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 48
        }
      },
      "83": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 59
        }
      },
      "84": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "85": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 49
        }
      },
      "86": {
        start: {
          line: 143,
          column: 40
        },
        end: {
          line: 143,
          column: 49
        }
      },
      "87": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 144,
          column: 86
        }
      },
      "88": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 33
        }
      },
      "89": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 60
        }
      },
      "90": {
        start: {
          line: 149,
          column: 34
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "91": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "92": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "93": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "94": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 164,
          column: 15
        }
      },
      "95": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "96": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "97": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "98": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "99": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "100": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 516,
          column: 7
        }
      },
      "101": {
        start: {
          line: 277,
          column: 49
        },
        end: {
          line: 277,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 33
          }
        },
        loc: {
          start: {
            line: 32,
            column: 47
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 36,
            column: 40
          }
        },
        loc: {
          start: {
            line: 36,
            column: 61
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 34
          }
        },
        loc: {
          start: {
            line: 40,
            column: 53
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 25
          }
        },
        loc: {
          start: {
            line: 73,
            column: 41
          },
          end: {
            line: 517,
            column: 1
          }
        },
        line: 73
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 27
          }
        },
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 82
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 83,
            column: 37
          },
          end: {
            line: 83,
            column: 38
          }
        },
        loc: {
          start: {
            line: 83,
            column: 41
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 83
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 26
          },
          end: {
            line: 84,
            column: 27
          }
        },
        loc: {
          start: {
            line: 84,
            column: 34
          },
          end: {
            line: 84,
            column: 42
          }
        },
        line: 84
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 86,
            column: 16
          }
        },
        loc: {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 86,
            column: 42
          }
        },
        line: 86
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 103,
            column: 35
          },
          end: {
            line: 103,
            column: 36
          }
        },
        loc: {
          start: {
            line: 103,
            column: 45
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 103
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 132,
            column: 29
          },
          end: {
            line: 132,
            column: 30
          }
        },
        loc: {
          start: {
            line: 132,
            column: 33
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 132
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 142,
            column: 27
          },
          end: {
            line: 142,
            column: 28
          }
        },
        loc: {
          start: {
            line: 142,
            column: 31
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 142
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 149,
            column: 34
          },
          end: {
            line: 149,
            column: 35
          }
        },
        loc: {
          start: {
            line: 149,
            column: 38
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 149
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 277,
            column: 45
          },
          end: {
            line: 277,
            column: 46
          }
        },
        loc: {
          start: {
            line: 277,
            column: 49
          },
          end: {
            line: 277,
            column: 58
          }
        },
        line: 277
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 37,
            column: 45
          }
        }, {
          start: {
            line: 37,
            column: 48
          },
          end: {
            line: 37,
            column: 65
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 27
          }
        }, {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 47
          }
        }, {
          start: {
            line: 44,
            column: 51
          },
          end: {
            line: 44,
            column: 76
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 31
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 53
          }
        }, {
          start: {
            line: 56,
            column: 57
          },
          end: {
            line: 56,
            column: 88
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "12": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 29
          }
        }, {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 58,
            column: 79
          }
        }],
        line: 58
      },
      "13": {
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 47
          },
          end: {
            line: 59,
            column: 88
          }
        }, {
          start: {
            line: 59,
            column: 91
          },
          end: {
            line: 59,
            column: 95
          }
        }],
        line: 59
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 64,
            column: 13
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 20
          }
        }, {
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 60,
            column: 33
          }
        }, {
          start: {
            line: 60,
            column: 37
          },
          end: {
            line: 60,
            column: 45
          }
        }],
        line: 60
      },
      "16": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "17": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "18": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 24
          }
        }, {
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 104,
            column: 36
          }
        }],
        line: 104
      },
      "19": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "20": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "21": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 41
          }
        }, {
          start: {
            line: 112,
            column: 45
          },
          end: {
            line: 112,
            column: 78
          }
        }],
        line: 112
      },
      "22": {
        loc: {
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 126,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 126,
            column: 52
          }
        }, {
          start: {
            line: 126,
            column: 56
          },
          end: {
            line: 126,
            column: 84
          }
        }],
        line: 126
      },
      "23": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 133,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 133,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "24": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "25": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "26": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "27": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "28": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 20
          }
        }, {
          start: {
            line: 158,
            column: 24
          },
          end: {
            line: 158,
            column: 56
          }
        }],
        line: 158
      },
      "29": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "30": {
        loc: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "31": {
        loc: {
          start: {
            line: 309,
            column: 54
          },
          end: {
            line: 309,
            column: 164
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 309,
            column: 71
          },
          end: {
            line: 309,
            column: 158
          }
        }, {
          start: {
            line: 309,
            column: 161
          },
          end: {
            line: 309,
            column: 164
          }
        }],
        line: 309
      },
      "32": {
        loc: {
          start: {
            line: 329,
            column: 54
          },
          end: {
            line: 329,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 329,
            column: 71
          },
          end: {
            line: 329,
            column: 125
          }
        }, {
          start: {
            line: 329,
            column: 128
          },
          end: {
            line: 329,
            column: 131
          }
        }],
        line: 329
      },
      "33": {
        loc: {
          start: {
            line: 398,
            column: 24
          },
          end: {
            line: 416,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 24
          },
          end: {
            line: 398,
            column: 33
          }
        }, {
          start: {
            line: 398,
            column: 51
          },
          end: {
            line: 416,
            column: 26
          }
        }],
        line: 398
      },
      "34": {
        loc: {
          start: {
            line: 422,
            column: 38
          },
          end: {
            line: 422,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 422,
            column: 38
          },
          end: {
            line: 422,
            column: 47
          }
        }, {
          start: {
            line: 422,
            column: 51
          },
          end: {
            line: 422,
            column: 63
          }
        }, {
          start: {
            line: 422,
            column: 67
          },
          end: {
            line: 422,
            column: 76
          }
        }, {
          start: {
            line: 422,
            column: 80
          },
          end: {
            line: 422,
            column: 109
          }
        }],
        line: 422
      },
      "35": {
        loc: {
          start: {
            line: 424,
            column: 44
          },
          end: {
            line: 424,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 424,
            column: 91
          },
          end: {
            line: 424,
            column: 133
          }
        }, {
          start: {
            line: 424,
            column: 136
          },
          end: {
            line: 424,
            column: 162
          }
        }],
        line: 424
      },
      "36": {
        loc: {
          start: {
            line: 424,
            column: 44
          },
          end: {
            line: 424,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 44
          },
          end: {
            line: 424,
            column: 52
          }
        }, {
          start: {
            line: 424,
            column: 56
          },
          end: {
            line: 424,
            column: 88
          }
        }],
        line: 424
      },
      "37": {
        loc: {
          start: {
            line: 433,
            column: 38
          },
          end: {
            line: 438,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 64
          },
          end: {
            line: 438,
            column: 30
          }
        }, {
          start: {
            line: 438,
            column: 33
          },
          end: {
            line: 438,
            column: 139
          }
        }],
        line: 433
      },
      "38": {
        loc: {
          start: {
            line: 438,
            column: 33
          },
          end: {
            line: 438,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 438,
            column: 80
          },
          end: {
            line: 438,
            column: 108
          }
        }, {
          start: {
            line: 438,
            column: 111
          },
          end: {
            line: 438,
            column: 139
          }
        }],
        line: 438
      },
      "39": {
        loc: {
          start: {
            line: 438,
            column: 33
          },
          end: {
            line: 438,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 438,
            column: 33
          },
          end: {
            line: 438,
            column: 41
          }
        }, {
          start: {
            line: 438,
            column: 45
          },
          end: {
            line: 438,
            column: 77
          }
        }],
        line: 438
      },
      "40": {
        loc: {
          start: {
            line: 462,
            column: 54
          },
          end: {
            line: 462,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 462,
            column: 71
          },
          end: {
            line: 462,
            column: 125
          }
        }, {
          start: {
            line: 462,
            column: 128
          },
          end: {
            line: 462,
            column: 131
          }
        }],
        line: 462
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/components/DailyReward/DailyFlowerCard.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { motion } from 'framer-motion';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Box,\n  LinearProgress,\n  Chip,\n  Avatar,\n  Divider,\n  Alert,\n  CircularProgress,\n  Tooltip\n} from '@mui/material';\nimport {\n  LocalFlorist,\n  AccessTime,\n  TrendingUp,\n  EmojiEvents,\n  AccountBalanceWallet,\n  Refresh,\n  CheckCircle,\n  Schedule\n} from '@mui/icons-material';\nimport { useAccount, useContractWrite, useContractRead } from 'wagmi';\nimport { parseEther, formatEther } from 'viem';\nimport { toast } from 'react-hot-toast';\nimport { useDailyReward } from '@/hooks/useDailyReward';\nimport { formatNumber, formatTimeRemaining } from '@/utils/format';\n\ninterface DailyFlowerCardProps {\n  className?: string;\n}\n\nexport const DailyFlowerCard: React.FC<DailyFlowerCardProps> = ({ className }) => {\n  const { t } = useTranslation();\n  const { address, isConnected } = useAccount();\n  \n  // \u72B6\u6001\u7BA1\u7406\n  const [isLoading, setIsLoading] = useState(false);\n  const [refreshKey, setRefreshKey] = useState(0);\n  \n  // \u81EA\u5B9A\u4E49 Hook\n  const {\n    userRewardInfo,\n    canClaim,\n    nextClaimTime,\n    isLoadingData,\n    refetch\n  } = useDailyReward(refreshKey);\n  \n  // \u81EA\u52A8\u5237\u65B0\u6570\u636E\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRefreshKey(prev => prev + 1);\n    }, 30000); // \u6BCF30\u79D2\u5237\u65B0\u4E00\u6B21\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  // \u5408\u7EA6\u5199\u5165\n  const { writeAsync: claimDailyFlowers } = useContractWrite({\n    address: process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS as `0x${string}`,\n    abi: [\n      {\n        name: 'claimDailyFlowers',\n        type: 'function',\n        inputs: [],\n        outputs: [],\n        stateMutability: 'nonpayable'\n      }\n    ],\n    functionName: 'claimDailyFlowers'\n  });\n  \n  // \u5904\u7406\u9886\u53D6\u6BCF\u65E5\u5956\u52B1\n  const handleClaimDailyReward = async () => {\n    if (!isConnected || !address) {\n      toast.error(t('wallet.connectFirst'));\n      return;\n    }\n    \n    if (!canClaim) {\n      toast.error(t('dailyReward.alreadyClaimed'));\n      return;\n    }\n    \n    if (!userRewardInfo?.dailyFlowers || userRewardInfo.dailyFlowers === 0) {\n      toast.error(t('dailyReward.noRewardAvailable'));\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      \n      const tx = await claimDailyFlowers();\n      \n      toast.success(t('dailyReward.claimSubmitted'));\n      \n      // \u7B49\u5F85\u4EA4\u6613\u786E\u8BA4\n      // await waitForTransaction({ hash: tx.hash });\n      \n      toast.success(t('dailyReward.claimConfirmed'));\n      refetch();\n      \n    } catch (error: any) {\n      console.error('Daily reward claim error:', error);\n      toast.error(error.message || t('dailyReward.claimFailed'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // \u8BA1\u7B97\u5012\u8BA1\u65F6\n  const getCountdownText = () => {\n    if (!nextClaimTime) return '';\n    \n    const now = Date.now() / 1000;\n    const remaining = nextClaimTime - now;\n    \n    if (remaining <= 0) {\n      return t('dailyReward.canClaimNow');\n    }\n    \n    return formatTimeRemaining(remaining);\n  };\n  \n  // \u8BA1\u7B97\u6301\u5E01\u5956\u52B1\u6BD4\u4F8B\n  const getRewardRatio = () => {\n    if (!userRewardInfo?.smBalance) return 0;\n    \n    const smBalance = parseFloat(formatEther(userRewardInfo.smBalance));\n    const maxRewardSm = 10000; // \u6700\u5927\u5956\u52B1\u5BF9\u5E94\u7684 SM \u6570\u91CF\n    \n    return Math.min((smBalance / maxRewardSm) * 100, 100);\n  };\n  \n  // \u6E32\u67D3\u72B6\u6001\u6307\u793A\u5668\n  const renderStatusIndicator = () => {\n    if (!isConnected) {\n      return (\n        <Chip \n          label={t('wallet.notConnected')} \n          color=\"default\" \n          size=\"small\"\n          icon={<AccountBalanceWallet />}\n        />\n      );\n    }\n    \n    if (canClaim && userRewardInfo?.dailyFlowers > 0) {\n      return (\n        <Chip \n          label={t('dailyReward.canClaim')} \n          color=\"success\" \n          size=\"small\"\n          icon={<CheckCircle />}\n        />\n      );\n    }\n    \n    if (!canClaim) {\n      return (\n        <Chip \n          label={t('dailyReward.alreadyClaimed')} \n          color=\"info\" \n          size=\"small\"\n          icon={<Schedule />}\n        />\n      );\n    }\n    \n    return (\n      <Chip \n        label={t('dailyReward.noReward')} \n        color=\"warning\" \n        size=\"small\"\n        icon={<LocalFlorist />}\n      />\n    );\n  };\n  \n  if (isLoadingData) {\n    return (\n      <Card className={className}>\n        <CardContent>\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n            <CircularProgress />\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <Card \n        className={className}\n        sx={{\n          background: 'linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)',\n          color: 'white',\n          borderRadius: 3,\n          overflow: 'hidden',\n          position: 'relative'\n        }}\n      >\n        {/* \u80CC\u666F\u88C5\u9970 */}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: -30,\n            right: -30,\n            width: 120,\n            height: 120,\n            borderRadius: '50%',\n            background: 'rgba(255, 255, 255, 0.1)',\n            zIndex: 0\n          }}\n        />\n        \n        <CardContent sx={{ position: 'relative', zIndex: 1 }}>\n          {/* \u5934\u90E8 */}\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              <Avatar sx={{ bgcolor: 'rgba(255, 255, 255, 0.2)' }}>\n                <LocalFlorist />\n              </Avatar>\n              <Box>\n                <Typography variant=\"h6\" fontWeight=\"bold\">\n                  {t('dailyReward.title')}\n                </Typography>\n                <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                  {t('dailyReward.subtitle')}\n                </Typography>\n              </Box>\n            </Box>\n            \n            <Button\n              size=\"small\"\n              onClick={() => refetch()}\n              sx={{ color: 'white', minWidth: 'auto' }}\n            >\n              <Refresh />\n            </Button>\n          </Box>\n          \n          {/* \u72B6\u6001\u6307\u793A\u5668 */}\n          <Box sx={{ mb: 3 }}>\n            {renderStatusIndicator()}\n          </Box>\n          \n          {/* \u7528\u6237\u6301\u5E01\u4FE1\u606F */}\n          <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 2, mb: 3 }}>\n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"h4\" fontWeight=\"bold\" color=\"primary.light\">\n                {userRewardInfo ? formatNumber(parseFloat(formatEther(userRewardInfo.smBalance))) : '0'}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                {t('dailyReward.smBalance')}\n              </Typography>\n            </Box>\n            \n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"h4\" fontWeight=\"bold\" color=\"secondary.light\">\n                {userRewardInfo ? formatNumber(userRewardInfo.dailyFlowers) : '0'}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                {t('dailyReward.dailyFlowers')}\n              </Typography>\n            </Box>\n          </Box>\n          \n          {/* \u5956\u52B1\u8FDB\u5EA6\u6761 */}\n          <Box sx={{ mb: 3 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                {t('dailyReward.rewardProgress')}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                {getRewardRatio().toFixed(1)}%\n              </Typography>\n            </Box>\n            <LinearProgress \n              variant=\"determinate\" \n              value={getRewardRatio()} \n              sx={{ \n                height: 8, \n                borderRadius: 4,\n                backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                '& .MuiLinearProgress-bar': {\n                  background: 'linear-gradient(45deg, #FFD700, #FFA500)'\n                }\n              }} \n            />\n            <Typography variant=\"caption\" sx={{ opacity: 0.6, mt: 1, display: 'block' }}>\n              {t('dailyReward.maxReward', { amount: '200' })}\n            </Typography>\n          </Box>\n          \n          {/* \u5012\u8BA1\u65F6\u4FE1\u606F */}\n          {!canClaim && (\n            <Alert \n              severity=\"info\" \n              sx={{ \n                mb: 3, \n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                color: 'white',\n                '& .MuiAlert-icon': { color: 'white' }\n              }}\n            >\n              <Typography variant=\"body2\">\n                {t('dailyReward.nextClaimIn')}: {getCountdownText()}\n              </Typography>\n            </Alert>\n          )}\n          \n          {/* \u9886\u53D6\u6309\u94AE */}\n          <Button\n            fullWidth\n            variant=\"contained\"\n            size=\"large\"\n            onClick={handleClaimDailyReward}\n            disabled={isLoading || !isConnected || !canClaim || !userRewardInfo?.dailyFlowers}\n            sx={{\n              background: canClaim && userRewardInfo?.dailyFlowers > 0 \n                ? 'linear-gradient(45deg, #FFD700, #FFA500)' \n                : 'rgba(255, 255, 255, 0.3)',\n              fontWeight: 'bold',\n              py: 1.5,\n              mb: 2,\n              '&:disabled': {\n                background: 'rgba(255, 255, 255, 0.3)',\n                color: 'rgba(255, 255, 255, 0.7)'\n              }\n            }}\n          >\n            {isLoading ? (\n              <CircularProgress size={24} sx={{ color: 'white' }} />\n            ) : canClaim && userRewardInfo?.dailyFlowers > 0 ? (\n              t('dailyReward.claimButton')\n            ) : (\n              t('dailyReward.cannotClaim')\n            )}\n          </Button>\n          \n          {/* \u7EDF\u8BA1\u4FE1\u606F */}\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"caption\" sx={{ opacity: 0.6 }}>\n                {t('dailyReward.totalClaimed')}\n              </Typography>\n              <Typography variant=\"body2\" fontWeight=\"bold\">\n                {userRewardInfo ? formatNumber(userRewardInfo.totalClaimed) : '0'}\n              </Typography>\n            </Box>\n            \n            <Divider orientation=\"vertical\" flexItem sx={{ borderColor: 'rgba(255, 255, 255, 0.3)' }} />\n            \n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"caption\" sx={{ opacity: 0.6 }}>\n                {t('dailyReward.formula')}\n              </Typography>\n              <Typography variant=\"body2\" fontWeight=\"bold\">\n                500 SM = 10 \uD83C\uDF38\n              </Typography>\n            </Box>\n          </Box>\n          \n          {/* \u63D0\u793A\u4FE1\u606F */}\n          <Box sx={{ mt: 2, p: 2, backgroundColor: 'rgba(255, 255, 255, 0.1)', borderRadius: 2 }}>\n            <Typography variant=\"caption\" sx={{ opacity: 0.8 }}>\n              \uD83D\uDCA1 {t('dailyReward.tip')}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n};\n"],
      names: ["DailyFlowerCard", "className", "t", "useTranslation", "address", "isConnected", "useAccount", "isLoading", "setIsLoading", "useState", "refreshKey", "setRefreshKey", "userRewardInfo", "canClaim", "nextClaimTime", "isLoadingData", "refetch", "useDailyReward", "useEffect", "interval", "setInterval", "prev", "clearInterval", "writeAsync", "claimDailyFlowers", "useContractWrite", "process", "env", "NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS", "abi", "name", "type", "inputs", "outputs", "stateMutability", "functionName", "handleClaimDailyReward", "toast", "error", "dailyFlowers", "tx", "success", "console", "message", "getCountdownText", "now", "Date", "remaining", "formatTimeRemaining", "getRewardRatio", "smBalance", "parseFloat", "formatEther", "maxRewardSm", "Math", "min", "renderStatusIndicator", "Chip", "label", "color", "size", "icon", "AccountBalanceWallet", "CheckCircle", "Schedule", "LocalFlorist", "Card", "CardContent", "Box", "sx", "display", "justifyContent", "p", "CircularProgress", "motion", "div", "initial", "opacity", "y", "animate", "transition", "duration", "background", "borderRadius", "overflow", "position", "top", "right", "width", "height", "zIndex", "alignItems", "mb", "gap", "Avatar", "bgcolor", "Typography", "variant", "fontWeight", "Button", "onClick", "minWidth", "Refresh", "gridTemplateColumns", "textAlign", "formatNumber", "toFixed", "LinearProgress", "value", "backgroundColor", "mt", "amount", "Alert", "severity", "fullWidth", "disabled", "py", "totalClaimed", "Divider", "orientation", "flexItem", "borderColor"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5f1d33bae34e8f791a027d4e1ba17e2a813cb7f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_i8fk2g5om = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_i8fk2g5om();
cov_i8fk2g5om().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_i8fk2g5om().s[1]++;
Object.defineProperty(exports, "DailyFlowerCard", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[0]++;
    cov_i8fk2g5om().s[2]++;
    return DailyFlowerCard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_i8fk2g5om().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[4]++, _interop_require_wildcard(require("react")));
const _reacti18next =
/* istanbul ignore next */
(cov_i8fk2g5om().s[5]++, require("react-i18next"));
const _framermotion =
/* istanbul ignore next */
(cov_i8fk2g5om().s[6]++, require("framer-motion"));
const _material =
/* istanbul ignore next */
(cov_i8fk2g5om().s[7]++, require("@mui/material"));
const _LocalFlorist =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[8]++, _interop_require_default(require("@mui/icons-material/LocalFlorist")));
const _AccountBalanceWallet =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[9]++, _interop_require_default(require("@mui/icons-material/AccountBalanceWallet")));
const _Refresh =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[10]++, _interop_require_default(require("@mui/icons-material/Refresh")));
const _CheckCircle =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[11]++, _interop_require_default(require("@mui/icons-material/CheckCircle")));
const _Schedule =
/* istanbul ignore next */
(/*#__PURE__*/cov_i8fk2g5om().s[12]++, _interop_require_default(require("@mui/icons-material/Schedule")));
const _wagmi =
/* istanbul ignore next */
(cov_i8fk2g5om().s[13]++, require("wagmi"));
const _viem =
/* istanbul ignore next */
(cov_i8fk2g5om().s[14]++, require("viem"));
const _reacthottoast =
/* istanbul ignore next */
(cov_i8fk2g5om().s[15]++, require("react-hot-toast"));
const _useDailyReward =
/* istanbul ignore next */
(cov_i8fk2g5om().s[16]++, require("../../hooks/useDailyReward"));
const _format =
/* istanbul ignore next */
(cov_i8fk2g5om().s[17]++, require("../../utils/format"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_i8fk2g5om().f[1]++;
  cov_i8fk2g5om().s[18]++;
  return /* istanbul ignore next */(cov_i8fk2g5om().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_i8fk2g5om().f[2]++;
  cov_i8fk2g5om().s[19]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[2][0]++;
    cov_i8fk2g5om().s[20]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[21]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[22]++, new WeakMap());
  /* istanbul ignore next */
  cov_i8fk2g5om().s[23]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[3]++;
    cov_i8fk2g5om().s[24]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_i8fk2g5om().f[4]++;
  cov_i8fk2g5om().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[4][0]++;
    cov_i8fk2g5om().s[26]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[4][1]++;
  }
  cov_i8fk2g5om().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[6][0]++;
    cov_i8fk2g5om().s[28]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[29]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_i8fk2g5om().s[30]++;
  if (
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[8][0]++;
    cov_i8fk2g5om().s[31]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[32]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[33]++,
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_i8fk2g5om().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_i8fk2g5om().s[34]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_i8fk2g5om().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_i8fk2g5om().s[36]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[13][1]++, null));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[37]++;
      if (
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_i8fk2g5om().b[14][0]++;
        cov_i8fk2g5om().s[38]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_i8fk2g5om().b[14][1]++;
        cov_i8fk2g5om().s[39]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_i8fk2g5om().s[40]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_i8fk2g5om().s[41]++;
  if (cache) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[16][0]++;
    cov_i8fk2g5om().s[42]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[16][1]++;
  }
  cov_i8fk2g5om().s[43]++;
  return newObj;
}
/* istanbul ignore next */
cov_i8fk2g5om().s[44]++;
const DailyFlowerCard = ({
  className
}) => {
  /* istanbul ignore next */
  cov_i8fk2g5om().f[5]++;
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[45]++, (0, _reacti18next.useTranslation)());
  const {
    address,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[46]++, (0, _wagmi.useAccount)());
  // 状态管理
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[47]++, (0, _react.useState)(false));
  const [refreshKey, setRefreshKey] =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[48]++, (0, _react.useState)(0));
  // 自定义 Hook
  const {
    userRewardInfo,
    canClaim,
    nextClaimTime,
    isLoadingData,
    refetch
  } =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[49]++, (0, _useDailyReward.useDailyReward)(refreshKey));
  // 自动刷新数据
  /* istanbul ignore next */
  cov_i8fk2g5om().s[50]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[6]++;
    const interval =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[51]++, setInterval(() => {
      /* istanbul ignore next */
      cov_i8fk2g5om().f[7]++;
      cov_i8fk2g5om().s[52]++;
      setRefreshKey(prev => {
        /* istanbul ignore next */
        cov_i8fk2g5om().f[8]++;
        cov_i8fk2g5om().s[53]++;
        return prev + 1;
      });
    }, 30000)); // 每30秒刷新一次
    /* istanbul ignore next */
    cov_i8fk2g5om().s[54]++;
    return () => {
      /* istanbul ignore next */
      cov_i8fk2g5om().f[9]++;
      cov_i8fk2g5om().s[55]++;
      return clearInterval(interval);
    };
  }, []);
  // 合约写入
  const {
    writeAsync: claimDailyFlowers
  } =
  /* istanbul ignore next */
  (cov_i8fk2g5om().s[56]++, (0, _wagmi.useContractWrite)({
    address: process.env.NEXT_PUBLIC_SM_TOKEN_EXCHANGE_ADDRESS,
    abi: [{
      name: 'claimDailyFlowers',
      type: 'function',
      inputs: [],
      outputs: [],
      stateMutability: 'nonpayable'
    }],
    functionName: 'claimDailyFlowers'
  }));
  // 处理领取每日奖励
  /* istanbul ignore next */
  cov_i8fk2g5om().s[57]++;
  const handleClaimDailyReward = async () => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[10]++;
    cov_i8fk2g5om().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[18][0]++, !isConnected) ||
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[18][1]++, !address)) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[17][0]++;
      cov_i8fk2g5om().s[59]++;
      _reacthottoast.toast.error(t('wallet.connectFirst'));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[60]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[17][1]++;
    }
    cov_i8fk2g5om().s[61]++;
    if (!canClaim) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[19][0]++;
      cov_i8fk2g5om().s[62]++;
      _reacthottoast.toast.error(t('dailyReward.alreadyClaimed'));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[63]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[19][1]++;
    }
    cov_i8fk2g5om().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[21][0]++, !userRewardInfo?.dailyFlowers) ||
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[21][1]++, userRewardInfo.dailyFlowers === 0)) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[20][0]++;
      cov_i8fk2g5om().s[65]++;
      _reacthottoast.toast.error(t('dailyReward.noRewardAvailable'));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[66]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[20][1]++;
    }
    cov_i8fk2g5om().s[67]++;
    try {
      /* istanbul ignore next */
      cov_i8fk2g5om().s[68]++;
      setIsLoading(true);
      const tx =
      /* istanbul ignore next */
      (cov_i8fk2g5om().s[69]++, await claimDailyFlowers());
      /* istanbul ignore next */
      cov_i8fk2g5om().s[70]++;
      _reacthottoast.toast.success(t('dailyReward.claimSubmitted'));
      // 等待交易确认
      // await waitForTransaction({ hash: tx.hash });
      /* istanbul ignore next */
      cov_i8fk2g5om().s[71]++;
      _reacthottoast.toast.success(t('dailyReward.claimConfirmed'));
      /* istanbul ignore next */
      cov_i8fk2g5om().s[72]++;
      refetch();
    } catch (error) {
      /* istanbul ignore next */
      cov_i8fk2g5om().s[73]++;
      console.error('Daily reward claim error:', error);
      /* istanbul ignore next */
      cov_i8fk2g5om().s[74]++;
      _reacthottoast.toast.error(
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[22][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_i8fk2g5om().b[22][1]++, t('dailyReward.claimFailed')));
    } finally {
      /* istanbul ignore next */
      cov_i8fk2g5om().s[75]++;
      setIsLoading(false);
    }
  };
  // 计算倒计时
  /* istanbul ignore next */
  cov_i8fk2g5om().s[76]++;
  const getCountdownText = () => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[11]++;
    cov_i8fk2g5om().s[77]++;
    if (!nextClaimTime) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[23][0]++;
      cov_i8fk2g5om().s[78]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[23][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[79]++, Date.now() / 1000);
    const remaining =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[80]++, nextClaimTime - now);
    /* istanbul ignore next */
    cov_i8fk2g5om().s[81]++;
    if (remaining <= 0) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[24][0]++;
      cov_i8fk2g5om().s[82]++;
      return t('dailyReward.canClaimNow');
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[24][1]++;
    }
    cov_i8fk2g5om().s[83]++;
    return (0, _format.formatTimeRemaining)(remaining);
  };
  // 计算持币奖励比例
  /* istanbul ignore next */
  cov_i8fk2g5om().s[84]++;
  const getRewardRatio = () => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[12]++;
    cov_i8fk2g5om().s[85]++;
    if (!userRewardInfo?.smBalance) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[25][0]++;
      cov_i8fk2g5om().s[86]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[25][1]++;
    }
    const smBalance =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[87]++, parseFloat((0, _viem.formatEther)(userRewardInfo.smBalance)));
    const maxRewardSm =
    /* istanbul ignore next */
    (cov_i8fk2g5om().s[88]++, 10000); // 最大奖励对应的 SM 数量
    /* istanbul ignore next */
    cov_i8fk2g5om().s[89]++;
    return Math.min(smBalance / maxRewardSm * 100, 100);
  };
  // 渲染状态指示器
  /* istanbul ignore next */
  cov_i8fk2g5om().s[90]++;
  const renderStatusIndicator = () => {
    /* istanbul ignore next */
    cov_i8fk2g5om().f[13]++;
    cov_i8fk2g5om().s[91]++;
    if (!isConnected) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[26][0]++;
      cov_i8fk2g5om().s[92]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Chip, {
        label: t('wallet.notConnected'),
        color: "default",
        size: "small",
        icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_AccountBalanceWallet.default, {})
      });
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[26][1]++;
    }
    cov_i8fk2g5om().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[28][0]++, canClaim) &&
    /* istanbul ignore next */
    (cov_i8fk2g5om().b[28][1]++, userRewardInfo?.dailyFlowers > 0)) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[27][0]++;
      cov_i8fk2g5om().s[94]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Chip, {
        label: t('dailyReward.canClaim'),
        color: "success",
        size: "small",
        icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_CheckCircle.default, {})
      });
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[27][1]++;
    }
    cov_i8fk2g5om().s[95]++;
    if (!canClaim) {
      /* istanbul ignore next */
      cov_i8fk2g5om().b[29][0]++;
      cov_i8fk2g5om().s[96]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Chip, {
        label: t('dailyReward.alreadyClaimed'),
        color: "info",
        size: "small",
        icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_Schedule.default, {})
      });
    } else
    /* istanbul ignore next */
    {
      cov_i8fk2g5om().b[29][1]++;
    }
    cov_i8fk2g5om().s[97]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Chip, {
      label: t('dailyReward.noReward'),
      color: "warning",
      size: "small",
      icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_LocalFlorist.default, {})
    });
  };
  /* istanbul ignore next */
  cov_i8fk2g5om().s[98]++;
  if (isLoadingData) {
    /* istanbul ignore next */
    cov_i8fk2g5om().b[30][0]++;
    cov_i8fk2g5om().s[99]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Card, {
      className: className,
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_material.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Box, {
          sx: {
            display: 'flex',
            justifyContent: 'center',
            p: 4
          },
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_material.CircularProgress, {})
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_i8fk2g5om().b[30][1]++;
  }
  cov_i8fk2g5om().s[100]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_framermotion.motion.div, {
    initial: {
      opacity: 0,
      y: 20
    },
    animate: {
      opacity: 1,
      y: 0
    },
    transition: {
      duration: 0.5
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Card, {
      className: className,
      sx: {
        background: 'linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)',
        color: 'white',
        borderRadius: 3,
        overflow: 'hidden',
        position: 'relative'
      },
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_material.Box, {
        sx: {
          position: 'absolute',
          top: -30,
          right: -30,
          width: 120,
          height: 120,
          borderRadius: '50%',
          background: 'rgba(255, 255, 255, 0.1)',
          zIndex: 0
        }
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.CardContent, {
        sx: {
          position: 'relative',
          zIndex: 1
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
          sx: {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'space-between',
            mb: 3
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
              display: 'flex',
              alignItems: 'center',
              gap: 2
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_material.Avatar, {
              sx: {
                bgcolor: 'rgba(255, 255, 255, 0.2)'
              },
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LocalFlorist.default, {})
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
                variant: "h6",
                fontWeight: "bold",
                children: t('dailyReward.title')
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
                variant: "body2",
                sx: {
                  opacity: 0.8
                },
                children: t('dailyReward.subtitle')
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Button, {
            size: "small",
            onClick: () => {
              /* istanbul ignore next */
              cov_i8fk2g5om().f[14]++;
              cov_i8fk2g5om().s[101]++;
              return refetch();
            },
            sx: {
              color: 'white',
              minWidth: 'auto'
            },
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Refresh.default, {})
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Box, {
          sx: {
            mb: 3
          },
          children: renderStatusIndicator()
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
          sx: {
            display: 'grid',
            gridTemplateColumns: '1fr 1fr',
            gap: 2,
            mb: 3
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
              textAlign: 'center'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "h4",
              fontWeight: "bold",
              color: "primary.light",
              children: userRewardInfo ?
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[31][0]++, (0, _format.formatNumber)(parseFloat((0, _viem.formatEther)(userRewardInfo.smBalance)))) :
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[31][1]++, '0')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "body2",
              sx: {
                opacity: 0.8
              },
              children: t('dailyReward.smBalance')
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
              textAlign: 'center'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "h4",
              fontWeight: "bold",
              color: "secondary.light",
              children: userRewardInfo ?
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[32][0]++, (0, _format.formatNumber)(userRewardInfo.dailyFlowers)) :
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[32][1]++, '0')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "body2",
              sx: {
                opacity: 0.8
              },
              children: t('dailyReward.dailyFlowers')
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
          sx: {
            mb: 3
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
              display: 'flex',
              justifyContent: 'space-between',
              mb: 1
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "body2",
              sx: {
                opacity: 0.8
              },
              children: t('dailyReward.rewardProgress')
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Typography, {
              variant: "body2",
              sx: {
                opacity: 0.8
              },
              children: [getRewardRatio().toFixed(1), "%"]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.LinearProgress, {
            variant: "determinate",
            value: getRewardRatio(),
            sx: {
              height: 8,
              borderRadius: 4,
              backgroundColor: 'rgba(255, 255, 255, 0.2)',
              '& .MuiLinearProgress-bar': {
                background: 'linear-gradient(45deg, #FFD700, #FFA500)'
              }
            }
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
            variant: "caption",
            sx: {
              opacity: 0.6,
              mt: 1,
              display: 'block'
            },
            children: t('dailyReward.maxReward', {
              amount: '200'
            })
          })]
        }),
        /* istanbul ignore next */
        (cov_i8fk2g5om().b[33][0]++, !canClaim) &&
        /* istanbul ignore next */
        (cov_i8fk2g5om().b[33][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Alert, {
          severity: "info",
          sx: {
            mb: 3,
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            color: 'white',
            '& .MuiAlert-icon': {
              color: 'white'
            }
          },
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Typography, {
            variant: "body2",
            children: [t('dailyReward.nextClaimIn'), ": ", getCountdownText()]
          })
        })), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Button, {
          fullWidth: true,
          variant: "contained",
          size: "large",
          onClick: handleClaimDailyReward,
          disabled:
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[34][0]++, isLoading) ||
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[34][1]++, !isConnected) ||
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[34][2]++, !canClaim) ||
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[34][3]++, !userRewardInfo?.dailyFlowers),
          sx: {
            background:
            /* istanbul ignore next */
            (cov_i8fk2g5om().b[36][0]++, canClaim) &&
            /* istanbul ignore next */
            (cov_i8fk2g5om().b[36][1]++, userRewardInfo?.dailyFlowers > 0) ?
            /* istanbul ignore next */
            (cov_i8fk2g5om().b[35][0]++, 'linear-gradient(45deg, #FFD700, #FFA500)') :
            /* istanbul ignore next */
            (cov_i8fk2g5om().b[35][1]++, 'rgba(255, 255, 255, 0.3)'),
            fontWeight: 'bold',
            py: 1.5,
            mb: 2,
            '&:disabled': {
              background: 'rgba(255, 255, 255, 0.3)',
              color: 'rgba(255, 255, 255, 0.7)'
            }
          },
          children: isLoading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_i8fk2g5om().b[37][0]++, (0, _jsxruntime.jsx)(_material.CircularProgress, {
            size: 24,
            sx: {
              color: 'white'
            }
          })) :
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[37][1]++,
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[39][0]++, canClaim) &&
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[39][1]++, userRewardInfo?.dailyFlowers > 0) ?
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[38][0]++, t('dailyReward.claimButton')) :
          /* istanbul ignore next */
          (cov_i8fk2g5om().b[38][1]++, t('dailyReward.cannotClaim')))
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
          sx: {
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center'
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
              textAlign: 'center'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "caption",
              sx: {
                opacity: 0.6
              },
              children: t('dailyReward.totalClaimed')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "body2",
              fontWeight: "bold",
              children: userRewardInfo ?
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[40][0]++, (0, _format.formatNumber)(userRewardInfo.totalClaimed)) :
              /* istanbul ignore next */
              (cov_i8fk2g5om().b[40][1]++, '0')
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Divider, {
            orientation: "vertical",
            flexItem: true,
            sx: {
              borderColor: 'rgba(255, 255, 255, 0.3)'
            }
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
              textAlign: 'center'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "caption",
              sx: {
                opacity: 0.6
              },
              children: t('dailyReward.formula')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Typography, {
              variant: "body2",
              fontWeight: "bold",
              children: "500 SM = 10 \uD83C\uDF38"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_material.Box, {
          sx: {
            mt: 2,
            p: 2,
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            borderRadius: 2
          },
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_material.Typography, {
            variant: "caption",
            sx: {
              opacity: 0.8
            },
            children: ["\uD83D\uDCA1 ", t('dailyReward.tip')]
          })
        })]
      })]
    })
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,