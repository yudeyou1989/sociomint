{"version":3,"names":["_default","EXCHANGE_CONTRACT_ADDRESS","cov_1kbdi3pvxw","s","_chart","Chart","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","translations","en","pageTitle","connectWallet","walletConnected","buyTokens","enterAmount","estimatedTokens","transactionHistory","countdown","priceChart","loading","confirm","cancel","walletRequired","walletRequiredMsg","confirmPurchase","confirmPurchaseMsg","transactionSubmitted","transactionPending","transactionSuccess","transactionFailed","viewOnExplorer","date","amount","tokensReceived","txHash","hours","minutes","seconds","days","round","price","noHistory","insufficientBalance","invalidAmount","copy","copied","remaining","nextPrice","exchangeStats","walletInfo","soldTokens","remainingTokens","raisedBnb","currentPrice","nextRoundPrice","currentRound","status","active","inactive","walletAddress","bnbBalance","smBalance","refreshData","zh","Exchange","f","theme","_material","useTheme","isMobile","useMediaQuery","breakpoints","down","wallet","connect","updateBalances","_WalletContext","useWallet","setAmount","_react","useState","isLoading","setIsLoading","isPurchasing","setIsPurchasing","setExchangeStats","setEstimatedTokens","setTxHash","language","setLanguage","t","setT","openWalletDialog","setOpenWalletDialog","openConfirmDialog","setOpenConfirmDialog","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","setTransactionHistory","setCountdown","tabValue","setTabValue","priceHistory","setPriceHistory","setCurrentRound","nextRoundTimestamp","setNextRoundTimestamp","setCopied","txStatus","setTxStatus","countdownInterval","useRef","toggleLanguage","newLang","b","showSnackbar","message","severity","handleSnackbarClose","copyTxHash","navigator","clipboard","writeText","setTimeout","viewTxOnExplorer","window","open","handleTabChange","_event","newValue","useEffect","fetchExchangeStats","interval","setInterval","isConnected","clearInterval","calculateEstimatedTokens","loadPriceHistory","updateCountdown","current","ethereum","loadTransactionHistory","stats","_contractService","default","getExchangeStats","error","console","_reacthottoast","address","provider","_ethers","ethers","BrowserProvider","exchangeAbi","getExchangeABI","contract","Contract","filter","filters","TokensPurchased","events","queryFilter","history","Promise","all","map","event","block","getBlock","transactionHash","Date","timestamp","bnbAmount","args","tokenAmount","sort","a","getTime","RoundAdvanced","Number","newRound","parseFloat","formatEther","newPrice","some","item","currentBlock","push","latestTimestamp","Math","max","roundDuration","useCallback","now","floor","diff","tokens","toFixed","handleBuyClick","handleConfirmDialogClose","confirmed","handleWalletDialogClose","doConnect","getChartData","labels","data","datasets","label","borderColor","palette","primary","main","backgroundColor","tension","balance","bnb","bnbWei","utils","parseEther","balanceWei","gt","tx","exchangeTokens","hash","receipt","wait","handleConnectWallet","_jsxruntime","jsxs","Box","sx","p","maxWidth","mx","display","justifyContent","alignItems","marginBottom","jsx","Typography","variant","component","Button","startIcon","_Translate","onClick","borderRadius","textAlign","my","color","size","mt","gridTemplateColumns","xs","md","gap","Card","height","CardContent","gutterBottom","TextField","fullWidth","type","margin","value","onChange","e","target","disabled","isActive","CircularProgress","Alert","marginTop","padding","border","flexWrap","overflow","textOverflow","whiteSpace","minWidth","totalTokensSold","totalTokensRemaining","totalBnbRaised","Divider","wordBreak","sm","Dialog","onClose","DialogTitle","DialogContent","DialogActions","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","width"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/pages/Exchange.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { ethers } from 'ethers';\nimport {\n  Box, Button, Typography, TextField, Card, CardContent,\n  CircularProgress, Divider, Alert, Dialog, DialogTitle,\n  DialogContent, DialogActions, Snackbar, Tabs, Tab,\n  useTheme, useMediaQuery, IconButton\n} from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS, CategoryScale, LinearScale, PointElement,\n  LineElement, Title, Tooltip, Legend\n} from 'chart.js';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport TranslateIcon from '@mui/icons-material/Translate';\nimport { useWallet } from '@/contexts/WalletContext';\nimport contractService, { ExchangeStats } from '@/services/contractService';\nimport toast from 'react-hot-toast';\n// BSC测试网合约地址\nconst EXCHANGE_CONTRACT_ADDRESS = '0x1B03DD8dCeD4c7D38ABA907671e5e1064D10F8A8';\n\n// 注册Chart.js组件\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// 交易历史记录项类型\ninterface TransactionHistoryItem {\n  txHash: string;\n  date: Date;\n  bnbAmount: ethers.BigNumber;\n  tokenAmount: ethers.BigNumber;\n  round: number;\n}\n\n// 价格历史数据类型\ninterface PriceData {\n  round: number;\n  price: number;\n  timestamp: number;\n}\n\n// 多语言文本\nconst translations = {\n  en: {\n    pageTitle: 'SM Token Exchange',\n    connectWallet: 'Connect Wallet',\n    walletConnected: 'Connected: ',\n    buyTokens: 'Buy Tokens',\n    enterAmount: 'Enter BNB amount',\n    estimatedTokens: 'Estimated tokens to receive: ',\n    transactionHistory: 'Transaction History',\n    countdown: 'Next round starts in: ',\n    priceChart: 'Price Chart',\n    loading: 'Loading...',\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    walletRequired: 'Wallet Connection Required',\n    walletRequiredMsg: 'Please connect your wallet to proceed with the purchase.',\n    confirmPurchase: 'Confirm Purchase',\n    confirmPurchaseMsg: 'Are you sure you want to purchase tokens with ',\n    transactionSubmitted: 'Transaction submitted',\n    transactionPending: 'Transaction pending',\n    transactionSuccess: 'Transaction successful',\n    transactionFailed: 'Transaction failed',\n    viewOnExplorer: 'View on Explorer',\n    date: 'Date',\n    amount: 'Amount (BNB)',\n    tokensReceived: 'Tokens Received',\n    txHash: 'Transaction',\n    hours: 'hours',\n    minutes: 'minutes',\n    seconds: 'seconds',\n    days: 'days',\n    round: 'Round',\n    price: 'Price',\n    noHistory: 'No transaction history found',\n    insufficientBalance: 'Insufficient balance',\n    invalidAmount: 'Invalid amount',\n    copy: 'Copy',\n    copied: 'Copied!',\n    remaining: 'Remaining',\n    nextPrice: 'Next Price',\n    exchangeStats: 'Exchange Statistics',\n    walletInfo: 'Wallet Information',\n    soldTokens: 'Sold Tokens',\n    remainingTokens: 'Remaining Tokens',\n    raisedBnb: 'Raised BNB',\n    currentPrice: 'Current Price',\n    nextRoundPrice: 'Next Round Price',\n    currentRound: 'Current Round',\n    status: 'Status',\n    active: 'Active',\n    inactive: 'Inactive',\n    walletAddress: 'Wallet Address',\n    bnbBalance: 'BNB Balance',\n    smBalance: 'SM Token Balance',\n    refreshData: 'Refresh Data'\n  },\n  zh: {\n    pageTitle: 'SM代币交易所',\n    connectWallet: '连接钱包',\n    walletConnected: '已连接: ',\n    buyTokens: '购买代币',\n    enterAmount: '输入BNB金额',\n    estimatedTokens: '预计获得代币: ',\n    transactionHistory: '交易历史',\n    countdown: '下一轮开始倒计时: ',\n    priceChart: '价格图表',\n    loading: '加载中...',\n    confirm: '确认',\n    cancel: '取消',\n    walletRequired: '需要连接钱包',\n    walletRequiredMsg: '请连接您的钱包以继续购买。',\n    confirmPurchase: '确认购买',\n    confirmPurchaseMsg: '您确定要使用 ',\n    transactionSubmitted: '交易已提交',\n    transactionPending: '交易处理中',\n    transactionSuccess: '交易成功',\n    transactionFailed: '交易失败',\n    viewOnExplorer: '在区块浏览器中查看',\n    date: '日期',\n    amount: '金额 (BNB)',\n    tokensReceived: '获得代币',\n    txHash: '交易哈希',\n    hours: '小时',\n    minutes: '分钟',\n    seconds: '秒',\n    days: '天',\n    round: '轮次',\n    price: '价格',\n    noHistory: '未找到交易历史',\n    insufficientBalance: '余额不足',\n    invalidAmount: '无效金额',\n    copy: '复制',\n    copied: '已复制!',\n    remaining: '剩余',\n    nextPrice: '下一轮价格',\n    exchangeStats: '交易所统计',\n    walletInfo: '钱包信息',\n    soldTokens: '已售代币',\n    remainingTokens: '剩余代币',\n    raisedBnb: '已筹集BNB',\n    currentPrice: '当前价格',\n    nextRoundPrice: '下一轮价格',\n    currentRound: '当前轮次',\n    status: '交易状态',\n    active: '激活',\n    inactive: '未激活',\n    walletAddress: '钱包地址',\n    bnbBalance: 'BNB余额',\n    smBalance: 'SM代币余额',\n    refreshData: '刷新数据'\n  }\n};\n\nconst Exchange = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const { wallet, connect, updateBalances } = useWallet();\n\n  // 基础状态\n  const [amount, setAmount] = useState<string>('0.1');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isPurchasing, setIsPurchasing] = useState<boolean>(false);\n  const [exchangeStats, setExchangeStats] = useState<ExchangeStats | null>(null);\n  const [estimatedTokens, setEstimatedTokens] = useState<string>('0');\n  const [txHash, setTxHash] = useState<string | null>(null);\n\n  // 新增状态\n  const [language, setLanguage] = useState<'en' | 'zh'>('zh'); // 默认中文\n  const [t, setT] = useState(translations.zh); // 翻译函数\n  const [openWalletDialog, setOpenWalletDialog] = useState<boolean>(false);\n  const [openConfirmDialog, setOpenConfirmDialog] = useState<boolean>(false);\n  const [snackbarOpen, setSnackbarOpen] = useState<boolean>(false);\n  const [snackbarMessage, setSnackbarMessage] = useState<string>('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState<'success' | 'error' | 'info'>('info');\n  const [transactionHistory, setTransactionHistory] = useState<TransactionHistoryItem[]>([]);\n  const [countdown, setCountdown] = useState<{ days: number, hours: number, minutes: number, seconds: number } | null>(null);\n  const [tabValue, setTabValue] = useState<number>(0);\n  const [priceHistory, setPriceHistory] = useState<PriceData[]>([]);\n  const [currentRound, setCurrentRound] = useState<number>(1);\n  const [nextRoundTimestamp, setNextRoundTimestamp] = useState<number | null>(null);\n  const [copied, setCopied] = useState<boolean>(false);\n  const [txStatus, setTxStatus] = useState<'none' | 'submitted' | 'pending' | 'success' | 'failed'>('none');\n\n  const countdownInterval = useRef<NodeJS.Timeout | null>(null);\n\n  // 切换语言\n  const toggleLanguage = () => {\n    const newLang = language === 'en' ? 'zh' : 'en';\n    setLanguage(newLang);\n    setT(translations[newLang]);\n  };\n\n  // 显示通知\n  const showSnackbar = (message: string, severity: 'success' | 'error' | 'info') => {\n    setSnackbarMessage(message);\n    setSnackbarSeverity(severity);\n    setSnackbarOpen(true);\n  };\n\n  // 关闭通知\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  // 复制交易哈希\n  const copyTxHash = () => {\n    if (txHash) {\n      navigator.clipboard.writeText(txHash);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n      showSnackbar(t.copied, 'success');\n    }\n  };\n\n  // 查看交易哈希\n  const viewTxOnExplorer = () => {\n    if (txHash) {\n      // BSC测试网\n      window.open(`https://testnet.bscscan.com/tx/${txHash}`, '_blank');\n    }\n  };\n\n  // 处理Tab切换\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  // 初始加载时获取交易所统计数据\n  useEffect(() => {\n    fetchExchangeStats();\n\n    // 设置定时刷新\n    const interval = setInterval(() => {\n      if (wallet.isConnected) {\n        fetchExchangeStats();\n        updateBalances();\n      }\n    }, 30000); // 30秒刷新一次\n\n    return () => clearInterval(interval);\n  }, [wallet.isConnected]);\n\n  // 每当输入金额变化时更新估算代币数量\n  useEffect(() => {\n    calculateEstimatedTokens();\n  }, [amount, exchangeStats]);\n\n  // 加载价格历史和设置倒计时\n  useEffect(() => {\n    if (exchangeStats) {\n      loadPriceHistory();\n    }\n  }, [exchangeStats]);\n\n  // 更新倒计时\n  useEffect(() => {\n    if (nextRoundTimestamp) {\n      updateCountdown();\n      countdownInterval.current = setInterval(updateCountdown, 1000);\n    }\n\n    return () => {\n      if (countdownInterval.current) {\n        clearInterval(countdownInterval.current);\n      }\n    };\n  }, [nextRoundTimestamp]);\n\n  // 初始连接钱包检查\n  useEffect(() => {\n    // 如果已有provider但没有contract，可能是因为刷新页面\n    if (window.ethereum && wallet.isConnected) {\n      loadTransactionHistory();\n    }\n  }, [wallet.isConnected]);\n\n  // 获取交易所统计数据\n  const fetchExchangeStats = async () => {\n    setIsLoading(true);\n    try {\n      const stats = await contractService.getExchangeStats();\n      setExchangeStats(stats);\n\n      // 获取当前轮次\n      if (stats.currentRound) {\n        setCurrentRound(stats.currentRound);\n      }\n    } catch (error) {\n      console.error('获取交易所统计数据失败:', error);\n      toast.error('无法获取交易所统计数据');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 加载交易历史\n  const loadTransactionHistory = async () => {\n    if (!wallet.isConnected || !wallet.address) return;\n\n    try {\n      setIsLoading(true);\n\n      // 创建provider和合约实例\n      const provider = new ethers.BrowserProvider(window.ethereum as any);\n      const exchangeAbi = await contractService.getExchangeABI();\n      const contract = new ethers.Contract(EXCHANGE_CONTRACT_ADDRESS, exchangeAbi, provider);\n\n      // 获取TokensPurchased事件\n      const filter = contract.filters.TokensPurchased(wallet.address);\n      const events = await contract.queryFilter(filter, -10000); // 获取最近10000个区块的事件\n\n      const history: TransactionHistoryItem[] = await Promise.all(events.map(async (event: any) => {\n        const block = await event.getBlock();\n        // 使用事件参数\n        return {\n          txHash: event.transactionHash,\n          date: new Date(block.timestamp * 1000),\n          bnbAmount: event.args.bnbAmount,\n          tokenAmount: event.args.tokenAmount,\n          round: event.args.round || currentRound, // 如果事件中没有轮次信息，使用当前轮次\n        };\n      }));\n\n      // 按日期排序，最新的在前\n      history.sort((a, b) => b.date.getTime() - a.date.getTime());\n\n      setTransactionHistory(history);\n    } catch (error) {\n      console.error('加载交易历史失败:', error);\n      toast.error('无法加载交易历史');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 加载价格历史\n  const loadPriceHistory = async () => {\n    if (!wallet.isConnected || !exchangeStats) return;\n\n    try {\n      // 创建provider和合约实例\n      const provider = new ethers.BrowserProvider(window.ethereum as any);\n      const exchangeAbi = await contractService.getExchangeABI();\n      const contract = new ethers.Contract(EXCHANGE_CONTRACT_ADDRESS, exchangeAbi, provider);\n\n      // 获取RoundAdvanced事件\n      const filter = contract.filters.RoundAdvanced();\n      const events = await contract.queryFilter(filter, -10000);\n\n      const history: PriceData[] = await Promise.all(events.map(async (event: any) => {\n        const block = await event.getBlock();\n        return {\n          round: Number(event.args.newRound),\n          price: parseFloat(ethers.formatEther(event.args.newPrice)),\n          timestamp: block.timestamp,\n        };\n      }));\n\n      // 获取当前轮次和价格\n      const currentRound = exchangeStats.currentRound;\n      const currentPrice = parseFloat(exchangeStats.currentPrice) / 1e9; // 转换gwei到主单位\n\n      // 如果历史中没有当前轮次，添加它\n      if (!history.some(item => item.round === currentRound)) {\n        const currentBlock = await provider.getBlock('latest');\n        history.push({\n          round: currentRound,\n          price: currentPrice,\n          timestamp: currentBlock.timestamp,\n        });\n      }\n\n      // 按轮次排序\n      history.sort((a, b) => a.round - b.round);\n\n      setPriceHistory(history);\n\n      // 设置下一轮开始时间（假设每轮持续时间为7天）\n      // 注意：这里假设轮次持续时间是固定的，实际可能需要从合约获取\n      const latestTimestamp = Math.max(...history.map(item => item.timestamp));\n      const roundDuration = 7 * 24 * 60 * 60; // 7天，单位秒\n      setNextRoundTimestamp(latestTimestamp + roundDuration);\n\n    } catch (error) {\n      console.error('加载价格历史失败:', error);\n    }\n  };\n\n  // 更新倒计时\n  const updateCountdown = useCallback(() => {\n    if (!nextRoundTimestamp) return;\n\n    const now = Math.floor(Date.now() / 1000);\n    const diff = Math.max(0, nextRoundTimestamp - now);\n\n    if (diff > 0) {\n      const days = Math.floor(diff / (24 * 60 * 60));\n      const hours = Math.floor((diff % (24 * 60 * 60)) / (60 * 60));\n      const minutes = Math.floor((diff % (60 * 60)) / 60);\n      const seconds = Math.floor(diff % 60);\n\n      setCountdown({ days, hours, minutes, seconds });\n    } else {\n      setCountdown({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      // 如果倒计时结束，重新加载价格历史和当前轮次信息\n      fetchExchangeStats();\n      loadPriceHistory();\n    }\n  }, [nextRoundTimestamp]);\n\n  // 计算预估获得的代币数量\n  const calculateEstimatedTokens = useCallback(() => {\n    if (!exchangeStats || !amount || parseFloat(amount) <= 0) {\n      setEstimatedTokens('0');\n      return;\n    }\n\n    try {\n      // 使用当前价格计算\n      // 当前价格单位是 BNB/代币 (gwei格式)\n      const currentPrice = parseFloat(exchangeStats.currentPrice) / 1e9;\n      const bnbAmount = parseFloat(amount);\n      const tokens = bnbAmount / currentPrice;\n\n      setEstimatedTokens(tokens.toFixed(6));\n    } catch (error) {\n      console.error('计算预估代币数量失败:', error);\n      setEstimatedTokens('0');\n    }\n  }, [exchangeStats, amount]);\n\n  // 处理购买按钮点击\n  const handleBuyClick = () => {\n    if (!wallet.isConnected) {\n      setOpenWalletDialog(true);\n    } else {\n      setOpenConfirmDialog(true);\n    }\n  };\n\n  // 处理确认对话框关闭\n  const handleConfirmDialogClose = (confirmed: boolean) => {\n    setOpenConfirmDialog(false);\n    if (confirmed) {\n      buyTokens();\n    }\n  };\n\n  // 处理钱包对话框关闭\n  const handleWalletDialogClose = (doConnect: boolean) => {\n    setOpenWalletDialog(false);\n    if (doConnect) {\n      connect(); // 调用WalletContext中的connect函数\n    }\n  };\n\n  // 设置价格图表数据\n  const getChartData = () => {\n    return {\n      labels: priceHistory.map(data => `${t.round} ${data.round}`),\n      datasets: [\n        {\n          label: t.price,\n          data: priceHistory.map(data => data.price),\n          borderColor: theme.palette.primary.main,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          tension: 0.1,\n        },\n      ],\n    };\n  };\n\n  // 购买代币\n  const buyTokens = async () => {\n    if (!wallet.isConnected) {\n      showSnackbar(t.walletRequired, 'error');\n      return;\n    }\n\n    if (!amount || parseFloat(amount) <= 0) {\n      showSnackbar(t.invalidAmount, 'error');\n      return;\n    }\n\n    // 检查余额\n    if (wallet.balance && wallet.balance.bnb) {\n      const bnbWei = ethers.utils.parseEther(amount);\n      const balanceWei = ethers.utils.parseEther(wallet.balance.bnb);\n\n      if (bnbWei.gt(balanceWei)) {\n        showSnackbar(t.insufficientBalance, 'error');\n        return;\n      }\n    }\n\n    setIsPurchasing(true);\n    setTxStatus('submitted');\n\n    try {\n      // 调用合约方法购买代币\n      const tx = await contractService.exchangeTokens(amount);\n\n      setTxHash(tx.hash);\n      setTxStatus('pending');\n      showSnackbar(t.transactionSubmitted, 'info');\n\n      // 等待交易确认\n      const receipt = await tx.wait();\n\n      if (receipt.status === 1) {\n        setTxStatus('success');\n        showSnackbar(t.transactionSuccess, 'success');\n\n        // 刷新数据\n        await fetchExchangeStats();\n        await updateBalances();\n\n        // 更新交易历史\n        loadTransactionHistory();\n      } else {\n        setTxStatus('failed');\n        showSnackbar(t.transactionFailed, 'error');\n      }\n    } catch (error) {\n      console.error('交易错误:', error);\n      setTxStatus('failed');\n      showSnackbar(t.transactionFailed, 'error');\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  // 连接钱包按钮事件\n  const handleConnectWallet = async () => {\n    if (!wallet.isConnected) {\n      await connect();\n      fetchExchangeStats();\n    }\n  };\n\n  return (\n    <Box sx={{ p: 4, maxWidth: 1200, mx: 'auto' }}>\n      <Box sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px'\n      }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          {t.pageTitle}\n        </Typography>\n\n        <Button\n          variant=\"outlined\"\n          startIcon={<TranslateIcon />}\n          onClick={toggleLanguage}\n          sx={{ borderRadius: '20px' }}\n        >\n          {language === 'en' ? '中文' : 'English'}\n        </Button>\n      </Box>\n\n      {!wallet.isConnected ? (\n        <Box sx={{ textAlign: 'center', my: 4 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={handleConnectWallet}\n          >\n            连接钱包\n          </Button>\n          <Typography variant=\"body1\" sx={{ mt: 2 }}>\n            连接钱包以访问交易功能\n          </Typography>\n        </Box>\n      ) : (\n        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 4 }}>\n          {/* 左侧: 代币交易表单 */}\n          <Box>\n            <Card sx={{ height: '100%' }}>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n                  购买SM代币\n                </Typography>\n\n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  label=\"BNB金额\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  disabled={!exchangeStats?.isActive || isPurchasing}\n                />\n\n                <Box sx={{ my: 2 }}>\n                  <Typography variant=\"subtitle2\">\n                    预计获得 SM代币: <strong>{estimatedTokens}</strong>\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    当前汇率: 1 BNB = {exchangeStats ? (1 / (parseFloat(exchangeStats.currentPrice) / 1e9)).toFixed(2) : '0'} SM\n                  </Typography>\n                </Box>\n\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleBuyClick}\n                  disabled={!exchangeStats?.isActive || isPurchasing || !amount || parseFloat(amount) <= 0}\n                  sx={{ mt: 2 }}\n                >\n                  {isPurchasing ? <CircularProgress size={24} color=\"inherit\" /> : '购买代币'}\n                </Button>\n\n                {!exchangeStats?.isActive && (\n                  <Alert severity=\"warning\" sx={{ mt: 2 }}>\n                    交易所当前未激活，无法进行交易。\n                  </Alert>\n                )}\n\n                {/* 交易状态和哈希 */}\n                {txStatus !== 'none' && (\n                  <Box sx={{\n                    marginTop: '20px',\n                    padding: '15px',\n                    backgroundColor: '#f0f8ff',\n                    borderRadius: '8px',\n                    border: '1px solid #d0e8ff'\n                  }}>\n                    <Typography variant=\"body2\" sx={{ marginBottom: '8px' }}>\n                      {txStatus === 'submitted' && t.transactionSubmitted}\n                      {txStatus === 'pending' && t.transactionPending}\n                      {txStatus === 'success' && t.transactionSuccess}\n                      {txStatus === 'failed' && t.transactionFailed}\n                    </Typography>\n\n                    {txHash && (\n                      <Box sx={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '10px' }}>\n                        <Typography variant=\"caption\" sx={{\n                          maxWidth: '200px',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          whiteSpace: 'nowrap'\n                        }}>\n                          {txHash}\n                        </Typography>\n\n                        <Button\n                          size=\"small\"\n                          variant=\"outlined\"\n                          onClick={copyTxHash}\n                          sx={{ minWidth: '60px', height: '30px' }}\n                        >\n                          {copied ? t.copied : t.copy}\n                        </Button>\n\n                        <Button\n                          size=\"small\"\n                          variant=\"outlined\"\n                          onClick={viewTxOnExplorer}\n                          sx={{ minWidth: '60px', height: '30px' }}\n                        >\n                          {t.viewOnExplorer}\n                        </Button>\n                      </Box>\n                    )}\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Box>\n\n          {/* 右侧: 统计数据和钱包信息 */}\n          <Box>\n            <Card sx={{ height: '100%' }}>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n                  交易所统计\n                </Typography>\n\n                {isLoading ? (\n                  <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                    <CircularProgress />\n                  </Box>\n                ) : (\n                  <Box>\n                    <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 2 }}>\n                      <Typography variant=\"subtitle2\">已售代币:</Typography>\n                      <Typography variant=\"body2\">{exchangeStats?.totalTokensSold || '0'}</Typography>\n\n                      <Typography variant=\"subtitle2\">剩余代币:</Typography>\n                      <Typography variant=\"body2\">{exchangeStats?.totalTokensRemaining || '0'}</Typography>\n\n                      <Typography variant=\"subtitle2\">已筹集BNB:</Typography>\n                      <Typography variant=\"body2\">{exchangeStats?.totalBnbRaised || '0'}</Typography>\n\n                      <Typography variant=\"subtitle2\">当前价格:</Typography>\n                      <Typography variant=\"body2\">{exchangeStats?.currentPrice || '0'} gwei</Typography>\n\n                      <Typography variant=\"subtitle2\">下一轮价格:</Typography>\n                      <Typography variant=\"body2\">{exchangeStats?.nextRoundPrice || '0'} gwei</Typography>\n\n                      <Typography variant=\"subtitle2\">当前轮次:</Typography>\n                      <Typography variant=\"body2\">{exchangeStats?.currentRound || '0'}</Typography>\n\n                      <Typography variant=\"subtitle2\">交易状态:</Typography>\n                      <Typography variant=\"body2\">{exchangeStats?.isActive ? '激活' : '未激活'}</Typography>\n                    </Box>\n\n                    <Divider sx={{ my: 2 }} />\n\n                    <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n                      钱包信息\n                    </Typography>\n\n                    <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 2 }}>\n                      <Typography variant=\"subtitle2\">钱包地址:</Typography>\n                      <Typography variant=\"caption\" sx={{ wordBreak: 'break-all' }}>\n                        {wallet.address || '-'}\n                      </Typography>\n\n                      <Typography variant=\"subtitle2\">BNB余额:</Typography>\n                      <Typography variant=\"body2\">\n                        {wallet.balance?.bnb ? parseFloat(wallet.balance.bnb).toFixed(4) : '0'} BNB\n                      </Typography>\n\n                      <Typography variant=\"subtitle2\">SM代币余额:</Typography>\n                      <Typography variant=\"body2\">\n                        {wallet.balance?.sm ? parseFloat(wallet.balance.sm).toFixed(4) : '0'} SM\n                      </Typography>\n                    </Box>\n\n                    <Button\n                      fullWidth\n                      variant=\"outlined\"\n                      onClick={fetchExchangeStats}\n                      sx={{ mt: 2 }}\n                    >\n                      刷新数据\n                    </Button>\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Box>\n        </Box>\n      )}\n\n      {/* 钱包连接对话框 */}\n      <Dialog open={openWalletDialog} onClose={() => handleWalletDialogClose(false)}>\n        <DialogTitle>{t.walletRequired}</DialogTitle>\n        <DialogContent>\n          <Typography>{t.walletRequiredMsg}</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleWalletDialogClose(false)}>{t.cancel}</Button>\n          <Button onClick={() => handleWalletDialogClose(true)} variant=\"contained\">\n            {t.connectWallet}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* 购买确认对话框 */}\n      <Dialog open={openConfirmDialog} onClose={() => handleConfirmDialogClose(false)}>\n        <DialogTitle>{t.confirmPurchase}</DialogTitle>\n        <DialogContent>\n          <Typography>\n            {t.confirmPurchaseMsg} <strong>{amount} BNB</strong>?\n          </Typography>\n          {estimatedTokens && (\n            <Typography sx={{ marginTop: '10px' }}>\n              {t.estimatedTokens} <strong>{estimatedTokens}</strong>\n            </Typography>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleConfirmDialogClose(false)}>{t.cancel}</Button>\n          <Button onClick={() => handleConfirmDialogClose(true)} variant=\"contained\">\n            {t.confirm}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* 通知消息 */}\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default Exchange;\n"],"mappingsyBA;;;;;;WAAAA,QAAA;;;;;;;;yEA7yBgE;;;kCACzC;;;kCAMhB;;;kCAKA;;;wEAImB;;;kCACA;;;yEACqB;;;yEAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAClB;AACA,MAAMC,yBAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,QAA4B;AAElC;AAAA;AAAAD,cAAA,GAAAC,CAAA;AACAC,MAAA,CAAAC,KAAO,CAACC,QAAQ,CACdF,MAAA,CAAAG,aAAa,EACbH,MAAA,CAAAI,WAAW,EACXJ,MAAA,CAAAK,YAAY,EACZL,MAAA,CAAAM,WAAW,EACXN,MAAA,CAAAO,KAAK,EACLP,MAAA,CAAAQ,OAAO,EACPR,MAAA,CAAAS,MAAM;AAmBR;AACA,MAAMC,YAAA;AAAA;AAAA,CAAAZ,cAAA,GAAAC,CAAA,QAAe;EACnBY,EAAA,EAAI;IACFC,SAAA,EAAW;IACXC,aAAA,EAAe;IACfC,eAAA,EAAiB;IACjBC,SAAA,EAAW;IACXC,WAAA,EAAa;IACbC,eAAA,EAAiB;IACjBC,kBAAA,EAAoB;IACpBC,SAAA,EAAW;IACXC,UAAA,EAAY;IACZC,OAAA,EAAS;IACTC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRC,cAAA,EAAgB;IAChBC,iBAAA,EAAmB;IACnBC,eAAA,EAAiB;IACjBC,kBAAA,EAAoB;IACpBC,oBAAA,EAAsB;IACtBC,kBAAA,EAAoB;IACpBC,kBAAA,EAAoB;IACpBC,iBAAA,EAAmB;IACnBC,cAAA,EAAgB;IAChBC,IAAA,EAAM;IACNC,MAAA,EAAQ;IACRC,cAAA,EAAgB;IAChBC,MAAA,EAAQ;IACRC,KAAA,EAAO;IACPC,OAAA,EAAS;IACTC,OAAA,EAAS;IACTC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,KAAA,EAAO;IACPC,SAAA,EAAW;IACXC,mBAAA,EAAqB;IACrBC,aAAA,EAAe;IACfC,IAAA,EAAM;IACNC,MAAA,EAAQ;IACRC,SAAA,EAAW;IACXC,SAAA,EAAW;IACXC,aAAA,EAAe;IACfC,UAAA,EAAY;IACZC,UAAA,EAAY;IACZC,eAAA,EAAiB;IACjBC,SAAA,EAAW;IACXC,YAAA,EAAc;IACdC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,QAAA,EAAU;IACVC,aAAA,EAAe;IACfC,UAAA,EAAY;IACZC,SAAA,EAAW;IACXC,WAAA,EAAa;EACf;EACAC,EAAA,EAAI;IACFrD,SAAA,EAAW;IACXC,aAAA,EAAe;IACfC,eAAA,EAAiB;IACjBC,SAAA,EAAW;IACXC,WAAA,EAAa;IACbC,eAAA,EAAiB;IACjBC,kBAAA,EAAoB;IACpBC,SAAA,EAAW;IACXC,UAAA,EAAY;IACZC,OAAA,EAAS;IACTC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRC,cAAA,EAAgB;IAChBC,iBAAA,EAAmB;IACnBC,eAAA,EAAiB;IACjBC,kBAAA,EAAoB;IACpBC,oBAAA,EAAsB;IACtBC,kBAAA,EAAoB;IACpBC,kBAAA,EAAoB;IACpBC,iBAAA,EAAmB;IACnBC,cAAA,EAAgB;IAChBC,IAAA,EAAM;IACNC,MAAA,EAAQ;IACRC,cAAA,EAAgB;IAChBC,MAAA,EAAQ;IACRC,KAAA,EAAO;IACPC,OAAA,EAAS;IACTC,OAAA,EAAS;IACTC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,KAAA,EAAO;IACPC,SAAA,EAAW;IACXC,mBAAA,EAAqB;IACrBC,aAAA,EAAe;IACfC,IAAA,EAAM;IACNC,MAAA,EAAQ;IACRC,SAAA,EAAW;IACXC,SAAA,EAAW;IACXC,aAAA,EAAe;IACfC,UAAA,EAAY;IACZC,UAAA,EAAY;IACZC,eAAA,EAAiB;IACjBC,SAAA,EAAW;IACXC,YAAA,EAAc;IACdC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,QAAA,EAAU;IACVC,aAAA,EAAe;IACfC,UAAA,EAAY;IACZC,SAAA,EAAW;IACXC,WAAA,EAAa;EACf;AACF;AAAA;AAAAlE,cAAA,GAAAC,CAAA;AAEA,MAAMmE,QAAA,GAAWA,CAAA;EAAA;EAAApE,cAAA,GAAAqE,CAAA;EACf,MAAMC,KAAA;EAAA;EAAA,CAAAtE,cAAA,GAAAC,CAAA,QAAQ,IAAAsE,SAAA,CAAAC,QAAQ;EACtB,MAAMC,QAAA;EAAA;EAAA,CAAAzE,cAAA,GAAAC,CAAA,QAAW,IAAAsE,SAAA,CAAAG,aAAa,EAACJ,KAAA,CAAMK,WAAW,CAACC,IAAI,CAAC;EACtD,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAc,CAAE;EAAA;EAAA,CAAA/E,cAAA,GAAAC,CAAA,QAAG,IAAA+E,cAAA,CAAAC,SAAS;EAErD;EACA,MAAM,CAAC7C,MAAA,EAAQ8C,SAAA,CAAU;EAAA;EAAA,CAAAlF,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAS;EAC7C,MAAM,CAACC,SAAA,EAAWC,YAAA,CAAa;EAAA;EAAA,CAAAtF,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAU;EACpD,MAAM,CAACG,YAAA,EAAcC,eAAA,CAAgB;EAAA;EAAA,CAAAxF,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAU;EAC1D,MAAM,CAAChC,aAAA,EAAeqC,gBAAA,CAAiB;EAAA;EAAA,CAAAzF,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAuB;EACzE,MAAM,CAACjE,eAAA,EAAiBuE,kBAAA,CAAmB;EAAA;EAAA,CAAA1F,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAS;EAC/D,MAAM,CAAC9C,MAAA,EAAQqD,SAAA,CAAU;EAAA;EAAA,CAAA3F,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAgB;EAEpD;EACA,MAAM,CAACQ,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAA7F,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAc,QAAO;EAC7D,MAAM,CAACU,CAAA,EAAGC,IAAA,CAAK;EAAA;EAAA,CAAA/F,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAACxE,YAAA,CAAauD,EAAE,IAAG;EAC7C,MAAM,CAAC6B,gBAAA,EAAkBC,mBAAA,CAAoB;EAAA;EAAA,CAAAjG,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAU;EAClE,MAAM,CAACc,iBAAA,EAAmBC,oBAAA,CAAqB;EAAA;EAAA,CAAAnG,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAU;EACpE,MAAM,CAACgB,YAAA,EAAcC,eAAA,CAAgB;EAAA;EAAA,CAAArG,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAU;EAC1D,MAAM,CAACkB,eAAA,EAAiBC,kBAAA,CAAmB;EAAA;EAAA,CAAAvG,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAS;EAC/D,MAAM,CAACoB,gBAAA,EAAkBC,mBAAA,CAAoB;EAAA;EAAA,CAAAzG,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAA+B;EACvF,MAAM,CAAChE,kBAAA,EAAoBsF,qBAAA,CAAsB;EAAA;EAAA,CAAA1G,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAA2B,EAAE;EACzF,MAAM,CAAC/D,SAAA,EAAWsF,YAAA,CAAa;EAAA;EAAA,CAAA3G,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAA2E;EACrH,MAAM,CAACwB,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAA7G,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAS;EACjD,MAAM,CAAC0B,YAAA,EAAcC,eAAA,CAAgB;EAAA;EAAA,CAAA/G,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAc,EAAE;EAChE,MAAM,CAACzB,YAAA,EAAcqD,eAAA,CAAgB;EAAA;EAAA,CAAAhH,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAS;EACzD,MAAM,CAAC6B,kBAAA,EAAoBC,qBAAA,CAAsB;EAAA;EAAA,CAAAlH,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAgB;EAC5E,MAAM,CAACnC,MAAA,EAAQkE,SAAA,CAAU;EAAA;EAAA,CAAAnH,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAAU;EAC9C,MAAM,CAACgC,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAArH,cAAA,GAAAC,CAAA,QAAG,IAAAkF,MAAA,CAAAC,QAAQ,EAA0D;EAElG,MAAMkC,iBAAA;EAAA;EAAA,CAAAtH,cAAA,GAAAC,CAAA,QAAoB,IAAAkF,MAAA,CAAAoC,MAAM,EAAwB;EAExD;EAAA;EAAAvH,cAAA,GAAAC,CAAA;EACA,MAAMuH,cAAA,GAAiBA,CAAA;IAAA;IAAAxH,cAAA,GAAAqE,CAAA;IACrB,MAAMoD,OAAA;IAAA;IAAA,CAAAzH,cAAA,GAAAC,CAAA,QAAU2F,QAAA,KAAa;IAAA;IAAA,CAAA5F,cAAA,GAAA0H,CAAA,WAAO;IAAA;IAAA,CAAA1H,cAAA,GAAA0H,CAAA,WAAO;IAAA;IAAA1H,cAAA,GAAAC,CAAA;IAC3C4F,WAAA,CAAY4B,OAAA;IAAA;IAAAzH,cAAA,GAAAC,CAAA;IACZ8F,IAAA,CAAKnF,YAAY,CAAC6G,OAAA,CAAQ;EAC5B;EAEA;EAAA;EAAAzH,cAAA,GAAAC,CAAA;EACA,MAAM0H,YAAA,GAAeA,CAACC,OAAA,EAAiBC,QAAA;IAAA;IAAA7H,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACrCsG,kBAAA,CAAmBqB,OAAA;IAAA;IAAA5H,cAAA,GAAAC,CAAA;IACnBwG,mBAAA,CAAoBoB,QAAA;IAAA;IAAA7H,cAAA,GAAAC,CAAA;IACpBoG,eAAA,CAAgB;EAClB;EAEA;EAAA;EAAArG,cAAA,GAAAC,CAAA;EACA,MAAM6H,mBAAA,GAAsBA,CAAA;IAAA;IAAA9H,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IAC1BoG,eAAA,CAAgB;EAClB;EAEA;EAAA;EAAArG,cAAA,GAAAC,CAAA;EACA,MAAM8H,UAAA,GAAaA,CAAA;IAAA;IAAA/H,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACjB,IAAIqC,MAAA,EAAQ;MAAA;MAAAtC,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACV+H,SAAA,CAAUC,SAAS,CAACC,SAAS,CAAC5F,MAAA;MAAA;MAAAtC,cAAA,GAAAC,CAAA;MAC9BkH,SAAA,CAAU;MAAA;MAAAnH,cAAA,GAAAC,CAAA;MACVkI,UAAA,CAAW,MAAM;QAAA;QAAAnI,cAAA,GAAAqE,CAAA;QAAArE,cAAA,GAAAC,CAAA;QAAA,OAAAkH,SAAA,CAAU;MAAA,GAAQ;MAAA;MAAAnH,cAAA,GAAAC,CAAA;MACnC0H,YAAA,CAAa7B,CAAA,CAAE7C,MAAM,EAAE;IACzB;IAAA;IAAA;MAAAjD,cAAA,GAAA0H,CAAA;IAAA;EACF;EAEA;EAAA;EAAA1H,cAAA,GAAAC,CAAA;EACA,MAAMmI,gBAAA,GAAmBA,CAAA;IAAA;IAAApI,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACvB,IAAIqC,MAAA,EAAQ;MAAA;MAAAtC,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACV;MACAoI,MAAA,CAAOC,IAAI,CAAC,kCAAkChG,MAAA,EAAQ,EAAE;IAC1D;IAAA;IAAA;MAAAtC,cAAA,GAAA0H,CAAA;IAAA;EACF;EAEA;EAAA;EAAA1H,cAAA,GAAAC,CAAA;EACA,MAAMsI,eAAA,GAAkBA,CAACC,MAAA,EAA8BC,QAAA;IAAA;IAAAzI,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACrD4G,WAAA,CAAY4B,QAAA;EACd;EAEA;EAAA;EAAAzI,cAAA,GAAAC,CAAA;EACA,IAAAkF,MAAA,CAAAuD,SAAS,EAAC;IAAA;IAAA1I,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACR0I,kBAAA;IAEA;IACA,MAAMC,QAAA;IAAA;IAAA,CAAA5I,cAAA,GAAAC,CAAA,QAAW4I,WAAA,CAAY;MAAA;MAAA7I,cAAA,GAAAqE,CAAA;MAAArE,cAAA,GAAAC,CAAA;MAC3B,IAAI4E,MAAA,CAAOiE,WAAW,EAAE;QAAA;QAAA9I,cAAA,GAAA0H,CAAA;QAAA1H,cAAA,GAAAC,CAAA;QACtB0I,kBAAA;QAAA;QAAA3I,cAAA,GAAAC,CAAA;QACA8E,cAAA;MACF;MAAA;MAAA;QAAA/E,cAAA,GAAA0H,CAAA;MAAA;IACF,GAAG,SAAQ;IAAA;IAAA1H,cAAA,GAAAC,CAAA;IAEX,OAAO,MAAM;MAAA;MAAAD,cAAA,GAAAqE,CAAA;MAAArE,cAAA,GAAAC,CAAA;MAAA,OAAA8I,aAAA,CAAcH,QAAA;IAAA;EAC7B,GAAG,CAAC/D,MAAA,CAAOiE,WAAW,CAAC;EAEvB;EAAA;EAAA9I,cAAA,GAAAC,CAAA;EACA,IAAAkF,MAAA,CAAAuD,SAAS,EAAC;IAAA;IAAA1I,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACR+I,wBAAA;EACF,GAAG,CAAC5G,MAAA,EAAQgB,aAAA,CAAc;EAE1B;EAAA;EAAApD,cAAA,GAAAC,CAAA;EACA,IAAAkF,MAAA,CAAAuD,SAAS,EAAC;IAAA;IAAA1I,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACR,IAAImD,aAAA,EAAe;MAAA;MAAApD,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACjBgJ,gBAAA;IACF;IAAA;IAAA;MAAAjJ,cAAA,GAAA0H,CAAA;IAAA;EACF,GAAG,CAACtE,aAAA,CAAc;EAElB;EAAA;EAAApD,cAAA,GAAAC,CAAA;EACA,IAAAkF,MAAA,CAAAuD,SAAS,EAAC;IAAA;IAAA1I,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACR,IAAIgH,kBAAA,EAAoB;MAAA;MAAAjH,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACtBiJ,eAAA;MAAA;MAAAlJ,cAAA,GAAAC,CAAA;MACAqH,iBAAA,CAAkB6B,OAAO,GAAGN,WAAA,CAAYK,eAAA,EAAiB;IAC3D;IAAA;IAAA;MAAAlJ,cAAA,GAAA0H,CAAA;IAAA;IAAA1H,cAAA,GAAAC,CAAA;IAEA,OAAO;MAAA;MAAAD,cAAA,GAAAqE,CAAA;MAAArE,cAAA,GAAAC,CAAA;MACL,IAAIqH,iBAAA,CAAkB6B,OAAO,EAAE;QAAA;QAAAnJ,cAAA,GAAA0H,CAAA;QAAA1H,cAAA,GAAAC,CAAA;QAC7B8I,aAAA,CAAczB,iBAAA,CAAkB6B,OAAO;MACzC;MAAA;MAAA;QAAAnJ,cAAA,GAAA0H,CAAA;MAAA;IACF;EACF,GAAG,CAACT,kBAAA,CAAmB;EAEvB;EAAA;EAAAjH,cAAA,GAAAC,CAAA;EACA,IAAAkF,MAAA,CAAAuD,SAAS,EAAC;IAAA;IAAA1I,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACR;IACA;IAAI;IAAA,CAAAD,cAAA,GAAA0H,CAAA,WAAAW,MAAA,CAAOe,QAAQ;IAAA;IAAA,CAAApJ,cAAA,GAAA0H,CAAA,WAAI7C,MAAA,CAAOiE,WAAW,GAAE;MAAA;MAAA9I,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACzCoJ,sBAAA;IACF;IAAA;IAAA;MAAArJ,cAAA,GAAA0H,CAAA;IAAA;EACF,GAAG,CAAC7C,MAAA,CAAOiE,WAAW,CAAC;EAEvB;EAAA;EAAA9I,cAAA,GAAAC,CAAA;EACA,MAAM0I,kBAAA,GAAqB,MAAAA,CAAA;IAAA;IAAA3I,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACzBqF,YAAA,CAAa;IAAA;IAAAtF,cAAA,GAAAC,CAAA;IACb,IAAI;MACF,MAAMqJ,KAAA;MAAA;MAAA,CAAAtJ,cAAA,GAAAC,CAAA,SAAQ,MAAMsJ,gBAAA,CAAAC,OAAe,CAACC,gBAAgB;MAAA;MAAAzJ,cAAA,GAAAC,CAAA;MACpDwF,gBAAA,CAAiB6D,KAAA;MAEjB;MAAA;MAAAtJ,cAAA,GAAAC,CAAA;MACA,IAAIqJ,KAAA,CAAM3F,YAAY,EAAE;QAAA;QAAA3D,cAAA,GAAA0H,CAAA;QAAA1H,cAAA,GAAAC,CAAA;QACtB+G,eAAA,CAAgBsC,KAAA,CAAM3F,YAAY;MACpC;MAAA;MAAA;QAAA3D,cAAA,GAAA0H,CAAA;MAAA;IACF,EAAE,OAAOgC,KAAA,EAAO;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MACd0J,OAAA,CAAQD,KAAK,CAAC,gBAAgBA,KAAA;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MAC9B2J,cAAA,CAAAJ,OAAK,CAACE,KAAK,CAAC;IACd,UAAU;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MACRqF,YAAA,CAAa;IACf;EACF;EAEA;EAAA;EAAAtF,cAAA,GAAAC,CAAA;EACA,MAAMoJ,sBAAA,GAAyB,MAAAA,CAAA;IAAA;IAAArJ,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IAC7B;IAAI;IAAA,CAAAD,cAAA,GAAA0H,CAAA,YAAC7C,MAAA,CAAOiE,WAAW;IAAA;IAAA,CAAA9I,cAAA,GAAA0H,CAAA,WAAI,CAAC7C,MAAA,CAAOgF,OAAO,GAAE;MAAA;MAAA7J,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MAAA;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAA0H,CAAA;IAAA;IAAA1H,cAAA,GAAAC,CAAA;IAE5C,IAAI;MAAA;MAAAD,cAAA,GAAAC,CAAA;MACFqF,YAAA,CAAa;MAEb;MACA,MAAMwE,QAAA;MAAA;MAAA,CAAA9J,cAAA,GAAAC,CAAA,SAAW,IAAI8J,OAAA,CAAAC,MAAM,CAACC,eAAe,CAAC5B,MAAA,CAAOe,QAAQ;MAC3D,MAAMc,WAAA;MAAA;MAAA,CAAAlK,cAAA,GAAAC,CAAA,SAAc,MAAMsJ,gBAAA,CAAAC,OAAe,CAACW,cAAc;MACxD,MAAMC,QAAA;MAAA;MAAA,CAAApK,cAAA,GAAAC,CAAA,SAAW,IAAI8J,OAAA,CAAAC,MAAM,CAACK,QAAQ,CAACtK,yBAAA,EAA2BmK,WAAA,EAAaJ,QAAA;MAE7E;MACA,MAAMQ,MAAA;MAAA;MAAA,CAAAtK,cAAA,GAAAC,CAAA,SAASmK,QAAA,CAASG,OAAO,CAACC,eAAe,CAAC3F,MAAA,CAAOgF,OAAO;MAC9D,MAAMY,MAAA;MAAA;MAAA,CAAAzK,cAAA,GAAAC,CAAA,SAAS,MAAMmK,QAAA,CAASM,WAAW,CAACJ,MAAA,EAAQ,CAAC,SAAQ;MAE3D,MAAMK,OAAA;MAAA;MAAA,CAAA3K,cAAA,GAAAC,CAAA,SAAoC,MAAM2K,OAAA,CAAQC,GAAG,CAACJ,MAAA,CAAOK,GAAG,CAAC,MAAOC,KAAA;QAAA;QAAA/K,cAAA,GAAAqE,CAAA;QAC5E,MAAM2G,KAAA;QAAA;QAAA,CAAAhL,cAAA,GAAAC,CAAA,SAAQ,MAAM8K,KAAA,CAAME,QAAQ;QAClC;QAAA;QAAAjL,cAAA,GAAAC,CAAA;QACA,OAAO;UACLqC,MAAA,EAAQyI,KAAA,CAAMG,eAAe;UAC7B/I,IAAA,EAAM,IAAIgJ,IAAA,CAAKH,KAAA,CAAMI,SAAS,GAAG;UACjCC,SAAA,EAAWN,KAAA,CAAMO,IAAI,CAACD,SAAS;UAC/BE,WAAA,EAAaR,KAAA,CAAMO,IAAI,CAACC,WAAW;UACnC5I,KAAA;UAAO;UAAA,CAAA3C,cAAA,GAAA0H,CAAA,WAAAqD,KAAA,CAAMO,IAAI,CAAC3I,KAAK;UAAA;UAAA,CAAA3C,cAAA,GAAA0H,CAAA,WAAI/D,YAAA;QAC7B;MACF;MAEA;MAAA;MAAA3D,cAAA,GAAAC,CAAA;MACA0K,OAAA,CAAQa,IAAI,CAAC,CAACC,CAAA,EAAG/D,CAAA,KAAM;QAAA;QAAA1H,cAAA,GAAAqE,CAAA;QAAArE,cAAA,GAAAC,CAAA;QAAA,OAAAyH,CAAA,CAAEvF,IAAI,CAACuJ,OAAO,KAAKD,CAAA,CAAEtJ,IAAI,CAACuJ,OAAO;MAAA;MAAA;MAAA1L,cAAA,GAAAC,CAAA;MAExDyG,qBAAA,CAAsBiE,OAAA;IACxB,EAAE,OAAOjB,KAAA,EAAO;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MACd0J,OAAA,CAAQD,KAAK,CAAC,aAAaA,KAAA;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MAC3B2J,cAAA,CAAAJ,OAAK,CAACE,KAAK,CAAC;IACd,UAAU;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MACRqF,YAAA,CAAa;IACf;EACF;EAEA;EAAA;EAAAtF,cAAA,GAAAC,CAAA;EACA,MAAMgJ,gBAAA,GAAmB,MAAAA,CAAA;IAAA;IAAAjJ,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACvB;IAAI;IAAA,CAAAD,cAAA,GAAA0H,CAAA,YAAC7C,MAAA,CAAOiE,WAAW;IAAA;IAAA,CAAA9I,cAAA,GAAA0H,CAAA,WAAI,CAACtE,aAAA,GAAe;MAAA;MAAApD,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MAAA;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAA0H,CAAA;IAAA;IAAA1H,cAAA,GAAAC,CAAA;IAE3C,IAAI;MACF;MACA,MAAM6J,QAAA;MAAA;MAAA,CAAA9J,cAAA,GAAAC,CAAA,SAAW,IAAI8J,OAAA,CAAAC,MAAM,CAACC,eAAe,CAAC5B,MAAA,CAAOe,QAAQ;MAC3D,MAAMc,WAAA;MAAA;MAAA,CAAAlK,cAAA,GAAAC,CAAA,SAAc,MAAMsJ,gBAAA,CAAAC,OAAe,CAACW,cAAc;MACxD,MAAMC,QAAA;MAAA;MAAA,CAAApK,cAAA,GAAAC,CAAA,SAAW,IAAI8J,OAAA,CAAAC,MAAM,CAACK,QAAQ,CAACtK,yBAAA,EAA2BmK,WAAA,EAAaJ,QAAA;MAE7E;MACA,MAAMQ,MAAA;MAAA;MAAA,CAAAtK,cAAA,GAAAC,CAAA,SAASmK,QAAA,CAASG,OAAO,CAACoB,aAAa;MAC7C,MAAMlB,MAAA;MAAA;MAAA,CAAAzK,cAAA,GAAAC,CAAA,SAAS,MAAMmK,QAAA,CAASM,WAAW,CAACJ,MAAA,EAAQ,CAAC;MAEnD,MAAMK,OAAA;MAAA;MAAA,CAAA3K,cAAA,GAAAC,CAAA,SAAuB,MAAM2K,OAAA,CAAQC,GAAG,CAACJ,MAAA,CAAOK,GAAG,CAAC,MAAOC,KAAA;QAAA;QAAA/K,cAAA,GAAAqE,CAAA;QAC/D,MAAM2G,KAAA;QAAA;QAAA,CAAAhL,cAAA,GAAAC,CAAA,SAAQ,MAAM8K,KAAA,CAAME,QAAQ;QAAA;QAAAjL,cAAA,GAAAC,CAAA;QAClC,OAAO;UACL0C,KAAA,EAAOiJ,MAAA,CAAOb,KAAA,CAAMO,IAAI,CAACO,QAAQ;UACjCjJ,KAAA,EAAOkJ,UAAA,CAAW/B,OAAA,CAAAC,MAAM,CAAC+B,WAAW,CAAChB,KAAA,CAAMO,IAAI,CAACU,QAAQ;UACxDZ,SAAA,EAAWJ,KAAA,CAAMI;QACnB;MACF;MAEA;MACA,MAAMzH,YAAA;MAAA;MAAA,CAAA3D,cAAA,GAAAC,CAAA,SAAemD,aAAA,CAAcO,YAAY;MAC/C,MAAMF,YAAA;MAAA;MAAA,CAAAzD,cAAA,GAAAC,CAAA,SAAe6L,UAAA,CAAW1I,aAAA,CAAcK,YAAY,IAAI,MAAK;MAEnE;MAAA;MAAAzD,cAAA,GAAAC,CAAA;MACA,IAAI,CAAC0K,OAAA,CAAQsB,IAAI,CAACC,IAAA,IAAQ;QAAA;QAAAlM,cAAA,GAAAqE,CAAA;QAAArE,cAAA,GAAAC,CAAA;QAAA,OAAAiM,IAAA,CAAKvJ,KAAK,KAAKgB,YAAA;MAAA,IAAe;QAAA;QAAA3D,cAAA,GAAA0H,CAAA;QACtD,MAAMyE,YAAA;QAAA;QAAA,CAAAnM,cAAA,GAAAC,CAAA,SAAe,MAAM6J,QAAA,CAASmB,QAAQ,CAAC;QAAA;QAAAjL,cAAA,GAAAC,CAAA;QAC7C0K,OAAA,CAAQyB,IAAI,CAAC;UACXzJ,KAAA,EAAOgB,YAAA;UACPf,KAAA,EAAOa,YAAA;UACP2H,SAAA,EAAWe,YAAA,CAAaf;QAC1B;MACF;MAAA;MAAA;QAAApL,cAAA,GAAA0H,CAAA;MAAA;MAEA;MAAA1H,cAAA,GAAAC,CAAA;MACA0K,OAAA,CAAQa,IAAI,CAAC,CAACC,CAAA,EAAG/D,CAAA,KAAM;QAAA;QAAA1H,cAAA,GAAAqE,CAAA;QAAArE,cAAA,GAAAC,CAAA;QAAA,OAAAwL,CAAA,CAAE9I,KAAK,GAAG+E,CAAA,CAAE/E,KAAK;MAAL,CAAK;MAAA;MAAA3C,cAAA,GAAAC,CAAA;MAExC8G,eAAA,CAAgB4D,OAAA;MAEhB;MACA;MACA,MAAM0B,eAAA;MAAA;MAAA,CAAArM,cAAA,GAAAC,CAAA,SAAkBqM,IAAA,CAAKC,GAAG,IAAI5B,OAAA,CAAQG,GAAG,CAACoB,IAAA,IAAQ;QAAA;QAAAlM,cAAA,GAAAqE,CAAA;QAAArE,cAAA,GAAAC,CAAA;QAAA,OAAAiM,IAAA,CAAKd,SAAS;MAAT,CAAS;MACtE,MAAMoB,aAAA;MAAA;MAAA,CAAAxM,cAAA,GAAAC,CAAA,SAAgB,IAAI,KAAK,KAAK,KAAI;MAAA;MAAAD,cAAA,GAAAC,CAAA;MACxCiH,qBAAA,CAAsBmF,eAAA,GAAkBG,aAAA;IAE1C,EAAE,OAAO9C,KAAA,EAAO;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MACd0J,OAAA,CAAQD,KAAK,CAAC,aAAaA,KAAA;IAC7B;EACF;EAEA;EACA,MAAMR,eAAA;EAAA;EAAA,CAAAlJ,cAAA,GAAAC,CAAA,SAAkB,IAAAkF,MAAA,CAAAsH,WAAW,EAAC;IAAA;IAAAzM,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IAClC,IAAI,CAACgH,kBAAA,EAAoB;MAAA;MAAAjH,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MAAA;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAA0H,CAAA;IAAA;IAEzB,MAAMgF,GAAA;IAAA;IAAA,CAAA1M,cAAA,GAAAC,CAAA,SAAMqM,IAAA,CAAKK,KAAK,CAACxB,IAAA,CAAKuB,GAAG,KAAK;IACpC,MAAME,IAAA;IAAA;IAAA,CAAA5M,cAAA,GAAAC,CAAA,SAAOqM,IAAA,CAAKC,GAAG,CAAC,GAAGtF,kBAAA,GAAqByF,GAAA;IAAA;IAAA1M,cAAA,GAAAC,CAAA;IAE9C,IAAI2M,IAAA,GAAO,GAAG;MAAA;MAAA5M,cAAA,GAAA0H,CAAA;MACZ,MAAMhF,IAAA;MAAA;MAAA,CAAA1C,cAAA,GAAAC,CAAA,SAAOqM,IAAA,CAAKK,KAAK,CAACC,IAAA,IAAQ,KAAK,KAAK,EAAC;MAC3C,MAAMrK,KAAA;MAAA;MAAA,CAAAvC,cAAA,GAAAC,CAAA,SAAQqM,IAAA,CAAKK,KAAK,CAACC,IAAC,IAAQ,KAAK,KAAK,EAAC,KAAO,KAAK,EAAC;MAC1D,MAAMpK,OAAA;MAAA;MAAA,CAAAxC,cAAA,GAAAC,CAAA,SAAUqM,IAAA,CAAKK,KAAK,CAACC,IAAC,IAAQ,KAAK,EAAC,IAAM;MAChD,MAAMnK,OAAA;MAAA;MAAA,CAAAzC,cAAA,GAAAC,CAAA,SAAUqM,IAAA,CAAKK,KAAK,CAACC,IAAA,GAAO;MAAA;MAAA5M,cAAA,GAAAC,CAAA;MAElC0G,YAAA,CAAa;QAAEjE,IAAA;QAAMH,KAAA;QAAOC,OAAA;QAASC;MAAQ;IAC/C,OAAO;MAAA;MAAAzC,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACL0G,YAAA,CAAa;QAAEjE,IAAA,EAAM;QAAGH,KAAA,EAAO;QAAGC,OAAA,EAAS;QAAGC,OAAA,EAAS;MAAE;MACzD;MAAA;MAAAzC,cAAA,GAAAC,CAAA;MACA0I,kBAAA;MAAA;MAAA3I,cAAA,GAAAC,CAAA;MACAgJ,gBAAA;IACF;EACF,GAAG,CAAChC,kBAAA,CAAmB;EAEvB;EACA,MAAM+B,wBAAA;EAAA;EAAA,CAAAhJ,cAAA,GAAAC,CAAA,SAA2B,IAAAkF,MAAA,CAAAsH,WAAW,EAAC;IAAA;IAAAzM,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IAC3C;IAAI;IAAA,CAAAD,cAAA,GAAA0H,CAAA,YAACtE,aAAA;IAAA;IAAA,CAAApD,cAAA,GAAA0H,CAAA,WAAiB,CAACtF,MAAA;IAAA;IAAA,CAAApC,cAAA,GAAA0H,CAAA,WAAUoE,UAAA,CAAW1J,MAAA,KAAW,IAAG;MAAA;MAAApC,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACxDyF,kBAAA,CAAmB;MAAA;MAAA1F,cAAA,GAAAC,CAAA;MACnB;IACF;IAAA;IAAA;MAAAD,cAAA,GAAA0H,CAAA;IAAA;IAAA1H,cAAA,GAAAC,CAAA;IAEA,IAAI;MACF;MACA;MACA,MAAMwD,YAAA;MAAA;MAAA,CAAAzD,cAAA,GAAAC,CAAA,SAAe6L,UAAA,CAAW1I,aAAA,CAAcK,YAAY,IAAI;MAC9D,MAAM4H,SAAA;MAAA;MAAA,CAAArL,cAAA,GAAAC,CAAA,SAAY6L,UAAA,CAAW1J,MAAA;MAC7B,MAAMyK,MAAA;MAAA;MAAA,CAAA7M,cAAA,GAAAC,CAAA,SAASoL,SAAA,GAAY5H,YAAA;MAAA;MAAAzD,cAAA,GAAAC,CAAA;MAE3ByF,kBAAA,CAAmBmH,MAAA,CAAOC,OAAO,CAAC;IACpC,EAAE,OAAOpD,KAAA,EAAO;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MACd0J,OAAA,CAAQD,KAAK,CAAC,eAAeA,KAAA;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MAC7ByF,kBAAA,CAAmB;IACrB;EACF,GAAG,CAACtC,aAAA,EAAehB,MAAA,CAAO;EAE1B;EAAA;EAAApC,cAAA,GAAAC,CAAA;EACA,MAAM8M,cAAA,GAAiBA,CAAA;IAAA;IAAA/M,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACrB,IAAI,CAAC4E,MAAA,CAAOiE,WAAW,EAAE;MAAA;MAAA9I,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACvBgG,mBAAA,CAAoB;IACtB,OAAO;MAAA;MAAAjG,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACLkG,oBAAA,CAAqB;IACvB;EACF;EAEA;EAAA;EAAAnG,cAAA,GAAAC,CAAA;EACA,MAAM+M,wBAAA,GAA4BC,SAAA;IAAA;IAAAjN,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IAChCkG,oBAAA,CAAqB;IAAA;IAAAnG,cAAA,GAAAC,CAAA;IACrB,IAAIgN,SAAA,EAAW;MAAA;MAAAjN,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACbgB,SAAA;IACF;IAAA;IAAA;MAAAjB,cAAA,GAAA0H,CAAA;IAAA;EACF;EAEA;EAAA;EAAA1H,cAAA,GAAAC,CAAA;EACA,MAAMiN,uBAAA,GAA2BC,SAAA;IAAA;IAAAnN,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IAC/BgG,mBAAA,CAAoB;IAAA;IAAAjG,cAAA,GAAAC,CAAA;IACpB,IAAIkN,SAAA,EAAW;MAAA;MAAAnN,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACb6E,OAAA,IAAW;IACb;IAAA;IAAA;MAAA9E,cAAA,GAAA0H,CAAA;IAAA;EACF;EAEA;EAAA;EAAA1H,cAAA,GAAAC,CAAA;EACA,MAAMmN,YAAA,GAAeA,CAAA;IAAA;IAAApN,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IACnB,OAAO;MACLoN,MAAA,EAAQvG,YAAA,CAAagE,GAAG,CAACwC,IAAA,IAAQ;QAAA;QAAAtN,cAAA,GAAAqE,CAAA;QAAArE,cAAA,GAAAC,CAAA;QAAA,UAAG6F,CAAA,CAAEnD,KAAK,IAAI2K,IAAA,CAAK3K,KAAK,EAAE;MAAF,CAAE;MAC3D4K,QAAA,EAAU,CACR;QACEC,KAAA,EAAO1H,CAAA,CAAElD,KAAK;QACd0K,IAAA,EAAMxG,YAAA,CAAagE,GAAG,CAACwC,IAAA,IAAQ;UAAA;UAAAtN,cAAA,GAAAqE,CAAA;UAAArE,cAAA,GAAAC,CAAA;UAAA,OAAAqN,IAAA,CAAK1K,KAAK;QAAL,CAAK;QACzC6K,WAAA,EAAanJ,KAAA,CAAMoJ,OAAO,CAACC,OAAO,CAACC,IAAI;QACvCC,eAAA,EAAiB;QACjBC,OAAA,EAAS;MACX;IAEJ;EACF;EAEA;EAAA;EAAA9N,cAAA,GAAAC,CAAA;EACA,MAAMgB,SAAA,GAAY,MAAAA,CAAA;IAAA;IAAAjB,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IAChB,IAAI,CAAC4E,MAAA,CAAOiE,WAAW,EAAE;MAAA;MAAA9I,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACvB0H,YAAA,CAAa7B,CAAA,CAAEpE,cAAc,EAAE;MAAA;MAAA1B,cAAA,GAAAC,CAAA;MAC/B;IACF;IAAA;IAAA;MAAAD,cAAA,GAAA0H,CAAA;IAAA;IAAA1H,cAAA,GAAAC,CAAA;IAEA;IAAI;IAAA,CAAAD,cAAA,GAAA0H,CAAA,YAACtF,MAAA;IAAA;IAAA,CAAApC,cAAA,GAAA0H,CAAA,WAAUoE,UAAA,CAAW1J,MAAA,KAAW,IAAG;MAAA;MAAApC,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACtC0H,YAAA,CAAa7B,CAAA,CAAE/C,aAAa,EAAE;MAAA;MAAA/C,cAAA,GAAAC,CAAA;MAC9B;IACF;IAAA;IAAA;MAAAD,cAAA,GAAA0H,CAAA;IAAA;IAEA;IAAA1H,cAAA,GAAAC,CAAA;IACA;IAAI;IAAA,CAAAD,cAAA,GAAA0H,CAAA,WAAA7C,MAAA,CAAOkJ,OAAO;IAAA;IAAA,CAAA/N,cAAA,GAAA0H,CAAA,WAAI7C,MAAA,CAAOkJ,OAAO,CAACC,GAAG,GAAE;MAAA;MAAAhO,cAAA,GAAA0H,CAAA;MACxC,MAAMuG,MAAA;MAAA;MAAA,CAAAjO,cAAA,GAAAC,CAAA,SAAS8J,OAAA,CAAAC,MAAM,CAACkE,KAAK,CAACC,UAAU,CAAC/L,MAAA;MACvC,MAAMgM,UAAA;MAAA;MAAA,CAAApO,cAAA,GAAAC,CAAA,SAAa8J,OAAA,CAAAC,MAAM,CAACkE,KAAK,CAACC,UAAU,CAACtJ,MAAA,CAAOkJ,OAAO,CAACC,GAAG;MAAA;MAAAhO,cAAA,GAAAC,CAAA;MAE7D,IAAIgO,MAAA,CAAOI,EAAE,CAACD,UAAA,GAAa;QAAA;QAAApO,cAAA,GAAA0H,CAAA;QAAA1H,cAAA,GAAAC,CAAA;QACzB0H,YAAA,CAAa7B,CAAA,CAAEhD,mBAAmB,EAAE;QAAA;QAAA9C,cAAA,GAAAC,CAAA;QACpC;MACF;MAAA;MAAA;QAAAD,cAAA,GAAA0H,CAAA;MAAA;IACF;IAAA;IAAA;MAAA1H,cAAA,GAAA0H,CAAA;IAAA;IAAA1H,cAAA,GAAAC,CAAA;IAEAuF,eAAA,CAAgB;IAAA;IAAAxF,cAAA,GAAAC,CAAA;IAChBoH,WAAA,CAAY;IAAA;IAAArH,cAAA,GAAAC,CAAA;IAEZ,IAAI;MACF;MACA,MAAMqO,EAAA;MAAA;MAAA,CAAAtO,cAAA,GAAAC,CAAA,SAAK,MAAMsJ,gBAAA,CAAAC,OAAe,CAAC+E,cAAc,CAACnM,MAAA;MAAA;MAAApC,cAAA,GAAAC,CAAA;MAEhD0F,SAAA,CAAU2I,EAAA,CAAGE,IAAI;MAAA;MAAAxO,cAAA,GAAAC,CAAA;MACjBoH,WAAA,CAAY;MAAA;MAAArH,cAAA,GAAAC,CAAA;MACZ0H,YAAA,CAAa7B,CAAA,CAAEhE,oBAAoB,EAAE;MAErC;MACA,MAAM2M,OAAA;MAAA;MAAA,CAAAzO,cAAA,GAAAC,CAAA,SAAU,MAAMqO,EAAA,CAAGI,IAAI;MAAA;MAAA1O,cAAA,GAAAC,CAAA;MAE7B,IAAIwO,OAAA,CAAQ7K,MAAM,KAAK,GAAG;QAAA;QAAA5D,cAAA,GAAA0H,CAAA;QAAA1H,cAAA,GAAAC,CAAA;QACxBoH,WAAA,CAAY;QAAA;QAAArH,cAAA,GAAAC,CAAA;QACZ0H,YAAA,CAAa7B,CAAA,CAAE9D,kBAAkB,EAAE;QAEnC;QAAA;QAAAhC,cAAA,GAAAC,CAAA;QACA,MAAM0I,kBAAA;QAAA;QAAA3I,cAAA,GAAAC,CAAA;QACN,MAAM8E,cAAA;QAEN;QAAA;QAAA/E,cAAA,GAAAC,CAAA;QACAoJ,sBAAA;MACF,OAAO;QAAA;QAAArJ,cAAA,GAAA0H,CAAA;QAAA1H,cAAA,GAAAC,CAAA;QACLoH,WAAA,CAAY;QAAA;QAAArH,cAAA,GAAAC,CAAA;QACZ0H,YAAA,CAAa7B,CAAA,CAAE7D,iBAAiB,EAAE;MACpC;IACF,EAAE,OAAOyH,KAAA,EAAO;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MACd0J,OAAA,CAAQD,KAAK,CAAC,SAASA,KAAA;MAAA;MAAA1J,cAAA,GAAAC,CAAA;MACvBoH,WAAA,CAAY;MAAA;MAAArH,cAAA,GAAAC,CAAA;MACZ0H,YAAA,CAAa7B,CAAA,CAAE7D,iBAAiB,EAAE;IACpC,UAAU;MAAA;MAAAjC,cAAA,GAAAC,CAAA;MACRuF,eAAA,CAAgB;IAClB;EACF;EAEA;EAAA;EAAAxF,cAAA,GAAAC,CAAA;EACA,MAAM0O,mBAAA,GAAsB,MAAAA,CAAA;IAAA;IAAA3O,cAAA,GAAAqE,CAAA;IAAArE,cAAA,GAAAC,CAAA;IAC1B,IAAI,CAAC4E,MAAA,CAAOiE,WAAW,EAAE;MAAA;MAAA9I,cAAA,GAAA0H,CAAA;MAAA1H,cAAA,GAAAC,CAAA;MACvB,MAAM6E,OAAA;MAAA;MAAA9E,cAAA,GAAAC,CAAA;MACN0I,kBAAA;IACF;IAAA;IAAA;MAAA3I,cAAA,GAAA0H,CAAA;IAAA;EACF;EAAA;EAAA1H,cAAA,GAAAC,CAAA;EAEA,oBACE,IAAA2O,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;IAACC,EAAA,EAAI;MAAEC,CAAA,EAAG;MAAGC,QAAA,EAAU;MAAMC,EAAA,EAAI;IAAO;4BAC1C,IAAAN,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;MAACC,EAAA,EAAI;QACPI,OAAA,EAAS;QACTC,cAAA,EAAgB;QAChBC,UAAA,EAAY;QACZC,YAAA,EAAc;MAChB;8BACE,IAAAV,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;QAACC,OAAA,EAAQ;QAAKC,SAAA,EAAU;kBAChC5J,CAAA,CAAEhF;uBAGL,IAAA8N,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;QACLF,OAAA,EAAQ;QACRG,SAAA,eAAW,IAAAhB,WAAA,CAAAW,GAAA,EAACM,UAAA,CAAArG,OAAa;QACzBsG,OAAA,EAAStI,cAAA;QACTuH,EAAA,EAAI;UAAEgB,YAAA,EAAc;QAAO;kBAE1BnK,QAAA,KAAa;QAAA;QAAA,CAAA5F,cAAA,GAAA0H,CAAA,WAAO;QAAA;QAAA,CAAA1H,cAAA,GAAA0H,CAAA,WAAO;;QAI/B,CAAC7C,MAAA,CAAOiE,WAAW;IAAA;IAAA,cAAA9I,cAAA,GAAA0H,CAAA,WAClB,IAAAkH,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;MAACC,EAAA,EAAI;QAAEiB,SAAA,EAAW;QAAUC,EAAA,EAAI;MAAE;8BACpC,IAAArB,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;QACLF,OAAA,EAAQ;QACRS,KAAA,EAAM;QACNC,IAAA,EAAK;QACLL,OAAA,EAASnB,mBAAA;kBACV;uBAGD,IAAAC,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;QAACC,OAAA,EAAQ;QAAQV,EAAA,EAAI;UAAEqB,EAAA,EAAI;QAAE;kBAAG;;;;+CAK7C,IAAAxB,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;MAACC,EAAA,EAAI;QAAEI,OAAA,EAAS;QAAQkB,mBAAA,EAAqB;UAAEC,EAAA,EAAI;UAAOC,EAAA,EAAI;QAAU;QAAGC,GAAA,EAAK;MAAE;8BAEpF,IAAA5B,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAuK,GAAG;kBACF,iBAAAF,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAkM,IAAI;UAAC1B,EAAA,EAAI;YAAE2B,MAAA,EAAQ;UAAO;oBACzB,iBAAA9B,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAoM,WAAW;oCACV,IAAA/B,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;cAACC,OAAA,EAAQ;cAAKC,SAAA,EAAU;cAAKkB,YAAY;wBAAC;6BAIrD,IAAAhC,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAsM,SAAS;cACRC,SAAS;cACTC,IAAA,EAAK;cACLvD,KAAA,EAAM;cACNiC,OAAA,EAAQ;cACRuB,MAAA,EAAO;cACPC,KAAA,EAAO7O,MAAA;cACP8O,QAAA,EAAWC,CAAA,IAAM;gBAAA;gBAAAnR,cAAA,GAAAqE,CAAA;gBAAArE,cAAA,GAAAC,CAAA;gBAAA,OAAAiF,SAAA,CAAUiM,CAAA,CAAEC,MAAM,CAACH,KAAK;cAAA;cACzCI,QAAA;cAAU;cAAA,CAAArR,cAAA,GAAA0H,CAAA,YAACtE,aAAA,EAAekO,QAAA;cAAA;cAAA,CAAAtR,cAAA,GAAA0H,CAAA,WAAYnC,YAAA;6BAGxC,IAAAqJ,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;cAACC,EAAA,EAAI;gBAAEkB,EAAA,EAAI;cAAE;sCACf,IAAArB,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;gBAACC,OAAA,EAAQ;2BAAY,e,aACnB,IAAAb,WAAA,CAAAW,GAAA,EAAC;4BAAQpO;;+BAEtB,IAAAyN,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;gBAACC,OAAA,EAAQ;2BAAY,kBACfrM,aAAA;gBAAA;gBAAA,CAAApD,cAAA,GAAA0H,CAAA,WAAgB,CAAC,KAAKoE,UAAA,CAAW1I,aAAA,CAAcK,YAAY,IAAI,GAAE,CAAC,EAAGqJ,OAAO,CAAC;gBAAA;gBAAA,CAAA9M,cAAA,GAAA0H,CAAA,WAAK,MAAI;;6BAIzG,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;cACLmB,SAAS;cACTrB,OAAA,EAAQ;cACRS,KAAA,EAAM;cACNC,IAAA,EAAK;cACLL,OAAA,EAAS/C,cAAA;cACTsE,QAAA;cAAU;cAAA,CAAArR,cAAA,GAAA0H,CAAA,YAACtE,aAAA,EAAekO,QAAA;cAAA;cAAA,CAAAtR,cAAA,GAAA0H,CAAA,WAAYnC,YAAA;cAAA;cAAA,CAAAvF,cAAA,GAAA0H,CAAA,WAAgB,CAACtF,MAAA;cAAA;cAAA,CAAApC,cAAA,GAAA0H,CAAA,WAAUoE,UAAA,CAAW1J,MAAA,KAAW;cACvF2M,EAAA,EAAI;gBAAEqB,EAAA,EAAI;cAAE;wBAEX7K,YAAA;cAAA;cAAA,cAAAvF,cAAA,GAAA0H,CAAA,WAAe,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAgN,gBAAgB;gBAACpB,IAAA,EAAM;gBAAID,KAAA,EAAM;;;4CAAe;;YAGlE;YAAA,CAAAlQ,cAAA,GAAA0H,CAAA,YAACtE,aAAA,EAAekO,QAAA;YAAA;YAAA,CAAAtR,cAAA,GAAA0H,CAAA,wBACf,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiN,KAAK;cAAC3J,QAAA,EAAS;cAAUkH,EAAA,EAAI;gBAAEqB,EAAA,EAAI;cAAE;wBAAG;;YAM1C;YAAA,CAAApQ,cAAA,GAAA0H,CAAA,WAAAN,QAAA,KAAa;YAAA;YAAA,CAAApH,cAAA,GAAA0H,CAAA,wBACZ,IAAAkH,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;cAACC,EAAA,EAAI;gBACP0C,SAAA,EAAW;gBACXC,OAAA,EAAS;gBACT7D,eAAA,EAAiB;gBACjBkC,YAAA,EAAc;gBACd4B,MAAA,EAAQ;cACV;sCACE,IAAA/C,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;gBAACC,OAAA,EAAQ;gBAAQV,EAAA,EAAI;kBAAEO,YAAA,EAAc;gBAAM;;gBACnD;gBAAA,CAAAtP,cAAA,GAAA0H,CAAA,WAAAN,QAAA,KAAa;gBAAA;gBAAA,CAAApH,cAAA,GAAA0H,CAAA,WAAe5B,CAAA,CAAEhE,oBAAoB;gBAClD;gBAAA,CAAA9B,cAAA,GAAA0H,CAAA,WAAAN,QAAA,KAAa;gBAAA;gBAAA,CAAApH,cAAA,GAAA0H,CAAA,WAAa5B,CAAA,CAAE/D,kBAAkB;gBAC9C;gBAAA,CAAA/B,cAAA,GAAA0H,CAAA,WAAAN,QAAA,KAAa;gBAAA;gBAAA,CAAApH,cAAA,GAAA0H,CAAA,WAAa5B,CAAA,CAAE9D,kBAAkB;gBAC9C;gBAAA,CAAAhC,cAAA,GAAA0H,CAAA,WAAAN,QAAA,KAAa;gBAAA;gBAAA,CAAApH,cAAA,GAAA0H,CAAA,WAAY5B,CAAA,CAAE7D,iBAAiB;;cAG9C;cAAA,CAAAjC,cAAA,GAAA0H,CAAA,WAAApF,MAAA;cAAA;cAAA,CAAAtC,cAAA,GAAA0H,CAAA,wBACC,IAAAkH,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;gBAACC,EAAA,EAAI;kBAAEI,OAAA,EAAS;kBAAQE,UAAA,EAAY;kBAAUuC,QAAA,EAAU;kBAAQpB,GAAA,EAAK;gBAAO;wCAC9E,IAAA5B,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;kBAAUV,EAAA,EAAI;oBAChCE,QAAA,EAAU;oBACV4C,QAAA,EAAU;oBACVC,YAAA,EAAc;oBACdC,UAAA,EAAY;kBACd;4BACGzP;iCAGH,IAAAsM,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;kBACLQ,IAAA,EAAK;kBACLV,OAAA,EAAQ;kBACRK,OAAA,EAAS/H,UAAA;kBACTgH,EAAA,EAAI;oBAAEiD,QAAA,EAAU;oBAAQtB,MAAA,EAAQ;kBAAO;4BAEtCzN,MAAA;kBAAA;kBAAA,CAAAjD,cAAA,GAAA0H,CAAA,WAAS5B,CAAA,CAAE7C,MAAM;kBAAA;kBAAA,CAAAjD,cAAA,GAAA0H,CAAA,WAAG5B,CAAA,CAAE9C,IAAI;iCAG7B,IAAA4L,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;kBACLQ,IAAA,EAAK;kBACLV,OAAA,EAAQ;kBACRK,OAAA,EAAS1H,gBAAA;kBACT2G,EAAA,EAAI;oBAAEiD,QAAA,EAAU;oBAAQtB,MAAA,EAAQ;kBAAO;4BAEtC5K,CAAA,CAAE5D;;;;;;uBAWnB,IAAA0M,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAuK,GAAG;kBACF,iBAAAF,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAkM,IAAI;UAAC1B,EAAA,EAAI;YAAE2B,MAAA,EAAQ;UAAO;oBACzB,iBAAA9B,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAoM,WAAW;oCACV,IAAA/B,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;cAACC,OAAA,EAAQ;cAAKC,SAAA,EAAU;cAAKkB,YAAY;wBAAC;gBAIpDvL,SAAA;YAAA;YAAA,cAAArF,cAAA,GAAA0H,CAAA,WACC,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAuK,GAAG;cAACC,EAAA,EAAI;gBAAEI,OAAA,EAAS;gBAAQC,cAAA,EAAgB;gBAAUa,EAAA,EAAI;cAAE;wBAC1D,iBAAArB,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAgN,gBAAgB;;;uDAGnB,IAAA3C,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;sCACF,IAAAF,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;gBAACC,EAAA,EAAI;kBAAEI,OAAA,EAAS;kBAAQkB,mBAAA,EAAqB;kBAAWG,GAAA,EAAK;gBAAE;wCACjE,IAAA5B,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;;kBAAS;kBAAA,CAAAzP,cAAA,GAAA0H,CAAA,WAAAtE,aAAA,EAAe6O,eAAA;kBAAA;kBAAA,CAAAjS,cAAA,GAAA0H,CAAA,WAAmB;iCAE/D,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;;kBAAS;kBAAA,CAAAzP,cAAA,GAAA0H,CAAA,WAAAtE,aAAA,EAAe8O,oBAAA;kBAAA;kBAAA,CAAAlS,cAAA,GAAA0H,CAAA,WAAwB;iCAEpE,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;;kBAAS;kBAAA,CAAAzP,cAAA,GAAA0H,CAAA,WAAAtE,aAAA,EAAe+O,cAAA;kBAAA;kBAAA,CAAAnS,cAAA,GAAA0H,CAAA,WAAkB;iCAE9D,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;;kBAAS;kBAAA,CAAAzP,cAAA,GAAA0H,CAAA,WAAAtE,aAAA,EAAeK,YAAA;kBAAA;kBAAA,CAAAzD,cAAA,GAAA0H,CAAA,WAAgB,MAAI;iCAEhE,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;;kBAAS;kBAAA,CAAAzP,cAAA,GAAA0H,CAAA,WAAAtE,aAAA,EAAeM,cAAA;kBAAA;kBAAA,CAAA1D,cAAA,GAAA0H,CAAA,WAAkB,MAAI;iCAElE,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;;kBAAS;kBAAA,CAAAzP,cAAA,GAAA0H,CAAA,WAAAtE,aAAA,EAAeO,YAAA;kBAAA;kBAAA,CAAA3D,cAAA,GAAA0H,CAAA,WAAgB;iCAE5D,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAASrM,aAAA,EAAekO,QAAA;kBAAA;kBAAA,CAAAtR,cAAA,GAAA0H,CAAA,WAAW;kBAAA;kBAAA,CAAA1H,cAAA,GAAA0H,CAAA,WAAO;;+BAGhE,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAA6N,OAAO;gBAACrD,EAAA,EAAI;kBAAEkB,EAAA,EAAI;gBAAE;+BAErB,IAAArB,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;gBAACC,OAAA,EAAQ;gBAAKC,SAAA,EAAU;gBAAKkB,YAAY;0BAAC;+BAIrD,IAAAhC,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAuK,GAAG;gBAACC,EAAA,EAAI;kBAAEI,OAAA,EAAS;kBAAQkB,mBAAA,EAAqB;kBAAWG,GAAA,EAAK;gBAAE;wCACjE,IAAA5B,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;kBAAUV,EAAA,EAAI;oBAAEsD,SAAA,EAAW;kBAAY;;kBACxD;kBAAA,CAAArS,cAAA,GAAA0H,CAAA,WAAA7C,MAAA,CAAOgF,OAAO;kBAAA;kBAAA,CAAA7J,cAAA,GAAA0H,CAAA,WAAI;iCAGrB,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;6BACjB5K,MAAA,CAAOkJ,OAAO,EAAEC,GAAA;kBAAA;kBAAA,CAAAhO,cAAA,GAAA0H,CAAA,WAAMoE,UAAA,CAAWjH,MAAA,CAAOkJ,OAAO,CAACC,GAAG,EAAElB,OAAO,CAAC;kBAAA;kBAAA,CAAA9M,cAAA,GAAA0H,CAAA,WAAK,MAAI;iCAGzE,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;4BAAY;iCAChC,IAAAb,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;kBAACC,OAAA,EAAQ;6BACjB5K,MAAA,CAAOkJ,OAAO,EAAEuE,EAAA;kBAAA;kBAAA,CAAAtS,cAAA,GAAA0H,CAAA,WAAKoE,UAAA,CAAWjH,MAAA,CAAOkJ,OAAO,CAACuE,EAAE,EAAExF,OAAO,CAAC;kBAAA;kBAAA,CAAA9M,cAAA,GAAA0H,CAAA,WAAK,MAAI;;+BAIzE,IAAAkH,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;gBACLmB,SAAS;gBACTrB,OAAA,EAAQ;gBACRK,OAAA,EAASnH,kBAAA;gBACToG,EAAA,EAAI;kBAAEqB,EAAA,EAAI;gBAAE;0BACb;;;;;;sBAYf,IAAAxB,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAgO,MAAM;MAACjK,IAAA,EAAMtC,gBAAA;MAAkBwM,OAAA,EAASA,CAAA,KAAM;QAAA;QAAAxS,cAAA,GAAAqE,CAAA;QAAArE,cAAA,GAAAC,CAAA;QAAA,OAAAiN,uBAAA,CAAwB;MAAA;8BACrE,IAAA0B,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAkO,WAAW;kBAAE3M,CAAA,CAAEpE;uBAChB,IAAAkN,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAmO,aAAa;kBACZ,iBAAA9D,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiL,UAAU;oBAAE1J,CAAA,CAAEnE;;uBAEjB,IAAAiN,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAoO,aAAa;gCACZ,IAAA/D,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;UAACG,OAAA,EAASA,CAAA,KAAM;YAAA;YAAA9P,cAAA,GAAAqE,CAAA;YAAArE,cAAA,GAAAC,CAAA;YAAA,OAAAiN,uBAAA,CAAwB;UAAA;oBAASpH,CAAA,CAAErE;yBAC1D,IAAAmN,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;UAACG,OAAA,EAASA,CAAA,KAAM;YAAA;YAAA9P,cAAA,GAAAqE,CAAA;YAAArE,cAAA,GAAAC,CAAA;YAAA,OAAAiN,uBAAA,CAAwB;UAAA;UAAOuC,OAAA,EAAQ;oBAC3D3J,CAAA,CAAE/E;;;qBAMT,IAAA6N,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAgO,MAAM;MAACjK,IAAA,EAAMpC,iBAAA;MAAmBsM,OAAA,EAASA,CAAA,KAAM;QAAA;QAAAxS,cAAA,GAAAqE,CAAA;QAAArE,cAAA,GAAAC,CAAA;QAAA,OAAA+M,wBAAA,CAAyB;MAAA;8BACvE,IAAA4B,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAkO,WAAW;kBAAE3M,CAAA,CAAElE;uBAChB,IAAAgN,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAmO,aAAa;gCACZ,IAAA9D,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;qBACR1J,CAAA,CAAEjE,kBAAkB,EAAC,K,aAAC,IAAA+M,WAAA,CAAAC,IAAA,EAAC;uBAAQzM,MAAA,EAAO;cAAa;;QAErD;QAAA,CAAApC,cAAA,GAAA0H,CAAA,WAAAvG,eAAA;QAAA;QAAA,CAAAnB,cAAA,GAAA0H,CAAA,wBACC,IAAAkH,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAiL,UAAU;UAACT,EAAA,EAAI;YAAE0C,SAAA,EAAW;UAAO;qBACjC3L,CAAA,CAAE3E,eAAe,EAAC,K,aAAC,IAAAyN,WAAA,CAAAW,GAAA,EAAC;sBAAQpO;;;uBAInC,IAAAyN,WAAA,CAAAC,IAAA,EAACtK,SAAA,CAAAoO,aAAa;gCACZ,IAAA/D,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;UAACG,OAAA,EAASA,CAAA,KAAM;YAAA;YAAA9P,cAAA,GAAAqE,CAAA;YAAArE,cAAA,GAAAC,CAAA;YAAA,OAAA+M,wBAAA,CAAyB;UAAA;oBAASlH,CAAA,CAAErE;yBAC3D,IAAAmN,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAoL,MAAM;UAACG,OAAA,EAASA,CAAA,KAAM;YAAA;YAAA9P,cAAA,GAAAqE,CAAA;YAAArE,cAAA,GAAAC,CAAA;YAAA,OAAA+M,wBAAA,CAAyB;UAAA;UAAOyC,OAAA,EAAQ;oBAC5D3J,CAAA,CAAEtE;;;qBAMT,IAAAoN,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAqO,QAAQ;MACPtK,IAAA,EAAMlC,YAAA;MACNyM,gBAAA,EAAkB;MAClBL,OAAA,EAAS1K,mBAAA;MACTgL,YAAA,EAAc;QAAEC,QAAA,EAAU;QAAUC,UAAA,EAAY;MAAS;gBAEzD,iBAAApE,WAAA,CAAAW,GAAA,EAAChL,SAAA,CAAAiN,KAAK;QAACgB,OAAA,EAAS1K,mBAAA;QAAqBD,QAAA,EAAUrB,gBAAA;QAAkBuI,EAAA,EAAI;UAAEkE,KAAA,EAAO;QAAO;kBAClF3M;;;;AAKX;MAEAxG,QAAA;AAAA;AAAA,CAAAE,cAAA,GAAAC,CAAA,SAAemE,QAAA","ignoreList":[]}