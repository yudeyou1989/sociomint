{"version":3,"names":["_default","PriceChart","currentRound","initialPrice","priceIncrement","totalRounds","cov_1wjeme1em6","b","f","canvasRef","s","_react","useRef","generateChartData","data","round","price","push","drawChart","canvas","current","ctx","getContext","dpr","window","devicePixelRatio","rect","getBoundingClientRect","width","height","scale","padding","top","right","bottom","left","chartWidth","chartHeight","clearRect","minPrice","maxPrice","length","beginPath","moveTo","lineTo","strokeStyle","stroke","textAlign","textBaseline","fillStyle","font","ySteps","i","y","yValue","fillText","toFixed","xSteps","Math","min","x","roundValue","floor","forEach","point","index","lineWidth","currentIndex","arc","PI","fill","useEffect","handleResize","addEventListener","removeEventListener","_jsxruntime","jsxs","className","jsx","ref","style","backgroundColor"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/PriceChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { ethers } from 'ethers';\n\n// 图表数据接口\ninterface ChartData {\n  round: number;\n  price: number;\n}\n\ninterface PriceChartProps {\n  currentRound: number;\n  initialPrice: number;\n  priceIncrement: number;\n  totalRounds?: number;\n}\n\nconst PriceChart: React.FC<PriceChartProps> = ({ \n  currentRound,\n  initialPrice,\n  priceIncrement,\n  totalRounds = 100\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  \n  // 生成图表数据\n  const generateChartData = (): ChartData[] => {\n    const data: ChartData[] = [];\n    \n    // 生成历史数据和未来预测\n    for (let round = 1; round <= totalRounds; round++) {\n      const price = initialPrice + (priceIncrement * (round - 1));\n      data.push({ round, price });\n    }\n    \n    return data;\n  };\n  \n  // 绘制图表\n  const drawChart = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    // 生成数据\n    const data = generateChartData();\n    \n    // 设置画布尺寸\n    const dpr = window.devicePixelRatio || 1;\n    const rect = canvas.getBoundingClientRect();\n    \n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    ctx.scale(dpr, dpr);\n    \n    // 计算图表区域\n    const width = rect.width;\n    const height = rect.height;\n    const padding = { top: 20, right: 20, bottom: 30, left: 60 };\n    const chartWidth = width - padding.left - padding.right;\n    const chartHeight = height - padding.top - padding.bottom;\n    \n    // 清空画布\n    ctx.clearRect(0, 0, width, height);\n    \n    // 找到价格的最大值和最小值\n    const minPrice = data[0].price;\n    const maxPrice = data[data.length - 1].price;\n    \n    // 绘制坐标轴\n    ctx.beginPath();\n    ctx.moveTo(padding.left, padding.top);\n    ctx.lineTo(padding.left, height - padding.bottom);\n    ctx.lineTo(width - padding.right, height - padding.bottom);\n    ctx.strokeStyle = '#ced4da';\n    ctx.stroke();\n    \n    // 绘制Y轴标签\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#495057';\n    ctx.font = '10px sans-serif';\n    \n    const ySteps = 5;\n    for (let i = 0; i <= ySteps; i++) {\n      const y = padding.top + (chartHeight / ySteps) * i;\n      const yValue = maxPrice - ((maxPrice - minPrice) / ySteps) * i;\n      \n      ctx.beginPath();\n      ctx.moveTo(padding.left - 5, y);\n      ctx.lineTo(padding.left, y);\n      ctx.stroke();\n      \n      ctx.fillText((yValue / 1e12).toFixed(12), padding.left - 10, y);\n      \n      // 绘制网格线\n      ctx.beginPath();\n      ctx.moveTo(padding.left, y);\n      ctx.lineTo(width - padding.right, y);\n      ctx.strokeStyle = 'rgba(222, 226, 230, 0.5)';\n      ctx.stroke();\n    }\n    \n    // 绘制X轴标签\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    \n    const xSteps = Math.min(10, totalRounds);\n    for (let i = 0; i <= xSteps; i++) {\n      const x = padding.left + (chartWidth / xSteps) * i;\n      const roundValue = Math.floor(1 + (totalRounds / xSteps) * i);\n      \n      ctx.beginPath();\n      ctx.moveTo(x, height - padding.bottom);\n      ctx.lineTo(x, height - padding.bottom + 5);\n      ctx.strokeStyle = '#ced4da';\n      ctx.stroke();\n      \n      ctx.fillText(`轮次 ${roundValue}`, x, height - padding.bottom + 10);\n    }\n    \n    // 绘制价格线\n    ctx.beginPath();\n    data.forEach((point, index) => {\n      const x = padding.left + (chartWidth / (totalRounds - 1)) * (point.round - 1);\n      const y = padding.top + chartHeight - (chartHeight * (point.price - minPrice) / (maxPrice - minPrice));\n      \n      if (index === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    });\n    ctx.strokeStyle = '#339af0';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    \n    // 绘制当前轮次的标记\n    const currentIndex = currentRound - 1;\n    if (currentIndex >= 0 && currentIndex < data.length) {\n      const point = data[currentIndex];\n      const x = padding.left + (chartWidth / (totalRounds - 1)) * (point.round - 1);\n      const y = padding.top + chartHeight - (chartHeight * (point.price - minPrice) / (maxPrice - minPrice));\n      \n      // 绘制圆点\n      ctx.beginPath();\n      ctx.arc(x, y, 5, 0, Math.PI * 2);\n      ctx.fillStyle = '#fa5252';\n      ctx.fill();\n      \n      // 绘制标签\n      ctx.fillStyle = '#212529';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'bottom';\n      ctx.font = '12px sans-serif';\n      ctx.fillText(`当前：${(point.price / 1e12).toFixed(12)} BNB/SM`, x, y - 10);\n    }\n    \n    // 添加图表标题\n    ctx.fillStyle = '#343a40';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    ctx.font = 'bold 14px sans-serif';\n    ctx.fillText('SM 代币价格趋势图', width / 2, 5);\n  };\n  \n  // 当数据变化时重新绘制图表\n  useEffect(() => {\n    drawChart();\n    \n    // 当窗口大小变化时重新绘制图表\n    const handleResize = () => {\n      drawChart();\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [currentRound, initialPrice, priceIncrement, totalRounds]);\n  \n  return (\n    <div className=\"price-chart-container\">\n      <canvas \n        ref={canvasRef} \n        className=\"price-chart\"\n      />\n      <div className=\"chart-legend\">\n        <div className=\"legend-item\">\n          <span className=\"legend-color\" style={{ backgroundColor: '#339af0' }}></span>\n          <span className=\"legend-text\">价格曲线</span>\n        </div>\n        <div className=\"legend-item\">\n          <span className=\"legend-color\" style={{ backgroundColor: '#fa5252' }}></span>\n          <span className=\"legend-text\">当前价格</span>\n        </div>\n      </div>\n      <style>\n        {`\n        .price-chart-container {\n          border-radius: 12px;\n          background-color: white;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          padding: 16px;\n          margin: 24px 0;\n        }\n        \n        .price-chart {\n          width: 100%;\n          height: 300px;\n          display: block;\n        }\n        \n        .chart-legend {\n          display: flex;\n          justify-content: center;\n          gap: 24px;\n          margin-top: 16px;\n        }\n        \n        .legend-item {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          font-size: 12px;\n          color: #495057;\n        }\n        \n        .legend-color {\n          width: 12px;\n          height: 12px;\n          border-radius: 2px;\n        }\n        \n        .legend-text {\n          font-weight: 500;\n        }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default PriceChart; "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}