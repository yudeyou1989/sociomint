a91e08ef641a93d4f6cb4527922a41c2
"use client";
"use strict";

/* istanbul ignore next */
function cov_299lvsk34d() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/GlobalStateContext.tsx";
  var hash = "164b8fcacc2f695d988f1adfad282d8cf2913d7d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/GlobalStateContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 26
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "12": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 48
        }
      },
      "13": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "14": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "15": {
        start: {
          line: 41,
          column: 39
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "16": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 41
        }
      },
      "17": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "18": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 20
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "20": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "21": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 19
        }
      },
      "22": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "24": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 53
        }
      },
      "25": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "26": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "27": {
        start: {
          line: 61,
          column: 17
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "28": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 64,
          column: 88
        }
      },
      "29": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "30": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "31": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 95
        }
      },
      "32": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "33": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "34": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 39
        }
      },
      "35": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 25
        }
      },
      "36": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "37": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 31
        }
      },
      "38": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 18
        }
      },
      "39": {
        start: {
          line: 82,
          column: 21
        },
        end: {
          line: 91,
          column: 1
        }
      },
      "40": {
        start: {
          line: 93,
          column: 41
        },
        end: {
          line: 93,
          column: 77
        }
      },
      "41": {
        start: {
          line: 95,
          column: 21
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "42": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 54
        }
      },
      "44": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 102,
          column: 10
        }
      },
      "45": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 17
        }
      },
      "46": {
        start: {
          line: 106,
          column: 24
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "47": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "48": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 57
        }
      },
      "49": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "50": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 17
        }
      },
      "51": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 158,
          column: 1
        }
      },
      "52": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "53": {
        start: {
          line: 120,
          column: 36
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "54": {
        start: {
          line: 127,
          column: 37
        },
        end: {
          line: 127,
          column: 39
        }
      },
      "55": {
        start: {
          line: 128,
          column: 41
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "56": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "57": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 63
        }
      },
      "58": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 139,
          column: 14
        }
      },
      "59": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 148,
          column: 14
        }
      },
      "60": {
        start: {
          line: 143,
          column: 60
        },
        end: {
          line: 146,
          column: 25
        }
      },
      "61": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 154,
          column: 14
        }
      },
      "62": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "63": {
        start: {
          line: 159,
          column: 23
        },
        end: {
          line: 193,
          column: 1
        }
      },
      "64": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "65": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 166,
          column: 14
        }
      },
      "66": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 176,
          column: 14
        }
      },
      "67": {
        start: {
          line: 178,
          column: 36
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "68": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 51
        }
      },
      "69": {
        start: {
          line: 183,
          column: 33
        },
        end: {
          line: 183,
          column: 77
        }
      },
      "70": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 189,
          column: 14
        }
      },
      "71": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 25
        }
      },
      "72": {
        start: {
          line: 194,
          column: 21
        },
        end: {
          line: 230,
          column: 1
        }
      },
      "73": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "74": {
        start: {
          line: 197,
          column: 46
        },
        end: {
          line: 197,
          column: 60
        }
      },
      "75": {
        start: {
          line: 198,
          column: 25
        },
        end: {
          line: 202,
          column: 13
        }
      },
      "76": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 210,
          column: 14
        }
      },
      "77": {
        start: {
          line: 212,
          column: 29
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "78": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 44
        }
      },
      "79": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 220,
          column: 14
        }
      },
      "80": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 226,
          column: 14
        }
      },
      "81": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 25
        }
      },
      "82": {
        start: {
          line: 231,
          column: 21
        },
        end: {
          line: 262,
          column: 1
        }
      },
      "83": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "84": {
        start: {
          line: 234,
          column: 37
        },
        end: {
          line: 234,
          column: 51
        }
      },
      "85": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 242,
          column: 14
        }
      },
      "86": {
        start: {
          line: 244,
          column: 30
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "87": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 45
        }
      },
      "88": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 252,
          column: 14
        }
      },
      "89": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 258,
          column: 14
        }
      },
      "90": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 25
        }
      },
      "91": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 272,
          column: 76
        }
      },
      "92": {
        start: {
          line: 272,
          column: 38
        },
        end: {
          line: 272,
          column: 67
        }
      },
      "93": {
        start: {
          line: 274,
          column: 28
        },
        end: {
          line: 323,
          column: 1
        }
      },
      "94": {
        start: {
          line: 276,
          column: 28
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "95": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "96": {
        start: {
          line: 278,
          column: 31
        },
        end: {
          line: 278,
          column: 60
        }
      },
      "97": {
        start: {
          line: 279,
          column: 34
        },
        end: {
          line: 279,
          column: 66
        }
      },
      "98": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 284,
          column: 14
        }
      },
      "99": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 28
        }
      },
      "100": {
        start: {
          line: 288,
          column: 30
        },
        end: {
          line: 288,
          column: 84
        }
      },
      "101": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 311,
          column: 7
        }
      },
      "102": {
        start: {
          line: 291,
          column: 24
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "103": {
        start: {
          line: 292,
          column: 24
        },
        end: {
          line: 292,
          column: 34
        }
      },
      "104": {
        start: {
          line: 293,
          column: 29
        },
        end: {
          line: 293,
          column: 34
        }
      },
      "105": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 303,
          column: 15
        }
      },
      "106": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "107": {
        start: {
          line: 297,
          column: 20
        },
        end: {
          line: 300,
          column: 23
        }
      },
      "108": {
        start: {
          line: 301,
          column: 20
        },
        end: {
          line: 301,
          column: 38
        }
      },
      "109": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 30
        }
      },
      "110": {
        start: {
          line: 307,
          column: 25
        },
        end: {
          line: 307,
          column: 52
        }
      },
      "111": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 43
        }
      },
      "112": {
        start: {
          line: 308,
          column: 19
        },
        end: {
          line: 308,
          column: 42
        }
      },
      "113": {
        start: {
          line: 313,
          column: 25
        },
        end: {
          line: 318,
          column: 6
        }
      },
      "114": {
        start: {
          line: 313,
          column: 50
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "115": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 322,
          column: 7
        }
      },
      "116": {
        start: {
          line: 324,
          column: 23
        },
        end: {
          line: 330,
          column: 1
        }
      },
      "117": {
        start: {
          line: 325,
          column: 20
        },
        end: {
          line: 325,
          column: 62
        }
      },
      "118": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "119": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 71
        }
      },
      "120": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 19
        }
      },
      "121": {
        start: {
          line: 331,
          column: 17
        },
        end: {
          line: 356,
          column: 1
        }
      },
      "122": {
        start: {
          line: 332,
          column: 32
        },
        end: {
          line: 332,
          column: 48
        }
      },
      "123": {
        start: {
          line: 334,
          column: 21
        },
        end: {
          line: 341,
          column: 6
        }
      },
      "124": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 338,
          column: 11
        }
      },
      "125": {
        start: {
          line: 342,
          column: 24
        },
        end: {
          line: 350,
          column: 6
        }
      },
      "126": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 346,
          column: 11
        }
      },
      "127": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 355,
          column: 6
        }
      },
      "128": {
        start: {
          line: 357,
          column: 20
        },
        end: {
          line: 391,
          column: 1
        }
      },
      "129": {
        start: {
          line: 358,
          column: 32
        },
        end: {
          line: 358,
          column: 48
        }
      },
      "130": {
        start: {
          line: 359,
          column: 24
        },
        end: {
          line: 366,
          column: 6
        }
      },
      "131": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 363,
          column: 11
        }
      },
      "132": {
        start: {
          line: 368,
          column: 25
        },
        end: {
          line: 385,
          column: 6
        }
      },
      "133": {
        start: {
          line: 369,
          column: 26
        },
        end: {
          line: 375,
          column: 9
        }
      },
      "134": {
        start: {
          line: 376,
          column: 29
        },
        end: {
          line: 376,
          column: 62
        }
      },
      "135": {
        start: {
          line: 377,
          column: 26
        },
        end: {
          line: 377,
          column: 63
        }
      },
      "136": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "137": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 390,
          column: 6
        }
      },
      "138": {
        start: {
          line: 392,
          column: 25
        },
        end: {
          line: 438,
          column: 1
        }
      },
      "139": {
        start: {
          line: 393,
          column: 32
        },
        end: {
          line: 393,
          column: 48
        }
      },
      "140": {
        start: {
          line: 394,
          column: 28
        },
        end: {
          line: 415,
          column: 6
        }
      },
      "141": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 398,
          column: 11
        }
      },
      "142": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "143": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 410,
          column: 21
        }
      },
      "144": {
        start: {
          line: 403,
          column: 43
        },
        end: {
          line: 403,
          column: 65
        }
      },
      "145": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 409,
          column: 17
        }
      },
      "146": {
        start: {
          line: 405,
          column: 20
        },
        end: {
          line: 408,
          column: 23
        }
      },
      "147": {
        start: {
          line: 416,
          column: 23
        },
        end: {
          line: 423,
          column: 6
        }
      },
      "148": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 420,
          column: 11
        }
      },
      "149": {
        start: {
          line: 424,
          column: 31
        },
        end: {
          line: 430,
          column: 6
        }
      },
      "150": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 427,
          column: 11
        }
      },
      "151": {
        start: {
          line: 431,
          column: 4
        },
        end: {
          line: 437,
          column: 6
        }
      },
      "152": {
        start: {
          line: 433,
          column: 53
        },
        end: {
          line: 433,
          column: 60
        }
      },
      "153": {
        start: {
          line: 439,
          column: 19
        },
        end: {
          line: 473,
          column: 1
        }
      },
      "154": {
        start: {
          line: 440,
          column: 32
        },
        end: {
          line: 440,
          column: 48
        }
      },
      "155": {
        start: {
          line: 441,
          column: 23
        },
        end: {
          line: 448,
          column: 6
        }
      },
      "156": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 445,
          column: 11
        }
      },
      "157": {
        start: {
          line: 449,
          column: 22
        },
        end: {
          line: 457,
          column: 6
        }
      },
      "158": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 453,
          column: 11
        }
      },
      "159": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 454,
          column: 22
        }
      },
      "160": {
        start: {
          line: 458,
          column: 23
        },
        end: {
          line: 465,
          column: 6
        }
      },
      "161": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 462,
          column: 11
        }
      },
      "162": {
        start: {
          line: 466,
          column: 4
        },
        end: {
          line: 472,
          column: 6
        }
      },
      "163": {
        start: {
          line: 474,
          column: 22
        },
        end: {
          line: 523,
          column: 1
        }
      },
      "164": {
        start: {
          line: 475,
          column: 32
        },
        end: {
          line: 475,
          column: 48
        }
      },
      "165": {
        start: {
          line: 476,
          column: 21
        },
        end: {
          line: 487,
          column: 6
        }
      },
      "166": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 484,
          column: 11
        }
      },
      "167": {
        start: {
          line: 488,
          column: 21
        },
        end: {
          line: 503,
          column: 6
        }
      },
      "168": {
        start: {
          line: 489,
          column: 21
        },
        end: {
          line: 489,
          column: 37
        }
      },
      "169": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 31
        }
      },
      "170": {
        start: {
          line: 490,
          column: 19
        },
        end: {
          line: 490,
          column: 31
        }
      },
      "171": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 498,
          column: 9
        }
      },
      "172": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 496,
          column: 15
        }
      },
      "173": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 24
        }
      },
      "174": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 26
        }
      },
      "175": {
        start: {
          line: 504,
          column: 23
        },
        end: {
          line: 517,
          column: 6
        }
      },
      "176": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "177": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 509,
          column: 15
        }
      },
      "178": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 513,
          column: 15
        }
      },
      "179": {
        start: {
          line: 518,
          column: 4
        },
        end: {
          line: 522,
          column: 6
        }
      },
      "180": {
        start: {
          line: 524,
          column: 23
        },
        end: {
          line: 559,
          column: 1
        }
      },
      "181": {
        start: {
          line: 525,
          column: 32
        },
        end: {
          line: 525,
          column: 48
        }
      },
      "182": {
        start: {
          line: 526,
          column: 21
        },
        end: {
          line: 536,
          column: 6
        }
      },
      "183": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 533,
          column: 11
        }
      },
      "184": {
        start: {
          line: 537,
          column: 23
        },
        end: {
          line: 544,
          column: 6
        }
      },
      "185": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 541,
          column: 11
        }
      },
      "186": {
        start: {
          line: 545,
          column: 27
        },
        end: {
          line: 551,
          column: 6
        }
      },
      "187": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 548,
          column: 11
        }
      },
      "188": {
        start: {
          line: 552,
          column: 4
        },
        end: {
          line: 558,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 13,
            column: 26
          }
        },
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 20
          },
          end: {
            line: 16,
            column: 21
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 22,
            column: 17
          }
        },
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 23
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 20
          }
        },
        loc: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 21
          }
        },
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 14
          },
          end: {
            line: 34,
            column: 15
          }
        },
        loc: {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 33
          }
        },
        loc: {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 40
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 40
          }
        },
        loc: {
          start: {
            line: 44,
            column: 61
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "11": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 34
          }
        },
        loc: {
          start: {
            line: 48,
            column: 53
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 48
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 95,
            column: 21
          },
          end: {
            line: 95,
            column: 22
          }
        },
        loc: {
          start: {
            line: 95,
            column: 38
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 95
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 106,
            column: 24
          },
          end: {
            line: 106,
            column: 25
          }
        },
        loc: {
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 106
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 117,
            column: 28
          },
          end: {
            line: 117,
            column: 29
          }
        },
        loc: {
          start: {
            line: 117,
            column: 45
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 117
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 143,
            column: 55
          },
          end: {
            line: 143,
            column: 56
          }
        },
        loc: {
          start: {
            line: 143,
            column: 60
          },
          end: {
            line: 146,
            column: 25
          }
        },
        line: 143
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 159,
            column: 23
          },
          end: {
            line: 159,
            column: 24
          }
        },
        loc: {
          start: {
            line: 159,
            column: 40
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 159
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 194,
            column: 21
          },
          end: {
            line: 194,
            column: 22
          }
        },
        loc: {
          start: {
            line: 194,
            column: 38
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 194
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 231,
            column: 21
          },
          end: {
            line: 231,
            column: 22
          }
        },
        loc: {
          start: {
            line: 231,
            column: 38
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 231
      },
      "19": {
        name: "rootReducer",
        decl: {
          start: {
            line: 264,
            column: 9
          },
          end: {
            line: 264,
            column: 20
          }
        },
        loc: {
          start: {
            line: 264,
            column: 36
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 264
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 272,
            column: 13
          },
          end: {
            line: 272,
            column: 14
          }
        },
        loc: {
          start: {
            line: 272,
            column: 38
          },
          end: {
            line: 272,
            column: 67
          }
        },
        line: 272
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 274,
            column: 28
          },
          end: {
            line: 274,
            column: 29
          }
        },
        loc: {
          start: {
            line: 274,
            column: 44
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 274
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 276,
            column: 28
          },
          end: {
            line: 276,
            column: 29
          }
        },
        loc: {
          start: {
            line: 276,
            column: 32
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 276
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 290,
            column: 26
          },
          end: {
            line: 290,
            column: 27
          }
        },
        loc: {
          start: {
            line: 290,
            column: 30
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 290
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 291,
            column: 24
          },
          end: {
            line: 291,
            column: 25
          }
        },
        loc: {
          start: {
            line: 291,
            column: 28
          },
          end: {
            line: 305,
            column: 9
          }
        },
        line: 291
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 295,
            column: 48
          },
          end: {
            line: 295,
            column: 49
          }
        },
        loc: {
          start: {
            line: 295,
            column: 63
          },
          end: {
            line: 303,
            column: 13
          }
        },
        line: 295
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 308,
            column: 15
          },
          end: {
            line: 308,
            column: 16
          }
        },
        loc: {
          start: {
            line: 308,
            column: 19
          },
          end: {
            line: 308,
            column: 42
          }
        },
        line: 308
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 313,
            column: 45
          },
          end: {
            line: 313,
            column: 46
          }
        },
        loc: {
          start: {
            line: 313,
            column: 50
          },
          end: {
            line: 316,
            column: 9
          }
        },
        line: 313
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 324,
            column: 23
          },
          end: {
            line: 324,
            column: 24
          }
        },
        loc: {
          start: {
            line: 324,
            column: 27
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 324
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 331,
            column: 17
          },
          end: {
            line: 331,
            column: 18
          }
        },
        loc: {
          start: {
            line: 331,
            column: 21
          },
          end: {
            line: 356,
            column: 1
          }
        },
        line: 331
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 334,
            column: 45
          },
          end: {
            line: 334,
            column: 46
          }
        },
        loc: {
          start: {
            line: 334,
            column: 54
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 334
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 342,
            column: 48
          },
          end: {
            line: 342,
            column: 49
          }
        },
        loc: {
          start: {
            line: 342,
            column: 52
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 342
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 357,
            column: 20
          },
          end: {
            line: 357,
            column: 21
          }
        },
        loc: {
          start: {
            line: 357,
            column: 24
          },
          end: {
            line: 391,
            column: 1
          }
        },
        line: 357
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 359,
            column: 48
          },
          end: {
            line: 359,
            column: 49
          }
        },
        loc: {
          start: {
            line: 359,
            column: 60
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 359
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 368,
            column: 49
          },
          end: {
            line: 368,
            column: 50
          }
        },
        loc: {
          start: {
            line: 368,
            column: 53
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 368
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 392,
            column: 25
          },
          end: {
            line: 392,
            column: 26
          }
        },
        loc: {
          start: {
            line: 392,
            column: 29
          },
          end: {
            line: 438,
            column: 1
          }
        },
        line: 392
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 394,
            column: 52
          },
          end: {
            line: 394,
            column: 53
          }
        },
        loc: {
          start: {
            line: 394,
            column: 68
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 394
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 401,
            column: 23
          },
          end: {
            line: 401,
            column: 24
          }
        },
        loc: {
          start: {
            line: 401,
            column: 27
          },
          end: {
            line: 410,
            column: 13
          }
        },
        line: 401
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 416,
            column: 47
          },
          end: {
            line: 416,
            column: 48
          }
        },
        loc: {
          start: {
            line: 416,
            column: 53
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 416
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 424,
            column: 55
          },
          end: {
            line: 424,
            column: 56
          }
        },
        loc: {
          start: {
            line: 424,
            column: 59
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 424
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 433,
            column: 48
          },
          end: {
            line: 433,
            column: 49
          }
        },
        loc: {
          start: {
            line: 433,
            column: 53
          },
          end: {
            line: 433,
            column: 60
          }
        },
        line: 433
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 439,
            column: 19
          },
          end: {
            line: 439,
            column: 20
          }
        },
        loc: {
          start: {
            line: 439,
            column: 23
          },
          end: {
            line: 473,
            column: 1
          }
        },
        line: 439
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 441,
            column: 47
          },
          end: {
            line: 441,
            column: 48
          }
        },
        loc: {
          start: {
            line: 441,
            column: 60
          },
          end: {
            line: 446,
            column: 5
          }
        },
        line: 441
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 449,
            column: 46
          },
          end: {
            line: 449,
            column: 47
          }
        },
        loc: {
          start: {
            line: 449,
            column: 56
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 449
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 458,
            column: 47
          },
          end: {
            line: 458,
            column: 48
          }
        },
        loc: {
          start: {
            line: 458,
            column: 57
          },
          end: {
            line: 463,
            column: 5
          }
        },
        line: 458
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 474,
            column: 22
          },
          end: {
            line: 474,
            column: 23
          }
        },
        loc: {
          start: {
            line: 474,
            column: 26
          },
          end: {
            line: 523,
            column: 1
          }
        },
        line: 474
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 476,
            column: 45
          },
          end: {
            line: 476,
            column: 46
          }
        },
        loc: {
          start: {
            line: 476,
            column: 70
          },
          end: {
            line: 485,
            column: 5
          }
        },
        line: 476
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 488,
            column: 45
          },
          end: {
            line: 488,
            column: 46
          }
        },
        loc: {
          start: {
            line: 488,
            column: 52
          },
          end: {
            line: 500,
            column: 5
          }
        },
        line: 488
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 504,
            column: 47
          },
          end: {
            line: 504,
            column: 48
          }
        },
        loc: {
          start: {
            line: 504,
            column: 54
          },
          end: {
            line: 515,
            column: 5
          }
        },
        line: 504
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 524,
            column: 23
          },
          end: {
            line: 524,
            column: 24
          }
        },
        loc: {
          start: {
            line: 524,
            column: 27
          },
          end: {
            line: 559,
            column: 1
          }
        },
        line: 524
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 526,
            column: 45
          },
          end: {
            line: 526,
            column: 46
          }
        },
        loc: {
          start: {
            line: 526,
            column: 61
          },
          end: {
            line: 534,
            column: 5
          }
        },
        line: 526
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 537,
            column: 47
          },
          end: {
            line: 537,
            column: 48
          }
        },
        loc: {
          start: {
            line: 537,
            column: 54
          },
          end: {
            line: 542,
            column: 5
          }
        },
        line: 537
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 545,
            column: 51
          },
          end: {
            line: 545,
            column: 52
          }
        },
        loc: {
          start: {
            line: 545,
            column: 55
          },
          end: {
            line: 549,
            column: 5
          }
        },
        line: 545
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 45,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 45,
            column: 45
          }
        }, {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 45,
            column: 65
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 27
          }
        }, {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 47
          }
        }, {
          start: {
            line: 52,
            column: 51
          },
          end: {
            line: 52,
            column: 76
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 31
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 53
          }
        }, {
          start: {
            line: 64,
            column: 57
          },
          end: {
            line: 64,
            column: 88
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 29
          }
        }, {
          start: {
            line: 66,
            column: 33
          },
          end: {
            line: 66,
            column: 79
          }
        }],
        line: 66
      },
      "11": {
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 47
          },
          end: {
            line: 67,
            column: 88
          }
        }, {
          start: {
            line: 67,
            column: 91
          },
          end: {
            line: 67,
            column: 95
          }
        }],
        line: 67
      },
      "12": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        }],
        line: 68
      },
      "13": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 20
          }
        }, {
          start: {
            line: 68,
            column: 25
          },
          end: {
            line: 68,
            column: 33
          }
        }, {
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 68,
            column: 45
          }
        }],
        line: 68
      },
      "14": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "15": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "16": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "17": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 139,
            column: 14
          }
        }, {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 148,
            column: 14
          }
        }, {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 154,
            column: 14
          }
        }, {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 156,
            column: 25
          }
        }],
        line: 118
      },
      "18": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "19": {
        loc: {
          start: {
            line: 143,
            column: 60
          },
          end: {
            line: 146,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 86
          },
          end: {
            line: 146,
            column: 21
          }
        }, {
          start: {
            line: 146,
            column: 24
          },
          end: {
            line: 146,
            column: 25
          }
        }],
        line: 143
      },
      "20": {
        loc: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 166,
            column: 14
          }
        }, {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 176,
            column: 14
          }
        }, {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 189,
            column: 14
          }
        }, {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 191,
            column: 25
          }
        }],
        line: 160
      },
      "21": {
        loc: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 210,
            column: 14
          }
        }, {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 220,
            column: 14
          }
        }, {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 226,
            column: 14
          }
        }, {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 228,
            column: 25
          }
        }],
        line: 195
      },
      "22": {
        loc: {
          start: {
            line: 201,
            column: 27
          },
          end: {
            line: 201,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 39
          },
          end: {
            line: 201,
            column: 61
          }
        }, {
          start: {
            line: 201,
            column: 64
          },
          end: {
            line: 201,
            column: 73
          }
        }],
        line: 201
      },
      "23": {
        loc: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 242,
            column: 14
          }
        }, {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 252,
            column: 14
          }
        }, {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 258,
            column: 14
          }
        }, {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 260,
            column: 25
          }
        }],
        line: 232
      },
      "24": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "25": {
        loc: {
          start: {
            line: 282,
            column: 23
          },
          end: {
            line: 282,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 23
          },
          end: {
            line: 282,
            column: 33
          }
        }, {
          start: {
            line: 282,
            column: 37
          },
          end: {
            line: 282,
            column: 55
          }
        }],
        line: 282
      },
      "26": {
        loc: {
          start: {
            line: 283,
            column: 26
          },
          end: {
            line: 283,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 283,
            column: 42
          },
          end: {
            line: 283,
            column: 55
          }
        }, {
          start: {
            line: 283,
            column: 58
          },
          end: {
            line: 283,
            column: 79
          }
        }],
        line: 283
      },
      "27": {
        loc: {
          start: {
            line: 296,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "28": {
        loc: {
          start: {
            line: 296,
            column: 20
          },
          end: {
            line: 296,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 20
          },
          end: {
            line: 296,
            column: 34
          }
        }, {
          start: {
            line: 296,
            column: 38
          },
          end: {
            line: 296,
            column: 58
          }
        }],
        line: 296
      },
      "29": {
        loc: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "30": {
        loc: {
          start: {
            line: 345,
            column: 21
          },
          end: {
            line: 345,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 345,
            column: 47
          },
          end: {
            line: 345,
            column: 53
          }
        }, {
          start: {
            line: 345,
            column: 56
          },
          end: {
            line: 345,
            column: 63
          }
        }],
        line: 345
      },
      "31": {
        loc: {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "32": {
        loc: {
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 409,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 409,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "33": {
        loc: {
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 490,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 490,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "34": {
        loc: {
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "35": {
        loc: {
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 492,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 492,
            column: 26
          }
        }, {
          start: {
            line: 492,
            column: 30
          },
          end: {
            line: 492,
            column: 57
          }
        }],
        line: 492
      },
      "36": {
        loc: {
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 514,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 514,
            column: 9
          }
        }, {
          start: {
            line: 510,
            column: 15
          },
          end: {
            line: 514,
            column: 9
          }
        }],
        line: 505
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0],
      "21": [0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/contexts/GlobalStateContext.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { createContext, useContext, useReducer, ReactNode, Dispatch, useMemo, useCallback, useEffect } from 'react';\n\n// \u5B9A\u4E49\u5168\u5C40\u72B6\u6001\u7C7B\u578B\ninterface GlobalState {\n  theme: 'light' | 'dark';\n  language: 'zh' | 'en' | 'ko' | 'ja' | 'ru'; // \u6269\u5C55\u652F\u6301\u66F4\u591A\u8BED\u8A00\n  notifications: Notification[];\n  isLoading: boolean;\n  loadingTasks: Record<string, boolean>; // \u8DDF\u8E2A\u591A\u4E2A\u52A0\u8F7D\u4EFB\u52A1\n  lastUpdated: number;\n  cache: Record<string, any>; // \u901A\u7528\u7F13\u5B58\u5B58\u50A8\n  errors: Record<string, string>; // \u9519\u8BEF\u5B58\u50A8\n}\n\n// \u901A\u77E5\u7C7B\u578B\ninterface Notification {\n  id: string;\n  type: 'success' | 'info' | 'warning' | 'error';\n  message: string;\n  createdAt: number;\n  read: boolean;\n  actionUrl?: string; // \u53EF\u9009\u7684\u64CD\u4F5CURL\n  autoClose?: boolean; // \u662F\u5426\u81EA\u52A8\u5173\u95ED\n}\n\n// \u5B9A\u4E49 Action \u7C7B\u578B\ntype Action =\n  | { type: 'SET_THEME'; payload: 'light' | 'dark' }\n  | { type: 'SET_LANGUAGE'; payload: 'zh' | 'en' | 'ko' | 'ja' | 'ru' }\n  | { type: 'ADD_NOTIFICATION'; payload: Omit<Notification, 'id' | 'createdAt' | 'read'> }\n  | { type: 'MARK_NOTIFICATION_READ'; payload: string }\n  | { type: 'CLEAR_NOTIFICATIONS' }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'START_LOADING_TASK'; payload: string }\n  | { type: 'FINISH_LOADING_TASK'; payload: string }\n  | { type: 'SET_CACHE_ITEM'; payload: { key: string, value: any, expiresIn?: number } }\n  | { type: 'CLEAR_CACHE_ITEM'; payload: string }\n  | { type: 'CLEAR_CACHE' }\n  | { type: 'SET_ERROR'; payload: { key: string, message: string } }\n  | { type: 'CLEAR_ERROR'; payload: string }\n  | { type: 'CLEAR_ALL_ERRORS' };\n\n// \u521D\u59CB\u72B6\u6001\nconst initialState: GlobalState = {\n  theme: 'light',\n  language: 'zh',\n  notifications: [],\n  isLoading: false,\n  loadingTasks: {},\n  lastUpdated: Date.now(),\n  cache: {},\n  errors: {},\n};\n\n// \u521B\u5EFA\u4E0A\u4E0B\u6587\nconst GlobalStateContext = createContext<{\n  state: GlobalState;\n  dispatch: Dispatch<Action>;\n} | undefined>(undefined);\n\n// \u6309\u529F\u80FD\u62C6\u5206reducer\u4EE5\u63D0\u9AD8\u53EF\u7EF4\u62A4\u6027\nconst themeReducer = (state: GlobalState, action: Action): GlobalState => {\n  if (action.type === 'SET_THEME') {\n    localStorage.setItem('theme', action.payload);\n    return { ...state, theme: action.payload, lastUpdated: Date.now() };\n  }\n  return state;\n};\n\nconst languageReducer = (state: GlobalState, action: Action): GlobalState => {\n  if (action.type === 'SET_LANGUAGE') {\n    localStorage.setItem('language', action.payload);\n    return { ...state, language: action.payload, lastUpdated: Date.now() };\n  }\n  return state;\n};\n\nconst notificationReducer = (state: GlobalState, action: Action): GlobalState => {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      const newNotification: Notification = {\n        id: `notification_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        createdAt: Date.now(),\n        read: false,\n        ...action.payload,\n      };\n      \n      // \u5982\u679C\u901A\u77E5\u6570\u91CF\u8FC7\u591A\uFF0C\u79FB\u9664\u6700\u65E7\u7684\n      const maxNotifications = 50;\n      const updatedNotifications = [newNotification, ...state.notifications];\n      if (updatedNotifications.length > maxNotifications) {\n        updatedNotifications.length = maxNotifications;\n      }\n      \n      return {\n        ...state,\n        notifications: updatedNotifications,\n        lastUpdated: Date.now(),\n      };\n      \n    case 'MARK_NOTIFICATION_READ':\n      return {\n        ...state,\n        notifications: state.notifications.map(n =>\n          n.id === action.payload ? { ...n, read: true } : n\n        ),\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_NOTIFICATIONS':\n      return { ...state, notifications: [], lastUpdated: Date.now() };\n      \n    default:\n      return state;\n  }\n};\n\nconst loadingReducer = (state: GlobalState, action: Action): GlobalState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload, lastUpdated: Date.now() };\n      \n    case 'START_LOADING_TASK':\n      return { \n        ...state, \n        loadingTasks: { ...state.loadingTasks, [action.payload]: true },\n        isLoading: true, // \u4EFB\u4F55\u4EFB\u52A1\u52A0\u8F7D\u4E2D\u90FD\u8BBE\u7F6E\u5168\u5C40\u52A0\u8F7D\u72B6\u6001\n        lastUpdated: Date.now() \n      };\n      \n    case 'FINISH_LOADING_TASK':\n      const newLoadingTasks = { ...state.loadingTasks };\n      delete newLoadingTasks[action.payload];\n      \n      // \u5982\u679C\u6CA1\u6709\u4EFB\u4F55\u4EFB\u52A1\u52A0\u8F7D\u4E2D\uFF0C\u5219\u8BBE\u7F6E\u5168\u5C40\u52A0\u8F7D\u72B6\u6001\u4E3Afalse\n      const stillLoading = Object.values(newLoadingTasks).some(Boolean);\n      \n      return { \n        ...state, \n        loadingTasks: newLoadingTasks,\n        isLoading: stillLoading,\n        lastUpdated: Date.now() \n      };\n      \n    default:\n      return state;\n  }\n};\n\nconst cacheReducer = (state: GlobalState, action: Action): GlobalState => {\n  switch (action.type) {\n    case 'SET_CACHE_ITEM':\n      const { key, value, expiresIn } = action.payload as { key: string, value: any, expiresIn?: number };\n      const item = {\n        value,\n        timestamp: Date.now(),\n        expiresAt: expiresIn ? Date.now() + expiresIn : undefined,\n      };\n      \n      return {\n        ...state,\n        cache: { ...state.cache, [key]: item },\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_CACHE_ITEM':\n      const newCache = { ...state.cache };\n      delete newCache[action.payload];\n      \n      return {\n        ...state,\n        cache: newCache,\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_CACHE':\n      return { ...state, cache: {}, lastUpdated: Date.now() };\n      \n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state: GlobalState, action: Action): GlobalState => {\n  switch (action.type) {\n    case 'SET_ERROR':\n      const { key, message } = action.payload as { key: string, message: string };\n      return {\n        ...state,\n        errors: { ...state.errors, [key]: message },\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_ERROR':\n      const newErrors = { ...state.errors };\n      delete newErrors[action.payload];\n      \n      return {\n        ...state,\n        errors: newErrors,\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_ALL_ERRORS':\n      return { ...state, errors: {}, lastUpdated: Date.now() };\n      \n    default:\n      return state;\n  }\n};\n\n// \u5408\u5E76\u6240\u6709reducer\nfunction rootReducer(state: GlobalState, action: Action): GlobalState {\n  return [\n    themeReducer,\n    languageReducer,\n    notificationReducer,\n    loadingReducer,\n    cacheReducer,\n    errorReducer\n  ].reduce((currentState, reducer) => reducer(currentState, action), state);\n}\n\n// Provider \u7EC4\u4EF6\nexport const GlobalStateProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  // \u4ECE\u672C\u5730\u5B58\u50A8\u521D\u59CB\u5316\u72B6\u6001\n  const getInitialState = (): GlobalState => {\n    if (typeof window !== 'undefined') {\n      const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;\n      const savedLanguage = localStorage.getItem('language') as 'zh' | 'en' | 'ko' | 'ja' | 'ru' | null;\n      \n      return {\n        ...initialState,\n        theme: savedTheme || initialState.theme,\n        language: savedLanguage ? (savedLanguage as any) : initialState.language,\n      };\n    }\n    return initialState;\n  };\n  \n  const [state, dispatch] = useReducer(rootReducer, getInitialState());\n\n  // \u81EA\u52A8\u6E05\u7406\u8FC7\u671F\u7684\u7F13\u5B58\n  useEffect(() => {\n    const cleanup = () => {\n      const now = Date.now();\n      let hasExpired = false;\n      \n      // \u68C0\u67E5\u662F\u5426\u6709\u8FC7\u671F\u7684\u7F13\u5B58\u9879\n      Object.entries(state.cache).forEach(([key, item]) => {\n        if (item.expiresAt && item.expiresAt < now) {\n          dispatch({ type: 'CLEAR_CACHE_ITEM', payload: key });\n          hasExpired = true;\n        }\n      });\n      \n      return hasExpired;\n    };\n    \n    // \u6BCF\u5206\u949F\u6E05\u7406\u4E00\u6B21\u8FC7\u671F\u7F13\u5B58\n    const interval = setInterval(cleanup, 60000);\n    \n    return () => clearInterval(interval);\n  }, [state.cache]);\n\n  // \u4F7F\u7528useMemo\u907F\u514D\u91CD\u590D\u521B\u5EFAcontext\u503C\n  const contextValue = useMemo(() => ({\n    state,\n    dispatch\n  }), [state]);\n\n  return (\n    <GlobalStateContext.Provider value={contextValue}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n\n// \u94A9\u5B50\u51FD\u6570\u7528\u4E8E\u7EC4\u4EF6\u4E2D\u8BBF\u95EE\u72B6\u6001\u548C\u8C03\u5EA6\u5668\nexport const useGlobalState = () => {\n  const context = useContext(GlobalStateContext);\n  if (context === undefined) {\n    throw new Error('useGlobalState \u5FC5\u987B\u5728 GlobalStateProvider \u5185\u90E8\u4F7F\u7528');\n  }\n  return context;\n};\n\n// \u5E2E\u52A9\u51FD\u6570\nexport const useTheme = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  // \u4F7F\u7528useCallback\u907F\u514D\u91CD\u590D\u521B\u5EFA\u51FD\u6570\n  const setTheme = useCallback((theme: 'light' | 'dark') => {\n    dispatch({ type: 'SET_THEME', payload: theme });\n  }, [dispatch]);\n  \n  const toggleTheme = useCallback(() => {\n    dispatch({ type: 'SET_THEME', payload: state.theme === 'light' ? 'dark' : 'light' });\n  }, [dispatch, state.theme]);\n\n  return {\n    theme: state.theme,\n    setTheme,\n    toggleTheme,\n  };\n};\n\nexport const useLanguage = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const setLanguage = useCallback((language: 'zh' | 'en' | 'ko' | 'ja' | 'ru') => {\n    dispatch({ type: 'SET_LANGUAGE', payload: language });\n  }, [dispatch]);\n  \n  // \u8BED\u8A00\u5207\u6362\u73B0\u5728\u652F\u6301\u591A\u79CD\u8BED\u8A00\n  const nextLanguage = useCallback(() => {\n    const languages: ('zh' | 'en' | 'ko' | 'ja' | 'ru')[] = ['zh', 'en', 'ko', 'ja', 'ru'];\n    const currentIndex = languages.indexOf(state.language);\n    const nextIndex = (currentIndex + 1) % languages.length;\n    dispatch({ type: 'SET_LANGUAGE', payload: languages[nextIndex] });\n  }, [dispatch, state.language]);\n\n  return {\n    language: state.language,\n    setLanguage,\n    nextLanguage,\n  };\n};\n\nexport const useNotifications = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const addNotification = useCallback((notification: Omit<Notification, 'id' | 'createdAt' | 'read'>) => {\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\n    \n    // \u5982\u679C\u8BBE\u7F6E\u4E86\u81EA\u52A8\u5173\u95ED\uFF0C\u5219\u5728\u6307\u5B9A\u65F6\u95F4\u540E\u6807\u8BB0\u4E3A\u5DF2\u8BFB\n    if (notification.autoClose) {\n      setTimeout(() => {\n        // \u83B7\u53D6\u6700\u65B0\u6DFB\u52A0\u7684\u901A\u77E5ID\n        const latestNotification = state.notifications[0];\n        if (latestNotification) {\n          dispatch({ type: 'MARK_NOTIFICATION_READ', payload: latestNotification.id });\n        }\n      }, 5000);\n    }\n  }, [dispatch, state.notifications]);\n  \n  const markAsRead = useCallback((id: string) => {\n    dispatch({ type: 'MARK_NOTIFICATION_READ', payload: id });\n  }, [dispatch]);\n  \n  const clearNotifications = useCallback(() => {\n    dispatch({ type: 'CLEAR_NOTIFICATIONS' });\n  }, [dispatch]);\n\n  return {\n    notifications: state.notifications,\n    unreadCount: state.notifications.filter(n => !n.read).length,\n    addNotification,\n    markAsRead,\n    clearNotifications,\n  };\n};\n\nexport const useLoading = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const setLoading = useCallback((isLoading: boolean) => {\n    dispatch({ type: 'SET_LOADING', payload: isLoading });\n  }, [dispatch]);\n  \n  const startTask = useCallback((taskId: string) => {\n    dispatch({ type: 'START_LOADING_TASK', payload: taskId });\n    return taskId; // \u8FD4\u56DEtaskId\u4EE5\u4FBF\u540E\u7EED\u4F7F\u7528\n  }, [dispatch]);\n  \n  const finishTask = useCallback((taskId: string) => {\n    dispatch({ type: 'FINISH_LOADING_TASK', payload: taskId });\n  }, [dispatch]);\n\n  return {\n    isLoading: state.isLoading,\n    loadingTasks: state.loadingTasks,\n    setLoading,\n    startTask,\n    finishTask,\n  };\n};\n\n// \u65B0\u589E\uFF1A\u7F13\u5B58hook\nexport const useStateCache = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const setCache = useCallback((key: string, value: any, expiresIn?: number) => {\n    dispatch({ type: 'SET_CACHE_ITEM', payload: { key, value, expiresIn } });\n  }, [dispatch]);\n  \n  const getCache = useCallback((key: string): any => {\n    const item = state.cache[key];\n    if (!item) return null;\n    \n    // \u68C0\u67E5\u662F\u5426\u8FC7\u671F\n    if (item.expiresAt && item.expiresAt < Date.now()) {\n      dispatch({ type: 'CLEAR_CACHE_ITEM', payload: key });\n      return null;\n    }\n    \n    return item.value;\n  }, [state.cache, dispatch]);\n  \n  const clearCache = useCallback((key?: string) => {\n    if (key) {\n      dispatch({ type: 'CLEAR_CACHE_ITEM', payload: key });\n    } else {\n      dispatch({ type: 'CLEAR_CACHE' });\n    }\n  }, [dispatch]);\n\n  return {\n    setCache,\n    getCache,\n    clearCache,\n  };\n};\n\n// \u65B0\u589E\uFF1A\u9519\u8BEF\u7BA1\u7406hook\nexport const useStateErrors = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const setError = useCallback((key: string, message: string) => {\n    dispatch({ type: 'SET_ERROR', payload: { key, message } });\n  }, [dispatch]);\n  \n  const clearError = useCallback((key: string) => {\n    dispatch({ type: 'CLEAR_ERROR', payload: key });\n  }, [dispatch]);\n  \n  const clearAllErrors = useCallback(() => {\n    dispatch({ type: 'CLEAR_ALL_ERRORS' });\n  }, [dispatch]);\n\n  return {\n    errors: state.errors,\n    hasErrors: Object.keys(state.errors).length > 0,\n    setError,\n    clearError,\n    clearAllErrors,\n  };\n}; "],
      names: ["GlobalStateProvider", "useGlobalState", "useLanguage", "useLoading", "useNotifications", "useStateCache", "useStateErrors", "useTheme", "initialState", "theme", "language", "notifications", "isLoading", "loadingTasks", "lastUpdated", "Date", "now", "cache", "errors", "GlobalStateContext", "createContext", "undefined", "themeReducer", "state", "action", "type", "localStorage", "setItem", "payload", "languageReducer", "notificationReducer", "newNotification", "id", "Math", "random", "toString", "substr", "createdAt", "read", "maxNotifications", "updatedNotifications", "length", "map", "n", "loadingReducer", "newLoadingTasks", "stillLoading", "Object", "values", "some", "Boolean", "cacheReducer", "key", "value", "expiresIn", "item", "timestamp", "expiresAt", "newCache", "errorReducer", "message", "newErrors", "rootReducer", "reduce", "currentState", "reducer", "children", "getInitialState", "window", "savedTheme", "getItem", "savedLanguage", "dispatch", "useReducer", "useEffect", "cleanup", "hasExpired", "entries", "forEach", "interval", "setInterval", "clearInterval", "contextValue", "useMemo", "Provider", "context", "useContext", "Error", "setTheme", "useCallback", "toggleTheme", "setLanguage", "nextLanguage", "languages", "currentIndex", "indexOf", "nextIndex", "addNotification", "notification", "autoClose", "setTimeout", "latestNotification", "markAsRead", "clearNotifications", "unreadCount", "filter", "setLoading", "startTask", "taskId", "finishTask", "setCache", "getCache", "clearCache", "setError", "clearError", "clearAllErrors", "hasErrors", "keys"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "164b8fcacc2f695d988f1adfad282d8cf2913d7d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_299lvsk34d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_299lvsk34d();
cov_299lvsk34d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_299lvsk34d().f[0]++;
  cov_299lvsk34d().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_299lvsk34d().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_299lvsk34d().s[3]++;
_export(exports, {
  GlobalStateProvider: function () {
    /* istanbul ignore next */
    cov_299lvsk34d().f[1]++;
    cov_299lvsk34d().s[4]++;
    return GlobalStateProvider;
  },
  useGlobalState: function () {
    /* istanbul ignore next */
    cov_299lvsk34d().f[2]++;
    cov_299lvsk34d().s[5]++;
    return useGlobalState;
  },
  useLanguage: function () {
    /* istanbul ignore next */
    cov_299lvsk34d().f[3]++;
    cov_299lvsk34d().s[6]++;
    return useLanguage;
  },
  useLoading: function () {
    /* istanbul ignore next */
    cov_299lvsk34d().f[4]++;
    cov_299lvsk34d().s[7]++;
    return useLoading;
  },
  useNotifications: function () {
    /* istanbul ignore next */
    cov_299lvsk34d().f[5]++;
    cov_299lvsk34d().s[8]++;
    return useNotifications;
  },
  useStateCache: function () {
    /* istanbul ignore next */
    cov_299lvsk34d().f[6]++;
    cov_299lvsk34d().s[9]++;
    return useStateCache;
  },
  useStateErrors: function () {
    /* istanbul ignore next */
    cov_299lvsk34d().f[7]++;
    cov_299lvsk34d().s[10]++;
    return useStateErrors;
  },
  useTheme: function () {
    /* istanbul ignore next */
    cov_299lvsk34d().f[8]++;
    cov_299lvsk34d().s[11]++;
    return useTheme;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_299lvsk34d().s[12]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_299lvsk34d().s[13]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_299lvsk34d().f[9]++;
  cov_299lvsk34d().s[14]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_299lvsk34d().b[0][0]++;
    cov_299lvsk34d().s[15]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_299lvsk34d().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[16]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[17]++, new WeakMap());
  /* istanbul ignore next */
  cov_299lvsk34d().s[18]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_299lvsk34d().f[10]++;
    cov_299lvsk34d().s[19]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_299lvsk34d().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_299lvsk34d().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_299lvsk34d().f[11]++;
  cov_299lvsk34d().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_299lvsk34d().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_299lvsk34d().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_299lvsk34d().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_299lvsk34d().b[2][0]++;
    cov_299lvsk34d().s[21]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_299lvsk34d().b[2][1]++;
  }
  cov_299lvsk34d().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_299lvsk34d().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_299lvsk34d().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_299lvsk34d().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_299lvsk34d().b[4][0]++;
    cov_299lvsk34d().s[23]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_299lvsk34d().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[24]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_299lvsk34d().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_299lvsk34d().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_299lvsk34d().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_299lvsk34d().b[6][0]++;
    cov_299lvsk34d().s[26]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_299lvsk34d().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[27]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[28]++,
  /* istanbul ignore next */
  (cov_299lvsk34d().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_299lvsk34d().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_299lvsk34d().s[29]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_299lvsk34d().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_299lvsk34d().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_299lvsk34d().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_299lvsk34d().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[31]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_299lvsk34d().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_299lvsk34d().b[11][1]++, null));
      /* istanbul ignore next */
      cov_299lvsk34d().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_299lvsk34d().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_299lvsk34d().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_299lvsk34d().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_299lvsk34d().b[12][0]++;
        cov_299lvsk34d().s[33]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_299lvsk34d().b[12][1]++;
        cov_299lvsk34d().s[34]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_299lvsk34d().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_299lvsk34d().s[35]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_299lvsk34d().s[36]++;
  if (cache) {
    /* istanbul ignore next */
    cov_299lvsk34d().b[14][0]++;
    cov_299lvsk34d().s[37]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_299lvsk34d().b[14][1]++;
  }
  cov_299lvsk34d().s[38]++;
  return newObj;
}
// 初始状态
const initialState =
/* istanbul ignore next */
(cov_299lvsk34d().s[39]++, {
  theme: 'light',
  language: 'zh',
  notifications: [],
  isLoading: false,
  loadingTasks: {},
  lastUpdated: Date.now(),
  cache: {},
  errors: {}
});
// 创建上下文
const GlobalStateContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_299lvsk34d().s[40]++, (0, _react.createContext)(undefined));
// 按功能拆分reducer以提高可维护性
/* istanbul ignore next */
cov_299lvsk34d().s[41]++;
const themeReducer = (state, action) => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[12]++;
  cov_299lvsk34d().s[42]++;
  if (action.type === 'SET_THEME') {
    /* istanbul ignore next */
    cov_299lvsk34d().b[15][0]++;
    cov_299lvsk34d().s[43]++;
    localStorage.setItem('theme', action.payload);
    /* istanbul ignore next */
    cov_299lvsk34d().s[44]++;
    return {
      ...state,
      theme: action.payload,
      lastUpdated: Date.now()
    };
  } else
  /* istanbul ignore next */
  {
    cov_299lvsk34d().b[15][1]++;
  }
  cov_299lvsk34d().s[45]++;
  return state;
};
/* istanbul ignore next */
cov_299lvsk34d().s[46]++;
const languageReducer = (state, action) => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[13]++;
  cov_299lvsk34d().s[47]++;
  if (action.type === 'SET_LANGUAGE') {
    /* istanbul ignore next */
    cov_299lvsk34d().b[16][0]++;
    cov_299lvsk34d().s[48]++;
    localStorage.setItem('language', action.payload);
    /* istanbul ignore next */
    cov_299lvsk34d().s[49]++;
    return {
      ...state,
      language: action.payload,
      lastUpdated: Date.now()
    };
  } else
  /* istanbul ignore next */
  {
    cov_299lvsk34d().b[16][1]++;
  }
  cov_299lvsk34d().s[50]++;
  return state;
};
/* istanbul ignore next */
cov_299lvsk34d().s[51]++;
const notificationReducer = (state, action) => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[14]++;
  cov_299lvsk34d().s[52]++;
  switch (action.type) {
    case 'ADD_NOTIFICATION':
      /* istanbul ignore next */
      cov_299lvsk34d().b[17][0]++;
      const newNotification =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[53]++, {
        id: `notification_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        createdAt: Date.now(),
        read: false,
        ...action.payload
      });
      // 如果通知数量过多，移除最旧的
      const maxNotifications =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[54]++, 50);
      const updatedNotifications =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[55]++, [newNotification, ...state.notifications]);
      /* istanbul ignore next */
      cov_299lvsk34d().s[56]++;
      if (updatedNotifications.length > maxNotifications) {
        /* istanbul ignore next */
        cov_299lvsk34d().b[18][0]++;
        cov_299lvsk34d().s[57]++;
        updatedNotifications.length = maxNotifications;
      } else
      /* istanbul ignore next */
      {
        cov_299lvsk34d().b[18][1]++;
      }
      cov_299lvsk34d().s[58]++;
      return {
        ...state,
        notifications: updatedNotifications,
        lastUpdated: Date.now()
      };
    case 'MARK_NOTIFICATION_READ':
      /* istanbul ignore next */
      cov_299lvsk34d().b[17][1]++;
      cov_299lvsk34d().s[59]++;
      return {
        ...state,
        notifications: state.notifications.map(n => {
          /* istanbul ignore next */
          cov_299lvsk34d().f[15]++;
          cov_299lvsk34d().s[60]++;
          return n.id === action.payload ?
          /* istanbul ignore next */
          (cov_299lvsk34d().b[19][0]++, {
            ...n,
            read: true
          }) :
          /* istanbul ignore next */
          (cov_299lvsk34d().b[19][1]++, n);
        }),
        lastUpdated: Date.now()
      };
    case 'CLEAR_NOTIFICATIONS':
      /* istanbul ignore next */
      cov_299lvsk34d().b[17][2]++;
      cov_299lvsk34d().s[61]++;
      return {
        ...state,
        notifications: [],
        lastUpdated: Date.now()
      };
    default:
      /* istanbul ignore next */
      cov_299lvsk34d().b[17][3]++;
      cov_299lvsk34d().s[62]++;
      return state;
  }
};
/* istanbul ignore next */
cov_299lvsk34d().s[63]++;
const loadingReducer = (state, action) => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[16]++;
  cov_299lvsk34d().s[64]++;
  switch (action.type) {
    case 'SET_LOADING':
      /* istanbul ignore next */
      cov_299lvsk34d().b[20][0]++;
      cov_299lvsk34d().s[65]++;
      return {
        ...state,
        isLoading: action.payload,
        lastUpdated: Date.now()
      };
    case 'START_LOADING_TASK':
      /* istanbul ignore next */
      cov_299lvsk34d().b[20][1]++;
      cov_299lvsk34d().s[66]++;
      return {
        ...state,
        loadingTasks: {
          ...state.loadingTasks,
          [action.payload]: true
        },
        isLoading: true,
        lastUpdated: Date.now()
      };
    case 'FINISH_LOADING_TASK':
      /* istanbul ignore next */
      cov_299lvsk34d().b[20][2]++;
      const newLoadingTasks =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[67]++, {
        ...state.loadingTasks
      });
      /* istanbul ignore next */
      cov_299lvsk34d().s[68]++;
      delete newLoadingTasks[action.payload];
      // 如果没有任何任务加载中，则设置全局加载状态为false
      const stillLoading =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[69]++, Object.values(newLoadingTasks).some(Boolean));
      /* istanbul ignore next */
      cov_299lvsk34d().s[70]++;
      return {
        ...state,
        loadingTasks: newLoadingTasks,
        isLoading: stillLoading,
        lastUpdated: Date.now()
      };
    default:
      /* istanbul ignore next */
      cov_299lvsk34d().b[20][3]++;
      cov_299lvsk34d().s[71]++;
      return state;
  }
};
/* istanbul ignore next */
cov_299lvsk34d().s[72]++;
const cacheReducer = (state, action) => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[17]++;
  cov_299lvsk34d().s[73]++;
  switch (action.type) {
    case 'SET_CACHE_ITEM':
      /* istanbul ignore next */
      cov_299lvsk34d().b[21][0]++;
      const {
        key,
        value,
        expiresIn
      } =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[74]++, action.payload);
      const item =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[75]++, {
        value,
        timestamp: Date.now(),
        expiresAt: expiresIn ?
        /* istanbul ignore next */
        (cov_299lvsk34d().b[22][0]++, Date.now() + expiresIn) :
        /* istanbul ignore next */
        (cov_299lvsk34d().b[22][1]++, undefined)
      });
      /* istanbul ignore next */
      cov_299lvsk34d().s[76]++;
      return {
        ...state,
        cache: {
          ...state.cache,
          [key]: item
        },
        lastUpdated: Date.now()
      };
    case 'CLEAR_CACHE_ITEM':
      /* istanbul ignore next */
      cov_299lvsk34d().b[21][1]++;
      const newCache =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[77]++, {
        ...state.cache
      });
      /* istanbul ignore next */
      cov_299lvsk34d().s[78]++;
      delete newCache[action.payload];
      /* istanbul ignore next */
      cov_299lvsk34d().s[79]++;
      return {
        ...state,
        cache: newCache,
        lastUpdated: Date.now()
      };
    case 'CLEAR_CACHE':
      /* istanbul ignore next */
      cov_299lvsk34d().b[21][2]++;
      cov_299lvsk34d().s[80]++;
      return {
        ...state,
        cache: {},
        lastUpdated: Date.now()
      };
    default:
      /* istanbul ignore next */
      cov_299lvsk34d().b[21][3]++;
      cov_299lvsk34d().s[81]++;
      return state;
  }
};
/* istanbul ignore next */
cov_299lvsk34d().s[82]++;
const errorReducer = (state, action) => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[18]++;
  cov_299lvsk34d().s[83]++;
  switch (action.type) {
    case 'SET_ERROR':
      /* istanbul ignore next */
      cov_299lvsk34d().b[23][0]++;
      const {
        key,
        message
      } =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[84]++, action.payload);
      /* istanbul ignore next */
      cov_299lvsk34d().s[85]++;
      return {
        ...state,
        errors: {
          ...state.errors,
          [key]: message
        },
        lastUpdated: Date.now()
      };
    case 'CLEAR_ERROR':
      /* istanbul ignore next */
      cov_299lvsk34d().b[23][1]++;
      const newErrors =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[86]++, {
        ...state.errors
      });
      /* istanbul ignore next */
      cov_299lvsk34d().s[87]++;
      delete newErrors[action.payload];
      /* istanbul ignore next */
      cov_299lvsk34d().s[88]++;
      return {
        ...state,
        errors: newErrors,
        lastUpdated: Date.now()
      };
    case 'CLEAR_ALL_ERRORS':
      /* istanbul ignore next */
      cov_299lvsk34d().b[23][2]++;
      cov_299lvsk34d().s[89]++;
      return {
        ...state,
        errors: {},
        lastUpdated: Date.now()
      };
    default:
      /* istanbul ignore next */
      cov_299lvsk34d().b[23][3]++;
      cov_299lvsk34d().s[90]++;
      return state;
  }
};
// 合并所有reducer
function rootReducer(state, action) {
  /* istanbul ignore next */
  cov_299lvsk34d().f[19]++;
  cov_299lvsk34d().s[91]++;
  return [themeReducer, languageReducer, notificationReducer, loadingReducer, cacheReducer, errorReducer].reduce((currentState, reducer) => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[20]++;
    cov_299lvsk34d().s[92]++;
    return reducer(currentState, action);
  }, state);
}
/* istanbul ignore next */
cov_299lvsk34d().s[93]++;
const GlobalStateProvider = ({
  children
}) => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[21]++;
  cov_299lvsk34d().s[94]++;
  // 从本地存储初始化状态
  const getInitialState = () => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[22]++;
    cov_299lvsk34d().s[95]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_299lvsk34d().b[24][0]++;
      const savedTheme =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[96]++, localStorage.getItem('theme'));
      const savedLanguage =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[97]++, localStorage.getItem('language'));
      /* istanbul ignore next */
      cov_299lvsk34d().s[98]++;
      return {
        ...initialState,
        theme:
        /* istanbul ignore next */
        (cov_299lvsk34d().b[25][0]++, savedTheme) ||
        /* istanbul ignore next */
        (cov_299lvsk34d().b[25][1]++, initialState.theme),
        language: savedLanguage ?
        /* istanbul ignore next */
        (cov_299lvsk34d().b[26][0]++, savedLanguage) :
        /* istanbul ignore next */
        (cov_299lvsk34d().b[26][1]++, initialState.language)
      };
    } else
    /* istanbul ignore next */
    {
      cov_299lvsk34d().b[24][1]++;
    }
    cov_299lvsk34d().s[99]++;
    return initialState;
  };
  const [state, dispatch] =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[100]++, (0, _react.useReducer)(rootReducer, getInitialState()));
  // 自动清理过期的缓存
  /* istanbul ignore next */
  cov_299lvsk34d().s[101]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[23]++;
    cov_299lvsk34d().s[102]++;
    const cleanup = () => {
      /* istanbul ignore next */
      cov_299lvsk34d().f[24]++;
      const now =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[103]++, Date.now());
      let hasExpired =
      /* istanbul ignore next */
      (cov_299lvsk34d().s[104]++, false);
      // 检查是否有过期的缓存项
      /* istanbul ignore next */
      cov_299lvsk34d().s[105]++;
      Object.entries(state.cache).forEach(([key, item]) => {
        /* istanbul ignore next */
        cov_299lvsk34d().f[25]++;
        cov_299lvsk34d().s[106]++;
        if (
        /* istanbul ignore next */
        (cov_299lvsk34d().b[28][0]++, item.expiresAt) &&
        /* istanbul ignore next */
        (cov_299lvsk34d().b[28][1]++, item.expiresAt < now)) {
          /* istanbul ignore next */
          cov_299lvsk34d().b[27][0]++;
          cov_299lvsk34d().s[107]++;
          dispatch({
            type: 'CLEAR_CACHE_ITEM',
            payload: key
          });
          /* istanbul ignore next */
          cov_299lvsk34d().s[108]++;
          hasExpired = true;
        } else
        /* istanbul ignore next */
        {
          cov_299lvsk34d().b[27][1]++;
        }
      });
      /* istanbul ignore next */
      cov_299lvsk34d().s[109]++;
      return hasExpired;
    };
    // 每分钟清理一次过期缓存
    const interval =
    /* istanbul ignore next */
    (cov_299lvsk34d().s[110]++, setInterval(cleanup, 60000));
    /* istanbul ignore next */
    cov_299lvsk34d().s[111]++;
    return () => {
      /* istanbul ignore next */
      cov_299lvsk34d().f[26]++;
      cov_299lvsk34d().s[112]++;
      return clearInterval(interval);
    };
  }, [state.cache]);
  // 使用useMemo避免重复创建context值
  const contextValue =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[113]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[27]++;
    cov_299lvsk34d().s[114]++;
    return {
      state,
      dispatch
    };
  }, [state]));
  /* istanbul ignore next */
  cov_299lvsk34d().s[115]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(GlobalStateContext.Provider, {
    value: contextValue,
    children: children
  });
};
/* istanbul ignore next */
cov_299lvsk34d().s[116]++;
const useGlobalState = () => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[28]++;
  const context =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[117]++, (0, _react.useContext)(GlobalStateContext));
  /* istanbul ignore next */
  cov_299lvsk34d().s[118]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_299lvsk34d().b[29][0]++;
    cov_299lvsk34d().s[119]++;
    throw new Error('useGlobalState 必须在 GlobalStateProvider 内部使用');
  } else
  /* istanbul ignore next */
  {
    cov_299lvsk34d().b[29][1]++;
  }
  cov_299lvsk34d().s[120]++;
  return context;
};
/* istanbul ignore next */
cov_299lvsk34d().s[121]++;
const useTheme = () => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[29]++;
  const {
    state,
    dispatch
  } =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[122]++, useGlobalState());
  // 使用useCallback避免重复创建函数
  const setTheme =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[123]++, (0, _react.useCallback)(theme => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[30]++;
    cov_299lvsk34d().s[124]++;
    dispatch({
      type: 'SET_THEME',
      payload: theme
    });
  }, [dispatch]));
  const toggleTheme =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[125]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[31]++;
    cov_299lvsk34d().s[126]++;
    dispatch({
      type: 'SET_THEME',
      payload: state.theme === 'light' ?
      /* istanbul ignore next */
      (cov_299lvsk34d().b[30][0]++, 'dark') :
      /* istanbul ignore next */
      (cov_299lvsk34d().b[30][1]++, 'light')
    });
  }, [dispatch, state.theme]));
  /* istanbul ignore next */
  cov_299lvsk34d().s[127]++;
  return {
    theme: state.theme,
    setTheme,
    toggleTheme
  };
};
/* istanbul ignore next */
cov_299lvsk34d().s[128]++;
const useLanguage = () => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[32]++;
  const {
    state,
    dispatch
  } =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[129]++, useGlobalState());
  const setLanguage =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[130]++, (0, _react.useCallback)(language => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[33]++;
    cov_299lvsk34d().s[131]++;
    dispatch({
      type: 'SET_LANGUAGE',
      payload: language
    });
  }, [dispatch]));
  // 语言切换现在支持多种语言
  const nextLanguage =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[132]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[34]++;
    const languages =
    /* istanbul ignore next */
    (cov_299lvsk34d().s[133]++, ['zh', 'en', 'ko', 'ja', 'ru']);
    const currentIndex =
    /* istanbul ignore next */
    (cov_299lvsk34d().s[134]++, languages.indexOf(state.language));
    const nextIndex =
    /* istanbul ignore next */
    (cov_299lvsk34d().s[135]++, (currentIndex + 1) % languages.length);
    /* istanbul ignore next */
    cov_299lvsk34d().s[136]++;
    dispatch({
      type: 'SET_LANGUAGE',
      payload: languages[nextIndex]
    });
  }, [dispatch, state.language]));
  /* istanbul ignore next */
  cov_299lvsk34d().s[137]++;
  return {
    language: state.language,
    setLanguage,
    nextLanguage
  };
};
/* istanbul ignore next */
cov_299lvsk34d().s[138]++;
const useNotifications = () => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[35]++;
  const {
    state,
    dispatch
  } =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[139]++, useGlobalState());
  const addNotification =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[140]++, (0, _react.useCallback)(notification => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[36]++;
    cov_299lvsk34d().s[141]++;
    dispatch({
      type: 'ADD_NOTIFICATION',
      payload: notification
    });
    // 如果设置了自动关闭，则在指定时间后标记为已读
    /* istanbul ignore next */
    cov_299lvsk34d().s[142]++;
    if (notification.autoClose) {
      /* istanbul ignore next */
      cov_299lvsk34d().b[31][0]++;
      cov_299lvsk34d().s[143]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_299lvsk34d().f[37]++;
        // 获取最新添加的通知ID
        const latestNotification =
        /* istanbul ignore next */
        (cov_299lvsk34d().s[144]++, state.notifications[0]);
        /* istanbul ignore next */
        cov_299lvsk34d().s[145]++;
        if (latestNotification) {
          /* istanbul ignore next */
          cov_299lvsk34d().b[32][0]++;
          cov_299lvsk34d().s[146]++;
          dispatch({
            type: 'MARK_NOTIFICATION_READ',
            payload: latestNotification.id
          });
        } else
        /* istanbul ignore next */
        {
          cov_299lvsk34d().b[32][1]++;
        }
      }, 5000);
    } else
    /* istanbul ignore next */
    {
      cov_299lvsk34d().b[31][1]++;
    }
  }, [dispatch, state.notifications]));
  const markAsRead =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[147]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[38]++;
    cov_299lvsk34d().s[148]++;
    dispatch({
      type: 'MARK_NOTIFICATION_READ',
      payload: id
    });
  }, [dispatch]));
  const clearNotifications =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[149]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[39]++;
    cov_299lvsk34d().s[150]++;
    dispatch({
      type: 'CLEAR_NOTIFICATIONS'
    });
  }, [dispatch]));
  /* istanbul ignore next */
  cov_299lvsk34d().s[151]++;
  return {
    notifications: state.notifications,
    unreadCount: state.notifications.filter(n => {
      /* istanbul ignore next */
      cov_299lvsk34d().f[40]++;
      cov_299lvsk34d().s[152]++;
      return !n.read;
    }).length,
    addNotification,
    markAsRead,
    clearNotifications
  };
};
/* istanbul ignore next */
cov_299lvsk34d().s[153]++;
const useLoading = () => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[41]++;
  const {
    state,
    dispatch
  } =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[154]++, useGlobalState());
  const setLoading =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[155]++, (0, _react.useCallback)(isLoading => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[42]++;
    cov_299lvsk34d().s[156]++;
    dispatch({
      type: 'SET_LOADING',
      payload: isLoading
    });
  }, [dispatch]));
  const startTask =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[157]++, (0, _react.useCallback)(taskId => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[43]++;
    cov_299lvsk34d().s[158]++;
    dispatch({
      type: 'START_LOADING_TASK',
      payload: taskId
    });
    /* istanbul ignore next */
    cov_299lvsk34d().s[159]++;
    return taskId; // 返回taskId以便后续使用
  }, [dispatch]));
  const finishTask =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[160]++, (0, _react.useCallback)(taskId => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[44]++;
    cov_299lvsk34d().s[161]++;
    dispatch({
      type: 'FINISH_LOADING_TASK',
      payload: taskId
    });
  }, [dispatch]));
  /* istanbul ignore next */
  cov_299lvsk34d().s[162]++;
  return {
    isLoading: state.isLoading,
    loadingTasks: state.loadingTasks,
    setLoading,
    startTask,
    finishTask
  };
};
/* istanbul ignore next */
cov_299lvsk34d().s[163]++;
const useStateCache = () => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[45]++;
  const {
    state,
    dispatch
  } =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[164]++, useGlobalState());
  const setCache =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[165]++, (0, _react.useCallback)((key, value, expiresIn) => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[46]++;
    cov_299lvsk34d().s[166]++;
    dispatch({
      type: 'SET_CACHE_ITEM',
      payload: {
        key,
        value,
        expiresIn
      }
    });
  }, [dispatch]));
  const getCache =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[167]++, (0, _react.useCallback)(key => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[47]++;
    const item =
    /* istanbul ignore next */
    (cov_299lvsk34d().s[168]++, state.cache[key]);
    /* istanbul ignore next */
    cov_299lvsk34d().s[169]++;
    if (!item) {
      /* istanbul ignore next */
      cov_299lvsk34d().b[33][0]++;
      cov_299lvsk34d().s[170]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_299lvsk34d().b[33][1]++;
    }
    // 检查是否过期
    cov_299lvsk34d().s[171]++;
    if (
    /* istanbul ignore next */
    (cov_299lvsk34d().b[35][0]++, item.expiresAt) &&
    /* istanbul ignore next */
    (cov_299lvsk34d().b[35][1]++, item.expiresAt < Date.now())) {
      /* istanbul ignore next */
      cov_299lvsk34d().b[34][0]++;
      cov_299lvsk34d().s[172]++;
      dispatch({
        type: 'CLEAR_CACHE_ITEM',
        payload: key
      });
      /* istanbul ignore next */
      cov_299lvsk34d().s[173]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_299lvsk34d().b[34][1]++;
    }
    cov_299lvsk34d().s[174]++;
    return item.value;
  }, [state.cache, dispatch]));
  const clearCache =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[175]++, (0, _react.useCallback)(key => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[48]++;
    cov_299lvsk34d().s[176]++;
    if (key) {
      /* istanbul ignore next */
      cov_299lvsk34d().b[36][0]++;
      cov_299lvsk34d().s[177]++;
      dispatch({
        type: 'CLEAR_CACHE_ITEM',
        payload: key
      });
    } else {
      /* istanbul ignore next */
      cov_299lvsk34d().b[36][1]++;
      cov_299lvsk34d().s[178]++;
      dispatch({
        type: 'CLEAR_CACHE'
      });
    }
  }, [dispatch]));
  /* istanbul ignore next */
  cov_299lvsk34d().s[179]++;
  return {
    setCache,
    getCache,
    clearCache
  };
};
/* istanbul ignore next */
cov_299lvsk34d().s[180]++;
const useStateErrors = () => {
  /* istanbul ignore next */
  cov_299lvsk34d().f[49]++;
  const {
    state,
    dispatch
  } =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[181]++, useGlobalState());
  const setError =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[182]++, (0, _react.useCallback)((key, message) => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[50]++;
    cov_299lvsk34d().s[183]++;
    dispatch({
      type: 'SET_ERROR',
      payload: {
        key,
        message
      }
    });
  }, [dispatch]));
  const clearError =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[184]++, (0, _react.useCallback)(key => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[51]++;
    cov_299lvsk34d().s[185]++;
    dispatch({
      type: 'CLEAR_ERROR',
      payload: key
    });
  }, [dispatch]));
  const clearAllErrors =
  /* istanbul ignore next */
  (cov_299lvsk34d().s[186]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_299lvsk34d().f[52]++;
    cov_299lvsk34d().s[187]++;
    dispatch({
      type: 'CLEAR_ALL_ERRORS'
    });
  }, [dispatch]));
  /* istanbul ignore next */
  cov_299lvsk34d().s[188]++;
  return {
    errors: state.errors,
    hasErrors: Object.keys(state.errors).length > 0,
    setError,
    clearError,
    clearAllErrors
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,