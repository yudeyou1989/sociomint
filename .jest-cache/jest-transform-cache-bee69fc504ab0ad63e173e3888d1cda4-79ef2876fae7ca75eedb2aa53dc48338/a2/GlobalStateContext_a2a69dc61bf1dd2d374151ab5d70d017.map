{"version":3,"names":["cov_299lvsk34d","actualCoverage","s","GlobalStateProvider","f","useGlobalState","useLanguage","useLoading","useNotifications","useStateCache","useStateErrors","useTheme","initialState","theme","language","notifications","isLoading","loadingTasks","lastUpdated","Date","now","cache","errors","GlobalStateContext","_react","createContext","undefined","themeReducer","state","action","type","b","localStorage","setItem","payload","languageReducer","notificationReducer","newNotification","id","Math","random","toString","substr","createdAt","read","maxNotifications","updatedNotifications","length","map","n","loadingReducer","newLoadingTasks","stillLoading","Object","values","some","Boolean","cacheReducer","key","value","expiresIn","item","timestamp","expiresAt","newCache","errorReducer","message","newErrors","rootReducer","reduce","currentState","reducer","children","getInitialState","window","savedTheme","getItem","savedLanguage","dispatch","useReducer","useEffect","cleanup","hasExpired","entries","forEach","interval","setInterval","clearInterval","contextValue","useMemo","_jsxruntime","jsx","Provider","context","useContext","Error","setTheme","useCallback","toggleTheme","setLanguage","nextLanguage","languages","currentIndex","indexOf","nextIndex","addNotification","notification","autoClose","setTimeout","latestNotification","markAsRead","clearNotifications","unreadCount","filter","setLoading","startTask","taskId","finishTask","setCache","getCache","clearCache","setError","clearError","clearAllErrors","hasErrors","keys"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/contexts/GlobalStateContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useReducer, ReactNode, Dispatch, useMemo, useCallback, useEffect } from 'react';\n\n// 定义全局状态类型\ninterface GlobalState {\n  theme: 'light' | 'dark';\n  language: 'zh' | 'en' | 'ko' | 'ja' | 'ru'; // 扩展支持更多语言\n  notifications: Notification[];\n  isLoading: boolean;\n  loadingTasks: Record<string, boolean>; // 跟踪多个加载任务\n  lastUpdated: number;\n  cache: Record<string, any>; // 通用缓存存储\n  errors: Record<string, string>; // 错误存储\n}\n\n// 通知类型\ninterface Notification {\n  id: string;\n  type: 'success' | 'info' | 'warning' | 'error';\n  message: string;\n  createdAt: number;\n  read: boolean;\n  actionUrl?: string; // 可选的操作URL\n  autoClose?: boolean; // 是否自动关闭\n}\n\n// 定义 Action 类型\ntype Action =\n  | { type: 'SET_THEME'; payload: 'light' | 'dark' }\n  | { type: 'SET_LANGUAGE'; payload: 'zh' | 'en' | 'ko' | 'ja' | 'ru' }\n  | { type: 'ADD_NOTIFICATION'; payload: Omit<Notification, 'id' | 'createdAt' | 'read'> }\n  | { type: 'MARK_NOTIFICATION_READ'; payload: string }\n  | { type: 'CLEAR_NOTIFICATIONS' }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'START_LOADING_TASK'; payload: string }\n  | { type: 'FINISH_LOADING_TASK'; payload: string }\n  | { type: 'SET_CACHE_ITEM'; payload: { key: string, value: any, expiresIn?: number } }\n  | { type: 'CLEAR_CACHE_ITEM'; payload: string }\n  | { type: 'CLEAR_CACHE' }\n  | { type: 'SET_ERROR'; payload: { key: string, message: string } }\n  | { type: 'CLEAR_ERROR'; payload: string }\n  | { type: 'CLEAR_ALL_ERRORS' };\n\n// 初始状态\nconst initialState: GlobalState = {\n  theme: 'light',\n  language: 'zh',\n  notifications: [],\n  isLoading: false,\n  loadingTasks: {},\n  lastUpdated: Date.now(),\n  cache: {},\n  errors: {},\n};\n\n// 创建上下文\nconst GlobalStateContext = createContext<{\n  state: GlobalState;\n  dispatch: Dispatch<Action>;\n} | undefined>(undefined);\n\n// 按功能拆分reducer以提高可维护性\nconst themeReducer = (state: GlobalState, action: Action): GlobalState => {\n  if (action.type === 'SET_THEME') {\n    localStorage.setItem('theme', action.payload);\n    return { ...state, theme: action.payload, lastUpdated: Date.now() };\n  }\n  return state;\n};\n\nconst languageReducer = (state: GlobalState, action: Action): GlobalState => {\n  if (action.type === 'SET_LANGUAGE') {\n    localStorage.setItem('language', action.payload);\n    return { ...state, language: action.payload, lastUpdated: Date.now() };\n  }\n  return state;\n};\n\nconst notificationReducer = (state: GlobalState, action: Action): GlobalState => {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      const newNotification: Notification = {\n        id: `notification_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        createdAt: Date.now(),\n        read: false,\n        ...action.payload,\n      };\n      \n      // 如果通知数量过多，移除最旧的\n      const maxNotifications = 50;\n      const updatedNotifications = [newNotification, ...state.notifications];\n      if (updatedNotifications.length > maxNotifications) {\n        updatedNotifications.length = maxNotifications;\n      }\n      \n      return {\n        ...state,\n        notifications: updatedNotifications,\n        lastUpdated: Date.now(),\n      };\n      \n    case 'MARK_NOTIFICATION_READ':\n      return {\n        ...state,\n        notifications: state.notifications.map(n =>\n          n.id === action.payload ? { ...n, read: true } : n\n        ),\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_NOTIFICATIONS':\n      return { ...state, notifications: [], lastUpdated: Date.now() };\n      \n    default:\n      return state;\n  }\n};\n\nconst loadingReducer = (state: GlobalState, action: Action): GlobalState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload, lastUpdated: Date.now() };\n      \n    case 'START_LOADING_TASK':\n      return { \n        ...state, \n        loadingTasks: { ...state.loadingTasks, [action.payload]: true },\n        isLoading: true, // 任何任务加载中都设置全局加载状态\n        lastUpdated: Date.now() \n      };\n      \n    case 'FINISH_LOADING_TASK':\n      const newLoadingTasks = { ...state.loadingTasks };\n      delete newLoadingTasks[action.payload];\n      \n      // 如果没有任何任务加载中，则设置全局加载状态为false\n      const stillLoading = Object.values(newLoadingTasks).some(Boolean);\n      \n      return { \n        ...state, \n        loadingTasks: newLoadingTasks,\n        isLoading: stillLoading,\n        lastUpdated: Date.now() \n      };\n      \n    default:\n      return state;\n  }\n};\n\nconst cacheReducer = (state: GlobalState, action: Action): GlobalState => {\n  switch (action.type) {\n    case 'SET_CACHE_ITEM':\n      const { key, value, expiresIn } = action.payload as { key: string, value: any, expiresIn?: number };\n      const item = {\n        value,\n        timestamp: Date.now(),\n        expiresAt: expiresIn ? Date.now() + expiresIn : undefined,\n      };\n      \n      return {\n        ...state,\n        cache: { ...state.cache, [key]: item },\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_CACHE_ITEM':\n      const newCache = { ...state.cache };\n      delete newCache[action.payload];\n      \n      return {\n        ...state,\n        cache: newCache,\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_CACHE':\n      return { ...state, cache: {}, lastUpdated: Date.now() };\n      \n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state: GlobalState, action: Action): GlobalState => {\n  switch (action.type) {\n    case 'SET_ERROR':\n      const { key, message } = action.payload as { key: string, message: string };\n      return {\n        ...state,\n        errors: { ...state.errors, [key]: message },\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_ERROR':\n      const newErrors = { ...state.errors };\n      delete newErrors[action.payload];\n      \n      return {\n        ...state,\n        errors: newErrors,\n        lastUpdated: Date.now(),\n      };\n      \n    case 'CLEAR_ALL_ERRORS':\n      return { ...state, errors: {}, lastUpdated: Date.now() };\n      \n    default:\n      return state;\n  }\n};\n\n// 合并所有reducer\nfunction rootReducer(state: GlobalState, action: Action): GlobalState {\n  return [\n    themeReducer,\n    languageReducer,\n    notificationReducer,\n    loadingReducer,\n    cacheReducer,\n    errorReducer\n  ].reduce((currentState, reducer) => reducer(currentState, action), state);\n}\n\n// Provider 组件\nexport const GlobalStateProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  // 从本地存储初始化状态\n  const getInitialState = (): GlobalState => {\n    if (typeof window !== 'undefined') {\n      const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;\n      const savedLanguage = localStorage.getItem('language') as 'zh' | 'en' | 'ko' | 'ja' | 'ru' | null;\n      \n      return {\n        ...initialState,\n        theme: savedTheme || initialState.theme,\n        language: savedLanguage ? (savedLanguage as any) : initialState.language,\n      };\n    }\n    return initialState;\n  };\n  \n  const [state, dispatch] = useReducer(rootReducer, getInitialState());\n\n  // 自动清理过期的缓存\n  useEffect(() => {\n    const cleanup = () => {\n      const now = Date.now();\n      let hasExpired = false;\n      \n      // 检查是否有过期的缓存项\n      Object.entries(state.cache).forEach(([key, item]) => {\n        if (item.expiresAt && item.expiresAt < now) {\n          dispatch({ type: 'CLEAR_CACHE_ITEM', payload: key });\n          hasExpired = true;\n        }\n      });\n      \n      return hasExpired;\n    };\n    \n    // 每分钟清理一次过期缓存\n    const interval = setInterval(cleanup, 60000);\n    \n    return () => clearInterval(interval);\n  }, [state.cache]);\n\n  // 使用useMemo避免重复创建context值\n  const contextValue = useMemo(() => ({\n    state,\n    dispatch\n  }), [state]);\n\n  return (\n    <GlobalStateContext.Provider value={contextValue}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n\n// 钩子函数用于组件中访问状态和调度器\nexport const useGlobalState = () => {\n  const context = useContext(GlobalStateContext);\n  if (context === undefined) {\n    throw new Error('useGlobalState 必须在 GlobalStateProvider 内部使用');\n  }\n  return context;\n};\n\n// 帮助函数\nexport const useTheme = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  // 使用useCallback避免重复创建函数\n  const setTheme = useCallback((theme: 'light' | 'dark') => {\n    dispatch({ type: 'SET_THEME', payload: theme });\n  }, [dispatch]);\n  \n  const toggleTheme = useCallback(() => {\n    dispatch({ type: 'SET_THEME', payload: state.theme === 'light' ? 'dark' : 'light' });\n  }, [dispatch, state.theme]);\n\n  return {\n    theme: state.theme,\n    setTheme,\n    toggleTheme,\n  };\n};\n\nexport const useLanguage = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const setLanguage = useCallback((language: 'zh' | 'en' | 'ko' | 'ja' | 'ru') => {\n    dispatch({ type: 'SET_LANGUAGE', payload: language });\n  }, [dispatch]);\n  \n  // 语言切换现在支持多种语言\n  const nextLanguage = useCallback(() => {\n    const languages: ('zh' | 'en' | 'ko' | 'ja' | 'ru')[] = ['zh', 'en', 'ko', 'ja', 'ru'];\n    const currentIndex = languages.indexOf(state.language);\n    const nextIndex = (currentIndex + 1) % languages.length;\n    dispatch({ type: 'SET_LANGUAGE', payload: languages[nextIndex] });\n  }, [dispatch, state.language]);\n\n  return {\n    language: state.language,\n    setLanguage,\n    nextLanguage,\n  };\n};\n\nexport const useNotifications = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const addNotification = useCallback((notification: Omit<Notification, 'id' | 'createdAt' | 'read'>) => {\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\n    \n    // 如果设置了自动关闭，则在指定时间后标记为已读\n    if (notification.autoClose) {\n      setTimeout(() => {\n        // 获取最新添加的通知ID\n        const latestNotification = state.notifications[0];\n        if (latestNotification) {\n          dispatch({ type: 'MARK_NOTIFICATION_READ', payload: latestNotification.id });\n        }\n      }, 5000);\n    }\n  }, [dispatch, state.notifications]);\n  \n  const markAsRead = useCallback((id: string) => {\n    dispatch({ type: 'MARK_NOTIFICATION_READ', payload: id });\n  }, [dispatch]);\n  \n  const clearNotifications = useCallback(() => {\n    dispatch({ type: 'CLEAR_NOTIFICATIONS' });\n  }, [dispatch]);\n\n  return {\n    notifications: state.notifications,\n    unreadCount: state.notifications.filter(n => !n.read).length,\n    addNotification,\n    markAsRead,\n    clearNotifications,\n  };\n};\n\nexport const useLoading = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const setLoading = useCallback((isLoading: boolean) => {\n    dispatch({ type: 'SET_LOADING', payload: isLoading });\n  }, [dispatch]);\n  \n  const startTask = useCallback((taskId: string) => {\n    dispatch({ type: 'START_LOADING_TASK', payload: taskId });\n    return taskId; // 返回taskId以便后续使用\n  }, [dispatch]);\n  \n  const finishTask = useCallback((taskId: string) => {\n    dispatch({ type: 'FINISH_LOADING_TASK', payload: taskId });\n  }, [dispatch]);\n\n  return {\n    isLoading: state.isLoading,\n    loadingTasks: state.loadingTasks,\n    setLoading,\n    startTask,\n    finishTask,\n  };\n};\n\n// 新增：缓存hook\nexport const useStateCache = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const setCache = useCallback((key: string, value: any, expiresIn?: number) => {\n    dispatch({ type: 'SET_CACHE_ITEM', payload: { key, value, expiresIn } });\n  }, [dispatch]);\n  \n  const getCache = useCallback((key: string): any => {\n    const item = state.cache[key];\n    if (!item) return null;\n    \n    // 检查是否过期\n    if (item.expiresAt && item.expiresAt < Date.now()) {\n      dispatch({ type: 'CLEAR_CACHE_ITEM', payload: key });\n      return null;\n    }\n    \n    return item.value;\n  }, [state.cache, dispatch]);\n  \n  const clearCache = useCallback((key?: string) => {\n    if (key) {\n      dispatch({ type: 'CLEAR_CACHE_ITEM', payload: key });\n    } else {\n      dispatch({ type: 'CLEAR_CACHE' });\n    }\n  }, [dispatch]);\n\n  return {\n    setCache,\n    getCache,\n    clearCache,\n  };\n};\n\n// 新增：错误管理hook\nexport const useStateErrors = () => {\n  const { state, dispatch } = useGlobalState();\n  \n  const setError = useCallback((key: string, message: string) => {\n    dispatch({ type: 'SET_ERROR', payload: { key, message } });\n  }, [dispatch]);\n  \n  const clearError = useCallback((key: string) => {\n    dispatch({ type: 'CLEAR_ERROR', payload: key });\n  }, [dispatch]);\n  \n  const clearAllErrors = useCallback(() => {\n    dispatch({ type: 'CLEAR_ALL_ERRORS' });\n  }, [dispatch]);\n\n  return {\n    errors: state.errors,\n    hasErrors: Object.keys(state.errors).length > 0,\n    setError,\n    clearError,\n    clearAllErrors,\n  };\n}; "],"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","ignoreList":[]}