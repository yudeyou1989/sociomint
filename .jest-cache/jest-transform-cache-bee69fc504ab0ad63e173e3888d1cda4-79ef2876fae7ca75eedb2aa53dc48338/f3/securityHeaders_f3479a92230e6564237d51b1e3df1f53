d5518e1c2f3f3dfd9f10904cd5d7bb3c
"use strict";

/* istanbul ignore next */
function cov_1o14oyrvtx() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/middleware/securityHeaders.ts";
  var hash = "6e58282f710690a60955f5e6874fb3b744308530";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/middleware/securityHeaders.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 51,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 25
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 27
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 33
        }
      },
      "17": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "18": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 48
        }
      },
      "19": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 70,
          column: 16
        }
      },
      "20": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 57
        }
      },
      "21": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 52
        }
      },
      "22": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 62
        }
      },
      "23": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 79
        }
      },
      "24": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 62
        }
      },
      "25": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 160
        }
      },
      "26": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "27": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 106
        }
      },
      "28": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 38
        }
      },
      "29": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 44
        }
      },
      "30": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 20
        }
      },
      "31": {
        start: {
          line: 88,
          column: 21
        },
        end: {
          line: 88,
          column: 48
        }
      },
      "32": {
        start: {
          line: 89,
          column: 19
        },
        end: {
          line: 89,
          column: 48
        }
      },
      "33": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "34": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "35": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 68
        }
      },
      "36": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 92
        }
      },
      "37": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 106
        }
      },
      "38": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 60
        }
      },
      "39": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 20
        }
      },
      "40": {
        start: {
          line: 106,
          column: 25
        },
        end: {
          line: 106,
          column: 34
        }
      },
      "41": {
        start: {
          line: 108,
          column: 15
        },
        end: {
          line: 108,
          column: 80
        }
      },
      "42": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 26
        }
      },
      "43": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 38
        }
      },
      "44": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "45": {
        start: {
          line: 113,
          column: 26
        },
        end: {
          line: 113,
          column: 83
        }
      },
      "46": {
        start: {
          line: 113,
          column: 59
        },
        end: {
          line: 113,
          column: 82
        }
      },
      "47": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "48": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "49": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 28
        }
      },
      "50": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 40
        }
      },
      "51": {
        start: {
          line: 128,
          column: 21
        },
        end: {
          line: 128,
          column: 48
        }
      },
      "52": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 64
        }
      },
      "53": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 93
        }
      },
      "54": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 101
        }
      },
      "55": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 20
        }
      },
      "56": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 45
        }
      },
      "57": {
        start: {
          line: 135,
          column: 35
        },
        end: {
          line: 135,
          column: 45
        }
      },
      "58": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 139,
          column: 27
        }
      },
      "59": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 62
        }
      },
      "60": {
        start: {
          line: 142,
          column: 49
        },
        end: {
          line: 142,
          column: 62
        }
      },
      "61": {
        start: {
          line: 144,
          column: 28
        },
        end: {
          line: 144,
          column: 49
        }
      },
      "62": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 41
        }
      },
      "63": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 56
        }
      },
      "64": {
        start: {
          line: 148,
          column: 43
        },
        end: {
          line: 148,
          column: 56
        }
      },
      "65": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 45
        }
      },
      "66": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 34
        }
      },
      "67": {
        start: {
          line: 154,
          column: 33
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "68": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 70
        }
      },
      "69": {
        start: {
          line: 159,
          column: 49
        },
        end: {
          line: 159,
          column: 68
        }
      },
      "70": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 45
        }
      },
      "71": {
        start: {
          line: 162,
          column: 35
        },
        end: {
          line: 162,
          column: 45
        }
      },
      "72": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 163,
          column: 157
        }
      },
      "73": {
        start: {
          line: 166,
          column: 18
        },
        end: {
          line: 166,
          column: 36
        }
      },
      "74": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 34
        }
      },
      "75": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 82
        }
      },
      "76": {
        start: {
          line: 168,
          column: 37
        },
        end: {
          line: 168,
          column: 71
        }
      },
      "77": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 46
        }
      },
      "78": {
        start: {
          line: 171,
          column: 33
        },
        end: {
          line: 171,
          column: 46
        }
      },
      "79": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 34
        }
      },
      "80": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 63
        }
      },
      "81": {
        start: {
          line: 175,
          column: 51
        },
        end: {
          line: 175,
          column: 63
        }
      },
      "82": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "83": {
        start: {
          line: 183,
          column: 19
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "84": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "85": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "86": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 43
        }
      },
      "87": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 191,
          column: 18
        }
      },
      "88": {
        start: {
          line: 194,
          column: 21
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "89": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 202,
          column: 79
        }
      },
      "90": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "91": {
        start: {
          line: 208,
          column: 17
        },
        end: {
          line: 221,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 24
          }
        },
        loc: {
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 21,
            column: 20
          }
        },
        loc: {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 27
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 24
          }
        },
        loc: {
          start: {
            line: 27,
            column: 34
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 30,
            column: 26
          }
        },
        loc: {
          start: {
            line: 30,
            column: 36
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 33,
            column: 17
          }
        },
        loc: {
          start: {
            line: 33,
            column: 27
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 16
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 19
          },
          end: {
            line: 39,
            column: 20
          }
        },
        loc: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 21
          },
          end: {
            line: 42,
            column: 22
          }
        },
        loc: {
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 18
          }
        },
        loc: {
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 24
          }
        },
        loc: {
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "securityHeaders",
        decl: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 24
          }
        },
        loc: {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 53
      },
      "15": {
        name: "corsHeaders",
        decl: {
          start: {
            line: 87,
            column: 9
          },
          end: {
            line: 87,
            column: 20
          }
        },
        loc: {
          start: {
            line: 87,
            column: 30
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 87
      },
      "16": {
        name: "rateLimit",
        decl: {
          start: {
            line: 107,
            column: 9
          },
          end: {
            line: 107,
            column: 18
          }
        },
        loc: {
          start: {
            line: 107,
            column: 59
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 107
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 113,
            column: 46
          },
          end: {
            line: 113,
            column: 47
          }
        },
        loc: {
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 82
          }
        },
        line: 113
      },
      "18": {
        name: "sanitizeInput",
        decl: {
          start: {
            line: 134,
            column: 9
          },
          end: {
            line: 134,
            column: 22
          }
        },
        loc: {
          start: {
            line: 134,
            column: 30
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 134
      },
      "19": {
        name: "isValidWalletAddress",
        decl: {
          start: {
            line: 141,
            column: 9
          },
          end: {
            line: 141,
            column: 29
          }
        },
        loc: {
          start: {
            line: 141,
            column: 39
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 141
      },
      "20": {
        name: "isValidTxHash",
        decl: {
          start: {
            line: 147,
            column: 9
          },
          end: {
            line: 147,
            column: 22
          }
        },
        loc: {
          start: {
            line: 147,
            column: 29
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 147
      },
      "21": {
        name: "preventSQLInjection",
        decl: {
          start: {
            line: 153,
            column: 9
          },
          end: {
            line: 153,
            column: 28
          }
        },
        loc: {
          start: {
            line: 153,
            column: 36
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 153
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 159,
            column: 38
          },
          end: {
            line: 159,
            column: 39
          }
        },
        loc: {
          start: {
            line: 159,
            column: 49
          },
          end: {
            line: 159,
            column: 68
          }
        },
        line: 159
      },
      "23": {
        name: "preventXSS",
        decl: {
          start: {
            line: 161,
            column: 9
          },
          end: {
            line: 161,
            column: 19
          }
        },
        loc: {
          start: {
            line: 161,
            column: 27
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 161
      },
      "24": {
        name: "generateCSRFToken",
        decl: {
          start: {
            line: 165,
            column: 9
          },
          end: {
            line: 165,
            column: 26
          }
        },
        loc: {
          start: {
            line: 165,
            column: 29
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 165
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 168,
            column: 29
          },
          end: {
            line: 168,
            column: 30
          }
        },
        loc: {
          start: {
            line: 168,
            column: 37
          },
          end: {
            line: 168,
            column: 71
          }
        },
        line: 168
      },
      "26": {
        name: "validateCSRFToken",
        decl: {
          start: {
            line: 170,
            column: 9
          },
          end: {
            line: 170,
            column: 26
          }
        },
        loc: {
          start: {
            line: 170,
            column: 48
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 170
      },
      "27": {
        name: "maskSensitiveData",
        decl: {
          start: {
            line: 174,
            column: 9
          },
          end: {
            line: 174,
            column: 26
          }
        },
        loc: {
          start: {
            line: 174,
            column: 33
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 174
      },
      "28": {
        name: "securityLog",
        decl: {
          start: {
            line: 193,
            column: 9
          },
          end: {
            line: 193,
            column: 20
          }
        },
        loc: {
          start: {
            line: 193,
            column: 53
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 193
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "1": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "2": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 14
          }
        }, {
          start: {
            line: 96,
            column: 18
          },
          end: {
            line: 96,
            column: 49
          }
        }],
        line: 96
      },
      "3": {
        loc: {
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 107,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 107,
            column: 39
          }
        }],
        line: 107
      },
      "4": {
        loc: {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 107,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 107,
            column: 52
          },
          end: {
            line: 107,
            column: 57
          }
        }],
        line: 107
      },
      "5": {
        loc: {
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 25
          }
        }, {
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 108,
            column: 67
          }
        }, {
          start: {
            line: 108,
            column: 71
          },
          end: {
            line: 108,
            column: 80
          }
        }],
        line: 108
      },
      "6": {
        loc: {
          start: {
            line: 112,
            column: 25
          },
          end: {
            line: 112,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 25
          },
          end: {
            line: 112,
            column: 45
          }
        }, {
          start: {
            line: 112,
            column: 49
          },
          end: {
            line: 112,
            column: 51
          }
        }],
        line: 112
      },
      "7": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "8": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "9": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "10": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 16
          }
        }, {
          start: {
            line: 142,
            column: 20
          },
          end: {
            line: 142,
            column: 47
          }
        }],
        line: 142
      },
      "11": {
        loc: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "12": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: 148,
            column: 17
          },
          end: {
            line: 148,
            column: 41
          }
        }],
        line: 148
      },
      "13": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "14": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "15": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 14
          }
        }, {
          start: {
            line: 171,
            column: 18
          },
          end: {
            line: 171,
            column: 31
          }
        }],
        line: 171
      },
      "16": {
        loc: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "17": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 175,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 175,
            column: 32
          }
        }, {
          start: {
            line: 175,
            column: 36
          },
          end: {
            line: 175,
            column: 49
          }
        }],
        line: 175
      },
      "18": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "19": {
        loc: {
          start: {
            line: 193,
            column: 37
          },
          end: {
            line: 193,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 45
          },
          end: {
            line: 193,
            column: 51
          }
        }],
        line: 193
      },
      "20": {
        loc: {
          start: {
            line: 199,
            column: 19
          },
          end: {
            line: 199,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 19
          },
          end: {
            line: 199,
            column: 36
          }
        }, {
          start: {
            line: 199,
            column: 40
          },
          end: {
            line: 199,
            column: 49
          }
        }],
        line: 199
      },
      "21": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 22
          }
        }, {
          start: {
            line: 200,
            column: 26
          },
          end: {
            line: 200,
            column: 35
          }
        }],
        line: 200
      },
      "22": {
        loc: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "23": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 204,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 204,
            column: 45
          }
        }, {
          start: {
            line: 204,
            column: 49
          },
          end: {
            line: 204,
            column: 66
          }
        }],
        line: 204
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/middleware/securityHeaders.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\n\n/**\n * \u5B89\u5168\u5934\u90E8\u4E2D\u95F4\u4EF6\n * \u6DFB\u52A0\u5404\u79CD\u5B89\u5168\u5934\u90E8\u4EE5\u9632\u6B62\u5E38\u89C1\u7684Web\u653B\u51FB\n */\n\nexport function securityHeaders(request: NextRequest) {\n  const response = NextResponse.next();\n\n  // Content Security Policy (CSP)\n  const csp = [\n    \"default-src 'self'\",\n    \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://vercel.live https://cdn.jsdelivr.net https://unpkg.com\",\n    \"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com\",\n    \"font-src 'self' https://fonts.gstatic.com\",\n    \"img-src 'self' data: https: blob:\",\n    \"media-src 'self' data: https:\",\n    \"connect-src 'self' https: wss: ws:\",\n    \"frame-src 'self' https:\",\n    \"object-src 'none'\",\n    \"base-uri 'self'\",\n    \"form-action 'self'\",\n    \"frame-ancestors 'none'\",\n    \"upgrade-insecure-requests\"\n  ].join('; ');\n\n  // \u8BBE\u7F6E\u5B89\u5168\u5934\u90E8\n  response.headers.set('Content-Security-Policy', csp);\n  response.headers.set('X-Frame-Options', 'DENY');\n  response.headers.set('X-Content-Type-Options', 'nosniff');\n  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');\n  response.headers.set('X-XSS-Protection', '1; mode=block');\n  response.headers.set('Permissions-Policy', \n    'camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()'\n  );\n\n  // HTTPS\u5F3A\u5236 (\u751F\u4EA7\u73AF\u5883)\n  if (process.env.NODE_ENV === 'production') {\n    response.headers.set('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload');\n  }\n\n  // \u79FB\u9664\u670D\u52A1\u5668\u4FE1\u606F\n  response.headers.delete('Server');\n  response.headers.delete('X-Powered-By');\n\n  return response;\n}\n\n/**\n * CORS\u914D\u7F6E\n */\nexport function corsHeaders(request: NextRequest) {\n  const response = NextResponse.next();\n  \n  const origin = request.headers.get('origin');\n  const allowedOrigins = [\n    'https://sociomint.top',\n    'https://www.sociomint.top',\n    'http://localhost:3000',\n    'http://localhost:3001'\n  ];\n\n  if (origin && allowedOrigins.includes(origin)) {\n    response.headers.set('Access-Control-Allow-Origin', origin);\n  }\n\n  response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n  response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With');\n  response.headers.set('Access-Control-Max-Age', '86400');\n\n  return response;\n}\n\n/**\n * \u901F\u7387\u9650\u5236\n */\nconst rateLimitMap = new Map();\n\nexport function rateLimit(request: NextRequest, limit: number = 100, windowMs: number = 60000) {\n  const ip = request.ip || request.headers.get('x-forwarded-for') || 'unknown';\n  const now = Date.now();\n  const windowStart = now - windowMs;\n\n  // \u6E05\u7406\u8FC7\u671F\u8BB0\u5F55\n  const userRequests = rateLimitMap.get(ip) || [];\n  const validRequests = userRequests.filter((timestamp: number) => timestamp > windowStart);\n\n  if (validRequests.length >= limit) {\n    return new NextResponse('Too Many Requests', { \n      status: 429,\n      headers: {\n        'Retry-After': Math.ceil(windowMs / 1000).toString(),\n        'X-RateLimit-Limit': limit.toString(),\n        'X-RateLimit-Remaining': '0',\n        'X-RateLimit-Reset': Math.ceil((windowStart + windowMs) / 1000).toString()\n      }\n    });\n  }\n\n  // \u8BB0\u5F55\u5F53\u524D\u8BF7\u6C42\n  validRequests.push(now);\n  rateLimitMap.set(ip, validRequests);\n\n  const response = NextResponse.next();\n  response.headers.set('X-RateLimit-Limit', limit.toString());\n  response.headers.set('X-RateLimit-Remaining', (limit - validRequests.length).toString());\n  response.headers.set('X-RateLimit-Reset', Math.ceil((windowStart + windowMs) / 1000).toString());\n\n  return response;\n}\n\n/**\n * \u8F93\u5165\u9A8C\u8BC1\u548C\u6E05\u7406\n */\nexport function sanitizeInput(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  return input\n    .replace(/[<>]/g, '') // \u79FB\u9664\u6F5C\u5728\u7684HTML\u6807\u7B7E\n    .replace(/javascript:/gi, '') // \u79FB\u9664JavaScript\u534F\u8BAE\n    .replace(/on\\w+=/gi, '') // \u79FB\u9664\u4E8B\u4EF6\u5904\u7406\u5668\n    .trim()\n    .slice(0, 1000); // \u9650\u5236\u957F\u5EA6\n}\n\n/**\n * \u9A8C\u8BC1\u94B1\u5305\u5730\u5740\n */\nexport function isValidWalletAddress(address: string): boolean {\n  if (!address || typeof address !== 'string') return false;\n  \n  // \u4EE5\u592A\u574A\u5730\u5740\u683C\u5F0F\u9A8C\u8BC1\n  const ethAddressRegex = /^0x[a-fA-F0-9]{40}$/;\n  return ethAddressRegex.test(address);\n}\n\n/**\n * \u9A8C\u8BC1\u4EA4\u6613\u54C8\u5E0C\n */\nexport function isValidTxHash(hash: string): boolean {\n  if (!hash || typeof hash !== 'string') return false;\n  \n  // \u4EA4\u6613\u54C8\u5E0C\u683C\u5F0F\u9A8C\u8BC1\n  const txHashRegex = /^0x[a-fA-F0-9]{64}$/;\n  return txHashRegex.test(hash);\n}\n\n/**\n * SQL\u6CE8\u5165\u9632\u62A4\n */\nexport function preventSQLInjection(query: string): boolean {\n  const sqlInjectionPatterns = [\n    /(\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT)\\b)/i,\n    /(--|\\/\\*|\\*\\/|;|'|\"|`)/,\n    /(\\bOR\\b|\\bAND\\b).*?[=<>]/i\n  ];\n\n  return !sqlInjectionPatterns.some(pattern => pattern.test(query));\n}\n\n/**\n * XSS\u9632\u62A4\n */\nexport function preventXSS(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  return input\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n}\n\n/**\n * CSRF Token\u751F\u6210\u548C\u9A8C\u8BC1\n */\nexport function generateCSRFToken(): string {\n  const array = new Uint8Array(32);\n  crypto.getRandomValues(array);\n  return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n}\n\nexport function validateCSRFToken(token: string, sessionToken: string): boolean {\n  if (!token || !sessionToken) return false;\n  return token === sessionToken;\n}\n\n/**\n * \u654F\u611F\u6570\u636E\u8131\u654F\n */\nexport function maskSensitiveData(data: any): any {\n  if (typeof data !== 'object' || data === null) return data;\n  \n  const sensitiveFields = ['password', 'privateKey', 'secret', 'token', 'key'];\n  const masked = { ...data };\n  \n  for (const field of sensitiveFields) {\n    if (masked[field]) {\n      masked[field] = '***MASKED***';\n    }\n  }\n  \n  return masked;\n}\n\n/**\n * \u5B89\u5168\u65E5\u5FD7\u8BB0\u5F55\n */\nexport function securityLog(event: string, details: any, level: 'info' | 'warn' | 'error' = 'info') {\n  const logEntry = {\n    timestamp: new Date().toISOString(),\n    event,\n    details: maskSensitiveData(details),\n    level,\n    userAgent: details.userAgent || 'unknown',\n    ip: details.ip || 'unknown'\n  };\n  \n  console.log(`[SECURITY-${level.toUpperCase()}]`, JSON.stringify(logEntry));\n  \n  // \u5728\u751F\u4EA7\u73AF\u5883\u4E2D\uFF0C\u8FD9\u91CC\u5E94\u8BE5\u53D1\u9001\u5230\u5B89\u5168\u76D1\u63A7\u7CFB\u7EDF\n  if (process.env.NODE_ENV === 'production' && level === 'error') {\n    // \u53D1\u9001\u5230Sentry\u6216\u5176\u4ED6\u76D1\u63A7\u670D\u52A1\n  }\n}\n\nexport default {\n  securityHeaders,\n  corsHeaders,\n  rateLimit,\n  sanitizeInput,\n  isValidWalletAddress,\n  isValidTxHash,\n  preventSQLInjection,\n  preventXSS,\n  generateCSRFToken,\n  validateCSRFToken,\n  maskSensitiveData,\n  securityLog\n};\n"],
      names: ["corsHeaders", "generateCSRFToken", "isValidTxHash", "isValidWalletAddress", "maskSensitiveData", "preventSQLInjection", "preventXSS", "rateLimit", "sanitizeInput", "securityHeaders", "securityLog", "validateCSRFToken", "request", "response", "NextResponse", "next", "csp", "join", "headers", "set", "process", "env", "NODE_ENV", "delete", "origin", "get", "allowedOrigins", "includes", "rateLimitMap", "Map", "limit", "windowMs", "ip", "now", "Date", "windowStart", "userRequests", "validRequests", "filter", "timestamp", "length", "status", "Math", "ceil", "toString", "push", "input", "replace", "trim", "slice", "address", "ethAddressRegex", "test", "hash", "txHashRegex", "query", "sqlInjectionPatterns", "some", "pattern", "array", "Uint8Array", "crypto", "getRandomValues", "Array", "from", "byte", "padStart", "token", "sessionToken", "data", "sensitiveFields", "masked", "field", "event", "details", "level", "logEntry", "toISOString", "userAgent", "console", "log", "toUpperCase", "JSON", "stringify"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6e58282f710690a60955f5e6874fb3b744308530"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1o14oyrvtx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1o14oyrvtx();
cov_1o14oyrvtx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[0]++;
  cov_1o14oyrvtx().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1o14oyrvtx().s[3]++;
_export(exports, {
  corsHeaders: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[1]++;
    cov_1o14oyrvtx().s[4]++;
    return corsHeaders;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[2]++;
    cov_1o14oyrvtx().s[5]++;
    return _default;
  },
  generateCSRFToken: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[3]++;
    cov_1o14oyrvtx().s[6]++;
    return generateCSRFToken;
  },
  isValidTxHash: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[4]++;
    cov_1o14oyrvtx().s[7]++;
    return isValidTxHash;
  },
  isValidWalletAddress: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[5]++;
    cov_1o14oyrvtx().s[8]++;
    return isValidWalletAddress;
  },
  maskSensitiveData: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[6]++;
    cov_1o14oyrvtx().s[9]++;
    return maskSensitiveData;
  },
  preventSQLInjection: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[7]++;
    cov_1o14oyrvtx().s[10]++;
    return preventSQLInjection;
  },
  preventXSS: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[8]++;
    cov_1o14oyrvtx().s[11]++;
    return preventXSS;
  },
  rateLimit: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[9]++;
    cov_1o14oyrvtx().s[12]++;
    return rateLimit;
  },
  sanitizeInput: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[10]++;
    cov_1o14oyrvtx().s[13]++;
    return sanitizeInput;
  },
  securityHeaders: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[11]++;
    cov_1o14oyrvtx().s[14]++;
    return securityHeaders;
  },
  securityLog: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[12]++;
    cov_1o14oyrvtx().s[15]++;
    return securityLog;
  },
  validateCSRFToken: function () {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[13]++;
    cov_1o14oyrvtx().s[16]++;
    return validateCSRFToken;
  }
});
const _server =
/* istanbul ignore next */
(cov_1o14oyrvtx().s[17]++, require("next/server"));
function securityHeaders(request) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[14]++;
  const response =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[18]++, _server.NextResponse.next());
  // Content Security Policy (CSP)
  const csp =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[19]++, ["default-src 'self'", "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://vercel.live https://cdn.jsdelivr.net https://unpkg.com", "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com", "font-src 'self' https://fonts.gstatic.com", "img-src 'self' data: https: blob:", "media-src 'self' data: https:", "connect-src 'self' https: wss: ws:", "frame-src 'self' https:", "object-src 'none'", "base-uri 'self'", "form-action 'self'", "frame-ancestors 'none'", "upgrade-insecure-requests"].join('; '));
  // 设置安全头部
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[20]++;
  response.headers.set('Content-Security-Policy', csp);
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[21]++;
  response.headers.set('X-Frame-Options', 'DENY');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[22]++;
  response.headers.set('X-Content-Type-Options', 'nosniff');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[23]++;
  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[24]++;
  response.headers.set('X-XSS-Protection', '1; mode=block');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[25]++;
  response.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()');
  // HTTPS强制 (生产环境)
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[26]++;
  if (process.env.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[0][0]++;
    cov_1o14oyrvtx().s[27]++;
    response.headers.set('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload');
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[0][1]++;
  }
  // 移除服务器信息
  cov_1o14oyrvtx().s[28]++;
  response.headers.delete('Server');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[29]++;
  response.headers.delete('X-Powered-By');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[30]++;
  return response;
}
function corsHeaders(request) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[15]++;
  const response =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[31]++, _server.NextResponse.next());
  const origin =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[32]++, request.headers.get('origin'));
  const allowedOrigins =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[33]++, ['https://sociomint.top', 'https://www.sociomint.top', 'http://localhost:3000', 'http://localhost:3001']);
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[34]++;
  if (
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[2][0]++, origin) &&
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[2][1]++, allowedOrigins.includes(origin))) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[1][0]++;
    cov_1o14oyrvtx().s[35]++;
    response.headers.set('Access-Control-Allow-Origin', origin);
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[1][1]++;
  }
  cov_1o14oyrvtx().s[36]++;
  response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[37]++;
  response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[38]++;
  response.headers.set('Access-Control-Max-Age', '86400');
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[39]++;
  return response;
}
/**
 * 速率限制
 */
const rateLimitMap =
/* istanbul ignore next */
(cov_1o14oyrvtx().s[40]++, new Map());
function rateLimit(request, limit =
/* istanbul ignore next */
(cov_1o14oyrvtx().b[3][0]++, 100), windowMs =
/* istanbul ignore next */
(cov_1o14oyrvtx().b[4][0]++, 60000)) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[16]++;
  const ip =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[41]++,
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[5][0]++, request.ip) ||
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[5][1]++, request.headers.get('x-forwarded-for')) ||
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[5][2]++, 'unknown'));
  const now =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[42]++, Date.now());
  const windowStart =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[43]++, now - windowMs);
  // 清理过期记录
  const userRequests =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[44]++,
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[6][0]++, rateLimitMap.get(ip)) ||
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[6][1]++, []));
  const validRequests =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[45]++, userRequests.filter(timestamp => {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[17]++;
    cov_1o14oyrvtx().s[46]++;
    return timestamp > windowStart;
  }));
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[47]++;
  if (validRequests.length >= limit) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[7][0]++;
    cov_1o14oyrvtx().s[48]++;
    return new _server.NextResponse('Too Many Requests', {
      status: 429,
      headers: {
        'Retry-After': Math.ceil(windowMs / 1000).toString(),
        'X-RateLimit-Limit': limit.toString(),
        'X-RateLimit-Remaining': '0',
        'X-RateLimit-Reset': Math.ceil((windowStart + windowMs) / 1000).toString()
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[7][1]++;
  }
  // 记录当前请求
  cov_1o14oyrvtx().s[49]++;
  validRequests.push(now);
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[50]++;
  rateLimitMap.set(ip, validRequests);
  const response =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[51]++, _server.NextResponse.next());
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[52]++;
  response.headers.set('X-RateLimit-Limit', limit.toString());
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[53]++;
  response.headers.set('X-RateLimit-Remaining', (limit - validRequests.length).toString());
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[54]++;
  response.headers.set('X-RateLimit-Reset', Math.ceil((windowStart + windowMs) / 1000).toString());
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[55]++;
  return response;
}
function sanitizeInput(input) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[18]++;
  cov_1o14oyrvtx().s[56]++;
  if (typeof input !== 'string') {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[8][0]++;
    cov_1o14oyrvtx().s[57]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[8][1]++;
  }
  cov_1o14oyrvtx().s[58]++;
  return input.replace(/[<>]/g, '') // 移除潜在的HTML标签
  .replace(/javascript:/gi, '') // 移除JavaScript协议
  .replace(/on\w+=/gi, '') // 移除事件处理器
  .trim().slice(0, 1000); // 限制长度
}
function isValidWalletAddress(address) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[19]++;
  cov_1o14oyrvtx().s[59]++;
  if (
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[10][0]++, !address) ||
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[10][1]++, typeof address !== 'string')) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[9][0]++;
    cov_1o14oyrvtx().s[60]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[9][1]++;
  }
  // 以太坊地址格式验证
  const ethAddressRegex =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[61]++, /^0x[a-fA-F0-9]{40}$/);
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[62]++;
  return ethAddressRegex.test(address);
}
function isValidTxHash(hash) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[20]++;
  cov_1o14oyrvtx().s[63]++;
  if (
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[12][0]++, !hash) ||
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[12][1]++, typeof hash !== 'string')) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[11][0]++;
    cov_1o14oyrvtx().s[64]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[11][1]++;
  }
  // 交易哈希格式验证
  const txHashRegex =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[65]++, /^0x[a-fA-F0-9]{64}$/);
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[66]++;
  return txHashRegex.test(hash);
}
function preventSQLInjection(query) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[21]++;
  const sqlInjectionPatterns =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[67]++, [/(\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT)\b)/i, /(--|\/\*|\*\/|;|'|"|`)/, /(\bOR\b|\bAND\b).*?[=<>]/i]);
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[68]++;
  return !sqlInjectionPatterns.some(pattern => {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[22]++;
    cov_1o14oyrvtx().s[69]++;
    return pattern.test(query);
  });
}
function preventXSS(input) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[23]++;
  cov_1o14oyrvtx().s[70]++;
  if (typeof input !== 'string') {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[13][0]++;
    cov_1o14oyrvtx().s[71]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[13][1]++;
  }
  cov_1o14oyrvtx().s[72]++;
  return input.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g, '&#x2F;');
}
function generateCSRFToken() {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[24]++;
  const array =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[73]++, new Uint8Array(32));
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[74]++;
  crypto.getRandomValues(array);
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[75]++;
  return Array.from(array, byte => {
    /* istanbul ignore next */
    cov_1o14oyrvtx().f[25]++;
    cov_1o14oyrvtx().s[76]++;
    return byte.toString(16).padStart(2, '0');
  }).join('');
}
function validateCSRFToken(token, sessionToken) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[26]++;
  cov_1o14oyrvtx().s[77]++;
  if (
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[15][0]++, !token) ||
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[15][1]++, !sessionToken)) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[14][0]++;
    cov_1o14oyrvtx().s[78]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[14][1]++;
  }
  cov_1o14oyrvtx().s[79]++;
  return token === sessionToken;
}
function maskSensitiveData(data) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[27]++;
  cov_1o14oyrvtx().s[80]++;
  if (
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[17][0]++, typeof data !== 'object') ||
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[17][1]++, data === null)) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[16][0]++;
    cov_1o14oyrvtx().s[81]++;
    return data;
  } else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[16][1]++;
  }
  const sensitiveFields =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[82]++, ['password', 'privateKey', 'secret', 'token', 'key']);
  const masked =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[83]++, {
    ...data
  });
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[84]++;
  for (const field of sensitiveFields) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().s[85]++;
    if (masked[field]) {
      /* istanbul ignore next */
      cov_1o14oyrvtx().b[18][0]++;
      cov_1o14oyrvtx().s[86]++;
      masked[field] = '***MASKED***';
    } else
    /* istanbul ignore next */
    {
      cov_1o14oyrvtx().b[18][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[87]++;
  return masked;
}
function securityLog(event, details, level =
/* istanbul ignore next */
(cov_1o14oyrvtx().b[19][0]++, 'info')) {
  /* istanbul ignore next */
  cov_1o14oyrvtx().f[28]++;
  const logEntry =
  /* istanbul ignore next */
  (cov_1o14oyrvtx().s[88]++, {
    timestamp: new Date().toISOString(),
    event,
    details: maskSensitiveData(details),
    level,
    userAgent:
    /* istanbul ignore next */
    (cov_1o14oyrvtx().b[20][0]++, details.userAgent) ||
    /* istanbul ignore next */
    (cov_1o14oyrvtx().b[20][1]++, 'unknown'),
    ip:
    /* istanbul ignore next */
    (cov_1o14oyrvtx().b[21][0]++, details.ip) ||
    /* istanbul ignore next */
    (cov_1o14oyrvtx().b[21][1]++, 'unknown')
  });
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[89]++;
  console.log(`[SECURITY-${level.toUpperCase()}]`, JSON.stringify(logEntry));
  // 在生产环境中，这里应该发送到安全监控系统
  /* istanbul ignore next */
  cov_1o14oyrvtx().s[90]++;
  if (
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[23][0]++, process.env.NODE_ENV === 'production') &&
  /* istanbul ignore next */
  (cov_1o14oyrvtx().b[23][1]++, level === 'error')) {
    /* istanbul ignore next */
    cov_1o14oyrvtx().b[22][0]++;
  } // 发送到Sentry或其他监控服务
  else
  /* istanbul ignore next */
  {
    cov_1o14oyrvtx().b[22][1]++;
  }
}
const _default =
/* istanbul ignore next */
(cov_1o14oyrvtx().s[91]++, {
  securityHeaders,
  corsHeaders,
  rateLimit,
  sanitizeInput,
  isValidWalletAddress,
  isValidTxHash,
  preventSQLInjection,
  preventXSS,
  generateCSRFToken,
  validateCSRFToken,
  maskSensitiveData,
  securityLog
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,