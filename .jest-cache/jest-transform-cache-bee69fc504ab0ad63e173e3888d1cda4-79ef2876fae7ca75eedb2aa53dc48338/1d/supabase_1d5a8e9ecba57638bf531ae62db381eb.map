{"version":3,"names":["checkSupabaseConnection","cov_1qit40546t","f","s","handleSupabaseError","supabase","testSupabaseConnection","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseAnonKey","NEXT_PUBLIC_SUPABASE_ANON_KEY","b","Error","console","log","_supabasejs","createClient","auth","autoRefreshToken","persistSession","detectSessionInUrl","realtime","enabled","data","error","from","select","count","head","code","message","getSession","success"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\n// Supabase配置\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// 验证必需的环境变量\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing required Supabase environment variables. Please check NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY.');\n}\n\n// 输出调试信息\nconsole.log('Initializing Supabase with URL:', supabaseUrl);\n\n// 创建Supabase客户端\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  },\n  realtime: {\n    // 开启实时订阅功能\n    enabled: true\n  }\n});\n\n// 添加自定义钩子，用于检测Supabase连接状态\nexport const checkSupabaseConnection = async () => {\n  try {\n    // 尝试执行简单查询来检测连接状态\n    const { data, error } = await supabase.from('box_tiers').select('count(*)', { count: 'exact', head: true });\n\n    if (error) {\n      console.error('Supabase连接错误:', error);\n      return false;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('检查Supabase连接时出错:', error);\n    return false;\n  }\n};\n\n// 辅助函数：处理Supabase错误\nexport const handleSupabaseError = (error: any) => {\n  console.error('Supabase操作错误:', error);\n\n  // 根据错误类型返回友好的错误消息\n  if (error.code === '23505') {\n    return '该记录已存在，请勿重复创建。';\n  } else if (error.code === '23503') {\n    return '引用的记录不存在，无法完成操作。';\n  } else if (error.code === '42501') {\n    return '您没有权限执行此操作。';\n  } else if (error.message) {\n    return error.message;\n  }\n\n  return '操作失败，请重试或联系管理员。';\n};\n\n// 导出一个简单的测试函数，用于验证连接\nexport const testSupabaseConnection = async () => {\n  try {\n    // 测试auth服务，这通常总是可用的\n    const { data, error } = await supabase.auth.getSession();\n    if (error) {\n      throw error;\n    }\n    return { success: true, data };\n  } catch (error) {\n    console.error('Supabase连接测试失败:', error);\n    return { success: false, error };\n  }\n};"],"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","ignoreList":[]}