6c2ea6155a29c8ae376d995915e89028
'use client';
"use strict";

/* istanbul ignore next */
function cov_9j3vuy9ti() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/components/ui/BackgroundEffect.tsx";
  var hash = "5922b8a421118712ead0746c04540420d891a34b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/components/ui/BackgroundEffect.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "2": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 24
        }
      },
      "3": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 48
        }
      },
      "4": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 30
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "7": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "8": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "10": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "11": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "12": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 26
        }
      },
      "15": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "16": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "17": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 28
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "19": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 22
        }
      },
      "20": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "21": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "22": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "23": {
        start: {
          line: 48,
          column: 38
        },
        end: {
          line: 48,
          column: 56
        }
      },
      "24": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 51,
          column: 17
        }
      },
      "25": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 53
        }
      },
      "26": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 25
        }
      },
      "27": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 46
        }
      },
      "28": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "29": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 60,
          column: 47
        }
      },
      "30": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 60
        }
      },
      "31": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "32": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 40
        }
      },
      "33": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "34": {
        start: {
          line: 64,
          column: 21
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "35": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "36": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 25
        }
      },
      "37": {
        start: {
          line: 68,
          column: 18
        },
        end: {
          line: 68,
          column: 25
        }
      },
      "38": {
        start: {
          line: 70,
          column: 29
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "39": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 45
        }
      },
      "40": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 47
        }
      },
      "41": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 28
        }
      },
      "42": {
        start: {
          line: 78,
          column: 32
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "43": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 59
        }
      },
      "44": {
        start: {
          line: 79,
          column: 31
        },
        end: {
          line: 79,
          column: 59
        }
      },
      "45": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 58
        }
      },
      "46": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "47": {
        start: {
          line: 84,
          column: 23
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "48": {
        start: {
          line: 90,
          column: 30
        },
        end: {
          line: 90,
          column: 32
        }
      },
      "49": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "50": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 21
        }
      },
      "51": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 51
        }
      },
      "52": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "53": {
        start: {
          line: 96,
          column: 30
        },
        end: {
          line: 96,
          column: 32
        }
      },
      "54": {
        start: {
          line: 98,
          column: 34
        },
        end: {
          line: 98,
          column: 96
        }
      },
      "55": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "56": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 25
        }
      },
      "57": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "58": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 45
        }
      },
      "59": {
        start: {
          line: 113,
          column: 27
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "60": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 114,
          column: 40
        }
      },
      "61": {
        start: {
          line: 115,
          column: 30
        },
        end: {
          line: 115,
          column: 50
        }
      },
      "62": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 25
        }
      },
      "63": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "64": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 64
        }
      },
      "65": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 15
        }
      },
      "66": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 113
        }
      },
      "67": {
        start: {
          line: 123,
          column: 100
        },
        end: {
          line: 123,
          column: 111
        }
      },
      "68": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "69": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 40
        }
      },
      "70": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 40
        }
      },
      "71": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 61
        }
      },
      "72": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 130,
          column: 50
        }
      },
      "73": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "74": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 29
        }
      },
      "75": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "76": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 32
        }
      },
      "77": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 79
        }
      },
      "78": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 47
        }
      },
      "79": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 27
        }
      },
      "80": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 46
        }
      },
      "81": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 46
        }
      },
      "82": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 72
        }
      },
      "83": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 74
        }
      },
      "84": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 166,
          column: 19
        }
      },
      "85": {
        start: {
          line: 150,
          column: 37
        },
        end: {
          line: 150,
          column: 61
        }
      },
      "86": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 151,
          column: 54
        }
      },
      "87": {
        start: {
          line: 152,
          column: 31
        },
        end: {
          line: 152,
          column: 54
        }
      },
      "88": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 165,
          column: 21
        }
      },
      "89": {
        start: {
          line: 155,
          column: 41
        },
        end: {
          line: 155,
          column: 69
        }
      },
      "90": {
        start: {
          line: 156,
          column: 24
        },
        end: {
          line: 164,
          column: 25
        }
      },
      "91": {
        start: {
          line: 157,
          column: 49
        },
        end: {
          line: 157,
          column: 69
        }
      },
      "92": {
        start: {
          line: 158,
          column: 28
        },
        end: {
          line: 158,
          column: 44
        }
      },
      "93": {
        start: {
          line: 159,
          column: 28
        },
        end: {
          line: 159,
          column: 100
        }
      },
      "94": {
        start: {
          line: 160,
          column: 28
        },
        end: {
          line: 160,
          column: 48
        }
      },
      "95": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 63
        }
      },
      "96": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 63
        }
      },
      "97": {
        start: {
          line: 163,
          column: 28
        },
        end: {
          line: 163,
          column: 41
        }
      },
      "98": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 25
        }
      },
      "99": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 72
        }
      },
      "100": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 172,
          column: 26
        }
      },
      "101": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 23
        }
      },
      "102": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 24
        }
      },
      "103": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "104": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 66
        }
      },
      "105": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 55
        }
      },
      "106": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 187,
          column: 7
        }
      },
      "107": {
        start: {
          line: 189,
          column: 31
        },
        end: {
          line: 189,
          column: 65
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 10
          }
        },
        loc: {
          start: {
            line: 9,
            column: 20
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 40
      },
      "6": {
        name: "BackgroundEffect",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 25
          }
        },
        loc: {
          start: {
            line: 57,
            column: 28
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 27
          }
        },
        loc: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 62
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 70,
            column: 29
          },
          end: {
            line: 70,
            column: 30
          }
        },
        loc: {
          start: {
            line: 70,
            column: 33
          },
          end: {
            line: 75,
            column: 9
          }
        },
        line: 70
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 78,
            column: 32
          },
          end: {
            line: 78,
            column: 33
          }
        },
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 78
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 95,
            column: 31
          }
        },
        loc: {
          start: {
            line: 95,
            column: 34
          },
          end: {
            line: 111,
            column: 9
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 113,
            column: 27
          },
          end: {
            line: 113,
            column: 28
          }
        },
        loc: {
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 125,
            column: 9
          }
        },
        line: 113
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 118,
            column: 30
          },
          end: {
            line: 118,
            column: 31
          }
        },
        loc: {
          start: {
            line: 118,
            column: 49
          },
          end: {
            line: 120,
            column: 13
          }
        },
        line: 118
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 31
          }
        },
        loc: {
          start: {
            line: 122,
            column: 49
          },
          end: {
            line: 124,
            column: 13
          }
        },
        line: 122
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 123,
            column: 95
          },
          end: {
            line: 123,
            column: 96
          }
        },
        loc: {
          start: {
            line: 123,
            column: 100
          },
          end: {
            line: 123,
            column: 111
          }
        },
        line: 123
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 127,
            column: 30
          },
          end: {
            line: 127,
            column: 31
          }
        },
        loc: {
          start: {
            line: 127,
            column: 34
          },
          end: {
            line: 170,
            column: 9
          }
        },
        line: 127
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 136,
            column: 31
          }
        },
        loc: {
          start: {
            line: 136,
            column: 49
          },
          end: {
            line: 167,
            column: 13
          }
        },
        line: 136
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 149,
            column: 43
          },
          end: {
            line: 149,
            column: 44
          }
        },
        loc: {
          start: {
            line: 149,
            column: 60
          },
          end: {
            line: 166,
            column: 17
          }
        },
        line: 149
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 176,
            column: 15
          },
          end: {
            line: 176,
            column: 16
          }
        },
        loc: {
          start: {
            line: 176,
            column: 19
          },
          end: {
            line: 179,
            column: 9
          }
        },
        line: 176
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 64,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 64,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "5": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "6": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 23
          }
        }, {
          start: {
            line: 128,
            column: 27
          },
          end: {
            line: 128,
            column: 31
          }
        }],
        line: 128
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 165,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 165,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "9": {
        loc: {
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 42
          }
        }, {
          start: {
            line: 154,
            column: 46
          },
          end: {
            line: 154,
            column: 64
          }
        }],
        line: 154
      },
      "10": {
        loc: {
          start: {
            line: 156,
            column: 24
          },
          end: {
            line: 164,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 24
          },
          end: {
            line: 164,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/components/ui/BackgroundEffect.tsx"],
      sourcesContent: ["'use client';\n\nimport { useEffect, useRef, memo } from 'react';\n\ninterface Particle {\n  x: number;\n  y: number;\n  size: number;\n  speedX: number;\n  speedY: number;\n  color: string;\n  // \u6DFB\u52A0\u90BB\u5C45\u5217\u8868\uFF0C\u907F\u514D\u6BCF\u5E27\u90FD\u8BA1\u7B97\u6240\u6709\u7C92\u5B50\u5BF9\n  neighbors: number[];\n}\n\n// \u4F7F\u7528\u7A7A\u95F4\u5206\u533A\u4F18\u5316\u7C92\u5B50\u8FDE\u7EBF\u8BA1\u7B97\nclass SpatialGrid {\n  private grid: Map<string, number[]>;\n  private cellSize: number;\n\n  constructor(cellSize: number) {\n    this.grid = new Map();\n    this.cellSize = cellSize;\n  }\n\n  // \u83B7\u53D6\u7C92\u5B50\u6240\u5728\u7684\u7F51\u683C\u5750\u6807\n  private getCellKey(x: number, y: number): string {\n    const cellX = Math.floor(x / this.cellSize);\n    const cellY = Math.floor(y / this.cellSize);\n    return `${cellX},${cellY}`;\n  }\n\n  // \u6DFB\u52A0\u7C92\u5B50\u5230\u7F51\u683C\n  addParticle(index: number, x: number, y: number): void {\n    const key = this.getCellKey(x, y);\n    if (!this.grid.has(key)) {\n      this.grid.set(key, []);\n    }\n    this.grid.get(key)?.push(index);\n  }\n\n  // \u6E05\u7A7A\u7F51\u683C\n  clear(): void {\n    this.grid.clear();\n  }\n\n  // \u83B7\u53D6\u53EF\u80FD\u7684\u90BB\u5C45\u7C92\u5B50\n  getPotentialNeighbors(x: number, y: number): number[] {\n    const cellX = Math.floor(x / this.cellSize);\n    const cellY = Math.floor(y / this.cellSize);\n    const neighbors: number[] = [];\n\n    // \u68C0\u67E5\u5F53\u524D\u7F51\u683C\u548C\u5468\u56F48\u4E2A\u7F51\u683C\n    for (let i = -1; i <= 1; i++) {\n      for (let j = -1; j <= 1; j++) {\n        const key = `${cellX + i},${cellY + j}`;\n        const cellParticles = this.grid.get(key);\n        if (cellParticles) {\n          neighbors.push(...cellParticles);\n        }\n      }\n    }\n\n    return neighbors;\n  }\n}\n\nfunction BackgroundEffect() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number>(0);\n  const particlesRef = useRef<Particle[]>([]);\n  const gridRef = useRef<SpatialGrid>(new SpatialGrid(100)); // \u7F51\u683C\u5927\u5C0F\u7B49\u4E8E\u8FDE\u7EBF\u8DDD\u79BB\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d', { alpha: true });\n    if (!ctx) return;\n\n    // \u8BBE\u7F6Ecanvas\u5C3A\u5BF8\u4E3A\u7A97\u53E3\u5927\u5C0F\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      // \u91CD\u65B0\u521D\u59CB\u5316\u7C92\u5B50\n      initParticles();\n    };\n\n    // \u4F7F\u7528\u8282\u6D41\u51FD\u6570\u5904\u7406resize\u4E8B\u4EF6\n    let resizeTimeout: NodeJS.Timeout;\n    const throttledResize = () => {\n      if (resizeTimeout) clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(resizeCanvas, 200);\n    };\n\n    window.addEventListener('resize', throttledResize);\n\n    // \u989C\u8272\u9884\u8BA1\u7B97\uFF0C\u907F\u514D\u6BCF\u5E27\u91CD\u65B0\u521B\u5EFA\u989C\u8272\u5B57\u7B26\u4E32\n    const colors = [\n      'rgba(105, 60, 255, 0.5)', // \u7D2B\u8272 (primary)\n      'rgba(0, 180, 216, 0.5)', // \u9752\u8272 (secondary)\n      'rgba(255, 255, 255, 0.3)', // \u767D\u8272\n    ];\n\n    // \u9884\u8BA1\u7B97\u8FDE\u7EBF\u900F\u660E\u5EA6\n    const lineOpacities: number[] = [];\n    for (let i = 0; i <= 100; i++) {\n      lineOpacities[i] = 0.1 * (1 - i / 100);\n    }\n\n    // \u521D\u59CB\u5316\u7C92\u5B50\n    const initParticles = () => {\n      const particles: Particle[] = [];\n      // \u6839\u636E\u5C4F\u5E55\u5927\u5C0F\u8C03\u6574\u7C92\u5B50\u6570\u91CF\uFF0C\u4F46\u8BBE\u7F6E\u4E0A\u9650\u4EE5\u4FDD\u6301\u6027\u80FD\n      const particleCount = Math.min(Math.floor((canvas.width * canvas.height) / 20000), 60);\n\n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 2 + 1,\n          speedX: (Math.random() - 0.5) * 0.3,\n          speedY: (Math.random() - 0.5) * 0.3,\n          color: colors[Math.floor(Math.random() * colors.length)],\n          neighbors: []\n        });\n      }\n\n      particlesRef.current = particles;\n    };\n\n    // \u66F4\u65B0\u7A7A\u95F4\u7F51\u683C\n    const updateGrid = () => {\n      const grid = gridRef.current;\n      const particles = particlesRef.current;\n\n      grid.clear();\n\n      // \u5C06\u7C92\u5B50\u6DFB\u52A0\u5230\u7F51\u683C\n      particles.forEach((particle, index) => {\n        grid.addParticle(index, particle.x, particle.y);\n      });\n\n      // \u66F4\u65B0\u6BCF\u4E2A\u7C92\u5B50\u7684\u90BB\u5C45\u5217\u8868\n      particles.forEach((particle, index) => {\n        particle.neighbors = grid.getPotentialNeighbors(particle.x, particle.y)\n          .filter(i => i !== index);\n      });\n    };\n\n    // \u7ED8\u5236\u7C92\u5B50\n    const drawParticles = () => {\n      if (!canvas || !ctx) return;\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      const particles = particlesRef.current;\n\n      // \u6BCF10\u5E27\u66F4\u65B0\u4E00\u6B21\u7F51\u683C\u548C\u90BB\u5C45\u5173\u7CFB\n      if (frameCount % 10 === 0) {\n        updateGrid();\n      }\n\n      // \u7ED8\u5236\u7C92\u5B50\u548C\u8FDE\u7EBF\n      particles.forEach((particle, index) => {\n        // \u7ED8\u5236\u7C92\u5B50\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n        ctx.fillStyle = particle.color;\n        ctx.fill();\n\n        // \u66F4\u65B0\u7C92\u5B50\u4F4D\u7F6E\n        particle.x += particle.speedX;\n        particle.y += particle.speedY;\n\n        // \u8FB9\u754C\u68C0\u67E5 - \u4F7F\u7528\u6A21\u8FD0\u7B97\u7B80\u5316\u4EE3\u7801\n        particle.x = (particle.x + canvas.width) % canvas.width;\n        particle.y = (particle.y + canvas.height) % canvas.height;\n\n        // \u53EA\u8FDE\u63A5\u9884\u8BA1\u7B97\u7684\u90BB\u5C45\u7C92\u5B50\n        particle.neighbors.forEach(neighborIndex => {\n          const neighbor = particles[neighborIndex];\n          const dx = particle.x - neighbor.x;\n          const dy = particle.y - neighbor.y;\n\n          // \u4F7F\u7528\u66FC\u54C8\u987F\u8DDD\u79BB\u4F5C\u4E3A\u521D\u6B65\u7B5B\u9009\uFF0C\u51CF\u5C11\u8BA1\u7B97\u91CF\n          if (Math.abs(dx) < 100 && Math.abs(dy) < 100) {\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            if (distance < 100) {\n              const opacityIndex = Math.floor(distance);\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(120, 120, 255, ${lineOpacities[opacityIndex]})`;\n              ctx.lineWidth = 0.5;\n              ctx.moveTo(particle.x, particle.y);\n              ctx.lineTo(neighbor.x, neighbor.y);\n              ctx.stroke();\n            }\n          }\n        });\n      });\n\n      frameCount++;\n      animationRef.current = requestAnimationFrame(drawParticles);\n    };\n\n    // \u521D\u59CB\u5316\n    let frameCount = 0;\n    resizeCanvas();\n    drawParticles();\n\n    // \u6E05\u7406\u51FD\u6570\n    return () => {\n      window.removeEventListener('resize', throttledResize);\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed top-0 left-0 w-full h-full -z-10\"\n      style={{ opacity: 0.6 }}\n    />\n  );\n}\n\n// \u4F7F\u7528memo\u5305\u88C5\u7EC4\u4EF6\uFF0C\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u91CD\u65B0\u6E32\u67D3\nexport default memo(BackgroundEffect);\n"],
      names: ["SpatialGrid", "constructor", "cellSize", "grid", "Map", "getCellKey", "x", "y", "cellX", "Math", "floor", "cellY", "addParticle", "index", "key", "has", "set", "get", "push", "clear", "getPotentialNeighbors", "neighbors", "i", "j", "cellParticles", "BackgroundEffect", "canvasRef", "useRef", "animationRef", "particlesRef", "gridRef", "useEffect", "canvas", "current", "ctx", "getContext", "alpha", "resizeCanvas", "width", "window", "innerWidth", "height", "innerHeight", "initParticles", "resizeTimeout", "throttledResize", "clearTimeout", "setTimeout", "addEventListener", "colors", "lineOpacities", "particles", "particleCount", "min", "random", "size", "speedX", "speedY", "color", "length", "updateGrid", "forEach", "particle", "filter", "drawParticles", "clearRect", "frameCount", "beginPath", "arc", "PI", "fillStyle", "fill", "neighborIndex", "neighbor", "dx", "dy", "abs", "distance", "sqrt", "opacityIndex", "strokeStyle", "lineWidth", "moveTo", "lineTo", "stroke", "requestAnimationFrame", "removeEventListener", "cancelAnimationFrame", "ref", "className", "style", "opacity", "memo"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5922b8a421118712ead0746c04540420d891a34b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9j3vuy9ti = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9j3vuy9ti();
cov_9j3vuy9ti().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9j3vuy9ti().s[1]++;
Object.defineProperty(exports,
// 使用memo包装组件，避免不必要的重新渲染
"default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9j3vuy9ti().f[0]++;
    cov_9j3vuy9ti().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_9j3vuy9ti().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_9j3vuy9ti().s[4]++, require("react"));
// 使用空间分区优化粒子连线计算
class SpatialGrid {
  constructor(cellSize) {
    /* istanbul ignore next */
    cov_9j3vuy9ti().f[1]++;
    cov_9j3vuy9ti().s[5]++;
    this.grid = new Map();
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[6]++;
    this.cellSize = cellSize;
  }
  // 获取粒子所在的网格坐标
  getCellKey(x, y) {
    /* istanbul ignore next */
    cov_9j3vuy9ti().f[2]++;
    const cellX =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[7]++, Math.floor(x / this.cellSize));
    const cellY =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[8]++, Math.floor(y / this.cellSize));
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[9]++;
    return `${cellX},${cellY}`;
  }
  // 添加粒子到网格
  addParticle(index, x, y) {
    /* istanbul ignore next */
    cov_9j3vuy9ti().f[3]++;
    const key =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[10]++, this.getCellKey(x, y));
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[11]++;
    if (!this.grid.has(key)) {
      /* istanbul ignore next */
      cov_9j3vuy9ti().b[0][0]++;
      cov_9j3vuy9ti().s[12]++;
      this.grid.set(key, []);
    } else
    /* istanbul ignore next */
    {
      cov_9j3vuy9ti().b[0][1]++;
    }
    cov_9j3vuy9ti().s[13]++;
    this.grid.get(key)?.push(index);
  }
  // 清空网格
  clear() {
    /* istanbul ignore next */
    cov_9j3vuy9ti().f[4]++;
    cov_9j3vuy9ti().s[14]++;
    this.grid.clear();
  }
  // 获取可能的邻居粒子
  getPotentialNeighbors(x, y) {
    /* istanbul ignore next */
    cov_9j3vuy9ti().f[5]++;
    const cellX =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[15]++, Math.floor(x / this.cellSize));
    const cellY =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[16]++, Math.floor(y / this.cellSize));
    const neighbors =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[17]++, []);
    // 检查当前网格和周围8个网格
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[18]++;
    for (let i =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[19]++, -1); i <= 1; i++) {
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[20]++;
      for (let j =
      /* istanbul ignore next */
      (cov_9j3vuy9ti().s[21]++, -1); j <= 1; j++) {
        const key =
        /* istanbul ignore next */
        (cov_9j3vuy9ti().s[22]++, `${cellX + i},${cellY + j}`);
        const cellParticles =
        /* istanbul ignore next */
        (cov_9j3vuy9ti().s[23]++, this.grid.get(key));
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[24]++;
        if (cellParticles) {
          /* istanbul ignore next */
          cov_9j3vuy9ti().b[1][0]++;
          cov_9j3vuy9ti().s[25]++;
          neighbors.push(...cellParticles);
        } else
        /* istanbul ignore next */
        {
          cov_9j3vuy9ti().b[1][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[26]++;
    return neighbors;
  }
}
function BackgroundEffect() {
  /* istanbul ignore next */
  cov_9j3vuy9ti().f[6]++;
  const canvasRef =
  /* istanbul ignore next */
  (cov_9j3vuy9ti().s[27]++, (0, _react.useRef)(null));
  const animationRef =
  /* istanbul ignore next */
  (cov_9j3vuy9ti().s[28]++, (0, _react.useRef)(0));
  const particlesRef =
  /* istanbul ignore next */
  (cov_9j3vuy9ti().s[29]++, (0, _react.useRef)([]));
  const gridRef =
  /* istanbul ignore next */
  (cov_9j3vuy9ti().s[30]++, (0, _react.useRef)(new SpatialGrid(100))); // 网格大小等于连线距离
  /* istanbul ignore next */
  cov_9j3vuy9ti().s[31]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_9j3vuy9ti().f[7]++;
    const canvas =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[32]++, canvasRef.current);
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[33]++;
    if (!canvas) {
      /* istanbul ignore next */
      cov_9j3vuy9ti().b[2][0]++;
      cov_9j3vuy9ti().s[34]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9j3vuy9ti().b[2][1]++;
    }
    const ctx =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[35]++, canvas.getContext('2d', {
      alpha: true
    }));
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[36]++;
    if (!ctx) {
      /* istanbul ignore next */
      cov_9j3vuy9ti().b[3][0]++;
      cov_9j3vuy9ti().s[37]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9j3vuy9ti().b[3][1]++;
    }
    // 设置canvas尺寸为窗口大小
    cov_9j3vuy9ti().s[38]++;
    const resizeCanvas = () => {
      /* istanbul ignore next */
      cov_9j3vuy9ti().f[8]++;
      cov_9j3vuy9ti().s[39]++;
      canvas.width = window.innerWidth;
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[40]++;
      canvas.height = window.innerHeight;
      // 重新初始化粒子
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[41]++;
      initParticles();
    };
    // 使用节流函数处理resize事件
    let resizeTimeout;
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[42]++;
    const throttledResize = () => {
      /* istanbul ignore next */
      cov_9j3vuy9ti().f[9]++;
      cov_9j3vuy9ti().s[43]++;
      if (resizeTimeout) {
        /* istanbul ignore next */
        cov_9j3vuy9ti().b[4][0]++;
        cov_9j3vuy9ti().s[44]++;
        clearTimeout(resizeTimeout);
      } else
      /* istanbul ignore next */
      {
        cov_9j3vuy9ti().b[4][1]++;
      }
      cov_9j3vuy9ti().s[45]++;
      resizeTimeout = setTimeout(resizeCanvas, 200);
    };
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[46]++;
    window.addEventListener('resize', throttledResize);
    // 颜色预计算，避免每帧重新创建颜色字符串
    const colors =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[47]++, ['rgba(105, 60, 255, 0.5)', 'rgba(0, 180, 216, 0.5)', 'rgba(255, 255, 255, 0.3)']);
    // 预计算连线透明度
    const lineOpacities =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[48]++, []);
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[49]++;
    for (let i =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[50]++, 0); i <= 100; i++) {
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[51]++;
      lineOpacities[i] = 0.1 * (1 - i / 100);
    }
    // 初始化粒子
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[52]++;
    const initParticles = () => {
      /* istanbul ignore next */
      cov_9j3vuy9ti().f[10]++;
      const particles =
      /* istanbul ignore next */
      (cov_9j3vuy9ti().s[53]++, []);
      // 根据屏幕大小调整粒子数量，但设置上限以保持性能
      const particleCount =
      /* istanbul ignore next */
      (cov_9j3vuy9ti().s[54]++, Math.min(Math.floor(canvas.width * canvas.height / 20000), 60));
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[55]++;
      for (let i =
      /* istanbul ignore next */
      (cov_9j3vuy9ti().s[56]++, 0); i < particleCount; i++) {
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[57]++;
        particles.push({
          x: Math.random() * canvas.width,
          y: Math.random() * canvas.height,
          size: Math.random() * 2 + 1,
          speedX: (Math.random() - 0.5) * 0.3,
          speedY: (Math.random() - 0.5) * 0.3,
          color: colors[Math.floor(Math.random() * colors.length)],
          neighbors: []
        });
      }
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[58]++;
      particlesRef.current = particles;
    };
    // 更新空间网格
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[59]++;
    const updateGrid = () => {
      /* istanbul ignore next */
      cov_9j3vuy9ti().f[11]++;
      const grid =
      /* istanbul ignore next */
      (cov_9j3vuy9ti().s[60]++, gridRef.current);
      const particles =
      /* istanbul ignore next */
      (cov_9j3vuy9ti().s[61]++, particlesRef.current);
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[62]++;
      grid.clear();
      // 将粒子添加到网格
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[63]++;
      particles.forEach((particle, index) => {
        /* istanbul ignore next */
        cov_9j3vuy9ti().f[12]++;
        cov_9j3vuy9ti().s[64]++;
        grid.addParticle(index, particle.x, particle.y);
      });
      // 更新每个粒子的邻居列表
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[65]++;
      particles.forEach((particle, index) => {
        /* istanbul ignore next */
        cov_9j3vuy9ti().f[13]++;
        cov_9j3vuy9ti().s[66]++;
        particle.neighbors = grid.getPotentialNeighbors(particle.x, particle.y).filter(i => {
          /* istanbul ignore next */
          cov_9j3vuy9ti().f[14]++;
          cov_9j3vuy9ti().s[67]++;
          return i !== index;
        });
      });
    };
    // 绘制粒子
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[68]++;
    const drawParticles = () => {
      /* istanbul ignore next */
      cov_9j3vuy9ti().f[15]++;
      cov_9j3vuy9ti().s[69]++;
      if (
      /* istanbul ignore next */
      (cov_9j3vuy9ti().b[6][0]++, !canvas) ||
      /* istanbul ignore next */
      (cov_9j3vuy9ti().b[6][1]++, !ctx)) {
        /* istanbul ignore next */
        cov_9j3vuy9ti().b[5][0]++;
        cov_9j3vuy9ti().s[70]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_9j3vuy9ti().b[5][1]++;
      }
      cov_9j3vuy9ti().s[71]++;
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      const particles =
      /* istanbul ignore next */
      (cov_9j3vuy9ti().s[72]++, particlesRef.current);
      // 每10帧更新一次网格和邻居关系
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[73]++;
      if (frameCount % 10 === 0) {
        /* istanbul ignore next */
        cov_9j3vuy9ti().b[7][0]++;
        cov_9j3vuy9ti().s[74]++;
        updateGrid();
      } else
      /* istanbul ignore next */
      {
        cov_9j3vuy9ti().b[7][1]++;
      }
      // 绘制粒子和连线
      cov_9j3vuy9ti().s[75]++;
      particles.forEach((particle, index) => {
        /* istanbul ignore next */
        cov_9j3vuy9ti().f[16]++;
        cov_9j3vuy9ti().s[76]++;
        // 绘制粒子
        ctx.beginPath();
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[77]++;
        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[78]++;
        ctx.fillStyle = particle.color;
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[79]++;
        ctx.fill();
        // 更新粒子位置
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[80]++;
        particle.x += particle.speedX;
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[81]++;
        particle.y += particle.speedY;
        // 边界检查 - 使用模运算简化代码
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[82]++;
        particle.x = (particle.x + canvas.width) % canvas.width;
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[83]++;
        particle.y = (particle.y + canvas.height) % canvas.height;
        // 只连接预计算的邻居粒子
        /* istanbul ignore next */
        cov_9j3vuy9ti().s[84]++;
        particle.neighbors.forEach(neighborIndex => {
          /* istanbul ignore next */
          cov_9j3vuy9ti().f[17]++;
          const neighbor =
          /* istanbul ignore next */
          (cov_9j3vuy9ti().s[85]++, particles[neighborIndex]);
          const dx =
          /* istanbul ignore next */
          (cov_9j3vuy9ti().s[86]++, particle.x - neighbor.x);
          const dy =
          /* istanbul ignore next */
          (cov_9j3vuy9ti().s[87]++, particle.y - neighbor.y);
          // 使用曼哈顿距离作为初步筛选，减少计算量
          /* istanbul ignore next */
          cov_9j3vuy9ti().s[88]++;
          if (
          /* istanbul ignore next */
          (cov_9j3vuy9ti().b[9][0]++, Math.abs(dx) < 100) &&
          /* istanbul ignore next */
          (cov_9j3vuy9ti().b[9][1]++, Math.abs(dy) < 100)) {
            /* istanbul ignore next */
            cov_9j3vuy9ti().b[8][0]++;
            const distance =
            /* istanbul ignore next */
            (cov_9j3vuy9ti().s[89]++, Math.sqrt(dx * dx + dy * dy));
            /* istanbul ignore next */
            cov_9j3vuy9ti().s[90]++;
            if (distance < 100) {
              /* istanbul ignore next */
              cov_9j3vuy9ti().b[10][0]++;
              const opacityIndex =
              /* istanbul ignore next */
              (cov_9j3vuy9ti().s[91]++, Math.floor(distance));
              /* istanbul ignore next */
              cov_9j3vuy9ti().s[92]++;
              ctx.beginPath();
              /* istanbul ignore next */
              cov_9j3vuy9ti().s[93]++;
              ctx.strokeStyle = `rgba(120, 120, 255, ${lineOpacities[opacityIndex]})`;
              /* istanbul ignore next */
              cov_9j3vuy9ti().s[94]++;
              ctx.lineWidth = 0.5;
              /* istanbul ignore next */
              cov_9j3vuy9ti().s[95]++;
              ctx.moveTo(particle.x, particle.y);
              /* istanbul ignore next */
              cov_9j3vuy9ti().s[96]++;
              ctx.lineTo(neighbor.x, neighbor.y);
              /* istanbul ignore next */
              cov_9j3vuy9ti().s[97]++;
              ctx.stroke();
            } else
            /* istanbul ignore next */
            {
              cov_9j3vuy9ti().b[10][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_9j3vuy9ti().b[8][1]++;
          }
        });
      });
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[98]++;
      frameCount++;
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[99]++;
      animationRef.current = requestAnimationFrame(drawParticles);
    };
    // 初始化
    let frameCount =
    /* istanbul ignore next */
    (cov_9j3vuy9ti().s[100]++, 0);
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[101]++;
    resizeCanvas();
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[102]++;
    drawParticles();
    // 清理函数
    /* istanbul ignore next */
    cov_9j3vuy9ti().s[103]++;
    return () => {
      /* istanbul ignore next */
      cov_9j3vuy9ti().f[18]++;
      cov_9j3vuy9ti().s[104]++;
      window.removeEventListener('resize', throttledResize);
      /* istanbul ignore next */
      cov_9j3vuy9ti().s[105]++;
      cancelAnimationFrame(animationRef.current);
    };
  }, []);
  /* istanbul ignore next */
  cov_9j3vuy9ti().s[106]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("canvas", {
    ref: canvasRef,
    className: "fixed top-0 left-0 w-full h-full -z-10",
    style: {
      opacity: 0.6
    }
  });
}
const _default =
/* istanbul ignore next */
(/*#__PURE__*/cov_9j3vuy9ti().s[107]++, (0, _react.memo)(BackgroundEffect));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,