{"version":3,"names":["NetworkSwitcher","NetworkSwitcherContent","onChainChange","cov_5yd0nugzw","f","wallet","s","_WalletContext","useWallet","isOpen","setIsOpen","_react","useState","isChanging","setIsChanging","networks","setNetworks","useEffect","supportedNetworks","_walletService","getUserNetworks","getCurrentNetwork","b","isConnected","chainId","getNetworkInfo","handleNetworkChange","success","switchNetwork","error","console","_jsxruntime","jsxs","className","onClick","disabled","jsx","_FaGlobe","default","name","_FaChevronDown","map","network","_FaCheck","props","_ClientOnly","fallback"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/wallet/NetworkSwitcher.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport ClientOnly from '../ClientOnly';\nimport { FaGlobe, FaChevronDown, FaCheck } from 'react-icons/fa';\nimport { useWallet } from '@/contexts/WalletContext';\nimport { \n  switchNetwork, \n  getUserNetworks, \n  getNetworkInfo,\n  NetworkInfo\n} from '@/services/walletService';\n\n// 网络切换器组件内容\nfunction NetworkSwitcherContent({ onChainChange }: { onChainChange?: (chainId: number) => void }) {\n  const { wallet } = useWallet();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isChanging, setIsChanging] = useState(false);\n  const [networks, setNetworks] = useState<NetworkInfo[]>([]);\n\n  // 获取支持的网络列表\n  useEffect(() => {\n    const supportedNetworks = getUserNetworks();\n    setNetworks(supportedNetworks);\n  }, []);\n\n  // 获取当前网络信息\n  const getCurrentNetwork = () => {\n    if (!wallet.isConnected || !wallet.chainId) {\n      return null;\n    }\n    return getNetworkInfo(wallet.chainId);\n  };\n\n  // 处理网络切换\n  const handleNetworkChange = async (chainId: number) => {\n    if (isChanging || !wallet.isConnected) return;\n\n    setIsChanging(true);\n\n    try {\n      const success = await switchNetwork(chainId);\n      if (success) {\n        if (onChainChange) onChainChange(chainId);\n        setIsOpen(false);\n      }\n    } catch (error) {\n      console.error('切换网络失败:', error);\n    } finally {\n      setIsChanging(false);\n    }\n  };\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className={`flex items-center gap-2 px-2 py-1 rounded-md border ${isChanging ? 'opacity-50 cursor-not-allowed' : 'hover:bg-gray-100 dark:hover:bg-gray-800'} transition-colors duration-200 ease-in-out`}\n        disabled={isChanging || !wallet.isConnected}\n      >\n        <FaGlobe className=\"text-gray-600 dark:text-gray-400\" />\n        <span className=\"text-sm font-medium\">\n          {getCurrentNetwork()?.name || '选择网络'}\n        </span>\n        <FaChevronDown className={`text-xs transition-transform duration-200 ${isOpen ? 'rotate-180' : ''}`} />\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-900 rounded-md shadow-lg overflow-hidden z-10 border border-gray-200 dark:border-gray-700\">\n          <div className=\"py-1\">\n            <div className=\"px-3 py-2 text-xs font-semibold text-gray-500 dark:text-gray-400\">\n              支持的网络\n            </div>\n\n            {networks.map(network => (\n              <button\n                key={network.chainId}\n                onClick={() => handleNetworkChange(network.chainId)}\n                className={`w-full text-left block px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200 ${wallet.chainId === network.chainId ? 'bg-blue-50 dark:bg-blue-900/20' : ''}`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <span>{network.name}</span>\n                  {wallet.chainId === network.chainId && (\n                    <FaCheck className=\"text-green-500\" />\n                  )}\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// 使用 ClientOnly 组件包装主组件，避免 SSR 错误\nexport default function NetworkSwitcher(props: { onChainChange?: (chainId: number) => void }) {\n  return (\n    <ClientOnly fallback={<div className=\"network-switcher\">加载网络...</div>}>\n      <NetworkSwitcherContent {...props} />\n    </ClientOnly>\n  );\n}\n"],"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","ignoreList":[]}