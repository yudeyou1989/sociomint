{"version":3,"names":["ProfilePage","UserBasicInfo","cov_1ues9gw0t4","s","_react","default","memo","isLoadingUserInfo","username","userLevel","registerDate","completedTasks","totalRewards","f","t","_LanguageContext","useLanguage","renderLoading","_jsxruntime","jsx","className","jsxs","b","level","title","AccountSecurity","isLoadingSecurity","isPhoneVerified","isEmailVerified","isTwoFactorEnabled","lastLoginTime","SocialBindings","isLoadingBindings","socialBindings","handleBindPlatform","Array","map","_","index","binding","platform","_fa","FaTwitter","FaTelegram","FaDiscord","charAt","toUpperCase","slice","isBound","onClick","wallet","connect","connectWallet","disconnect","disconnectWallet","updateBalances","_WalletContext","useWallet","balance","bnb","sm","availableWallets","id","name","icon","lastConnectedTime","isConnected","Date","toISOString","activeTab","setActiveTab","useState","explorerUrl","setExplorerUrl","setUsername","setUserLevel","setRegisterDate","setCompletedTasks","setTotalRewards","setIsLoadingUserInfo","setIsPhoneVerified","setIsEmailVerified","setIsTwoFactorEnabled","setLastLoginTime","setIsLoadingSecurity","isLoadingAuthorizations","setIsLoadingAuthorizations","setSocialBindings","setIsLoadingBindings","autoSyncEnabled","setAutoSyncEnabled","taskNotificationsEnabled","setTaskNotificationsEnabled","privacyModeEnabled","setPrivacyModeEnabled","isLoadingSettings","setIsLoadingSettings","fetchUserData","useCallback","data","error","console","_reacthottoast","toast","fetchSecurityData","fetchSocialBindings","fetchSettingsData","useEffect","address","timer","setTimeout","clearTimeout","network","_walletService","getNetworkInfo","chainId","blockExplorerUrl","copyAddress","navigator","clipboard","writeText","then","success","catch","handleConnectMetaMask","formatDateTime","timestamp","toLocaleString","year","month","day","hour","minute","accountTabContent","useMemo","type","checked","onChange","htmlFor","walletTabContent","Fragment","FaWallet","substring","length","FaCopy","href","target","rel","FaExternalLinkAlt","parse","_NetworkSwitcher","walletItem","FaKey","platformsTabContent","FaUser"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/app/profile/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useWallet } from '@/contexts/WalletContext';\nimport {\n  FaUser,\n  FaWallet,\n  FaTwitter,\n  FaTelegram,\n  FaDiscord,\n  FaCopy,\n  FaExternalLinkAlt,\n  FaKey,\n} from 'react-icons/fa';\nimport { getNetworkInfo } from '@/services/walletService';\nimport NetworkSwitcher from '@/components/wallet/NetworkSwitcher';\nimport { toast } from 'react-hot-toast';\nimport { useLanguage } from '@/contexts/LanguageContext';\n\n// 用户等级类型\ninterface UserLevel {\n  level: number;\n  title: string;\n}\n\n// 社交平台绑定类型\ninterface SocialBinding {\n  platform: string;\n  username: string | null;\n  isBound: boolean;\n}\n\n// 组件属性接口定义\ninterface UserBasicInfoProps {\n  isLoadingUserInfo: boolean;\n  username: string | null;\n  userLevel: UserLevel | null;\n  registerDate: string | null;\n  completedTasks: number | null;\n  totalRewards: number | null;\n}\n\ninterface AccountSecurityProps {\n  isLoadingSecurity: boolean;\n  isPhoneVerified: boolean | null;\n  isEmailVerified: boolean | null;\n  isTwoFactorEnabled: boolean | null;\n  lastLoginTime: string | null;\n}\n\ninterface SocialBindingsProps {\n  isLoadingBindings: boolean;\n  socialBindings: SocialBinding[];\n  handleBindPlatform: (platform: string) => void;\n}\n\n// 组件分离: 基本信息组件\nconst UserBasicInfo = React.memo(({ \n  isLoadingUserInfo, \n  username, \n  userLevel, \n  registerDate, \n  completedTasks, \n  totalRewards \n}: UserBasicInfoProps) => {\n  const { t } = useLanguage();\n  \n  // 渲染加载状态\n  const renderLoading = () => (\n    <div className=\"animate-pulse h-4 bg-gray-700 rounded w-24\"></div>\n  );\n  \n  return (\n    <div className=\"glass-card p-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">{t('profile.basicInfo')}</h2>\n      <div className=\"space-y-4\">\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.username')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingUserInfo ? renderLoading() : username}\n          </div>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.userLevel')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingUserInfo\n              ? renderLoading()\n              : userLevel && (\n                  <span className=\"bg-primary/20 text-primary rounded-full px-3 py-0.5\">\n                    Lv.{userLevel.level} {userLevel.title}\n                  </span>\n                )}\n          </div>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.registerDate')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingUserInfo ? renderLoading() : registerDate}\n          </div>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.completedTasks')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingUserInfo ? renderLoading() : completedTasks}\n          </div>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.totalRewards')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingUserInfo\n              ? renderLoading()\n              : totalRewards && (\n                  <span className=\"text-amber-500\">{totalRewards}</span>\n                )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\n// 组件分离: 账户安全组件\nconst AccountSecurity = React.memo(({ \n  isLoadingSecurity, \n  isPhoneVerified, \n  isEmailVerified, \n  isTwoFactorEnabled, \n  lastLoginTime \n}: AccountSecurityProps) => {\n  const { t } = useLanguage();\n  \n  // 渲染加载状态\n  const renderLoading = () => (\n    <div className=\"animate-pulse h-4 bg-gray-700 rounded w-24\"></div>\n  );\n  \n  return (\n    <div className=\"glass-card p-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">{t('profile.accountSecurity')}</h2>\n      <div className=\"space-y-4\">\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.phoneVerification')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingSecurity ? (\n              renderLoading()\n            ) : (\n              <span\n                className={\n                  isPhoneVerified ? 'text-green-500' : 'text-yellow-500'\n                }\n              >\n                {isPhoneVerified ? t('profile.verified') : t('profile.notVerified')}\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.emailVerification')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingSecurity ? (\n              renderLoading()\n            ) : (\n              <span\n                className={\n                  isEmailVerified ? 'text-green-500' : 'text-yellow-500'\n                }\n              >\n                {isEmailVerified ? t('profile.verified') : t('profile.notVerified')}\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.twoFactorAuth')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingSecurity ? (\n              renderLoading()\n            ) : (\n              <span\n                className={\n                  isTwoFactorEnabled ? 'text-green-500' : 'text-yellow-500'\n                }\n              >\n                {isTwoFactorEnabled ? t('profile.enabled') : t('profile.notEnabled')}\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n          <div className=\"text-gray-400\">{t('profile.lastLogin')}</div>\n          <div className=\"flex-grow text-right\">\n            {isLoadingSecurity ? renderLoading() : lastLoginTime}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\n// 组件分离: 社交绑定组件\nconst SocialBindings = React.memo(({ \n  isLoadingBindings, \n  socialBindings,\n  handleBindPlatform \n}: SocialBindingsProps) => {\n  const { t } = useLanguage();\n  \n  // 渲染加载状态\n  const renderLoading = () => (\n    <div className=\"animate-pulse h-4 bg-gray-700 rounded w-24\"></div>\n  );\n  \n  return (\n    <div className=\"glass-card p-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">{t('profile.socialBindings')}</h2>\n      <div className=\"space-y-4\">\n        {isLoadingBindings ? (\n          <div className=\"space-y-4\">\n            {[...Array(3)].map((_, index) => (\n              <div\n                key={index}\n                className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\"\n              >\n                {renderLoading()}\n              </div>\n            ))}\n          </div>\n        ) : (\n          socialBindings.map((binding: SocialBinding) => (\n            <div\n              key={binding.platform}\n              className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\"\n            >\n              <div className=\"text-gray-400 flex items-center\">\n                {binding.platform === 'twitter' && (\n                  <FaTwitter className=\"mr-2 text-blue-400\" />\n                )}\n                {binding.platform === 'telegram' && (\n                  <FaTelegram className=\"mr-2 text-blue-500\" />\n                )}\n                {binding.platform === 'discord' && (\n                  <FaDiscord className=\"mr-2 text-indigo-400\" />\n                )}\n                {binding.platform.charAt(0).toUpperCase() +\n                  binding.platform.slice(1)}\n              </div>\n              <div className=\"flex-grow text-right\">\n                {binding.isBound ? (\n                  <div className=\"flex items-center justify-end\">\n                    <span className=\"text-green-500 mr-2\">\n                      {binding.username}\n                    </span>\n                    <button className=\"text-red-500 hover:text-red-400 text-sm\">\n                      {t('profile.unbind')}\n                    </button>\n                  </div>\n                ) : (\n                  <button\n                    onClick={() => handleBindPlatform(binding.platform)}\n                    className=\"text-primary hover:text-primary/80\"\n                  >\n                    {t('profile.bind')}\n                  </button>\n                )}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n});\n\n// 主页面组件\nexport default function ProfilePage() {\n  const {\n    wallet,\n    connect: connectWallet,\n    disconnect: disconnectWallet,\n    updateBalances\n  } = useWallet();\n  const { t } = useLanguage();\n  \n  // 余额辅助变量\n  const balance = wallet?.balance || { bnb: 0, sm: 0 };\n  \n  // 可用钱包列表（模拟数据）\n  const availableWallets = [\n    { id: 'metamask', name: 'MetaMask', icon: '/images/wallets/metamask.svg' },\n    { id: 'walletconnect', name: 'WalletConnect', icon: '/images/wallets/walletconnect.svg' }\n  ];\n  \n  // 上次连接时间（模拟数据）\n  const lastConnectedTime = wallet?.isConnected ? new Date().toISOString() : null;\n  \n  const [activeTab, setActiveTab] = useState<\n    'account' | 'wallet' | 'platforms'\n  >('account');\n  const [explorerUrl, setExplorerUrl] = useState<string>('');\n\n  // 基本信息状态\n  const [username, setUsername] = useState<string | null>(null);\n  const [userLevel, setUserLevel] = useState<UserLevel | null>(null);\n  const [registerDate, setRegisterDate] = useState<string | null>(null);\n  const [completedTasks, setCompletedTasks] = useState<number | null>(null);\n  const [totalRewards, setTotalRewards] = useState<number | null>(null);\n  const [isLoadingUserInfo, setIsLoadingUserInfo] = useState<boolean>(true);\n\n  // 账户安全状态\n  const [isPhoneVerified, setIsPhoneVerified] = useState<boolean | null>(null);\n  const [isEmailVerified, setIsEmailVerified] = useState<boolean | null>(null);\n  const [isTwoFactorEnabled, setIsTwoFactorEnabled] = useState<boolean | null>(\n    null,\n  );\n  const [lastLoginTime, setLastLoginTime] = useState<string | null>(null);\n  const [isLoadingSecurity, setIsLoadingSecurity] = useState<boolean>(true);\n\n  // 权限管理状态\n  const [isLoadingAuthorizations, setIsLoadingAuthorizations] =\n    useState<boolean>(true);\n\n  // 社交平台绑定状态\n  const [socialBindings, setSocialBindings] = useState<SocialBinding[]>([]);\n  const [isLoadingBindings, setIsLoadingBindings] = useState<boolean>(true);\n\n  // 绑定设置状态\n  const [autoSyncEnabled, setAutoSyncEnabled] = useState<boolean | null>(null);\n  const [taskNotificationsEnabled, setTaskNotificationsEnabled] = useState<\n    boolean | null\n  >(null);\n  const [privacyModeEnabled, setPrivacyModeEnabled] = useState<boolean | null>(\n    null,\n  );\n  const [isLoadingSettings, setIsLoadingSettings] = useState<boolean>(true);\n\n  // 优化: 使用useCallback减少函数重新创建\n  const fetchUserData = useCallback(async () => {\n    try {\n      setIsLoadingUserInfo(true);\n      // 实际应用中这将是API调用\n      // 模拟API调用\n      const data = {\n        username: 'SocioMint用户',\n        userLevel: { level: 3, title: '探索者' },\n        registerDate: '2025-01-15',\n        completedTasks: 42,\n        totalRewards: 25840\n      };\n      \n      // 更新状态\n      setUsername(data.username);\n      setUserLevel(data.userLevel);\n      setRegisterDate(data.registerDate);\n      setCompletedTasks(data.completedTasks);\n      setTotalRewards(data.totalRewards);\n    } catch (error) {\n      console.error('获取用户数据失败:', error);\n      toast.error(t('common.error'));\n    } finally {\n      setIsLoadingUserInfo(false);\n    }\n  }, [t]);\n\n  const fetchSecurityData = useCallback(async () => {\n    try {\n      setIsLoadingSecurity(true);\n      // 实际应用中这将是API调用\n      // 模拟API调用\n      const data = {\n        isPhoneVerified: true,\n        isEmailVerified: false,\n        isTwoFactorEnabled: false,\n        lastLoginTime: '2025-04-22 10:25'\n      };\n      \n      // 更新状态\n      setIsPhoneVerified(data.isPhoneVerified);\n      setIsEmailVerified(data.isEmailVerified);\n      setIsTwoFactorEnabled(data.isTwoFactorEnabled);\n      setLastLoginTime(data.lastLoginTime);\n    } catch (error) {\n      console.error('获取安全数据失败:', error);\n      toast.error(t('common.error'));\n    } finally {\n      setIsLoadingSecurity(false);\n    }\n  }, [t]);\n\n  const fetchSocialBindings = useCallback(async () => {\n    try {\n      setIsLoadingBindings(true);\n      // 实际应用中这将是API调用\n      // 模拟API调用\n      const data = [\n        { platform: 'twitter', username: '@SocioMint_User', isBound: true },\n        { platform: 'telegram', username: null, isBound: false },\n        { platform: 'discord', username: 'SocioUser#1234', isBound: true },\n      ];\n      \n      setSocialBindings(data);\n    } catch (error) {\n      console.error('获取社交绑定数据失败:', error);\n      toast.error(t('common.error'));\n    } finally {\n      setIsLoadingBindings(false);\n    }\n  }, [t]);\n\n  const fetchSettingsData = useCallback(async () => {\n    try {\n      setIsLoadingSettings(true);\n      // 实际应用中这将是API调用\n      // 模拟API调用\n      const data = {\n        autoSyncEnabled: true,\n        taskNotificationsEnabled: false,\n        privacyModeEnabled: true\n      };\n      \n      setAutoSyncEnabled(data.autoSyncEnabled);\n      setTaskNotificationsEnabled(data.taskNotificationsEnabled);\n      setPrivacyModeEnabled(data.privacyModeEnabled);\n    } catch (error) {\n      console.error('获取设置数据失败:', error);\n      toast.error(t('common.error'));\n    } finally {\n      setIsLoadingSettings(false);\n    }\n  }, [t]);\n  \n  // 获取用户数据 - 使用独立的函数避免内联函数造成的重复渲染\n  useEffect(() => {\n    fetchUserData();\n    fetchSecurityData();\n  }, [fetchUserData, fetchSecurityData]);\n\n  // 获取权限信息\n  useEffect(() => {\n    if (wallet.isConnected && wallet.address) {\n      setIsLoadingAuthorizations(true);\n      \n      // 实际应用中这将是与区块链交互的调用\n      // 模拟调用\n      const timer = setTimeout(() => {\n        setIsLoadingAuthorizations(false);\n      }, 1000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [wallet.isConnected, wallet.address]);\n\n  // 获取社交平台绑定信息\n  useEffect(() => {\n    fetchSocialBindings();\n    fetchSettingsData();\n  }, [fetchSocialBindings, fetchSettingsData]);\n\n  // 更新区块浏览器URL - 使用useMemo优化计算\n  useEffect(() => {\n    if (wallet.isConnected && wallet.network?.id) {\n      const network = getNetworkInfo(wallet.chainId || 0);\n      if (network) {\n        setExplorerUrl(`${network.blockExplorerUrl}/address/${wallet.address}`);\n      } else {\n        setExplorerUrl('');\n      }\n    } else {\n      setExplorerUrl('');\n    }\n  }, [wallet.isConnected, wallet.network?.id, wallet.address]);\n\n  // 优化: 使用useCallback减少函数重新创建\n  const copyAddress = useCallback(() => {\n    if (!wallet.address) return;\n\n    navigator.clipboard\n      .writeText(wallet.address)\n      .then(() => {\n        toast.success(t('profile.addressCopied'));\n      })\n      .catch(() => {\n        toast.error(t('common.error'));\n      });\n  }, [wallet.address, t]);\n\n  // 连接MetaMask钱包\n  const handleConnectMetaMask = useCallback(async () => {\n    try {\n      // 在新的 walletService API 中，connectWallet 不需要参数\n      await connectWallet();\n    } catch (error) {\n      console.error('连接钱包失败:', error);\n    }\n  }, [connectWallet]);\n\n  // 社交平台绑定处理函数\n  const handleBindPlatform = useCallback((platform: string) => {\n    toast.success(t('profile.bindingProcess', { platform }));\n    // 实际应用中会打开OAuth或其他绑定流程\n  }, [t]);\n\n  // 格式化日期\n  const formatDateTime = useCallback((timestamp: number) => {\n    return new Date(timestamp).toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  }, []);\n\n  // 渲染加载状态\n  const renderLoading = () => (\n    <div className=\"animate-pulse h-4 bg-gray-700 rounded w-24\"></div>\n  );\n\n  // 记忆账户数据选项卡内容，避免重新渲染\n  const accountTabContent = useMemo(() => (\n    <div className=\"space-y-6\">\n      <UserBasicInfo \n        isLoadingUserInfo={isLoadingUserInfo}\n        username={username}\n        userLevel={userLevel}\n        registerDate={registerDate}\n        completedTasks={completedTasks}\n        totalRewards={totalRewards}\n      />\n      \n      <AccountSecurity \n        isLoadingSecurity={isLoadingSecurity}\n        isPhoneVerified={isPhoneVerified}\n        isEmailVerified={isEmailVerified}\n        isTwoFactorEnabled={isTwoFactorEnabled}\n        lastLoginTime={lastLoginTime}\n      />\n      \n      <div className=\"glass-card p-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">{t('profile.bindingSettings')}</h2>\n        <div className=\"space-y-4\">\n          <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n            <div className=\"text-gray-400\">{t('profile.autoSync')}</div>\n            <div className=\"flex-grow text-right\">\n              {isLoadingSettings ? (\n                renderLoading()\n              ) : (\n                <div className=\"inline-flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"autoSync\"\n                    checked={autoSyncEnabled || false}\n                    onChange={() => setAutoSyncEnabled(!autoSyncEnabled)}\n                    className=\"form-checkbox h-5 w-5 text-primary\"\n                  />\n                  <label htmlFor=\"autoSync\" className=\"ml-2\">\n                    {autoSyncEnabled ? t('common.enabled') : t('common.disabled')}\n                  </label>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n            <div className=\"text-gray-400\">{t('profile.taskNotifications')}</div>\n            <div className=\"flex-grow text-right\">\n              {isLoadingSettings ? (\n                renderLoading()\n              ) : (\n                <div className=\"inline-flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"taskNotifications\"\n                    checked={taskNotificationsEnabled || false}\n                    onChange={() =>\n                      setTaskNotificationsEnabled(!taskNotificationsEnabled)\n                    }\n                    className=\"form-checkbox h-5 w-5 text-primary\"\n                  />\n                  <label htmlFor=\"taskNotifications\" className=\"ml-2\">\n                    {taskNotificationsEnabled ? t('common.enabled') : t('common.disabled')}\n                  </label>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n            <div className=\"text-gray-400\">{t('profile.privacyMode')}</div>\n            <div className=\"flex-grow text-right\">\n              {isLoadingSettings ? (\n                renderLoading()\n              ) : (\n                <div className=\"inline-flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"privacyMode\"\n                    checked={privacyModeEnabled || false}\n                    onChange={() => setPrivacyModeEnabled(!privacyModeEnabled)}\n                    className=\"form-checkbox h-5 w-5 text-primary\"\n                  />\n                  <label htmlFor=\"privacyMode\" className=\"ml-2\">\n                    {privacyModeEnabled ? t('common.enabled') : t('common.disabled')}\n                  </label>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ), [\n    isLoadingUserInfo, username, userLevel, registerDate, completedTasks, totalRewards,\n    isLoadingSecurity, isPhoneVerified, isEmailVerified, isTwoFactorEnabled, lastLoginTime,\n    isLoadingSettings, autoSyncEnabled, taskNotificationsEnabled, privacyModeEnabled, t\n  ]);\n\n  // 记忆钱包管理选项卡内容，避免重新渲染\n  const walletTabContent = useMemo(() => (\n    <div className=\"space-y-6\">\n      <div className=\"glass-card p-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">{t('profile.walletManagement')}</h2>\n\n        {wallet.isConnected ? (\n          <>\n            <div className=\"mb-4\">\n              <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between mb-4\">\n                <div className=\"text-gray-400\">{t('profile.currentWallet')}</div>\n                <div className=\"flex-grow flex gap-2 justify-end items-center\">\n                  <FaWallet className=\"text-primary\" />\n                  <span className=\"font-medium\">{getNetworkInfo(wallet.network?.id || 1)?.name || t('profile.unknownWallet')}</span>\n                </div>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between mb-4\">\n                <div className=\"text-gray-400\">{t('profile.walletAddress')}</div>\n                <div className=\"flex-grow flex gap-2 justify-end items-center break-all\">\n                  <span className=\"text-right\">\n                    {wallet.address ? (\n                      <>\n                        <span className=\"font-mono text-sm md:text-base\">\n                          {wallet.address.substring(0, 6)}...\n                          {wallet.address.substring(wallet.address.length - 4)}\n                        </span>\n                        <button\n                          onClick={copyAddress}\n                          className=\"ml-2 text-primary hover:text-primary/80\"\n                          title={t('profile.copyAddress')}\n                        >\n                          <FaCopy />\n                        </button>\n                        {explorerUrl && (\n                          <a\n                            href={explorerUrl}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"ml-2 text-primary hover:text-primary/80\"\n                            title={t('profile.viewOnExplorer')}\n                          >\n                            <FaExternalLinkAlt />\n                          </a>\n                        )}\n                      </>\n                    ) : (\n                      t('profile.walletNotConnected')\n                    )}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between mb-4\">\n                <div className=\"text-gray-400\">{t('profile.connectionTime')}</div>\n                <div className=\"flex-grow text-right\">\n                  {lastConnectedTime\n                    ? formatDateTime(Date.parse(lastConnectedTime))\n                    : t('profile.unknown')}\n                </div>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between mb-4\">\n                <div className=\"text-gray-400\">{t('profile.currentNetwork')}</div>\n                <div className=\"flex-grow text-right\">\n                  <NetworkSwitcher />\n                </div>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row md:items-center gap-2 justify-between\">\n                <div className=\"text-gray-400\">{t('profile.accountBalance')}</div>\n                <div className=\"flex-grow text-right font-medium text-amber-500\">\n                  {balance.bnb} {wallet.network?.id === 56 || wallet.network?.id === 97 ? 'BNB' : 'ETH'}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex justify-end\">\n              <button\n                onClick={disconnectWallet}\n                className=\"btn-outline-danger\"\n              >\n                {t('profile.disconnectWallet')}\n              </button>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex flex-col items-center justify-center py-8\">\n            <FaWallet className=\"text-4xl text-gray-500 mb-4\" />\n            <p className=\"text-center text-gray-400 mb-6\">\n              {t('profile.noWalletConnected')}\n            </p>\n            <div className=\"flex flex-wrap gap-4 justify-center\">\n              {availableWallets.map((walletItem) => (\n                <button\n                  key={walletItem.id}\n                  onClick={handleConnectMetaMask}\n                  className=\"btn-primary\"\n                >\n                  {t('profile.connectMetaMask')}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {wallet.isConnected && (\n        <div className=\"glass-card p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">\n            <div className=\"flex items-center\">\n              <FaKey className=\"mr-2 text-primary\" />\n              {t('profile.contractAuthorization')}\n            </div>\n          </h2>\n\n          {isLoadingAuthorizations ? (\n            <div className=\"py-8 flex justify-center\">\n              <div className=\"spinner\"></div>\n            </div>\n          ) : (\n            <div className=\"py-4 text-center text-gray-400\">\n              <p>{t('profile.noAuthData')}</p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  ), [\n    wallet.isConnected, wallet.address, wallet.chainId,\n    explorerUrl, lastConnectedTime, balance.bnb,\n    availableWallets, isLoadingAuthorizations,\n    copyAddress, disconnectWallet, handleConnectMetaMask, formatDateTime, t\n  ]);\n\n  // 记忆平台连接选项卡内容，避免重新渲染\n  const platformsTabContent = useMemo(() => (\n    <div className=\"space-y-6\">\n      <SocialBindings \n        isLoadingBindings={isLoadingBindings}\n        socialBindings={socialBindings}\n        handleBindPlatform={handleBindPlatform}\n      />\n    </div>\n  ), [isLoadingBindings, socialBindings, handleBindPlatform]);\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-8\">\n        <h1 className=\"text-3xl font-bold flex items-center\">\n          <FaUser className=\"mr-3 text-primary\" />\n          {t('profile.title')}\n        </h1>\n        <div className=\"flex gap-2 mt-4 md:mt-0\">\n          <button\n            onClick={() => setActiveTab('account')}\n            className={`px-4 py-2 rounded-md transition-colors ${activeTab === 'account' ? 'bg-primary/20 text-primary' : 'text-gray-400 hover:text-white hover:bg-white/5'}`}\n          >\n            {t('profile.accountInfo')}\n          </button>\n          <button\n            onClick={() => setActiveTab('wallet')}\n            className={`px-4 py-2 rounded-md transition-colors ${activeTab === 'wallet' ? 'bg-primary/20 text-primary' : 'text-gray-400 hover:text-white hover:bg-white/5'}`}\n          >\n            {t('profile.walletManagement')}\n          </button>\n          <button\n            onClick={() => setActiveTab('platforms')}\n            className={`px-4 py-2 rounded-md transition-colors ${activeTab === 'platforms' ? 'bg-primary/20 text-primary' : 'text-gray-400 hover:text-white hover:bg-white/5'}`}\n          >\n            {t('profile.platformConnections')}\n          </button>\n        </div>\n      </div>\n\n      {/* 根据选中的标签页显示对应内容 */}\n      {activeTab === 'account' && accountTabContent}\n      {activeTab === 'wallet' && walletTabContent}\n      {activeTab === 'platforms' && platformsTabContent}\n    </div>\n  );\n}\n"],"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","ignoreList":[]}