ae1803ec991ff2ef261d59e7bfad7011
'use client';
"use strict";

/* istanbul ignore next */
function cov_1nwmaxh0z3() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/LanguageSwitcher.tsx";
  var hash = "7eda9f4faacdfdcf0939401a58a38c6e207fee36";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/LanguageSwitcher.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "5": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 56
        }
      },
      "6": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "7": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 60
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 37,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "LanguageSwitcher",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 25
          }
        },
        loc: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 16,
            column: 28
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 49
          },
          end: {
            line: 17,
            column: 53
          }
        }, {
          start: {
            line: 17,
            column: 56
          },
          end: {
            line: 17,
            column: 60
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 24,
            column: 41
          }
        }, {
          start: {
            line: 24,
            column: 44
          },
          end: {
            line: 24,
            column: 48
          }
        }],
        line: 24
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/LanguageSwitcher.tsx"],
      sourcesContent: ["'use client';\n\nimport { useTranslation } from 'react-i18next';\n\nexport default function LanguageSwitcher() {\n  const { i18n } = useTranslation();\n  \n  const toggleLanguage = () => {\n    const newLang = i18n.language === 'zh' ? 'en' : 'zh';\n    i18n.changeLanguage(newLang);\n  };\n  \n  return (\n    <button\n      onClick={toggleLanguage}\n      className=\"inline-flex items-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 shadow-sm hover:bg-gray-50 dark:hover:bg-gray-600 border border-gray-300 dark:border-gray-600\"\n    >\n      {i18n.language === 'zh' ? 'EN' : '\u4E2D\u6587'}\n      <svg\n        className=\"ml-1 -mr-0.5 h-4 w-4\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    </button>\n  );\n}\n"],
      names: ["LanguageSwitcher", "i18n", "useTranslation", "toggleLanguage", "newLang", "language", "changeLanguage", "button", "onClick", "className", "svg", "xmlns", "viewBox", "fill", "path", "fillRule", "d", "clipRule"],
      mappings: "AAAA;;;;;+BAIA;;;eAAwBA;;;;8BAFO;AAEhB,SAASA;IACtB,MAAM,EAAEC,IAAI,EAAE,GAAGC,IAAAA,4BAAc;IAE/B,MAAMC,iBAAiB;QACrB,MAAMC,UAAUH,KAAKI,QAAQ,KAAK,OAAO,OAAO;QAChDJ,KAAKK,cAAc,CAACF;IACtB;IAEA,qBACE,sBAACG;QACCC,SAASL;QACTM,WAAU;;YAETR,KAAKI,QAAQ,KAAK,OAAO,OAAO;0BACjC,qBAACK;gBACCD,WAAU;gBACVE,OAAM;gBACNC,SAAQ;gBACRC,MAAK;0BAEL,cAAA,qBAACC;oBACCC,UAAS;oBACTC,GAAE;oBACFC,UAAS;;;;;AAKnB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7eda9f4faacdfdcf0939401a58a38c6e207fee36"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nwmaxh0z3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nwmaxh0z3();
cov_1nwmaxh0z3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1nwmaxh0z3().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1nwmaxh0z3().f[0]++;
    cov_1nwmaxh0z3().s[2]++;
    return LanguageSwitcher;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1nwmaxh0z3().s[3]++, require("react/jsx-runtime"));
const _reacti18next =
/* istanbul ignore next */
(cov_1nwmaxh0z3().s[4]++, require("react-i18next"));
function LanguageSwitcher() {
  /* istanbul ignore next */
  cov_1nwmaxh0z3().f[1]++;
  const {
    i18n
  } =
  /* istanbul ignore next */
  (cov_1nwmaxh0z3().s[5]++, (0, _reacti18next.useTranslation)());
  /* istanbul ignore next */
  cov_1nwmaxh0z3().s[6]++;
  const toggleLanguage = () => {
    /* istanbul ignore next */
    cov_1nwmaxh0z3().f[2]++;
    const newLang =
    /* istanbul ignore next */
    (cov_1nwmaxh0z3().s[7]++, i18n.language === 'zh' ?
    /* istanbul ignore next */
    (cov_1nwmaxh0z3().b[0][0]++, 'en') :
    /* istanbul ignore next */
    (cov_1nwmaxh0z3().b[0][1]++, 'zh'));
    /* istanbul ignore next */
    cov_1nwmaxh0z3().s[8]++;
    i18n.changeLanguage(newLang);
  };
  /* istanbul ignore next */
  cov_1nwmaxh0z3().s[9]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
    onClick: toggleLanguage,
    className: "inline-flex items-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 shadow-sm hover:bg-gray-50 dark:hover:bg-gray-600 border border-gray-300 dark:border-gray-600",
    children: [i18n.language === 'zh' ?
    /* istanbul ignore next */
    (cov_1nwmaxh0z3().b[1][0]++, 'EN') :
    /* istanbul ignore next */
    (cov_1nwmaxh0z3().b[1][1]++, '中文'), /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
      className: "ml-1 -mr-0.5 h-4 w-4",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20",
      fill: "currentColor",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
        fillRule: "evenodd",
        d: "M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
        clipRule: "evenodd"
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW53bWF4aDB6MyIsImFjdHVhbENvdmVyYWdlIiwicyIsIkxhbmd1YWdlU3dpdGNoZXIiLCJmIiwiaTE4biIsIl9yZWFjdGkxOG5leHQiLCJ1c2VUcmFuc2xhdGlvbiIsInRvZ2dsZUxhbmd1YWdlIiwibmV3TGFuZyIsImxhbmd1YWdlIiwiYiIsImNoYW5nZUxhbmd1YWdlIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwib25DbGljayIsImNsYXNzTmFtZSIsImpzeCIsInhtbG5zIiwidmlld0JveCIsImZpbGwiLCJmaWxsUnVsZSIsImQiLCJjbGlwUnVsZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWRleW91L0Rlc2t0b3Avc20vc29jaW9taW50L3NyYy9MYW5ndWFnZVN3aXRjaGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExhbmd1YWdlU3dpdGNoZXIoKSB7XG4gIGNvbnN0IHsgaTE4biB9ID0gdXNlVHJhbnNsYXRpb24oKTtcbiAgXG4gIGNvbnN0IHRvZ2dsZUxhbmd1YWdlID0gKCkgPT4ge1xuICAgIGNvbnN0IG5ld0xhbmcgPSBpMThuLmxhbmd1YWdlID09PSAnemgnID8gJ2VuJyA6ICd6aCc7XG4gICAgaTE4bi5jaGFuZ2VMYW5ndWFnZShuZXdMYW5nKTtcbiAgfTtcbiAgXG4gIHJldHVybiAoXG4gICAgPGJ1dHRvblxuICAgICAgb25DbGljaz17dG9nZ2xlTGFuZ3VhZ2V9XG4gICAgICBjbGFzc05hbWU9XCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgcm91bmRlZC1tZCBiZy13aGl0ZSBkYXJrOmJnLWdyYXktNzAwIHB4LTMgcHktMiB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgZGFyazp0ZXh0LWdyYXktMjAwIHNoYWRvdy1zbSBob3ZlcjpiZy1ncmF5LTUwIGRhcms6aG92ZXI6YmctZ3JheS02MDAgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCBkYXJrOmJvcmRlci1ncmF5LTYwMFwiXG4gICAgPlxuICAgICAge2kxOG4ubGFuZ3VhZ2UgPT09ICd6aCcgPyAnRU4nIDogJ+S4reaWhyd9XG4gICAgICA8c3ZnXG4gICAgICAgIGNsYXNzTmFtZT1cIm1sLTEgLW1yLTAuNSBoLTQgdy00XCJcbiAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgIHZpZXdCb3g9XCIwIDAgMjAgMjBcIlxuICAgICAgICBmaWxsPVwiY3VycmVudENvbG9yXCJcbiAgICAgID5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICAgIGQ9XCJNNy4yMSAxNC43N2EuNzUuNzUgMCAwMS4wMi0xLjA2TDExLjE2OCAxMCA3LjIzIDYuMjlhLjc1Ljc1IDAgMTExLjA0LTEuMDhsNC41IDQuMjVhLjc1Ljc1IDAgMDEwIDEuMDhsLTQuNSA0LjI1YS43NS43NSAwIDAxLTEuMDYtLjAyelwiXG4gICAgICAgICAgY2xpcFJ1bGU9XCJldmVub2RkXCJcbiAgICAgICAgLz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvYnV0dG9uPlxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQU9RO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFBQUEsY0FBQSxHQUFBRSxDQUFBOzs7Ozs7K0JBSFI7Ozs7OztXQUF3QkMsZ0JBQUE7Ozs7Ozs7O2tDQUZPO0FBRWhCLFNBQVNBLGlCQUFBO0VBQUE7RUFBQUgsY0FBQSxHQUFBSSxDQUFBO0VBQ3RCLE1BQU07SUFBRUM7RUFBSSxDQUFFO0VBQUE7RUFBQSxDQUFBTCxjQUFBLEdBQUFFLENBQUEsT0FBRyxJQUFBSSxhQUFBLENBQUFDLGNBQWM7RUFBQTtFQUFBUCxjQUFBLEdBQUFFLENBQUE7RUFFL0IsTUFBTU0sY0FBQSxHQUFpQkEsQ0FBQTtJQUFBO0lBQUFSLGNBQUEsR0FBQUksQ0FBQTtJQUNyQixNQUFNSyxPQUFBO0lBQUE7SUFBQSxDQUFBVCxjQUFBLEdBQUFFLENBQUEsT0FBVUcsSUFBQSxDQUFLSyxRQUFRLEtBQUs7SUFBQTtJQUFBLENBQUFWLGNBQUEsR0FBQVcsQ0FBQSxVQUFPO0lBQUE7SUFBQSxDQUFBWCxjQUFBLEdBQUFXLENBQUEsVUFBTztJQUFBO0lBQUFYLGNBQUEsR0FBQUUsQ0FBQTtJQUNoREcsSUFBQSxDQUFLTyxjQUFjLENBQUNILE9BQUE7RUFDdEI7RUFBQTtFQUFBVCxjQUFBLEdBQUFFLENBQUE7RUFFQSxvQkFDRSxJQUFBVyxXQUFBLENBQUFDLElBQUEsRUFBQztJQUNDQyxPQUFBLEVBQVNQLGNBQUE7SUFDVFEsU0FBQSxFQUFVO2VBRVRYLElBQUEsQ0FBS0ssUUFBUSxLQUFLO0lBQUE7SUFBQSxDQUFBVixjQUFBLEdBQUFXLENBQUEsVUFBTztJQUFBO0lBQUEsQ0FBQVgsY0FBQSxHQUFBVyxDQUFBLFVBQU8sTyxhQUNqQyxJQUFBRSxXQUFBLENBQUFJLEdBQUEsRUFBQztNQUNDRCxTQUFBLEVBQVU7TUFDVkUsS0FBQSxFQUFNO01BQ05DLE9BQUEsRUFBUTtNQUNSQyxJQUFBLEVBQUs7Z0JBRUwsaUJBQUFQLFdBQUEsQ0FBQUksR0FBQSxFQUFDO1FBQ0NJLFFBQUEsRUFBUztRQUNUQyxDQUFBLEVBQUU7UUFDRkMsUUFBQSxFQUFTOzs7O0FBS25CIiwiaWdub3JlTGlzdCI6W119