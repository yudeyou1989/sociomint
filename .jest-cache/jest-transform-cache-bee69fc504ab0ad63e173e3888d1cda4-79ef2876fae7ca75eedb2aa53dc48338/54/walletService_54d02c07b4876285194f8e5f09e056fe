a5ad14b27d9ddd1058f7cface69bfb22
'use client';
"use strict";

/* istanbul ignore next */
function cov_1o4scm9yy0() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/services/walletService.ts";
  var hash = "7d15eae146f74d2027e653b5891076aca8add7bc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/services/walletService.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 36
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 38
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "14": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 33
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "18": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "20": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 33
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 42
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "23": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 71,
          column: 75
        }
      },
      "24": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 6
        }
      },
      "25": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 51
        }
      },
      "26": {
        start: {
          line: 78,
          column: 39
        },
        end: {
          line: 78,
          column: 51
        }
      },
      "27": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 79,
          column: 41
        }
      },
      "28": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 80,
          column: 40
        }
      },
      "29": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 20
        }
      },
      "30": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 66
        }
      },
      "31": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "32": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "33": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "34": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "35": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 53
        }
      },
      "36": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "37": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 30
        }
      },
      "38": {
        start: {
          line: 98,
          column: 17
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "39": {
        start: {
          line: 101,
          column: 32
        },
        end: {
          line: 101,
          column: 88
        }
      },
      "40": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "41": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "42": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 95
        }
      },
      "43": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "44": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 57
        }
      },
      "45": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 39
        }
      },
      "46": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 25
        }
      },
      "47": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "48": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 31
        }
      },
      "49": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 18
        }
      },
      "50": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 119,
          column: 32
        }
      },
      "51": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 27
        }
      },
      "52": {
        start: {
          line: 122,
          column: 18
        },
        end: {
          line: 122,
          column: 47
        }
      },
      "53": {
        start: {
          line: 124,
          column: 30
        },
        end: {
          line: 136,
          column: 1
        }
      },
      "54": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 52
        }
      },
      "55": {
        start: {
          line: 125,
          column: 45
        },
        end: {
          line: 125,
          column: 52
        }
      },
      "56": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "57": {
        start: {
          line: 127,
          column: 42
        },
        end: {
          line: 130,
          column: 10
        }
      },
      "58": {
        start: {
          line: 128,
          column: 53
        },
        end: {
          line: 128,
          column: 119
        }
      },
      "59": {
        start: {
          line: 129,
          column: 53
        },
        end: {
          line: 129,
          column: 123
        }
      },
      "60": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 51
        }
      },
      "61": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 56
        }
      },
      "62": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 51
        }
      },
      "63": {
        start: {
          line: 138,
          column: 15
        },
        end: {
          line: 140,
          column: 2
        }
      },
      "64": {
        start: {
          line: 142,
          column: 17
        },
        end: {
          line: 159,
          column: 1
        }
      },
      "65": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 32
        }
      },
      "66": {
        start: {
          line: 162,
          column: 23
        },
        end: {
          line: 162,
          column: 27
        }
      },
      "67": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 169,
          column: 1
        }
      },
      "68": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "69": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 31
        }
      },
      "70": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 16
        }
      },
      "71": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 172,
          column: 1
        }
      },
      "72": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 34
        }
      },
      "73": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 200,
          column: 1
        }
      },
      "74": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "75": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 37
        }
      },
      "76": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 175,
          column: 37
        }
      },
      "77": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "78": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 60
        }
      },
      "79": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 66
        }
      },
      "80": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 57
        }
      },
      "81": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 63
        }
      },
      "82": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 28
        }
      },
      "83": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 29
        }
      },
      "84": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "85": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 21
        }
      },
      "86": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 203,
          column: 1
        }
      },
      "87": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 202,
          column: 20
        }
      },
      "88": {
        start: {
          line: 204,
          column: 23
        },
        end: {
          line: 207,
          column: 1
        }
      },
      "89": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 65
        }
      },
      "90": {
        start: {
          line: 205,
          column: 41
        },
        end: {
          line: 205,
          column: 64
        }
      },
      "91": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 206,
          column: 27
        }
      },
      "92": {
        start: {
          line: 208,
          column: 22
        },
        end: {
          line: 225,
          column: 1
        }
      },
      "93": {
        start: {
          line: 209,
          column: 21
        },
        end: {
          line: 209,
          column: 34
        }
      },
      "94": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 31
        }
      },
      "95": {
        start: {
          line: 210,
          column: 19
        },
        end: {
          line: 210,
          column: 31
        }
      },
      "96": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "97": {
        start: {
          line: 212,
          column: 25
        },
        end: {
          line: 214,
          column: 10
        }
      },
      "98": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 35
        }
      },
      "99": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "100": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 20
        }
      },
      "101": {
        start: {
          line: 226,
          column: 26
        },
        end: {
          line: 243,
          column: 1
        }
      },
      "102": {
        start: {
          line: 227,
          column: 21
        },
        end: {
          line: 227,
          column: 34
        }
      },
      "103": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 31
        }
      },
      "104": {
        start: {
          line: 228,
          column: 19
        },
        end: {
          line: 228,
          column: 31
        }
      },
      "105": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "106": {
        start: {
          line: 230,
          column: 25
        },
        end: {
          line: 232,
          column: 10
        }
      },
      "107": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 35
        }
      },
      "108": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "109": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 20
        }
      },
      "110": {
        start: {
          line: 244,
          column: 26
        },
        end: {
          line: 261,
          column: 1
        }
      },
      "111": {
        start: {
          line: 245,
          column: 21
        },
        end: {
          line: 245,
          column: 34
        }
      },
      "112": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 31
        }
      },
      "113": {
        start: {
          line: 246,
          column: 19
        },
        end: {
          line: 246,
          column: 31
        }
      },
      "114": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "115": {
        start: {
          line: 248,
          column: 27
        },
        end: {
          line: 250,
          column: 10
        }
      },
      "116": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 60
        }
      },
      "117": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "118": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 20
        }
      },
      "119": {
        start: {
          line: 262,
          column: 22
        },
        end: {
          line: 322,
          column: 1
        }
      },
      "120": {
        start: {
          line: 263,
          column: 21
        },
        end: {
          line: 263,
          column: 34
        }
      },
      "121": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 264,
          column: 32
        }
      },
      "122": {
        start: {
          line: 264,
          column: 19
        },
        end: {
          line: 264,
          column: 32
        }
      },
      "123": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 321,
          column: 5
        }
      },
      "124": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "125": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 20
        }
      },
      "126": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 282,
          column: 11
        }
      },
      "127": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 47
        }
      },
      "128": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "129": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "130": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 306,
          column: 19
        }
      },
      "131": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 28
        }
      },
      "132": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 316,
          column: 19
        }
      },
      "133": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 29
        }
      },
      "134": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 21
        }
      },
      "135": {
        start: {
          line: 323,
          column: 35
        },
        end: {
          line: 334,
          column: 1
        }
      },
      "136": {
        start: {
          line: 324,
          column: 21
        },
        end: {
          line: 324,
          column: 34
        }
      },
      "137": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 325,
          column: 31
        }
      },
      "138": {
        start: {
          line: 325,
          column: 19
        },
        end: {
          line: 325,
          column: 31
        }
      },
      "139": {
        start: {
          line: 326,
          column: 34
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "140": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 27
        }
      },
      "141": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 58
        }
      },
      "142": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 333,
          column: 6
        }
      },
      "143": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 74
        }
      },
      "144": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 395,
          column: 5
        }
      },
      "145": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "146": {
        start: {
          line: 338,
          column: 32
        },
        end: {
          line: 343,
          column: 13
        }
      },
      "147": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 57
        }
      },
      "148": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "149": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 42
        }
      },
      "150": {
        start: {
          line: 351,
          column: 25
        },
        end: {
          line: 351,
          column: 40
        }
      },
      "151": {
        start: {
          line: 353,
          column: 25
        },
        end: {
          line: 355,
          column: 10
        }
      },
      "152": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 358,
          column: 9
        }
      },
      "153": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 40
        }
      },
      "154": {
        start: {
          line: 359,
          column: 24
        },
        end: {
          line: 359,
          column: 35
        }
      },
      "155": {
        start: {
          line: 361,
          column: 27
        },
        end: {
          line: 363,
          column: 10
        }
      },
      "156": {
        start: {
          line: 364,
          column: 24
        },
        end: {
          line: 364,
          column: 48
        }
      },
      "157": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 372,
          column: 11
        }
      },
      "158": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "159": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 368,
          column: 44
        }
      },
      "160": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 370,
          column: 57
        }
      },
      "161": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 376,
          column: 11
        }
      },
      "162": {
        start: {
          line: 374,
          column: 31
        },
        end: {
          line: 374,
          column: 55
        }
      },
      "163": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 52
        }
      },
      "164": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 379,
          column: 11
        }
      },
      "165": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 40
        }
      },
      "166": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 49
        }
      },
      "167": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 385,
          column: 10
        }
      },
      "168": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 393,
          column: 11
        }
      },
      "169": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 20
        }
      },
      "170": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 398,
          column: 55
        }
      },
      "171": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 401,
          column: 55
        }
      },
      "172": {
        start: {
          line: 404,
          column: 4
        },
        end: {
          line: 404,
          column: 58
        }
      },
      "173": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 407,
          column: 58
        }
      },
      "174": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 529,
          column: 5
        }
      },
      "175": {
        start: {
          line: 412,
          column: 26
        },
        end: {
          line: 412,
          column: 127
        }
      },
      "176": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "177": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 96
        }
      },
      "178": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 52
        }
      },
      "179": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "180": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 48
        }
      },
      "181": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 36
        }
      },
      "182": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 487,
          column: 11
        }
      },
      "183": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 495,
          column: 11
        }
      },
      "184": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 494,
          column: 15
        }
      },
      "185": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 493,
          column: 17
        }
      },
      "186": {
        start: {
          line: 492,
          column: 20
        },
        end: {
          line: 492,
          column: 67
        }
      },
      "187": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 500,
          column: 11
        }
      },
      "188": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 499,
          column: 13
        }
      },
      "189": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 41
        }
      },
      "190": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 505,
          column: 11
        }
      },
      "191": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 504,
          column: 13
        }
      },
      "192": {
        start: {
          line: 503,
          column: 16
        },
        end: {
          line: 503,
          column: 54
        }
      },
      "193": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 510,
          column: 11
        }
      },
      "194": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 509,
          column: 13
        }
      },
      "195": {
        start: {
          line: 508,
          column: 16
        },
        end: {
          line: 508,
          column: 50
        }
      },
      "196": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 40
        }
      },
      "197": {
        start: {
          line: 513,
          column: 25
        },
        end: {
          line: 513,
          column: 61
        }
      },
      "198": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "199": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 518,
          column: 14
        }
      },
      "200": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 20
        }
      },
      "201": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 527,
          column: 11
        }
      },
      "202": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 20
        }
      },
      "203": {
        start: {
          line: 532,
          column: 4
        },
        end: {
          line: 605,
          column: 5
        }
      },
      "204": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 536,
          column: 9
        }
      },
      "205": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 53
        }
      },
      "206": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 542,
          column: 9
        }
      },
      "207": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 540,
          column: 53
        }
      },
      "208": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 41
        }
      },
      "209": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 566,
          column: 11
        }
      },
      "210": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 572,
          column: 11
        }
      },
      "211": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 571,
          column: 13
        }
      },
      "212": {
        start: {
          line: 570,
          column: 16
        },
        end: {
          line: 570,
          column: 68
        }
      },
      "213": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 577,
          column: 11
        }
      },
      "214": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 576,
          column: 13
        }
      },
      "215": {
        start: {
          line: 575,
          column: 16
        },
        end: {
          line: 575,
          column: 41
        }
      },
      "216": {
        start: {
          line: 578,
          column: 8
        },
        end: {
          line: 582,
          column: 11
        }
      },
      "217": {
        start: {
          line: 579,
          column: 12
        },
        end: {
          line: 581,
          column: 13
        }
      },
      "218": {
        start: {
          line: 580,
          column: 16
        },
        end: {
          line: 580,
          column: 54
        }
      },
      "219": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 587,
          column: 11
        }
      },
      "220": {
        start: {
          line: 584,
          column: 12
        },
        end: {
          line: 586,
          column: 13
        }
      },
      "221": {
        start: {
          line: 585,
          column: 16
        },
        end: {
          line: 585,
          column: 50
        }
      },
      "222": {
        start: {
          line: 589,
          column: 25
        },
        end: {
          line: 589,
          column: 61
        }
      },
      "223": {
        start: {
          line: 590,
          column: 8
        },
        end: {
          line: 595,
          column: 9
        }
      },
      "224": {
        start: {
          line: 591,
          column: 12
        },
        end: {
          line: 594,
          column: 14
        }
      },
      "225": {
        start: {
          line: 596,
          column: 8
        },
        end: {
          line: 596,
          column: 20
        }
      },
      "226": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 603,
          column: 11
        }
      },
      "227": {
        start: {
          line: 604,
          column: 8
        },
        end: {
          line: 604,
          column: 20
        }
      },
      "228": {
        start: {
          line: 608,
          column: 4
        },
        end: {
          line: 621,
          column: 5
        }
      },
      "229": {
        start: {
          line: 610,
          column: 12
        },
        end: {
          line: 610,
          column: 46
        }
      },
      "230": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 612,
          column: 46
        }
      },
      "231": {
        start: {
          line: 614,
          column: 12
        },
        end: {
          line: 614,
          column: 49
        }
      },
      "232": {
        start: {
          line: 616,
          column: 12
        },
        end: {
          line: 616,
          column: 49
        }
      },
      "233": {
        start: {
          line: 618,
          column: 12
        },
        end: {
          line: 618,
          column: 51
        }
      },
      "234": {
        start: {
          line: 620,
          column: 12
        },
        end: {
          line: 620,
          column: 49
        }
      },
      "235": {
        start: {
          line: 624,
          column: 4
        },
        end: {
          line: 624,
          column: 32
        }
      },
      "236": {
        start: {
          line: 624,
          column: 20
        },
        end: {
          line: 624,
          column: 32
        }
      },
      "237": {
        start: {
          line: 625,
          column: 4
        },
        end: {
          line: 627,
          column: 5
        }
      },
      "238": {
        start: {
          line: 626,
          column: 8
        },
        end: {
          line: 626,
          column: 31
        }
      },
      "239": {
        start: {
          line: 628,
          column: 4
        },
        end: {
          line: 628,
          column: 38
        }
      },
      "240": {
        start: {
          line: 628,
          column: 26
        },
        end: {
          line: 628,
          column: 38
        }
      },
      "241": {
        start: {
          line: 629,
          column: 4
        },
        end: {
          line: 629,
          column: 54
        }
      },
      "242": {
        start: {
          line: 629,
          column: 36
        },
        end: {
          line: 629,
          column: 54
        }
      },
      "243": {
        start: {
          line: 630,
          column: 4
        },
        end: {
          line: 630,
          column: 60
        }
      },
      "244": {
        start: {
          line: 630,
          column: 42
        },
        end: {
          line: 630,
          column: 60
        }
      },
      "245": {
        start: {
          line: 631,
          column: 4
        },
        end: {
          line: 631,
          column: 54
        }
      },
      "246": {
        start: {
          line: 631,
          column: 33
        },
        end: {
          line: 631,
          column: 54
        }
      },
      "247": {
        start: {
          line: 632,
          column: 4
        },
        end: {
          line: 632,
          column: 60
        }
      },
      "248": {
        start: {
          line: 632,
          column: 39
        },
        end: {
          line: 632,
          column: 60
        }
      },
      "249": {
        start: {
          line: 633,
          column: 4
        },
        end: {
          line: 633,
          column: 16
        }
      },
      "250": {
        start: {
          line: 636,
          column: 4
        },
        end: {
          line: 653,
          column: 5
        }
      },
      "251": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 652,
          column: 9
        }
      },
      "252": {
        start: {
          line: 638,
          column: 12
        },
        end: {
          line: 644,
          column: 13
        }
      },
      "253": {
        start: {
          line: 639,
          column: 16
        },
        end: {
          line: 639,
          column: 52
        }
      },
      "254": {
        start: {
          line: 640,
          column: 16
        },
        end: {
          line: 640,
          column: 40
        }
      },
      "255": {
        start: {
          line: 641,
          column: 19
        },
        end: {
          line: 644,
          column: 13
        }
      },
      "256": {
        start: {
          line: 642,
          column: 16
        },
        end: {
          line: 642,
          column: 57
        }
      },
      "257": {
        start: {
          line: 643,
          column: 16
        },
        end: {
          line: 643,
          column: 45
        }
      },
      "258": {
        start: {
          line: 646,
          column: 12
        },
        end: {
          line: 651,
          column: 15
        }
      },
      "259": {
        start: {
          line: 655,
          column: 4
        },
        end: {
          line: 657,
          column: 5
        }
      },
      "260": {
        start: {
          line: 656,
          column: 8
        },
        end: {
          line: 656,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 27
          }
        },
        loc: {
          start: {
            line: 13,
            column: 37
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 22
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 22
          }
        },
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 25
          }
        },
        loc: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 20
          }
        },
        loc: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 26
          }
        },
        loc: {
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 27
          }
        },
        loc: {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 37,
            column: 29
          }
        },
        loc: {
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 22
          },
          end: {
            line: 40,
            column: 23
          }
        },
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 29
          }
        },
        loc: {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 24
          }
        },
        loc: {
          start: {
            line: 46,
            column: 34
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 24
          }
        },
        loc: {
          start: {
            line: 49,
            column: 34
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 21
          }
        },
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 55,
            column: 21
          },
          end: {
            line: 55,
            column: 22
          }
        },
        loc: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 18
          }
        },
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 61,
            column: 24
          }
        },
        loc: {
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 33
          }
        },
        loc: {
          start: {
            line: 64,
            column: 43
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 20
          }
        },
        loc: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "20": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 72,
            column: 9
          },
          end: {
            line: 72,
            column: 33
          }
        },
        loc: {
          start: {
            line: 72,
            column: 39
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 72
      },
      "21": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 33
          }
        },
        loc: {
          start: {
            line: 77,
            column: 47
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 77
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 81,
            column: 40
          }
        },
        loc: {
          start: {
            line: 81,
            column: 61
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 81
      },
      "23": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 85,
            column: 9
          },
          end: {
            line: 85,
            column: 34
          }
        },
        loc: {
          start: {
            line: 85,
            column: 53
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 85
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 124,
            column: 30
          },
          end: {
            line: 124,
            column: 31
          }
        },
        loc: {
          start: {
            line: 124,
            column: 40
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 124
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 128,
            column: 35
          },
          end: {
            line: 128,
            column: 36
          }
        },
        loc: {
          start: {
            line: 128,
            column: 53
          },
          end: {
            line: 128,
            column: 119
          }
        },
        line: 128
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 129,
            column: 35
          },
          end: {
            line: 129,
            column: 36
          }
        },
        loc: {
          start: {
            line: 129,
            column: 53
          },
          end: {
            line: 129,
            column: 123
          }
        },
        line: 129
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 164,
            column: 20
          },
          end: {
            line: 164,
            column: 21
          }
        },
        loc: {
          start: {
            line: 164,
            column: 24
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 164
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 170,
            column: 20
          },
          end: {
            line: 170,
            column: 21
          }
        },
        loc: {
          start: {
            line: 170,
            column: 24
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 170
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 173,
            column: 26
          },
          end: {
            line: 173,
            column: 27
          }
        },
        loc: {
          start: {
            line: 173,
            column: 34
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 173
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 201,
            column: 24
          },
          end: {
            line: 201,
            column: 25
          }
        },
        loc: {
          start: {
            line: 201,
            column: 28
          },
          end: {
            line: 203,
            column: 1
          }
        },
        line: 201
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 204,
            column: 23
          },
          end: {
            line: 204,
            column: 24
          }
        },
        loc: {
          start: {
            line: 204,
            column: 34
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 204
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 205,
            column: 34
          },
          end: {
            line: 205,
            column: 35
          }
        },
        loc: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 205,
            column: 64
          }
        },
        line: 205
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 208,
            column: 22
          },
          end: {
            line: 208,
            column: 23
          }
        },
        loc: {
          start: {
            line: 208,
            column: 32
          },
          end: {
            line: 225,
            column: 1
          }
        },
        line: 208
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 226,
            column: 26
          },
          end: {
            line: 226,
            column: 27
          }
        },
        loc: {
          start: {
            line: 226,
            column: 36
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 226
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 244,
            column: 26
          },
          end: {
            line: 244,
            column: 27
          }
        },
        loc: {
          start: {
            line: 244,
            column: 36
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 244
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 262,
            column: 22
          },
          end: {
            line: 262,
            column: 23
          }
        },
        loc: {
          start: {
            line: 262,
            column: 39
          },
          end: {
            line: 322,
            column: 1
          }
        },
        line: 262
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 323,
            column: 35
          },
          end: {
            line: 323,
            column: 36
          }
        },
        loc: {
          start: {
            line: 323,
            column: 47
          },
          end: {
            line: 334,
            column: 1
          }
        },
        line: 323
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 326,
            column: 34
          },
          end: {
            line: 326,
            column: 35
          }
        },
        loc: {
          start: {
            line: 326,
            column: 46
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 326
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 331,
            column: 11
          },
          end: {
            line: 331,
            column: 12
          }
        },
        loc: {
          start: {
            line: 331,
            column: 15
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 331
      },
      "40": {
        name: "connectBrowserWallet",
        decl: {
          start: {
            line: 335,
            column: 15
          },
          end: {
            line: 335,
            column: 35
          }
        },
        loc: {
          start: {
            line: 335,
            column: 53
          },
          end: {
            line: 396,
            column: 1
          }
        },
        line: 335
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 366,
            column: 39
          },
          end: {
            line: 366,
            column: 40
          }
        },
        loc: {
          start: {
            line: 366,
            column: 51
          },
          end: {
            line: 372,
            column: 9
          }
        },
        line: 366
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 373,
            column: 36
          },
          end: {
            line: 373,
            column: 37
          }
        },
        loc: {
          start: {
            line: 373,
            column: 50
          },
          end: {
            line: 376,
            column: 9
          }
        },
        line: 373
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 377,
            column: 34
          },
          end: {
            line: 377,
            column: 35
          }
        },
        loc: {
          start: {
            line: 377,
            column: 38
          },
          end: {
            line: 379,
            column: 9
          }
        },
        line: 377
      },
      "44": {
        name: "connectMetamask",
        decl: {
          start: {
            line: 397,
            column: 15
          },
          end: {
            line: 397,
            column: 30
          }
        },
        loc: {
          start: {
            line: 397,
            column: 42
          },
          end: {
            line: 399,
            column: 1
          }
        },
        line: 397
      },
      "45": {
        name: "connectCoinbase",
        decl: {
          start: {
            line: 400,
            column: 15
          },
          end: {
            line: 400,
            column: 30
          }
        },
        loc: {
          start: {
            line: 400,
            column: 42
          },
          end: {
            line: 402,
            column: 1
          }
        },
        line: 400
      },
      "46": {
        name: "connectTrustWallet",
        decl: {
          start: {
            line: 403,
            column: 15
          },
          end: {
            line: 403,
            column: 33
          }
        },
        loc: {
          start: {
            line: 403,
            column: 45
          },
          end: {
            line: 405,
            column: 1
          }
        },
        line: 403
      },
      "47": {
        name: "connectTokenPocket",
        decl: {
          start: {
            line: 406,
            column: 15
          },
          end: {
            line: 406,
            column: 33
          }
        },
        loc: {
          start: {
            line: 406,
            column: 45
          },
          end: {
            line: 408,
            column: 1
          }
        },
        line: 406
      },
      "48": {
        name: "connectWalletConnectV2",
        decl: {
          start: {
            line: 409,
            column: 15
          },
          end: {
            line: 409,
            column: 37
          }
        },
        loc: {
          start: {
            line: 409,
            column: 49
          },
          end: {
            line: 530,
            column: 1
          }
        },
        line: 409
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 489,
            column: 39
          },
          end: {
            line: 489,
            column: 40
          }
        },
        loc: {
          start: {
            line: 489,
            column: 47
          },
          end: {
            line: 495,
            column: 9
          }
        },
        line: 489
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 490,
            column: 49
          },
          end: {
            line: 490,
            column: 50
          }
        },
        loc: {
          start: {
            line: 490,
            column: 61
          },
          end: {
            line: 494,
            column: 13
          }
        },
        line: 490
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 496,
            column: 42
          },
          end: {
            line: 496,
            column: 43
          }
        },
        loc: {
          start: {
            line: 496,
            column: 46
          },
          end: {
            line: 500,
            column: 9
          }
        },
        line: 496
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 501,
            column: 47
          },
          end: {
            line: 501,
            column: 48
          }
        },
        loc: {
          start: {
            line: 501,
            column: 59
          },
          end: {
            line: 505,
            column: 9
          }
        },
        line: 501
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 506,
            column: 44
          },
          end: {
            line: 506,
            column: 45
          }
        },
        loc: {
          start: {
            line: 506,
            column: 55
          },
          end: {
            line: 510,
            column: 9
          }
        },
        line: 506
      },
      "54": {
        name: "connectWalletConnect",
        decl: {
          start: {
            line: 531,
            column: 15
          },
          end: {
            line: 531,
            column: 35
          }
        },
        loc: {
          start: {
            line: 531,
            column: 47
          },
          end: {
            line: 606,
            column: 1
          }
        },
        line: 531
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 568,
            column: 44
          },
          end: {
            line: 568,
            column: 45
          }
        },
        loc: {
          start: {
            line: 568,
            column: 52
          },
          end: {
            line: 572,
            column: 9
          }
        },
        line: 568
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 573,
            column: 47
          },
          end: {
            line: 573,
            column: 48
          }
        },
        loc: {
          start: {
            line: 573,
            column: 51
          },
          end: {
            line: 577,
            column: 9
          }
        },
        line: 573
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 578,
            column: 52
          },
          end: {
            line: 578,
            column: 53
          }
        },
        loc: {
          start: {
            line: 578,
            column: 64
          },
          end: {
            line: 582,
            column: 9
          }
        },
        line: 578
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 583,
            column: 49
          },
          end: {
            line: 583,
            column: 50
          }
        },
        loc: {
          start: {
            line: 583,
            column: 60
          },
          end: {
            line: 587,
            column: 9
          }
        },
        line: 583
      },
      "59": {
        name: "connectWalletByType",
        decl: {
          start: {
            line: 607,
            column: 15
          },
          end: {
            line: 607,
            column: 34
          }
        },
        loc: {
          start: {
            line: 607,
            column: 52
          },
          end: {
            line: 622,
            column: 1
          }
        },
        line: 607
      },
      "60": {
        name: "getConnectedWalletType",
        decl: {
          start: {
            line: 623,
            column: 9
          },
          end: {
            line: 623,
            column: 31
          }
        },
        loc: {
          start: {
            line: 623,
            column: 34
          },
          end: {
            line: 634,
            column: 1
          }
        },
        line: 623
      },
      "61": {
        name: "disconnectWallet",
        decl: {
          start: {
            line: 635,
            column: 15
          },
          end: {
            line: 635,
            column: 31
          }
        },
        loc: {
          start: {
            line: 635,
            column: 44
          },
          end: {
            line: 658,
            column: 1
          }
        },
        line: 635
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 73,
            column: 11
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 35
          },
          end: {
            line: 73,
            column: 38
          }
        }, {
          start: {
            line: 73,
            column: 41
          },
          end: {
            line: 75,
            column: 5
          }
        }],
        line: 73
      },
      "1": {
        loc: {
          start: {
            line: 73,
            column: 11
          },
          end: {
            line: 73,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 11
          },
          end: {
            line: 73,
            column: 14
          }
        }, {
          start: {
            line: 73,
            column: 18
          },
          end: {
            line: 73,
            column: 32
          }
        }],
        line: 73
      },
      "2": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 15
          },
          end: {
            line: 82,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 29
          },
          end: {
            line: 82,
            column: 45
          }
        }, {
          start: {
            line: 82,
            column: 48
          },
          end: {
            line: 82,
            column: 65
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 20
          }
        }, {
          start: {
            line: 86,
            column: 24
          },
          end: {
            line: 86,
            column: 27
          }
        }, {
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 86,
            column: 45
          }
        }],
        line: 86
      },
      "6": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "7": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 20
          }
        }, {
          start: {
            line: 89,
            column: 24
          },
          end: {
            line: 89,
            column: 47
          }
        }, {
          start: {
            line: 89,
            column: 51
          },
          end: {
            line: 89,
            column: 76
          }
        }],
        line: 89
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 95,
            column: 31
          }
        }],
        line: 95
      },
      "10": {
        loc: {
          start: {
            line: 101,
            column: 32
          },
          end: {
            line: 101,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 32
          },
          end: {
            line: 101,
            column: 53
          }
        }, {
          start: {
            line: 101,
            column: 57
          },
          end: {
            line: 101,
            column: 88
          }
        }],
        line: 101
      },
      "11": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "12": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 103,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 103,
            column: 29
          }
        }, {
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 79
          }
        }],
        line: 103
      },
      "13": {
        loc: {
          start: {
            line: 104,
            column: 23
          },
          end: {
            line: 104,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 47
          },
          end: {
            line: 104,
            column: 88
          }
        }, {
          start: {
            line: 104,
            column: 91
          },
          end: {
            line: 104,
            column: 95
          }
        }],
        line: 104
      },
      "14": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: 107,
            column: 19
          },
          end: {
            line: 109,
            column: 13
          }
        }],
        line: 105
      },
      "15": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 20
          }
        }, {
          start: {
            line: 105,
            column: 25
          },
          end: {
            line: 105,
            column: 33
          }
        }, {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 45
          }
        }],
        line: 105
      },
      "16": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "17": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "18": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 18
          }
        }, {
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 125,
            column: 43
          }
        }],
        line: 125
      },
      "19": {
        loc: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "20": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 165,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 165,
            column: 17
          }
        }, {
          start: {
            line: 165,
            column: 21
          },
          end: {
            line: 165,
            column: 50
          }
        }, {
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 165,
            column: 92
          }
        }],
        line: 165
      },
      "21": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 175,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 175,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "22": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 178,
            column: 60
          }
        }, {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 180,
            column: 66
          }
        }, {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 182,
            column: 57
          }
        }, {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 184,
            column: 63
          }
        }, {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 186,
            column: 28
          }
        }, {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 188,
            column: 29
          }
        }],
        line: 176
      },
      "23": {
        loc: {
          start: {
            line: 206,
            column: 11
          },
          end: {
            line: 206,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 11
          },
          end: {
            line: 206,
            column: 18
          }
        }, {
          start: {
            line: 206,
            column: 22
          },
          end: {
            line: 206,
            column: 26
          }
        }],
        line: 206
      },
      "24": {
        loc: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "25": {
        loc: {
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 215,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 215,
            column: 26
          }
        }, {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 215,
            column: 34
          }
        }],
        line: 215
      },
      "26": {
        loc: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "27": {
        loc: {
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 233,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 233,
            column: 26
          }
        }, {
          start: {
            line: 233,
            column: 30
          },
          end: {
            line: 233,
            column: 34
          }
        }],
        line: 233
      },
      "28": {
        loc: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "29": {
        loc: {
          start: {
            line: 251,
            column: 15
          },
          end: {
            line: 251,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 28
          },
          end: {
            line: 251,
            column: 52
          }
        }, {
          start: {
            line: 251,
            column: 55
          },
          end: {
            line: 251,
            column: 59
          }
        }],
        line: 251
      },
      "30": {
        loc: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "31": {
        loc: {
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "32": {
        loc: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "33": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "34": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "35": {
        loc: {
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 358,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 358,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "36": {
        loc: {
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 21
          }
        }, {
          start: {
            line: 356,
            column: 25
          },
          end: {
            line: 356,
            column: 46
          }
        }],
        line: 356
      },
      "37": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 371,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 371,
            column: 13
          }
        }, {
          start: {
            line: 369,
            column: 19
          },
          end: {
            line: 371,
            column: 13
          }
        }],
        line: 367
      },
      "38": {
        loc: {
          start: {
            line: 412,
            column: 26
          },
          end: {
            line: 412,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 412,
            column: 26
          },
          end: {
            line: 412,
            column: 75
          }
        }, {
          start: {
            line: 412,
            column: 79
          },
          end: {
            line: 412,
            column: 127
          }
        }],
        line: 412
      },
      "39": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "40": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "41": {
        loc: {
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 493,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 493,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "42": {
        loc: {
          start: {
            line: 491,
            column: 20
          },
          end: {
            line: 491,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 491,
            column: 20
          },
          end: {
            line: 491,
            column: 40
          }
        }, {
          start: {
            line: 491,
            column: 44
          },
          end: {
            line: 491,
            column: 63
          }
        }],
        line: 491
      },
      "43": {
        loc: {
          start: {
            line: 497,
            column: 12
          },
          end: {
            line: 499,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 12
          },
          end: {
            line: 499,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "44": {
        loc: {
          start: {
            line: 502,
            column: 12
          },
          end: {
            line: 504,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 12
          },
          end: {
            line: 504,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "45": {
        loc: {
          start: {
            line: 507,
            column: 12
          },
          end: {
            line: 509,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 507,
            column: 12
          },
          end: {
            line: 509,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 507
      },
      "46": {
        loc: {
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "47": {
        loc: {
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 514,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 514,
            column: 20
          }
        }, {
          start: {
            line: 514,
            column: 24
          },
          end: {
            line: 514,
            column: 43
          }
        }],
        line: 514
      },
      "48": {
        loc: {
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 536,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 536,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      },
      "49": {
        loc: {
          start: {
            line: 539,
            column: 8
          },
          end: {
            line: 542,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 8
          },
          end: {
            line: 542,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "50": {
        loc: {
          start: {
            line: 546,
            column: 19
          },
          end: {
            line: 546,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 546,
            column: 19
          },
          end: {
            line: 546,
            column: 54
          }
        }, {
          start: {
            line: 546,
            column: 58
          },
          end: {
            line: 546,
            column: 89
          }
        }],
        line: 546
      },
      "51": {
        loc: {
          start: {
            line: 547,
            column: 20
          },
          end: {
            line: 547,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 547,
            column: 20
          },
          end: {
            line: 547,
            column: 55
          }
        }, {
          start: {
            line: 547,
            column: 59
          },
          end: {
            line: 547,
            column: 93
          }
        }],
        line: 547
      },
      "52": {
        loc: {
          start: {
            line: 548,
            column: 20
          },
          end: {
            line: 548,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 548,
            column: 20
          },
          end: {
            line: 548,
            column: 63
          }
        }, {
          start: {
            line: 548,
            column: 67
          },
          end: {
            line: 548,
            column: 115
          }
        }],
        line: 548
      },
      "53": {
        loc: {
          start: {
            line: 550,
            column: 30
          },
          end: {
            line: 550,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 550,
            column: 30
          },
          end: {
            line: 550,
            column: 62
          }
        }, {
          start: {
            line: 550,
            column: 66
          },
          end: {
            line: 550,
            column: 70
          }
        }],
        line: 550
      },
      "54": {
        loc: {
          start: {
            line: 569,
            column: 12
          },
          end: {
            line: 571,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 569,
            column: 12
          },
          end: {
            line: 571,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 569
      },
      "55": {
        loc: {
          start: {
            line: 569,
            column: 16
          },
          end: {
            line: 569,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 569,
            column: 16
          },
          end: {
            line: 569,
            column: 36
          }
        }, {
          start: {
            line: 569,
            column: 40
          },
          end: {
            line: 569,
            column: 64
          }
        }],
        line: 569
      },
      "56": {
        loc: {
          start: {
            line: 574,
            column: 12
          },
          end: {
            line: 576,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 12
          },
          end: {
            line: 576,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "57": {
        loc: {
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 581,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 581,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 579
      },
      "58": {
        loc: {
          start: {
            line: 584,
            column: 12
          },
          end: {
            line: 586,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 584,
            column: 12
          },
          end: {
            line: 586,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 584
      },
      "59": {
        loc: {
          start: {
            line: 590,
            column: 8
          },
          end: {
            line: 595,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 590,
            column: 8
          },
          end: {
            line: 595,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 590
      },
      "60": {
        loc: {
          start: {
            line: 590,
            column: 12
          },
          end: {
            line: 590,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 590,
            column: 12
          },
          end: {
            line: 590,
            column: 20
          }
        }, {
          start: {
            line: 590,
            column: 24
          },
          end: {
            line: 590,
            column: 43
          }
        }],
        line: 590
      },
      "61": {
        loc: {
          start: {
            line: 608,
            column: 4
          },
          end: {
            line: 621,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 609,
            column: 8
          },
          end: {
            line: 610,
            column: 46
          }
        }, {
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 612,
            column: 46
          }
        }, {
          start: {
            line: 613,
            column: 8
          },
          end: {
            line: 614,
            column: 49
          }
        }, {
          start: {
            line: 615,
            column: 8
          },
          end: {
            line: 616,
            column: 49
          }
        }, {
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 618,
            column: 51
          }
        }, {
          start: {
            line: 619,
            column: 8
          },
          end: {
            line: 620,
            column: 49
          }
        }],
        line: 608
      },
      "62": {
        loc: {
          start: {
            line: 624,
            column: 4
          },
          end: {
            line: 624,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 624,
            column: 4
          },
          end: {
            line: 624,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 624
      },
      "63": {
        loc: {
          start: {
            line: 625,
            column: 4
          },
          end: {
            line: 627,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 625,
            column: 4
          },
          end: {
            line: 627,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 625
      },
      "64": {
        loc: {
          start: {
            line: 625,
            column: 8
          },
          end: {
            line: 625,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 625,
            column: 8
          },
          end: {
            line: 625,
            column: 35
          }
        }, {
          start: {
            line: 625,
            column: 39
          },
          end: {
            line: 625,
            column: 71
          }
        }],
        line: 625
      },
      "65": {
        loc: {
          start: {
            line: 628,
            column: 4
          },
          end: {
            line: 628,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 628,
            column: 4
          },
          end: {
            line: 628,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 628
      },
      "66": {
        loc: {
          start: {
            line: 629,
            column: 4
          },
          end: {
            line: 629,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 4
          },
          end: {
            line: 629,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 629
      },
      "67": {
        loc: {
          start: {
            line: 630,
            column: 4
          },
          end: {
            line: 630,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 630,
            column: 4
          },
          end: {
            line: 630,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 630
      },
      "68": {
        loc: {
          start: {
            line: 631,
            column: 4
          },
          end: {
            line: 631,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 4
          },
          end: {
            line: 631,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "69": {
        loc: {
          start: {
            line: 632,
            column: 4
          },
          end: {
            line: 632,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 632,
            column: 4
          },
          end: {
            line: 632,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 632
      },
      "70": {
        loc: {
          start: {
            line: 636,
            column: 4
          },
          end: {
            line: 653,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 636,
            column: 4
          },
          end: {
            line: 653,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 636
      },
      "71": {
        loc: {
          start: {
            line: 636,
            column: 8
          },
          end: {
            line: 636,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 636,
            column: 8
          },
          end: {
            line: 636,
            column: 38
          }
        }, {
          start: {
            line: 636,
            column: 42
          },
          end: {
            line: 636,
            column: 53
          }
        }],
        line: 636
      },
      "72": {
        loc: {
          start: {
            line: 638,
            column: 12
          },
          end: {
            line: 644,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 638,
            column: 12
          },
          end: {
            line: 644,
            column: 13
          }
        }, {
          start: {
            line: 641,
            column: 19
          },
          end: {
            line: 644,
            column: 13
          }
        }],
        line: 638
      },
      "73": {
        loc: {
          start: {
            line: 641,
            column: 19
          },
          end: {
            line: 644,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 641,
            column: 19
          },
          end: {
            line: 644,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 641
      },
      "74": {
        loc: {
          start: {
            line: 655,
            column: 4
          },
          end: {
            line: 657,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 655,
            column: 4
          },
          end: {
            line: 657,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 655
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0, 0, 0, 0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/services/walletService.ts"],
      sourcesContent: ["'use client';\n\n/**\n * \u7EDF\u4E00\u7684\u94B1\u5305\u670D\u52A1 - \u652F\u6301\u670D\u52A1\u5668\u7AEF\u6E32\u67D3\u548C\u5BA2\u6237\u7AEF\u4F7F\u7528\n * \u6574\u5408\u4E86simpleWalletService\u548CwalletService\u7684\u529F\u80FD\n */\n\nimport Logger from './logger';\n\n// \u52A8\u6001\u5BFC\u5165\u94B1\u5305\u8FDE\u63A5\u5E93\u4EE5\u907F\u514DSSR\u95EE\u9898\nlet WalletConnectProvider: any = null;\nlet EthereumProvider: any = null;\n\n// \u68C0\u67E5\u662F\u5426\u5728\u6D4F\u89C8\u5668\u73AF\u5883\nconst isBrowser = typeof window !== 'undefined';\n\n// \u52A8\u6001\u52A0\u8F7D\u94B1\u5305\u8FDE\u63A5\u5E93\nconst loadWalletConnectLibs = async () => {\n  if (!isBrowser || WalletConnectProvider) return;\n\n  try {\n    const [wcProvider, ethProvider] = await Promise.all([\n      import('@walletconnect/web3-provider'),\n      import('@walletconnect/ethereum-provider')\n    ]);\n\n    WalletConnectProvider = wcProvider.default;\n    EthereumProvider = ethProvider.EthereumProvider;\n  } catch (error) {\n    logger.error('\u52A0\u8F7DWalletConnect\u5E93\u5931\u8D25:', error);\n  }\n};\n\n// \u521B\u5EFA\u65E5\u5FD7\u8BB0\u5F55\u5668\nconst logger = Logger.createContextLogger({ component: 'WalletService' });\n\n// \u94B1\u5305\u7C7B\u578B\nexport type WalletType = 'metamask' | 'walletconnect' | 'coinbase' | 'trustwallet' | 'tokenpocket';\n\n// \u94B1\u5305\u8FDE\u63A5\u56DE\u8C03\u63A5\u53E3\nexport interface WalletCallbacks {\n  onConnect?: (address: string, chainId: number) => void;\n  onDisconnect?: () => void;\n  onAccountsChanged?: (accounts: string[]) => void;\n  onChainChanged?: (chainId: number) => void;\n}\n\n// \u7F51\u7EDC\u5B9A\u4E49\nexport interface NetworkInfo {\n  chainId: number;\n  name: string;\n  currency: string;\n  rpcUrl: string;\n  blockExplorerUrl: string;\n  testnet: boolean;\n}\n\n// \u652F\u6301\u7684\u7F51\u7EDC\nconst NETWORKS: NetworkInfo[] = [\n  {\n    chainId: 56,\n    name: 'BSC',\n    currency: 'BNB',\n    rpcUrl: 'https://bsc-dataseed.binance.org/',\n    blockExplorerUrl: 'https://bscscan.com',\n    testnet: false\n  },\n  {\n    chainId: 97,\n    name: 'BSC Testnet',\n    currency: 'tBNB',\n    rpcUrl: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n    blockExplorerUrl: 'https://testnet.bscscan.com',\n    testnet: true\n  }\n];\n\n// WalletConnect \u63D0\u4F9B\u8005\u5355\u4F8B\nlet walletConnectProvider: WalletConnectProvider | null = null;\nlet ethereumProvider: any = null; // \u4F7F\u7528any\u7C7B\u578B\u6682\u65F6\u907F\u5F00\u7C7B\u578B\u9519\u8BEF\n\n// \u5B89\u5168\u5730\u8BBF\u95EE window.ethereum\nconst getEthereum = () => {\n  if (isBrowser && typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    return window.ethereum;\n  }\n  return null;\n}\n\n// \u68C0\u67E5\u662F\u5426\u6709\u94B1\u5305\u53EF\u7528\nexport const hasEthereum = (): boolean => {\n  return getEthereum() !== null;\n};\n\n// \u68C0\u67E5\u94B1\u5305\u662F\u5426\u5B89\u88C5\nexport const isWalletInstalled = (type: WalletType): boolean => {\n  try {\n    if (!isBrowser) return false;\n\n    switch (type) {\n      case 'metamask':\n        return Boolean(window.ethereum?.isMetaMask);\n      case 'coinbase':\n        return Boolean(window.ethereum?.isCoinbaseWallet);\n      case 'trustwallet':\n        return Boolean(window.ethereum?.isTrust);\n      case 'tokenpocket':\n        return Boolean(window.ethereum?.isTokenPocket);\n      case 'walletconnect':\n        return true; // WalletConnect \u4E0D\u9700\u8981\u5B89\u88C5\u6D4F\u89C8\u5668\u63D2\u4EF6\n      default:\n        return false;\n    }\n  } catch (e) {\n    logger.warn(`\u68C0\u67E5\u94B1\u5305\u5B89\u88C5\u65F6\u51FA\u9519: ${type}`, {\n      action: 'isWalletInstalled',\n      additionalData: { error: e, walletType: type }\n    });\n    return false;\n  }\n};\n\n// \u83B7\u53D6\u6240\u6709\u652F\u6301\u7684\u7F51\u7EDC\nexport const getUserNetworks = (): NetworkInfo[] => {\n  return NETWORKS;\n};\n\n// \u6839\u636E\u94FEID\u83B7\u53D6\u7F51\u7EDC\u4FE1\u606F\nexport const getNetworkInfo = (chainId: number): NetworkInfo | null => {\n  const network = NETWORKS.find(net => net.chainId === chainId);\n  return network || null;\n};\n\n// \u8FDE\u63A5\u94B1\u5305\nexport const connectWallet = async (): Promise<string | null> => {\n  const ethereum = getEthereum();\n  if (!ethereum) return null;\n\n  try {\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n    return accounts[0] || null;\n  } catch (error) {\n    logger.error('\u8FDE\u63A5\u94B1\u5305\u65F6\u51FA\u9519', {\n      action: 'connectWallet',\n      additionalData: { error }\n    });\n    return null;\n  }\n};\n\n// \u83B7\u53D6\u5F53\u524D\u8D26\u6237\nexport const getCurrentAccount = async (): Promise<string | null> => {\n  const ethereum = getEthereum();\n  if (!ethereum) return null;\n\n  try {\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n    return accounts[0] || null;\n  } catch (error) {\n    logger.error('\u83B7\u53D6\u8D26\u6237\u65F6\u51FA\u9519', {\n      action: 'getCurrentAccount',\n      additionalData: { error }\n    });\n    return null;\n  }\n};\n\n// \u83B7\u53D6\u5F53\u524D\u94FEID\nexport const getCurrentChainId = async (): Promise<number | null> => {\n  const ethereum = getEthereum();\n  if (!ethereum) return null;\n\n  try {\n    const chainIdHex = await ethereum.request({ method: 'eth_chainId' });\n    return chainIdHex ? parseInt(chainIdHex, 16) : null;\n  } catch (error) {\n    logger.error('\u83B7\u53D6\u94FEID\u65F6\u51FA\u9519', {\n      action: 'getCurrentChainId',\n      additionalData: { error }\n    });\n    return null;\n  }\n};\n\n// \u5207\u6362\u7F51\u7EDC\nexport const switchNetwork = async (chainId: number): Promise<boolean> => {\n  const ethereum = getEthereum();\n  if (!ethereum) return false;\n\n  try {\n    await ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: `0x${chainId.toString(16)}` }]\n    });\n    return true;\n  } catch (error) {\n    logger.warn('\u5207\u6362\u7F51\u7EDC\u65F6\u51FA\u9519', {\n      action: 'switchNetwork',\n      additionalData: { error, chainId }\n    });\n\n    // \u5982\u679C\u7F51\u7EDC\u4E0D\u5B58\u5728\uFF0C\u5C1D\u8BD5\u6DFB\u52A0\n    const network = getNetworkInfo(chainId);\n    if (network) {\n      try {\n        await ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: network.name,\n            nativeCurrency: {\n              name: network.currency,\n              symbol: network.currency,\n              decimals: 18\n            },\n            rpcUrls: [network.rpcUrl],\n            blockExplorerUrls: [network.blockExplorerUrl]\n          }]\n        });\n        return true;\n      } catch (addError) {\n        logger.error('\u6DFB\u52A0\u7F51\u7EDC\u65F6\u51FA\u9519', {\n          action: 'addNetwork',\n          additionalData: { error: addError, chainId, network }\n        });\n        return false;\n      }\n    }\n    return false;\n  }\n};\n\n// \u8BBE\u7F6E\u8D26\u6237\u53D8\u5316\u76D1\u542C\u5668\nexport const setupAccountChangeListener = (callback: (accounts: string[]) => void): (() => void) | null => {\n  const ethereum = getEthereum();\n  if (!ethereum) return null;\n\n  const handleAccountsChanged = (accounts: string[]) => {\n    callback(accounts);\n  };\n\n  ethereum.on('accountsChanged', handleAccountsChanged);\n\n  // \u8FD4\u56DE\u6E05\u7406\u51FD\u6570\n  return () => {\n    ethereum.removeListener('accountsChanged', handleAccountsChanged);\n  };\n};\n\n// \u8FDE\u63A5\u6D4F\u89C8\u5668\u63D2\u4EF6\u94B1\u5305\nexport async function connectBrowserWallet(type: 'metamask' | 'coinbase' | 'trustwallet' | 'tokenpocket', callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  try {\n    if (!isWalletInstalled(type)) {\n      const walletNames = {\n        metamask: 'MetaMask',\n        coinbase: 'Coinbase Wallet',\n        trustwallet: 'Trust Wallet',\n        tokenpocket: 'TokenPocket'\n      };\n\n      throw new Error(`${walletNames[type]}\u94B1\u5305\u672A\u5B89\u88C5`);\n    }\n\n    // \u786E\u4FDDethereum\u5B58\u5728\n    if (!window.ethereum) {\n      throw new Error('\u65E0\u6CD5\u8BBF\u95EE\u4EE5\u592A\u574A\u63D0\u4F9B\u8005');\n    }\n\n    // \u5B89\u5168\u5730\u83B7\u53D6ethereum\u5F15\u7528\n    const provider = window.ethereum;\n\n    // \u8BF7\u6C42\u8D26\u6237\u6388\u6743\n    const accounts = await provider.request({ method: 'eth_requestAccounts' });\n\n    if (!accounts || accounts.length === 0) {\n      throw new Error('\u672A\u80FD\u83B7\u53D6\u94B1\u5305\u8D26\u6237');\n    }\n\n    const address = accounts[0];\n\n    // \u83B7\u53D6\u94FEID\n    const chainIdHex = await provider.request({ method: 'eth_chainId' });\n    const chainId = parseInt(chainIdHex as string, 16);\n\n    // \u8BBE\u7F6E\u4E8B\u4EF6\u76D1\u542C\n    provider.on('accountsChanged', (accounts: string[]) => {\n      if (accounts.length === 0) {\n        callbacks?.onDisconnect?.();\n      } else {\n        callbacks?.onAccountsChanged?.(accounts);\n      }\n    });\n\n    provider.on('chainChanged', (chainIdHex: string) => {\n      const newChainId = parseInt(chainIdHex, 16);\n      callbacks?.onChainChanged?.(newChainId);\n    });\n\n    provider.on('disconnect', () => {\n      callbacks?.onDisconnect?.();\n    });\n\n    // \u89E6\u53D1\u8FDE\u63A5\u56DE\u8C03\n    callbacks?.onConnect?.(address, chainId);\n\n    return { address, chainId };\n  } catch (error) {\n    logger.error(`\u8FDE\u63A5${type}\u94B1\u5305\u5931\u8D25`, {\n      action: 'connectBrowserWallet',\n      additionalData: { error, walletType: type }\n    });\n    return null;\n  }\n}\n\n// \u8FDE\u63A5 MetaMask\nexport async function connectMetamask(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  return connectBrowserWallet('metamask', callbacks);\n}\n\n// \u8FDE\u63A5 Coinbase Wallet\nexport async function connectCoinbase(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  return connectBrowserWallet('coinbase', callbacks);\n}\n\n// \u8FDE\u63A5 Trust Wallet\nexport async function connectTrustWallet(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  return connectBrowserWallet('trustwallet', callbacks);\n}\n\n// \u8FDE\u63A5 TokenPocket\nexport async function connectTokenPocket(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  return connectBrowserWallet('tokenpocket', callbacks);\n}\n\n// \u8FDE\u63A5 WalletConnect (\u4F7F\u7528\u6700\u65B0\u7248\u672C)\nexport async function connectWalletConnectV2(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  try {\n    // \u9879\u76EEID\u4ECE\u73AF\u5883\u53D8\u91CF\u83B7\u53D6\n    const projectId = process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID || process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID;\n    if (!projectId) {\n      console.error('WalletConnect\u9879\u76EEID\u672A\u914D\u7F6E\uFF0C\u8BF7\u68C0\u67E5\u73AF\u5883\u53D8\u91CF NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID');\n      throw new Error('\u672A\u914D\u7F6EWalletConnect\u9879\u76EEID');\n    }\n\n    // \u5982\u679C\u5DF2\u6709\u8FDE\u63A5\uFF0C\u5148\u65AD\u5F00\n    if (ethereumProvider) {\n      await ethereumProvider.disconnect();\n      ethereumProvider = null;\n    }\n\n    // \u521B\u5EFA\u65B0\u7684EthereumProvider\n    ethereumProvider = await EthereumProvider.init({\n      projectId,\n      showQrModal: true,\n      chains: [56], // BSC Mainnet\n      optionalChains: [1, 97], // Ethereum Mainnet, BSC Testnet\n      methods: [\n        'eth_sendTransaction',\n        'eth_sign',\n        'personal_sign',\n        'eth_signTypedData',\n      ],\n      events: [\n        'chainChanged',\n        'accountsChanged',\n      ],\n      qrModalOptions: {\n        themeMode: 'dark',\n        themeVariables: {\n          '--wcm-z-index': '99999999', // \u786E\u4FDDQR\u7801\u6A21\u6001\u6846\u5728\u6700\u4E0A\u5C42\n          '--wcm-font-family': '\"Inter\", system-ui, sans-serif',\n          '--wcm-background-color': '#1a1a1a',\n          '--wcm-accent-color': '#0de5ff',\n          '--wcm-text-color': '#ffffff',\n          '--wcm-border-radius-master': '12px',\n        },\n        explorerRecommendedWalletIds: [\n          'c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96', // MetaMask\n          'fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa', // Coinbase\n          '4622a2b2d6af1c9844944291e5e7351a6aa24cd7b23099efac1b2fd875da31a0', // Trust Wallet\n        ],\n        mobileWallets: [\n          {\n            id: 'c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96',\n            name: 'MetaMask',\n            links: {\n              native: 'metamask://',\n              universal: 'https://metamask.app.link'\n            }\n          },\n          {\n            id: 'fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa',\n            name: 'Coinbase Wallet',\n            links: {\n              native: 'cbwallet://',\n              universal: 'https://go.cb-w.com'\n            }\n          }\n        ],\n        desktopWallets: [\n          {\n            id: 'c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96',\n            name: 'MetaMask',\n            links: {\n              native: 'metamask://',\n              universal: 'https://metamask.io'\n            }\n          }\n        ]\n      }\n    });\n\n    // \u6CE8\u518C\u4E8B\u4EF6\u76D1\u542C\u5668\n    ethereumProvider.on('connect', (info: { chainId: number }) => {\n      ethereumProvider?.getAccounts().then((accounts: string[]) => {\n        if (callbacks?.onConnect && accounts.length > 0) {\n          callbacks.onConnect(accounts[0], info.chainId);\n        }\n      });\n    });\n\n    ethereumProvider.on('disconnect', () => {\n      if (callbacks?.onDisconnect) {\n        callbacks.onDisconnect();\n      }\n    });\n\n    ethereumProvider.on('accountsChanged', (accounts: string[]) => {\n      if (callbacks?.onAccountsChanged) {\n        callbacks.onAccountsChanged(accounts);\n      }\n    });\n\n    ethereumProvider.on('chainChanged', (chainId: number) => {\n      if (callbacks?.onChainChanged) {\n        callbacks.onChainChanged(chainId);\n      }\n    });\n\n    // \u8BF7\u6C42\u8FDE\u63A5\n    await ethereumProvider.enable();\n    const accounts = await ethereumProvider.getAccounts();\n\n    if (accounts && accounts.length > 0) {\n      return {\n        address: accounts[0],\n        chainId: ethereumProvider.chainId\n      };\n    }\n\n    return null;\n  } catch (error) {\n    logger.error('WalletConnect \u8FDE\u63A5\u5931\u8D25', {\n      action: 'connectWalletConnectV2',\n      additionalData: { error }\n    });\n    return null;\n  }\n}\n\n// \u8FDE\u63A5 WalletConnect\nexport async function connectWalletConnect(callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  try {\n    // \u5C1D\u8BD5\u4F7F\u7528\u65B0\u7248\u8FDE\u63A5\n    if (process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID) {\n      return connectWalletConnectV2(callbacks);\n    }\n\n    // \u5982\u679C\u6CA1\u6709\u9879\u76EEID\uFF0C\u56DE\u9000\u5230\u65E7\u7248\n    // \u5982\u679C\u5DF2\u6709\u8FDE\u63A5\uFF0C\u5148\u65AD\u5F00\n    if (walletConnectProvider) {\n      await walletConnectProvider.disconnect();\n      walletConnectProvider = null;\n    }\n\n    // \u521B\u5EFA\u65B0\u7684 WalletConnect \u63D0\u4F9B\u8005\n    walletConnectProvider = new WalletConnectProvider({\n      rpc: {\n        1: process.env.NEXT_PUBLIC_ETH_RPC_URL || 'https://mainnet.infura.io/v3/',\n        56: process.env.NEXT_PUBLIC_BSC_RPC_URL || 'https://bsc-dataseed.binance.org',\n        97: process.env.NEXT_PUBLIC_BSC_TESTNET_RPC_URL || 'https://data-seed-prebsc-1-s1.binance.org:8545'\n      },\n      chainId: parseInt(process.env.NEXT_PUBLIC_CHAIN_ID || '56', 10),\n      qrcode: true,\n      qrcodeModalOptions: {\n        mobileLinks: ['metamask', 'trust', 'coinbase', 'tokenpocket'],\n        desktopLinks: ['metamask', 'trust', 'coinbase', 'tokenpocket'],\n      }\n    });\n\n    // \u6CE8\u518C\u4E8B\u4EF6\u76D1\u542C\u5668\n    walletConnectProvider.on('connect', (info: { accounts: string[]; chainId: number }) => {\n      if (callbacks?.onConnect && info.accounts.length > 0) {\n        callbacks.onConnect(info.accounts[0], info.chainId);\n      }\n    });\n\n    walletConnectProvider.on('disconnect', () => {\n      if (callbacks?.onDisconnect) {\n        callbacks.onDisconnect();\n      }\n    });\n\n    walletConnectProvider.on('accountsChanged', (accounts: string[]) => {\n      if (callbacks?.onAccountsChanged) {\n        callbacks.onAccountsChanged(accounts);\n      }\n    });\n\n    walletConnectProvider.on('chainChanged', (chainId: number) => {\n      if (callbacks?.onChainChanged) {\n        callbacks.onChainChanged(chainId);\n      }\n    });\n\n    // \u8BF7\u6C42\u8FDE\u63A5\n    const accounts = await walletConnectProvider.enable();\n\n    if (accounts && accounts.length > 0) {\n      return {\n        address: accounts[0],\n        chainId: walletConnectProvider.chainId\n      };\n    }\n\n    return null;\n  } catch (error) {\n    logger.error('WalletConnect \u8FDE\u63A5\u5931\u8D25', {\n      action: 'connectWalletConnect',\n      additionalData: { error }\n    });\n    return null;\n  }\n}\n\n// \u8FDE\u63A5\u6307\u5B9A\u7C7B\u578B\u7684\u94B1\u5305\nexport async function connectWalletByType(type: WalletType, callbacks?: WalletCallbacks): Promise<{ address: string; chainId: number } | null> {\n  switch(type) {\n    case 'metamask':\n      return connectMetamask(callbacks);\n    case 'coinbase':\n      return connectCoinbase(callbacks);\n    case 'trustwallet':\n      return connectTrustWallet(callbacks);\n    case 'tokenpocket':\n      return connectTokenPocket(callbacks);\n    case 'walletconnect':\n      return connectWalletConnect(callbacks);\n    default:\n      throw new Error(`\u4E0D\u652F\u6301\u7684\u94B1\u5305\u7C7B\u578B: ${type}`);\n  }\n}\n\n// \u83B7\u53D6\u5F53\u524D\u8FDE\u63A5\u7684\u94B1\u5305\u7C7B\u578B\nexport function getConnectedWalletType(): WalletType | null {\n  if (!isBrowser) return null;\n\n  if (ethereumProvider?.connected || walletConnectProvider?.connected) {\n    return 'walletconnect';\n  }\n\n  if (!window.ethereum) return null;\n\n  if (window.ethereum.isMetaMask) return 'metamask';\n  if (window.ethereum.isCoinbaseWallet) return 'coinbase';\n  if (window.ethereum.isTrust) return 'trustwallet';\n  if (window.ethereum.isTokenPocket) return 'tokenpocket';\n\n  return null;\n}\n\n// \u65AD\u5F00\u94B1\u5305\u8FDE\u63A5\nexport async function disconnectWallet(walletType?: WalletType): Promise<void> {\n  if (walletType === 'walletconnect' || !walletType) {\n    try {\n      if (ethereumProvider) {\n        await ethereumProvider.disconnect();\n        ethereumProvider = null;\n      } else if (walletConnectProvider) {\n        await walletConnectProvider.disconnect();\n        walletConnectProvider = null;\n      }\n    } catch (error) {\n      logger.error('\u65AD\u5F00 WalletConnect \u5931\u8D25', {\n        action: 'disconnectWallet',\n        additionalData: { error }\n      });\n    }\n  }\n\n  // \u5BF9\u4E8E\u6D4F\u89C8\u5668\u63D2\u4EF6\u94B1\u5305\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6E05\u9664\u672C\u5730\u5B58\u50A8\n  if (isBrowser) {\n    localStorage.removeItem('walletconnect');\n  }\n}\n\n// \u6269\u5C55window\u5BF9\u8C61\u7C7B\u578B\ndeclare global {\n  interface Window {\n    ethereum?: {\n      request: (args: any) => Promise<any>;\n      on: (event: string, callback: any) => void;\n      removeListener: (event: string, callback: any) => void;\n      isMetaMask?: boolean;\n      isCoinbaseWallet?: boolean;\n      isTrust?: boolean;\n      isTokenPocket?: boolean;\n    };\n  }\n}\n"],
      names: ["connectBrowserWallet", "connectCoinbase", "connectMetamask", "connectTokenPocket", "connectTrustWallet", "connectWallet", "connectWalletByType", "connectWalletConnect", "connectWalletConnectV2", "disconnectWallet", "getConnectedWalletType", "getCurrentAccount", "getCurrentChainId", "getNetworkInfo", "getUserNetworks", "hasEthereum", "isWalletInstalled", "setupAccountChangeListener", "switchNetwork", "WalletConnectProvider", "EthereumProvider", "isBrowser", "window", "loadWalletConnectLibs", "wcProvider", "ethProvider", "Promise", "all", "default", "error", "logger", "Logger", "createContextLogger", "component", "NETWORKS", "chainId", "name", "currency", "rpcUrl", "blockExplorerUrl", "testnet", "walletConnectProvider", "ethereumProvider", "getEthereum", "ethereum", "type", "Boolean", "isMetaMask", "isCoinbaseWallet", "isTrust", "isTokenPocket", "e", "warn", "action", "additionalData", "walletType", "network", "find", "net", "accounts", "request", "method", "chainIdHex", "parseInt", "params", "toString", "chainName", "nativeCurrency", "symbol", "decimals", "rpcUrls", "blockExplorerUrls", "addError", "callback", "handleAccountsChanged", "on", "removeListener", "callbacks", "walletNames", "metamask", "coinbase", "trustwallet", "tokenpocket", "Error", "provider", "length", "address", "onDisconnect", "onAccountsChanged", "newChainId", "onChainChanged", "onConnect", "projectId", "process", "env", "NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID", "NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID", "console", "disconnect", "init", "showQrModal", "chains", "optionalChains", "methods", "events", "qrModalOptions", "themeMode", "themeVariables", "explorerRecommendedWalletIds", "mobileWallets", "id", "links", "native", "universal", "desktopWallets", "info", "getAccounts", "then", "enable", "rpc", "NEXT_PUBLIC_ETH_RPC_URL", "NEXT_PUBLIC_BSC_RPC_URL", "NEXT_PUBLIC_BSC_TESTNET_RPC_URL", "NEXT_PUBLIC_CHAIN_ID", "qrcode", "qrcodeModalOptions", "mobileLinks", "desktopLinks", "connected", "localStorage", "removeItem"],
      mappings: "AAAA;;;;;;;;;;;;IA0PsBA,oBAAoB;eAApBA;;IAuEAC,eAAe;eAAfA;;IALAC,eAAe;eAAfA;;IAeAC,kBAAkB;eAAlBA;;IALAC,kBAAkB;eAAlBA;;IAhMTC,aAAa;eAAbA;;IAmZSC,mBAAmB;eAAnBA;;IA3EAC,oBAAoB;eAApBA;;IA9HAC,sBAAsB;eAAtBA;;IA6OAC,gBAAgB;eAAhBA;;IAlBNC,sBAAsB;eAAtBA;;IApZHC,iBAAiB;eAAjBA;;IAiBAC,iBAAiB;eAAjBA;;IAxCAC,cAAc;eAAdA;;IALAC,eAAe;eAAfA;;IAjCAC,WAAW;eAAXA;;IAKAC,iBAAiB;eAAjBA;;IA0IAC,0BAA0B;eAA1BA;;IAhDAC,aAAa;eAAbA;;;+DAlLM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,oBAAoB;AACpB,IAAIC,wBAA6B;AACjC,IAAIC,mBAAwB;AAE5B,aAAa;AACb,MAAMC,YAAY,OAAOC,WAAW;AAEpC,YAAY;AACZ,MAAMC,wBAAwB;IAC5B,IAAI,CAACF,aAAaF,uBAAuB;IAEzC,IAAI;QACF,MAAM,CAACK,YAAYC,YAAY,GAAG,MAAMC,QAAQC,GAAG,CAAC;YAClD,mEAAA,QAAO;YACP,mEAAA,QAAO;SACR;QAEDR,wBAAwBK,WAAWI,OAAO;QAC1CR,mBAAmBK,YAAYL,gBAAgB;IACjD,EAAE,OAAOS,OAAO;QACdC,OAAOD,KAAK,CAAC,uBAAuBA;IACtC;AACF;AAEA,UAAU;AACV,MAAMC,SAASC,eAAM,CAACC,mBAAmB,CAAC;IAAEC,WAAW;AAAgB;AAuBvE,QAAQ;AACR,MAAMC,WAA0B;IAC9B;QACEC,SAAS;QACTC,MAAM;QACNC,UAAU;QACVC,QAAQ;QACRC,kBAAkB;QAClBC,SAAS;IACX;IACA;QACEL,SAAS;QACTC,MAAM;QACNC,UAAU;QACVC,QAAQ;QACRC,kBAAkB;QAClBC,SAAS;IACX;CACD;AAED,sBAAsB;AACtB,IAAIC,wBAAsD;AAC1D,IAAIC,mBAAwB,MAAM,kBAAkB;AAEpD,wBAAwB;AACxB,MAAMC,cAAc;IAClB,IAAItB,aAAa,OAAOC,WAAW,eAAe,OAAOA,OAAOsB,QAAQ,KAAK,aAAa;QACxF,OAAOtB,OAAOsB,QAAQ;IACxB;IACA,OAAO;AACT;AAGO,MAAM7B,cAAc;IACzB,OAAO4B,kBAAkB;AAC3B;AAGO,MAAM3B,oBAAoB,CAAC6B;IAChC,IAAI;QACF,IAAI,CAACxB,WAAW,OAAO;QAEvB,OAAQwB;YACN,KAAK;gBACH,OAAOC,QAAQxB,OAAOsB,QAAQ,EAAEG;YAClC,KAAK;gBACH,OAAOD,QAAQxB,OAAOsB,QAAQ,EAAEI;YAClC,KAAK;gBACH,OAAOF,QAAQxB,OAAOsB,QAAQ,EAAEK;YAClC,KAAK;gBACH,OAAOH,QAAQxB,OAAOsB,QAAQ,EAAEM;YAClC,KAAK;gBACH,OAAO,MAAM,2BAA2B;YAC1C;gBACE,OAAO;QACX;IACF,EAAE,OAAOC,GAAG;QACVrB,OAAOsB,IAAI,CAAC,CAAC,WAAW,EAAEP,MAAM,EAAE;YAChCQ,QAAQ;YACRC,gBAAgB;gBAAEzB,OAAOsB;gBAAGI,YAAYV;YAAK;QAC/C;QACA,OAAO;IACT;AACF;AAGO,MAAM/B,kBAAkB;IAC7B,OAAOoB;AACT;AAGO,MAAMrB,iBAAiB,CAACsB;IAC7B,MAAMqB,UAAUtB,SAASuB,IAAI,CAACC,CAAAA,MAAOA,IAAIvB,OAAO,KAAKA;IACrD,OAAOqB,WAAW;AACpB;AAGO,MAAMnD,gBAAgB;IAC3B,MAAMuC,WAAWD;IACjB,IAAI,CAACC,UAAU,OAAO;IAEtB,IAAI;QACF,MAAMe,WAAW,MAAMf,SAASgB,OAAO,CAAC;YAAEC,QAAQ;QAAsB;QACxE,OAAOF,QAAQ,CAAC,EAAE,IAAI;IACxB,EAAE,OAAO9B,OAAO;QACdC,OAAOD,KAAK,CAAC,WAAW;YACtBwB,QAAQ;YACRC,gBAAgB;gBAAEzB;YAAM;QAC1B;QACA,OAAO;IACT;AACF;AAGO,MAAMlB,oBAAoB;IAC/B,MAAMiC,WAAWD;IACjB,IAAI,CAACC,UAAU,OAAO;IAEtB,IAAI;QACF,MAAMe,WAAW,MAAMf,SAASgB,OAAO,CAAC;YAAEC,QAAQ;QAAe;QACjE,OAAOF,QAAQ,CAAC,EAAE,IAAI;IACxB,EAAE,OAAO9B,OAAO;QACdC,OAAOD,KAAK,CAAC,WAAW;YACtBwB,QAAQ;YACRC,gBAAgB;gBAAEzB;YAAM;QAC1B;QACA,OAAO;IACT;AACF;AAGO,MAAMjB,oBAAoB;IAC/B,MAAMgC,WAAWD;IACjB,IAAI,CAACC,UAAU,OAAO;IAEtB,IAAI;QACF,MAAMkB,aAAa,MAAMlB,SAASgB,OAAO,CAAC;YAAEC,QAAQ;QAAc;QAClE,OAAOC,aAAaC,SAASD,YAAY,MAAM;IACjD,EAAE,OAAOjC,OAAO;QACdC,OAAOD,KAAK,CAAC,YAAY;YACvBwB,QAAQ;YACRC,gBAAgB;gBAAEzB;YAAM;QAC1B;QACA,OAAO;IACT;AACF;AAGO,MAAMX,gBAAgB,OAAOiB;IAClC,MAAMS,WAAWD;IACjB,IAAI,CAACC,UAAU,OAAO;IAEtB,IAAI;QACF,MAAMA,SAASgB,OAAO,CAAC;YACrBC,QAAQ;YACRG,QAAQ;gBAAC;oBAAE7B,SAAS,CAAC,EAAE,EAAEA,QAAQ8B,QAAQ,CAAC,KAAK;gBAAC;aAAE;QACpD;QACA,OAAO;IACT,EAAE,OAAOpC,OAAO;QACdC,OAAOsB,IAAI,CAAC,WAAW;YACrBC,QAAQ;YACRC,gBAAgB;gBAAEzB;gBAAOM;YAAQ;QACnC;QAEA,eAAe;QACf,MAAMqB,UAAU3C,eAAesB;QAC/B,IAAIqB,SAAS;YACX,IAAI;gBACF,MAAMZ,SAASgB,OAAO,CAAC;oBACrBC,QAAQ;oBACRG,QAAQ;wBAAC;4BACP7B,SAAS,CAAC,EAAE,EAAEA,QAAQ8B,QAAQ,CAAC,KAAK;4BACpCC,WAAWV,QAAQpB,IAAI;4BACvB+B,gBAAgB;gCACd/B,MAAMoB,QAAQnB,QAAQ;gCACtB+B,QAAQZ,QAAQnB,QAAQ;gCACxBgC,UAAU;4BACZ;4BACAC,SAAS;gCAACd,QAAQlB,MAAM;6BAAC;4BACzBiC,mBAAmB;gCAACf,QAAQjB,gBAAgB;6BAAC;wBAC/C;qBAAE;gBACJ;gBACA,OAAO;YACT,EAAE,OAAOiC,UAAU;gBACjB1C,OAAOD,KAAK,CAAC,WAAW;oBACtBwB,QAAQ;oBACRC,gBAAgB;wBAAEzB,OAAO2C;wBAAUrC;wBAASqB;oBAAQ;gBACtD;gBACA,OAAO;YACT;QACF;QACA,OAAO;IACT;AACF;AAGO,MAAMvC,6BAA6B,CAACwD;IACzC,MAAM7B,WAAWD;IACjB,IAAI,CAACC,UAAU,OAAO;IAEtB,MAAM8B,wBAAwB,CAACf;QAC7Bc,SAASd;IACX;IAEAf,SAAS+B,EAAE,CAAC,mBAAmBD;IAE/B,SAAS;IACT,OAAO;QACL9B,SAASgC,cAAc,CAAC,mBAAmBF;IAC7C;AACF;AAGO,eAAe1E,qBAAqB6C,IAA6D,EAAEgC,SAA2B;IACnI,IAAI;QACF,IAAI,CAAC7D,kBAAkB6B,OAAO;YAC5B,MAAMiC,cAAc;gBAClBC,UAAU;gBACVC,UAAU;gBACVC,aAAa;gBACbC,aAAa;YACf;YAEA,MAAM,IAAIC,MAAM,GAAGL,WAAW,CAACjC,KAAK,CAAC,KAAK,CAAC;QAC7C;QAEA,eAAe;QACf,IAAI,CAACvB,OAAOsB,QAAQ,EAAE;YACpB,MAAM,IAAIuC,MAAM;QAClB;QAEA,kBAAkB;QAClB,MAAMC,WAAW9D,OAAOsB,QAAQ;QAEhC,SAAS;QACT,MAAMe,WAAW,MAAMyB,SAASxB,OAAO,CAAC;YAAEC,QAAQ;QAAsB;QAExE,IAAI,CAACF,YAAYA,SAAS0B,MAAM,KAAK,GAAG;YACtC,MAAM,IAAIF,MAAM;QAClB;QAEA,MAAMG,UAAU3B,QAAQ,CAAC,EAAE;QAE3B,QAAQ;QACR,MAAMG,aAAa,MAAMsB,SAASxB,OAAO,CAAC;YAAEC,QAAQ;QAAc;QAClE,MAAM1B,UAAU4B,SAASD,YAAsB;QAE/C,SAAS;QACTsB,SAAST,EAAE,CAAC,mBAAmB,CAAChB;YAC9B,IAAIA,SAAS0B,MAAM,KAAK,GAAG;gBACzBR,WAAWU;YACb,OAAO;gBACLV,WAAWW,oBAAoB7B;YACjC;QACF;QAEAyB,SAAST,EAAE,CAAC,gBAAgB,CAACb;YAC3B,MAAM2B,aAAa1B,SAASD,YAAY;YACxCe,WAAWa,iBAAiBD;QAC9B;QAEAL,SAAST,EAAE,CAAC,cAAc;YACxBE,WAAWU;QACb;QAEA,SAAS;QACTV,WAAWc,YAAYL,SAASnD;QAEhC,OAAO;YAAEmD;YAASnD;QAAQ;IAC5B,EAAE,OAAON,OAAO;QACdC,OAAOD,KAAK,CAAC,CAAC,EAAE,EAAEgB,KAAK,IAAI,CAAC,EAAE;YAC5BQ,QAAQ;YACRC,gBAAgB;gBAAEzB;gBAAO0B,YAAYV;YAAK;QAC5C;QACA,OAAO;IACT;AACF;AAGO,eAAe3C,gBAAgB2E,SAA2B;IAC/D,OAAO7E,qBAAqB,YAAY6E;AAC1C;AAGO,eAAe5E,gBAAgB4E,SAA2B;IAC/D,OAAO7E,qBAAqB,YAAY6E;AAC1C;AAGO,eAAezE,mBAAmByE,SAA2B;IAClE,OAAO7E,qBAAqB,eAAe6E;AAC7C;AAGO,eAAe1E,mBAAmB0E,SAA2B;IAClE,OAAO7E,qBAAqB,eAAe6E;AAC7C;AAGO,eAAerE,uBAAuBqE,SAA2B;IACtE,IAAI;QACF,cAAc;QACd,MAAMe,YAAYC,QAAQC,GAAG,CAACC,qCAAqC,IAAIF,QAAQC,GAAG,CAACE,oCAAoC;QACvH,IAAI,CAACJ,WAAW;YACdK,QAAQpE,KAAK,CAAC;YACd,MAAM,IAAIsD,MAAM;QAClB;QAEA,aAAa;QACb,IAAIzC,kBAAkB;YACpB,MAAMA,iBAAiBwD,UAAU;YACjCxD,mBAAmB;QACrB;QAEA,uBAAuB;QACvBA,mBAAmB,MAAMtB,iBAAiB+E,IAAI,CAAC;YAC7CP;YACAQ,aAAa;YACbC,QAAQ;gBAAC;aAAG;YACZC,gBAAgB;gBAAC;gBAAG;aAAG;YACvBC,SAAS;gBACP;gBACA;gBACA;gBACA;aACD;YACDC,QAAQ;gBACN;gBACA;aACD;YACDC,gBAAgB;gBACdC,WAAW;gBACXC,gBAAgB;oBACd,iBAAiB;oBACjB,qBAAqB;oBACrB,0BAA0B;oBAC1B,sBAAsB;oBACtB,oBAAoB;oBACpB,8BAA8B;gBAChC;gBACAC,8BAA8B;oBAC5B;oBACA;oBACA;iBACD;gBACDC,eAAe;oBACb;wBACEC,IAAI;wBACJ1E,MAAM;wBACN2E,OAAO;4BACLC,QAAQ;4BACRC,WAAW;wBACb;oBACF;oBACA;wBACEH,IAAI;wBACJ1E,MAAM;wBACN2E,OAAO;4BACLC,QAAQ;4BACRC,WAAW;wBACb;oBACF;iBACD;gBACDC,gBAAgB;oBACd;wBACEJ,IAAI;wBACJ1E,MAAM;wBACN2E,OAAO;4BACLC,QAAQ;4BACRC,WAAW;wBACb;oBACF;iBACD;YACH;QACF;QAEA,UAAU;QACVvE,iBAAiBiC,EAAE,CAAC,WAAW,CAACwC;YAC9BzE,kBAAkB0E,cAAcC,KAAK,CAAC1D;gBACpC,IAAIkB,WAAWc,aAAahC,SAAS0B,MAAM,GAAG,GAAG;oBAC/CR,UAAUc,SAAS,CAAChC,QAAQ,CAAC,EAAE,EAAEwD,KAAKhF,OAAO;gBAC/C;YACF;QACF;QAEAO,iBAAiBiC,EAAE,CAAC,cAAc;YAChC,IAAIE,WAAWU,cAAc;gBAC3BV,UAAUU,YAAY;YACxB;QACF;QAEA7C,iBAAiBiC,EAAE,CAAC,mBAAmB,CAAChB;YACtC,IAAIkB,WAAWW,mBAAmB;gBAChCX,UAAUW,iBAAiB,CAAC7B;YAC9B;QACF;QAEAjB,iBAAiBiC,EAAE,CAAC,gBAAgB,CAACxC;YACnC,IAAI0C,WAAWa,gBAAgB;gBAC7Bb,UAAUa,cAAc,CAACvD;YAC3B;QACF;QAEA,OAAO;QACP,MAAMO,iBAAiB4E,MAAM;QAC7B,MAAM3D,WAAW,MAAMjB,iBAAiB0E,WAAW;QAEnD,IAAIzD,YAAYA,SAAS0B,MAAM,GAAG,GAAG;YACnC,OAAO;gBACLC,SAAS3B,QAAQ,CAAC,EAAE;gBACpBxB,SAASO,iBAAiBP,OAAO;YACnC;QACF;QAEA,OAAO;IACT,EAAE,OAAON,OAAO;QACdC,OAAOD,KAAK,CAAC,sBAAsB;YACjCwB,QAAQ;YACRC,gBAAgB;gBAAEzB;YAAM;QAC1B;QACA,OAAO;IACT;AACF;AAGO,eAAetB,qBAAqBsE,SAA2B;IACpE,IAAI;QACF,WAAW;QACX,IAAIgB,QAAQC,GAAG,CAACC,qCAAqC,EAAE;YACrD,OAAOvF,uBAAuBqE;QAChC;QAEA,iBAAiB;QACjB,aAAa;QACb,IAAIpC,uBAAuB;YACzB,MAAMA,sBAAsByD,UAAU;YACtCzD,wBAAwB;QAC1B;QAEA,yBAAyB;QACzBA,wBAAwB,IAAItB,sBAAsB;YAChDoG,KAAK;gBACH,GAAG1B,QAAQC,GAAG,CAAC0B,uBAAuB,IAAI;gBAC1C,IAAI3B,QAAQC,GAAG,CAAC2B,uBAAuB,IAAI;gBAC3C,IAAI5B,QAAQC,GAAG,CAAC4B,+BAA+B,IAAI;YACrD;YACAvF,SAAS4B,SAAS8B,QAAQC,GAAG,CAAC6B,oBAAoB,IAAI,MAAM;YAC5DC,QAAQ;YACRC,oBAAoB;gBAClBC,aAAa;oBAAC;oBAAY;oBAAS;oBAAY;iBAAc;gBAC7DC,cAAc;oBAAC;oBAAY;oBAAS;oBAAY;iBAAc;YAChE;QACF;QAEA,UAAU;QACVtF,sBAAsBkC,EAAE,CAAC,WAAW,CAACwC;YACnC,IAAItC,WAAWc,aAAawB,KAAKxD,QAAQ,CAAC0B,MAAM,GAAG,GAAG;gBACpDR,UAAUc,SAAS,CAACwB,KAAKxD,QAAQ,CAAC,EAAE,EAAEwD,KAAKhF,OAAO;YACpD;QACF;QAEAM,sBAAsBkC,EAAE,CAAC,cAAc;YACrC,IAAIE,WAAWU,cAAc;gBAC3BV,UAAUU,YAAY;YACxB;QACF;QAEA9C,sBAAsBkC,EAAE,CAAC,mBAAmB,CAAChB;YAC3C,IAAIkB,WAAWW,mBAAmB;gBAChCX,UAAUW,iBAAiB,CAAC7B;YAC9B;QACF;QAEAlB,sBAAsBkC,EAAE,CAAC,gBAAgB,CAACxC;YACxC,IAAI0C,WAAWa,gBAAgB;gBAC7Bb,UAAUa,cAAc,CAACvD;YAC3B;QACF;QAEA,OAAO;QACP,MAAMwB,WAAW,MAAMlB,sBAAsB6E,MAAM;QAEnD,IAAI3D,YAAYA,SAAS0B,MAAM,GAAG,GAAG;YACnC,OAAO;gBACLC,SAAS3B,QAAQ,CAAC,EAAE;gBACpBxB,SAASM,sBAAsBN,OAAO;YACxC;QACF;QAEA,OAAO;IACT,EAAE,OAAON,OAAO;QACdC,OAAOD,KAAK,CAAC,sBAAsB;YACjCwB,QAAQ;YACRC,gBAAgB;gBAAEzB;YAAM;QAC1B;QACA,OAAO;IACT;AACF;AAGO,eAAevB,oBAAoBuC,IAAgB,EAAEgC,SAA2B;IACrF,OAAOhC;QACL,KAAK;YACH,OAAO3C,gBAAgB2E;QACzB,KAAK;YACH,OAAO5E,gBAAgB4E;QACzB,KAAK;YACH,OAAOzE,mBAAmByE;QAC5B,KAAK;YACH,OAAO1E,mBAAmB0E;QAC5B,KAAK;YACH,OAAOtE,qBAAqBsE;QAC9B;YACE,MAAM,IAAIM,MAAM,CAAC,UAAU,EAAEtC,MAAM;IACvC;AACF;AAGO,SAASnC;IACd,IAAI,CAACW,WAAW,OAAO;IAEvB,IAAIqB,kBAAkBsF,aAAavF,uBAAuBuF,WAAW;QACnE,OAAO;IACT;IAEA,IAAI,CAAC1G,OAAOsB,QAAQ,EAAE,OAAO;IAE7B,IAAItB,OAAOsB,QAAQ,CAACG,UAAU,EAAE,OAAO;IACvC,IAAIzB,OAAOsB,QAAQ,CAACI,gBAAgB,EAAE,OAAO;IAC7C,IAAI1B,OAAOsB,QAAQ,CAACK,OAAO,EAAE,OAAO;IACpC,IAAI3B,OAAOsB,QAAQ,CAACM,aAAa,EAAE,OAAO;IAE1C,OAAO;AACT;AAGO,eAAezC,iBAAiB8C,UAAuB;IAC5D,IAAIA,eAAe,mBAAmB,CAACA,YAAY;QACjD,IAAI;YACF,IAAIb,kBAAkB;gBACpB,MAAMA,iBAAiBwD,UAAU;gBACjCxD,mBAAmB;YACrB,OAAO,IAAID,uBAAuB;gBAChC,MAAMA,sBAAsByD,UAAU;gBACtCzD,wBAAwB;YAC1B;QACF,EAAE,OAAOZ,OAAO;YACdC,OAAOD,KAAK,CAAC,uBAAuB;gBAClCwB,QAAQ;gBACRC,gBAAgB;oBAAEzB;gBAAM;YAC1B;QACF;IACF;IAEA,uBAAuB;IACvB,IAAIR,WAAW;QACb4G,aAAaC,UAAU,CAAC;IAC1B;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7d15eae146f74d2027e653b5891076aca8add7bc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1o4scm9yy0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1o4scm9yy0();
cov_1o4scm9yy0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[0]++;
  cov_1o4scm9yy0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1o4scm9yy0().s[3]++;
_export(exports, {
  connectBrowserWallet: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[1]++;
    cov_1o4scm9yy0().s[4]++;
    return connectBrowserWallet;
  },
  connectCoinbase: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[2]++;
    cov_1o4scm9yy0().s[5]++;
    return connectCoinbase;
  },
  connectMetamask: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[3]++;
    cov_1o4scm9yy0().s[6]++;
    return connectMetamask;
  },
  connectTokenPocket: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[4]++;
    cov_1o4scm9yy0().s[7]++;
    return connectTokenPocket;
  },
  connectTrustWallet: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[5]++;
    cov_1o4scm9yy0().s[8]++;
    return connectTrustWallet;
  },
  connectWallet: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[6]++;
    cov_1o4scm9yy0().s[9]++;
    return connectWallet;
  },
  connectWalletByType: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[7]++;
    cov_1o4scm9yy0().s[10]++;
    return connectWalletByType;
  },
  connectWalletConnect: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[8]++;
    cov_1o4scm9yy0().s[11]++;
    return connectWalletConnect;
  },
  connectWalletConnectV2: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[9]++;
    cov_1o4scm9yy0().s[12]++;
    return connectWalletConnectV2;
  },
  disconnectWallet: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[10]++;
    cov_1o4scm9yy0().s[13]++;
    return disconnectWallet;
  },
  getConnectedWalletType: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[11]++;
    cov_1o4scm9yy0().s[14]++;
    return getConnectedWalletType;
  },
  getCurrentAccount: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[12]++;
    cov_1o4scm9yy0().s[15]++;
    return getCurrentAccount;
  },
  getCurrentChainId: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[13]++;
    cov_1o4scm9yy0().s[16]++;
    return getCurrentChainId;
  },
  getNetworkInfo: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[14]++;
    cov_1o4scm9yy0().s[17]++;
    return getNetworkInfo;
  },
  getUserNetworks: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[15]++;
    cov_1o4scm9yy0().s[18]++;
    return getUserNetworks;
  },
  hasEthereum: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[16]++;
    cov_1o4scm9yy0().s[19]++;
    return hasEthereum;
  },
  isWalletInstalled: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[17]++;
    cov_1o4scm9yy0().s[20]++;
    return isWalletInstalled;
  },
  setupAccountChangeListener: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[18]++;
    cov_1o4scm9yy0().s[21]++;
    return setupAccountChangeListener;
  },
  switchNetwork: function () {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[19]++;
    cov_1o4scm9yy0().s[22]++;
    return switchNetwork;
  }
});
const _logger =
/* istanbul ignore next */
(/*#__PURE__*/cov_1o4scm9yy0().s[23]++, _interop_require_default(require("./logger")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[20]++;
  cov_1o4scm9yy0().s[24]++;
  return /* istanbul ignore next */(cov_1o4scm9yy0().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[21]++;
  cov_1o4scm9yy0().s[25]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[2][0]++;
    cov_1o4scm9yy0().s[26]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[27]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[28]++, new WeakMap());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[29]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[22]++;
    cov_1o4scm9yy0().s[30]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[23]++;
  cov_1o4scm9yy0().s[31]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[4][0]++;
    cov_1o4scm9yy0().s[32]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[4][1]++;
  }
  cov_1o4scm9yy0().s[33]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[6][0]++;
    cov_1o4scm9yy0().s[34]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[35]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[8][0]++;
    cov_1o4scm9yy0().s[37]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[38]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[39]++,
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[40]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1o4scm9yy0().s[42]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[13][1]++, null));
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[43]++;
      if (
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[14][0]++;
        cov_1o4scm9yy0().s[44]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[14][1]++;
        cov_1o4scm9yy0().s[45]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[46]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[47]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[16][0]++;
    cov_1o4scm9yy0().s[48]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[16][1]++;
  }
  cov_1o4scm9yy0().s[49]++;
  return newObj;
}
// 动态导入钱包连接库以避免SSR问题
let WalletConnectProvider =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[50]++, null);
let EthereumProvider =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[51]++, null);
// 检查是否在浏览器环境
const isBrowser =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[52]++, typeof window !== 'undefined');
// 动态加载钱包连接库
/* istanbul ignore next */
cov_1o4scm9yy0().s[53]++;
const loadWalletConnectLibs = async () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[24]++;
  cov_1o4scm9yy0().s[54]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[18][0]++, !isBrowser) ||
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[18][1]++, WalletConnectProvider)) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[17][0]++;
    cov_1o4scm9yy0().s[55]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[17][1]++;
  }
  cov_1o4scm9yy0().s[56]++;
  try {
    const [wcProvider, ethProvider] =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[57]++, await Promise.all([Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[25]++;
      cov_1o4scm9yy0().s[58]++;
      return /*#__PURE__*/_interop_require_wildcard(require("@walletconnect/web3-provider"));
    }), Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[26]++;
      cov_1o4scm9yy0().s[59]++;
      return /*#__PURE__*/_interop_require_wildcard(require("@walletconnect/ethereum-provider"));
    })]));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[60]++;
    WalletConnectProvider = wcProvider.default;
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[61]++;
    EthereumProvider = ethProvider.EthereumProvider;
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[62]++;
    logger.error('加载WalletConnect库失败:', error);
  }
};
// 创建日志记录器
const logger =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[63]++, _logger.default.createContextLogger({
  component: 'WalletService'
}));
// 支持的网络
const NETWORKS =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[64]++, [{
  chainId: 56,
  name: 'BSC',
  currency: 'BNB',
  rpcUrl: 'https://bsc-dataseed.binance.org/',
  blockExplorerUrl: 'https://bscscan.com',
  testnet: false
}, {
  chainId: 97,
  name: 'BSC Testnet',
  currency: 'tBNB',
  rpcUrl: 'https://data-seed-prebsc-1-s1.binance.org:8545/',
  blockExplorerUrl: 'https://testnet.bscscan.com',
  testnet: true
}]);
// WalletConnect 提供者单例
let walletConnectProvider =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[65]++, null);
let ethereumProvider =
/* istanbul ignore next */
(cov_1o4scm9yy0().s[66]++, null); // 使用any类型暂时避开类型错误
// 安全地访问 window.ethereum
/* istanbul ignore next */
cov_1o4scm9yy0().s[67]++;
const getEthereum = () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[27]++;
  cov_1o4scm9yy0().s[68]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[20][0]++, isBrowser) &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[20][1]++, typeof window !== 'undefined') &&
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[20][2]++, typeof window.ethereum !== 'undefined')) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[19][0]++;
    cov_1o4scm9yy0().s[69]++;
    return window.ethereum;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[19][1]++;
  }
  cov_1o4scm9yy0().s[70]++;
  return null;
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[71]++;
const hasEthereum = () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[28]++;
  cov_1o4scm9yy0().s[72]++;
  return getEthereum() !== null;
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[73]++;
const isWalletInstalled = type => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[29]++;
  cov_1o4scm9yy0().s[74]++;
  try {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[75]++;
    if (!isBrowser) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[21][0]++;
      cov_1o4scm9yy0().s[76]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[21][1]++;
    }
    cov_1o4scm9yy0().s[77]++;
    switch (type) {
      case 'metamask':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[22][0]++;
        cov_1o4scm9yy0().s[78]++;
        return Boolean(window.ethereum?.isMetaMask);
      case 'coinbase':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[22][1]++;
        cov_1o4scm9yy0().s[79]++;
        return Boolean(window.ethereum?.isCoinbaseWallet);
      case 'trustwallet':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[22][2]++;
        cov_1o4scm9yy0().s[80]++;
        return Boolean(window.ethereum?.isTrust);
      case 'tokenpocket':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[22][3]++;
        cov_1o4scm9yy0().s[81]++;
        return Boolean(window.ethereum?.isTokenPocket);
      case 'walletconnect':
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[22][4]++;
        cov_1o4scm9yy0().s[82]++;
        return true;
      // WalletConnect 不需要安装浏览器插件
      default:
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[22][5]++;
        cov_1o4scm9yy0().s[83]++;
        return false;
    }
  } catch (e) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[84]++;
    logger.warn(`检查钱包安装时出错: ${type}`, {
      action: 'isWalletInstalled',
      additionalData: {
        error: e,
        walletType: type
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[85]++;
    return false;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[86]++;
const getUserNetworks = () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[30]++;
  cov_1o4scm9yy0().s[87]++;
  return NETWORKS;
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[88]++;
const getNetworkInfo = chainId => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[31]++;
  const network =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[89]++, NETWORKS.find(net => {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[32]++;
    cov_1o4scm9yy0().s[90]++;
    return net.chainId === chainId;
  }));
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[91]++;
  return /* istanbul ignore next */(cov_1o4scm9yy0().b[23][0]++, network) ||
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[23][1]++, null);
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[92]++;
const connectWallet = async () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[33]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[93]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[94]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[24][0]++;
    cov_1o4scm9yy0().s[95]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[24][1]++;
  }
  cov_1o4scm9yy0().s[96]++;
  try {
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[97]++, await ethereum.request({
      method: 'eth_requestAccounts'
    }));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[98]++;
    return /* istanbul ignore next */(cov_1o4scm9yy0().b[25][0]++, accounts[0]) ||
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[25][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[99]++;
    logger.error('连接钱包时出错', {
      action: 'connectWallet',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[100]++;
    return null;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[101]++;
const getCurrentAccount = async () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[34]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[102]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[103]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[26][0]++;
    cov_1o4scm9yy0().s[104]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[26][1]++;
  }
  cov_1o4scm9yy0().s[105]++;
  try {
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[106]++, await ethereum.request({
      method: 'eth_accounts'
    }));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[107]++;
    return /* istanbul ignore next */(cov_1o4scm9yy0().b[27][0]++, accounts[0]) ||
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[27][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[108]++;
    logger.error('获取账户时出错', {
      action: 'getCurrentAccount',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[109]++;
    return null;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[110]++;
const getCurrentChainId = async () => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[35]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[111]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[112]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[28][0]++;
    cov_1o4scm9yy0().s[113]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[28][1]++;
  }
  cov_1o4scm9yy0().s[114]++;
  try {
    const chainIdHex =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[115]++, await ethereum.request({
      method: 'eth_chainId'
    }));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[116]++;
    return chainIdHex ?
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[29][0]++, parseInt(chainIdHex, 16)) :
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[29][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[117]++;
    logger.error('获取链ID时出错', {
      action: 'getCurrentChainId',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[118]++;
    return null;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[119]++;
const switchNetwork = async chainId => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[36]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[120]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[121]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[30][0]++;
    cov_1o4scm9yy0().s[122]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[30][1]++;
  }
  cov_1o4scm9yy0().s[123]++;
  try {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[124]++;
    await ethereum.request({
      method: 'wallet_switchEthereumChain',
      params: [{
        chainId: `0x${chainId.toString(16)}`
      }]
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[125]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[126]++;
    logger.warn('切换网络时出错', {
      action: 'switchNetwork',
      additionalData: {
        error,
        chainId
      }
    });
    // 如果网络不存在，尝试添加
    const network =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[127]++, getNetworkInfo(chainId));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[128]++;
    if (network) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[31][0]++;
      cov_1o4scm9yy0().s[129]++;
      try {
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[130]++;
        await ethereum.request({
          method: 'wallet_addEthereumChain',
          params: [{
            chainId: `0x${chainId.toString(16)}`,
            chainName: network.name,
            nativeCurrency: {
              name: network.currency,
              symbol: network.currency,
              decimals: 18
            },
            rpcUrls: [network.rpcUrl],
            blockExplorerUrls: [network.blockExplorerUrl]
          }]
        });
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[131]++;
        return true;
      } catch (addError) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[132]++;
        logger.error('添加网络时出错', {
          action: 'addNetwork',
          additionalData: {
            error: addError,
            chainId,
            network
          }
        });
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[133]++;
        return false;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[31][1]++;
    }
    cov_1o4scm9yy0().s[134]++;
    return false;
  }
};
/* istanbul ignore next */
cov_1o4scm9yy0().s[135]++;
const setupAccountChangeListener = callback => {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[37]++;
  const ethereum =
  /* istanbul ignore next */
  (cov_1o4scm9yy0().s[136]++, getEthereum());
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[137]++;
  if (!ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[32][0]++;
    cov_1o4scm9yy0().s[138]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[32][1]++;
  }
  cov_1o4scm9yy0().s[139]++;
  const handleAccountsChanged = accounts => {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[38]++;
    cov_1o4scm9yy0().s[140]++;
    callback(accounts);
  };
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[141]++;
  ethereum.on('accountsChanged', handleAccountsChanged);
  // 返回清理函数
  /* istanbul ignore next */
  cov_1o4scm9yy0().s[142]++;
  return () => {
    /* istanbul ignore next */
    cov_1o4scm9yy0().f[39]++;
    cov_1o4scm9yy0().s[143]++;
    ethereum.removeListener('accountsChanged', handleAccountsChanged);
  };
};
async function connectBrowserWallet(type, callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[40]++;
  cov_1o4scm9yy0().s[144]++;
  try {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[145]++;
    if (!isWalletInstalled(type)) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[33][0]++;
      const walletNames =
      /* istanbul ignore next */
      (cov_1o4scm9yy0().s[146]++, {
        metamask: 'MetaMask',
        coinbase: 'Coinbase Wallet',
        trustwallet: 'Trust Wallet',
        tokenpocket: 'TokenPocket'
      });
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[147]++;
      throw new Error(`${walletNames[type]}钱包未安装`);
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[33][1]++;
    }
    // 确保ethereum存在
    cov_1o4scm9yy0().s[148]++;
    if (!window.ethereum) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[34][0]++;
      cov_1o4scm9yy0().s[149]++;
      throw new Error('无法访问以太坊提供者');
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[34][1]++;
    }
    // 安全地获取ethereum引用
    const provider =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[150]++, window.ethereum);
    // 请求账户授权
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[151]++, await provider.request({
      method: 'eth_requestAccounts'
    }));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[152]++;
    if (
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[36][0]++, !accounts) ||
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[36][1]++, accounts.length === 0)) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[35][0]++;
      cov_1o4scm9yy0().s[153]++;
      throw new Error('未能获取钱包账户');
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[35][1]++;
    }
    const address =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[154]++, accounts[0]);
    // 获取链ID
    const chainIdHex =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[155]++, await provider.request({
      method: 'eth_chainId'
    }));
    const chainId =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[156]++, parseInt(chainIdHex, 16));
    // 设置事件监听
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[157]++;
    provider.on('accountsChanged', accounts => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[41]++;
      cov_1o4scm9yy0().s[158]++;
      if (accounts.length === 0) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[37][0]++;
        cov_1o4scm9yy0().s[159]++;
        callbacks?.onDisconnect?.();
      } else {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[37][1]++;
        cov_1o4scm9yy0().s[160]++;
        callbacks?.onAccountsChanged?.(accounts);
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[161]++;
    provider.on('chainChanged', chainIdHex => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[42]++;
      const newChainId =
      /* istanbul ignore next */
      (cov_1o4scm9yy0().s[162]++, parseInt(chainIdHex, 16));
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[163]++;
      callbacks?.onChainChanged?.(newChainId);
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[164]++;
    provider.on('disconnect', () => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[43]++;
      cov_1o4scm9yy0().s[165]++;
      callbacks?.onDisconnect?.();
    });
    // 触发连接回调
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[166]++;
    callbacks?.onConnect?.(address, chainId);
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[167]++;
    return {
      address,
      chainId
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[168]++;
    logger.error(`连接${type}钱包失败`, {
      action: 'connectBrowserWallet',
      additionalData: {
        error,
        walletType: type
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[169]++;
    return null;
  }
}
async function connectMetamask(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[44]++;
  cov_1o4scm9yy0().s[170]++;
  return connectBrowserWallet('metamask', callbacks);
}
async function connectCoinbase(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[45]++;
  cov_1o4scm9yy0().s[171]++;
  return connectBrowserWallet('coinbase', callbacks);
}
async function connectTrustWallet(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[46]++;
  cov_1o4scm9yy0().s[172]++;
  return connectBrowserWallet('trustwallet', callbacks);
}
async function connectTokenPocket(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[47]++;
  cov_1o4scm9yy0().s[173]++;
  return connectBrowserWallet('tokenpocket', callbacks);
}
async function connectWalletConnectV2(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[48]++;
  cov_1o4scm9yy0().s[174]++;
  try {
    // 项目ID从环境变量获取
    const projectId =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[175]++,
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[38][0]++, process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID) ||
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[38][1]++, process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID));
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[176]++;
    if (!projectId) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[39][0]++;
      cov_1o4scm9yy0().s[177]++;
      console.error('WalletConnect项目ID未配置，请检查环境变量 NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID');
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[178]++;
      throw new Error('未配置WalletConnect项目ID');
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[39][1]++;
    }
    // 如果已有连接，先断开
    cov_1o4scm9yy0().s[179]++;
    if (ethereumProvider) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[40][0]++;
      cov_1o4scm9yy0().s[180]++;
      await ethereumProvider.disconnect();
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[181]++;
      ethereumProvider = null;
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[40][1]++;
    }
    // 创建新的EthereumProvider
    cov_1o4scm9yy0().s[182]++;
    ethereumProvider = await EthereumProvider.init({
      projectId,
      showQrModal: true,
      chains: [56],
      optionalChains: [1, 97],
      methods: ['eth_sendTransaction', 'eth_sign', 'personal_sign', 'eth_signTypedData'],
      events: ['chainChanged', 'accountsChanged'],
      qrModalOptions: {
        themeMode: 'dark',
        themeVariables: {
          '--wcm-z-index': '99999999',
          '--wcm-font-family': '"Inter", system-ui, sans-serif',
          '--wcm-background-color': '#1a1a1a',
          '--wcm-accent-color': '#0de5ff',
          '--wcm-text-color': '#ffffff',
          '--wcm-border-radius-master': '12px'
        },
        explorerRecommendedWalletIds: ['c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96', 'fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa', '4622a2b2d6af1c9844944291e5e7351a6aa24cd7b23099efac1b2fd875da31a0'],
        mobileWallets: [{
          id: 'c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96',
          name: 'MetaMask',
          links: {
            native: 'metamask://',
            universal: 'https://metamask.app.link'
          }
        }, {
          id: 'fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa',
          name: 'Coinbase Wallet',
          links: {
            native: 'cbwallet://',
            universal: 'https://go.cb-w.com'
          }
        }],
        desktopWallets: [{
          id: 'c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96',
          name: 'MetaMask',
          links: {
            native: 'metamask://',
            universal: 'https://metamask.io'
          }
        }]
      }
    });
    // 注册事件监听器
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[183]++;
    ethereumProvider.on('connect', info => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[49]++;
      cov_1o4scm9yy0().s[184]++;
      ethereumProvider?.getAccounts().then(accounts => {
        /* istanbul ignore next */
        cov_1o4scm9yy0().f[50]++;
        cov_1o4scm9yy0().s[185]++;
        if (
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[42][0]++, callbacks?.onConnect) &&
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[42][1]++, accounts.length > 0)) {
          /* istanbul ignore next */
          cov_1o4scm9yy0().b[41][0]++;
          cov_1o4scm9yy0().s[186]++;
          callbacks.onConnect(accounts[0], info.chainId);
        } else
        /* istanbul ignore next */
        {
          cov_1o4scm9yy0().b[41][1]++;
        }
      });
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[187]++;
    ethereumProvider.on('disconnect', () => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[51]++;
      cov_1o4scm9yy0().s[188]++;
      if (callbacks?.onDisconnect) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[43][0]++;
        cov_1o4scm9yy0().s[189]++;
        callbacks.onDisconnect();
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[43][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[190]++;
    ethereumProvider.on('accountsChanged', accounts => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[52]++;
      cov_1o4scm9yy0().s[191]++;
      if (callbacks?.onAccountsChanged) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[44][0]++;
        cov_1o4scm9yy0().s[192]++;
        callbacks.onAccountsChanged(accounts);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[44][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[193]++;
    ethereumProvider.on('chainChanged', chainId => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[53]++;
      cov_1o4scm9yy0().s[194]++;
      if (callbacks?.onChainChanged) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[45][0]++;
        cov_1o4scm9yy0().s[195]++;
        callbacks.onChainChanged(chainId);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[45][1]++;
      }
    });
    // 请求连接
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[196]++;
    await ethereumProvider.enable();
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[197]++, await ethereumProvider.getAccounts());
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[198]++;
    if (
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[47][0]++, accounts) &&
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[47][1]++, accounts.length > 0)) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[46][0]++;
      cov_1o4scm9yy0().s[199]++;
      return {
        address: accounts[0],
        chainId: ethereumProvider.chainId
      };
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[46][1]++;
    }
    cov_1o4scm9yy0().s[200]++;
    return null;
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[201]++;
    logger.error('WalletConnect 连接失败', {
      action: 'connectWalletConnectV2',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[202]++;
    return null;
  }
}
async function connectWalletConnect(callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[54]++;
  cov_1o4scm9yy0().s[203]++;
  try {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[204]++;
    // 尝试使用新版连接
    if (process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[48][0]++;
      cov_1o4scm9yy0().s[205]++;
      return connectWalletConnectV2(callbacks);
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[48][1]++;
    }
    // 如果没有项目ID，回退到旧版
    // 如果已有连接，先断开
    cov_1o4scm9yy0().s[206]++;
    if (walletConnectProvider) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[49][0]++;
      cov_1o4scm9yy0().s[207]++;
      await walletConnectProvider.disconnect();
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[208]++;
      walletConnectProvider = null;
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[49][1]++;
    }
    // 创建新的 WalletConnect 提供者
    cov_1o4scm9yy0().s[209]++;
    walletConnectProvider = new WalletConnectProvider({
      rpc: {
        1:
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[50][0]++, process.env.NEXT_PUBLIC_ETH_RPC_URL) ||
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[50][1]++, 'https://mainnet.infura.io/v3/'),
        56:
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[51][0]++, process.env.NEXT_PUBLIC_BSC_RPC_URL) ||
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[51][1]++, 'https://bsc-dataseed.binance.org'),
        97:
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[52][0]++, process.env.NEXT_PUBLIC_BSC_TESTNET_RPC_URL) ||
        /* istanbul ignore next */
        (cov_1o4scm9yy0().b[52][1]++, 'https://data-seed-prebsc-1-s1.binance.org:8545')
      },
      chainId: parseInt(
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[53][0]++, process.env.NEXT_PUBLIC_CHAIN_ID) ||
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[53][1]++, '56'), 10),
      qrcode: true,
      qrcodeModalOptions: {
        mobileLinks: ['metamask', 'trust', 'coinbase', 'tokenpocket'],
        desktopLinks: ['metamask', 'trust', 'coinbase', 'tokenpocket']
      }
    });
    // 注册事件监听器
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[210]++;
    walletConnectProvider.on('connect', info => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[55]++;
      cov_1o4scm9yy0().s[211]++;
      if (
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[55][0]++, callbacks?.onConnect) &&
      /* istanbul ignore next */
      (cov_1o4scm9yy0().b[55][1]++, info.accounts.length > 0)) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[54][0]++;
        cov_1o4scm9yy0().s[212]++;
        callbacks.onConnect(info.accounts[0], info.chainId);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[54][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[213]++;
    walletConnectProvider.on('disconnect', () => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[56]++;
      cov_1o4scm9yy0().s[214]++;
      if (callbacks?.onDisconnect) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[56][0]++;
        cov_1o4scm9yy0().s[215]++;
        callbacks.onDisconnect();
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[56][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[216]++;
    walletConnectProvider.on('accountsChanged', accounts => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[57]++;
      cov_1o4scm9yy0().s[217]++;
      if (callbacks?.onAccountsChanged) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[57][0]++;
        cov_1o4scm9yy0().s[218]++;
        callbacks.onAccountsChanged(accounts);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[57][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[219]++;
    walletConnectProvider.on('chainChanged', chainId => {
      /* istanbul ignore next */
      cov_1o4scm9yy0().f[58]++;
      cov_1o4scm9yy0().s[220]++;
      if (callbacks?.onChainChanged) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[58][0]++;
        cov_1o4scm9yy0().s[221]++;
        callbacks.onChainChanged(chainId);
      } else
      /* istanbul ignore next */
      {
        cov_1o4scm9yy0().b[58][1]++;
      }
    });
    // 请求连接
    const accounts =
    /* istanbul ignore next */
    (cov_1o4scm9yy0().s[222]++, await walletConnectProvider.enable());
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[223]++;
    if (
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[60][0]++, accounts) &&
    /* istanbul ignore next */
    (cov_1o4scm9yy0().b[60][1]++, accounts.length > 0)) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[59][0]++;
      cov_1o4scm9yy0().s[224]++;
      return {
        address: accounts[0],
        chainId: walletConnectProvider.chainId
      };
    } else
    /* istanbul ignore next */
    {
      cov_1o4scm9yy0().b[59][1]++;
    }
    cov_1o4scm9yy0().s[225]++;
    return null;
  } catch (error) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[226]++;
    logger.error('WalletConnect 连接失败', {
      action: 'connectWalletConnect',
      additionalData: {
        error
      }
    });
    /* istanbul ignore next */
    cov_1o4scm9yy0().s[227]++;
    return null;
  }
}
async function connectWalletByType(type, callbacks) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[59]++;
  cov_1o4scm9yy0().s[228]++;
  switch (type) {
    case 'metamask':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[61][0]++;
      cov_1o4scm9yy0().s[229]++;
      return connectMetamask(callbacks);
    case 'coinbase':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[61][1]++;
      cov_1o4scm9yy0().s[230]++;
      return connectCoinbase(callbacks);
    case 'trustwallet':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[61][2]++;
      cov_1o4scm9yy0().s[231]++;
      return connectTrustWallet(callbacks);
    case 'tokenpocket':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[61][3]++;
      cov_1o4scm9yy0().s[232]++;
      return connectTokenPocket(callbacks);
    case 'walletconnect':
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[61][4]++;
      cov_1o4scm9yy0().s[233]++;
      return connectWalletConnect(callbacks);
    default:
      /* istanbul ignore next */
      cov_1o4scm9yy0().b[61][5]++;
      cov_1o4scm9yy0().s[234]++;
      throw new Error(`不支持的钱包类型: ${type}`);
  }
}
function getConnectedWalletType() {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[60]++;
  cov_1o4scm9yy0().s[235]++;
  if (!isBrowser) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[62][0]++;
    cov_1o4scm9yy0().s[236]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[62][1]++;
  }
  cov_1o4scm9yy0().s[237]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[64][0]++, ethereumProvider?.connected) ||
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[64][1]++, walletConnectProvider?.connected)) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[63][0]++;
    cov_1o4scm9yy0().s[238]++;
    return 'walletconnect';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[63][1]++;
  }
  cov_1o4scm9yy0().s[239]++;
  if (!window.ethereum) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[65][0]++;
    cov_1o4scm9yy0().s[240]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[65][1]++;
  }
  cov_1o4scm9yy0().s[241]++;
  if (window.ethereum.isMetaMask) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[66][0]++;
    cov_1o4scm9yy0().s[242]++;
    return 'metamask';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[66][1]++;
  }
  cov_1o4scm9yy0().s[243]++;
  if (window.ethereum.isCoinbaseWallet) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[67][0]++;
    cov_1o4scm9yy0().s[244]++;
    return 'coinbase';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[67][1]++;
  }
  cov_1o4scm9yy0().s[245]++;
  if (window.ethereum.isTrust) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[68][0]++;
    cov_1o4scm9yy0().s[246]++;
    return 'trustwallet';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[68][1]++;
  }
  cov_1o4scm9yy0().s[247]++;
  if (window.ethereum.isTokenPocket) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[69][0]++;
    cov_1o4scm9yy0().s[248]++;
    return 'tokenpocket';
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[69][1]++;
  }
  cov_1o4scm9yy0().s[249]++;
  return null;
}
async function disconnectWallet(walletType) {
  /* istanbul ignore next */
  cov_1o4scm9yy0().f[61]++;
  cov_1o4scm9yy0().s[250]++;
  if (
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[71][0]++, walletType === 'walletconnect') ||
  /* istanbul ignore next */
  (cov_1o4scm9yy0().b[71][1]++, !walletType)) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[70][0]++;
    cov_1o4scm9yy0().s[251]++;
    try {
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[252]++;
      if (ethereumProvider) {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[72][0]++;
        cov_1o4scm9yy0().s[253]++;
        await ethereumProvider.disconnect();
        /* istanbul ignore next */
        cov_1o4scm9yy0().s[254]++;
        ethereumProvider = null;
      } else {
        /* istanbul ignore next */
        cov_1o4scm9yy0().b[72][1]++;
        cov_1o4scm9yy0().s[255]++;
        if (walletConnectProvider) {
          /* istanbul ignore next */
          cov_1o4scm9yy0().b[73][0]++;
          cov_1o4scm9yy0().s[256]++;
          await walletConnectProvider.disconnect();
          /* istanbul ignore next */
          cov_1o4scm9yy0().s[257]++;
          walletConnectProvider = null;
        } else
        /* istanbul ignore next */
        {
          cov_1o4scm9yy0().b[73][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1o4scm9yy0().s[258]++;
      logger.error('断开 WalletConnect 失败', {
        action: 'disconnectWallet',
        additionalData: {
          error
        }
      });
    }
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[70][1]++;
  }
  // 对于浏览器插件钱包，我们可以清除本地存储
  cov_1o4scm9yy0().s[259]++;
  if (isBrowser) {
    /* istanbul ignore next */
    cov_1o4scm9yy0().b[74][0]++;
    cov_1o4scm9yy0().s[260]++;
    localStorage.removeItem('walletconnect');
  } else
  /* istanbul ignore next */
  {
    cov_1o4scm9yy0().b[74][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,