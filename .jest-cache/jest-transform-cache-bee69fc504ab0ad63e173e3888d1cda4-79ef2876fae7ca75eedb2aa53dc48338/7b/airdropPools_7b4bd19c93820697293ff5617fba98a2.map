{"version":3,"names":["cov_z6oiupbo","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","AirdropPoolsDB","getActivePools","data","error","_supabase","supabase","from","select","eq","gte","Date","toISOString","order","ascending","map","mapDbToPool","console","getPoolById","poolId","single","createPool","pool","insert","description","total_reward","totalReward","token_type","tokenType","entry_fee","entryFee","max_participants","maxParticipants","start_date","startDate","end_date","endDate","distribution_date","distributionDate","is_active","isActive","requirements","id","participateInPool","participation","existing","checkError","walletAddress","Error","currentParticipants","flowerBalance","balanceError","available","entryAmount","pool_id","user_id","userId","wallet_address","entry_amount","participated_at","claimed","deductFlowers","incrementPoolParticipants","getUserParticipations","mapDbToParticipation","distributeRewards","participants","participantsError","length","totalEntryAmount","reduce","sum","p","parseFloat","participant","rewardRatio","reward","toFixed","update","claimed_at","distributeSMTokens","distributeFlowers","parseInt","amount","source","related_pool_id","timestamp","rpc","user_wallet","amount_change","transaction_type","log","token","dbRecord","current_participants","getTime","participatedAt","claimedAt"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/database/airdropPools.ts"],"sourcesContent":["/**\n * 小红花空投池数据库操作\n * 管理空投池的创建、参与、奖励分发等操作\n */\n\nimport { supabase } from '@/lib/supabase';\nimport { AirdropPool, AirdropParticipation } from '@/types/global';\n\nexport class AirdropPoolsDB {\n  /**\n   * 获取所有活跃的空投池\n   */\n  static async getActivePools(): Promise<AirdropPool[]> {\n    try {\n      const { data, error } = await supabase\n        .from('airdrop_pools')\n        .select('*')\n        .eq('is_active', true)\n        .gte('end_date', new Date().toISOString())\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      return data?.map(this.mapDbToPool) || [];\n    } catch (error) {\n      console.error('获取空投池失败:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 根据ID获取空投池详情\n   */\n  static async getPoolById(poolId: string): Promise<AirdropPool | null> {\n    try {\n      const { data, error } = await supabase\n        .from('airdrop_pools')\n        .select('*')\n        .eq('id', poolId)\n        .single();\n\n      if (error) throw error;\n\n      return data ? this.mapDbToPool(data) : null;\n    } catch (error) {\n      console.error('获取空投池详情失败:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 创建新的空投池\n   */\n  static async createPool(pool: Omit<AirdropPool, 'id' | 'currentParticipants'>): Promise<string | null> {\n    try {\n      const { data, error } = await supabase\n        .from('airdrop_pools')\n        .insert([{\n          name: pool.name,\n          description: pool.description,\n          total_reward: pool.totalReward,\n          token_type: pool.tokenType,\n          entry_fee: pool.entryFee,\n          max_participants: pool.maxParticipants,\n          start_date: new Date(pool.startDate).toISOString(),\n          end_date: new Date(pool.endDate).toISOString(),\n          distribution_date: new Date(pool.distributionDate).toISOString(),\n          is_active: pool.isActive,\n          requirements: pool.requirements,\n        }])\n        .select('id')\n        .single();\n\n      if (error) throw error;\n\n      return data?.id || null;\n    } catch (error) {\n      console.error('创建空投池失败:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 参与空投池\n   */\n  static async participateInPool(participation: Omit<AirdropParticipation, 'id' | 'participatedAt' | 'reward' | 'claimed' | 'claimedAt'>): Promise<string | null> {\n    try {\n      // 检查用户是否已经参与\n      const { data: existing, error: checkError } = await supabase\n        .from('airdrop_participations')\n        .select('id')\n        .eq('pool_id', participation.poolId)\n        .eq('wallet_address', participation.walletAddress)\n        .single();\n\n      if (existing) {\n        throw new Error('用户已经参与此空投池');\n      }\n\n      // 检查空投池是否还有名额\n      const pool = await this.getPoolById(participation.poolId);\n      if (!pool) {\n        throw new Error('空投池不存在');\n      }\n\n      if (pool.currentParticipants >= pool.maxParticipants) {\n        throw new Error('空投池已满');\n      }\n\n      // 检查用户小红花余额\n      const { data: flowerBalance, error: balanceError } = await supabase\n        .from('flower_balances')\n        .select('available')\n        .eq('wallet_address', participation.walletAddress)\n        .single();\n\n      if (balanceError || !flowerBalance || flowerBalance.available < participation.entryAmount) {\n        throw new Error('小红花余额不足');\n      }\n\n      // 开始事务\n      const { data, error } = await supabase\n        .from('airdrop_participations')\n        .insert([{\n          pool_id: participation.poolId,\n          user_id: participation.userId,\n          wallet_address: participation.walletAddress,\n          entry_amount: participation.entryAmount,\n          participated_at: new Date().toISOString(),\n          claimed: false,\n        }])\n        .select('id')\n        .single();\n\n      if (error) throw error;\n\n      // 扣除用户小红花\n      await this.deductFlowers(participation.walletAddress, participation.entryAmount, participation.poolId);\n\n      // 更新空投池参与人数\n      await this.incrementPoolParticipants(participation.poolId);\n\n      return data?.id || null;\n    } catch (error) {\n      console.error('参与空投池失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 获取用户的参与记录\n   */\n  static async getUserParticipations(walletAddress: string): Promise<AirdropParticipation[]> {\n    try {\n      const { data, error } = await supabase\n        .from('airdrop_participations')\n        .select(`\n          *,\n          airdrop_pools (\n            name,\n            token_type,\n            total_reward\n          )\n        `)\n        .eq('wallet_address', walletAddress)\n        .order('participated_at', { ascending: false });\n\n      if (error) throw error;\n\n      return data?.map(this.mapDbToParticipation) || [];\n    } catch (error) {\n      console.error('获取用户参与记录失败:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 分发空投奖励\n   */\n  static async distributeRewards(poolId: string): Promise<boolean> {\n    try {\n      // 获取空投池信息\n      const pool = await this.getPoolById(poolId);\n      if (!pool) {\n        throw new Error('空投池不存在');\n      }\n\n      // 获取所有参与者\n      const { data: participants, error: participantsError } = await supabase\n        .from('airdrop_participations')\n        .select('*')\n        .eq('pool_id', poolId)\n        .eq('claimed', false);\n\n      if (participantsError) throw participantsError;\n\n      if (!participants || participants.length === 0) {\n        return true; // 没有参与者，直接返回成功\n      }\n\n      // 计算每个参与者的奖励\n      const totalEntryAmount = participants.reduce((sum, p) => sum + p.entry_amount, 0);\n      const totalReward = parseFloat(pool.totalReward);\n\n      for (const participant of participants) {\n        // 按比例分配奖励\n        const rewardRatio = participant.entry_amount / totalEntryAmount;\n        const reward = (totalReward * rewardRatio).toFixed(6);\n\n        // 更新参与记录\n        await supabase\n          .from('airdrop_participations')\n          .update({\n            reward: reward,\n            claimed: true,\n            claimed_at: new Date().toISOString(),\n          })\n          .eq('id', participant.id);\n\n        // 发放奖励\n        if (pool.tokenType === 'SM') {\n          // 发放SM代币（这里应该调用智能合约）\n          await this.distributeSMTokens(participant.wallet_address, reward);\n        } else {\n          // 发放小红花\n          await this.distributeFlowers(participant.wallet_address, parseInt(reward));\n        }\n      }\n\n      // 标记空投池为已分发\n      await supabase\n        .from('airdrop_pools')\n        .update({ is_active: false })\n        .eq('id', poolId);\n\n      return true;\n    } catch (error) {\n      console.error('分发空投奖励失败:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 扣除用户小红花\n   */\n  private static async deductFlowers(walletAddress: string, amount: number, poolId: string): Promise<void> {\n    // 记录小红花交易\n    await supabase\n      .from('flower_transactions')\n      .insert([{\n        wallet_address: walletAddress,\n        type: 'spend',\n        amount: amount,\n        source: 'airdrop',\n        description: `参与空投池`,\n        related_pool_id: poolId,\n        timestamp: new Date().toISOString(),\n      }]);\n\n    // 更新余额\n    await supabase.rpc('update_flower_balance', {\n      user_wallet: walletAddress,\n      amount_change: -amount,\n      transaction_type: 'spend'\n    });\n  }\n\n  /**\n   * 发放小红花奖励\n   */\n  private static async distributeFlowers(walletAddress: string, amount: number): Promise<void> {\n    // 记录小红花交易\n    await supabase\n      .from('flower_transactions')\n      .insert([{\n        wallet_address: walletAddress,\n        type: 'earn',\n        amount: amount,\n        source: 'airdrop',\n        description: `空投池奖励`,\n        timestamp: new Date().toISOString(),\n      }]);\n\n    // 更新余额\n    await supabase.rpc('update_flower_balance', {\n      user_wallet: walletAddress,\n      amount_change: amount,\n      transaction_type: 'earn'\n    });\n  }\n\n  /**\n   * 发放SM代币奖励（模拟）\n   */\n  private static async distributeSMTokens(walletAddress: string, amount: string): Promise<void> {\n    // 这里应该调用智能合约来发放SM代币\n    // 目前只是记录日志\n    console.log(`发放 ${amount} SM代币给 ${walletAddress}`);\n    \n    // 记录交易日志\n    await supabase\n      .from('token_transactions')\n      .insert([{\n        wallet_address: walletAddress,\n        type: 'airdrop',\n        amount: amount,\n        token: 'SM',\n        description: `空投池SM代币奖励`,\n        timestamp: new Date().toISOString(),\n      }]);\n  }\n\n  /**\n   * 增加空投池参与人数\n   */\n  private static async incrementPoolParticipants(poolId: string): Promise<void> {\n    await supabase.rpc('increment_pool_participants', {\n      pool_id: poolId\n    });\n  }\n\n  /**\n   * 数据库记录转换为空投池对象\n   */\n  private static mapDbToPool(dbRecord: any): AirdropPool {\n    return {\n      id: dbRecord.id,\n      name: dbRecord.name,\n      description: dbRecord.description,\n      totalReward: dbRecord.total_reward,\n      tokenType: dbRecord.token_type,\n      entryFee: dbRecord.entry_fee,\n      maxParticipants: dbRecord.max_participants,\n      currentParticipants: dbRecord.current_participants || 0,\n      startDate: new Date(dbRecord.start_date).getTime(),\n      endDate: new Date(dbRecord.end_date).getTime(),\n      distributionDate: new Date(dbRecord.distribution_date).getTime(),\n      isActive: dbRecord.is_active,\n      requirements: dbRecord.requirements,\n    };\n  }\n\n  /**\n   * 数据库记录转换为参与对象\n   */\n  private static mapDbToParticipation(dbRecord: any): AirdropParticipation {\n    return {\n      id: dbRecord.id,\n      poolId: dbRecord.pool_id,\n      userId: dbRecord.user_id,\n      walletAddress: dbRecord.wallet_address,\n      entryAmount: dbRecord.entry_amount,\n      participatedAt: new Date(dbRecord.participated_at).getTime(),\n      reward: dbRecord.reward,\n      claimed: dbRecord.claimed,\n      claimedAt: dbRecord.claimed_at ? new Date(dbRecord.claimed_at).getTime() : undefined,\n    };\n  }\n}\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,acAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAAC,eAAA;IAAA3B,IAAA;EAAA;EAAA,IAAA4B,QAAA,GAAA3B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAyB,QAAA,CAAA7B,IAAA,KAAA6B,QAAA,CAAA7B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA4B,QAAA,CAAA7B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAyB,cAAA,GAAAD,QAAA,CAAA7B,IAAA;EAAA;IAMC;IAAAD,YAAA,YAAAA,CAAA;MAAA,OAAA+B,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAA/B,YAAA;AAAAA,YAAA,GAAAoB,CAAA;;;;;;+BADW;;;;;;WAAAY,cAAA;;;;;gCAHY;AAGlB,MAAMA,cAAA;EACX;;;EAGA,aAAaC,eAAA,EAAyC;IAAA;IAAAjC,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IACpD,IAAI;MACF,MAAM;QAAEc,IAAI;QAAEC;MAAK,CAAE;MAAA;MAAA,CAAAnC,YAAA,GAAAoB,CAAA,OAAG,MAAMgB,SAAA,CAAAC,QAAQ,CACnCC,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,aAAa,MAChBC,GAAG,CAAC,YAAY,IAAIC,IAAA,GAAOC,WAAW,IACtCC,KAAK,CAAC,cAAc;QAAEC,SAAA,EAAW;MAAM;MAAA;MAAA7C,YAAA,GAAAoB,CAAA;MAE1C,IAAIe,KAAA,EAAO;QAAA;QAAAnC,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QAAA,MAAMe,KAAA;MAAA;MAAA;MAAA;QAAAnC,YAAA,GAAAsB,CAAA;MAAA;MAAAtB,YAAA,GAAAoB,CAAA;MAEjB,OAAO,2BAAApB,YAAA,GAAAsB,CAAA,UAAAY,IAAA,EAAMY,GAAA,CAAI,IAAI,CAACC,WAAW;MAAA;MAAA,CAAA/C,YAAA,GAAAsB,CAAA,UAAK,EAAE;IAC1C,EAAE,OAAOa,KAAA,EAAO;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MACd4B,OAAA,CAAQb,KAAK,CAAC,YAAYA,KAAA;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MAC1B,OAAO,EAAE;IACX;EACF;EAEA;;;EAGA,aAAa6B,YAAYC,MAAc,EAA+B;IAAA;IAAAlD,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IACpE,IAAI;MACF,MAAM;QAAEc,IAAI;QAAEC;MAAK,CAAE;MAAA;MAAA,CAAAnC,YAAA,GAAAoB,CAAA,QAAG,MAAMgB,SAAA,CAAAC,QAAQ,CACnCC,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,MAAMU,MAAA,EACTC,MAAM;MAAA;MAAAnD,YAAA,GAAAoB,CAAA;MAET,IAAIe,KAAA,EAAO;QAAA;QAAAnC,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QAAA,MAAMe,KAAA;MAAA;MAAA;MAAA;QAAAnC,YAAA,GAAAsB,CAAA;MAAA;MAAAtB,YAAA,GAAAoB,CAAA;MAEjB,OAAOc,IAAA;MAAA;MAAA,CAAAlC,YAAA,GAAAsB,CAAA,UAAO,IAAI,CAACyB,WAAW,CAACb,IAAA;MAAA;MAAA,CAAAlC,YAAA,GAAAsB,CAAA,UAAQ;IACzC,EAAE,OAAOa,KAAA,EAAO;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MACd4B,OAAA,CAAQb,KAAK,CAAC,cAAcA,KAAA;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MAC5B,OAAO;IACT;EACF;EAEA;;;EAGA,aAAagC,WAAWC,IAAqD,EAA0B;IAAA;IAAArD,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IACrG,IAAI;MACF,MAAM;QAAEc,IAAI;QAAEC;MAAK,CAAE;MAAA;MAAA,CAAAnC,YAAA,GAAAoB,CAAA,QAAG,MAAMgB,SAAA,CAAAC,QAAQ,CACnCC,IAAI,CAAC,iBACLgB,MAAM,CAAC,CAAC;QACPzC,IAAA,EAAMwC,IAAA,CAAKxC,IAAI;QACf0C,WAAA,EAAaF,IAAA,CAAKE,WAAW;QAC7BC,YAAA,EAAcH,IAAA,CAAKI,WAAW;QAC9BC,UAAA,EAAYL,IAAA,CAAKM,SAAS;QAC1BC,SAAA,EAAWP,IAAA,CAAKQ,QAAQ;QACxBC,gBAAA,EAAkBT,IAAA,CAAKU,eAAe;QACtCC,UAAA,EAAY,IAAItB,IAAA,CAAKW,IAAA,CAAKY,SAAS,EAAEtB,WAAW;QAChDuB,QAAA,EAAU,IAAIxB,IAAA,CAAKW,IAAA,CAAKc,OAAO,EAAExB,WAAW;QAC5CyB,iBAAA,EAAmB,IAAI1B,IAAA,CAAKW,IAAA,CAAKgB,gBAAgB,EAAE1B,WAAW;QAC9D2B,SAAA,EAAWjB,IAAA,CAAKkB,QAAQ;QACxBC,YAAA,EAAcnB,IAAA,CAAKmB;MACrB,EAAE,EACDjC,MAAM,CAAC,MACPY,MAAM;MAAA;MAAAnD,YAAA,GAAAoB,CAAA;MAET,IAAIe,KAAA,EAAO;QAAA;QAAAnC,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QAAA,MAAMe,KAAA;MAAA;MAAA;MAAA;QAAAnC,YAAA,GAAAsB,CAAA;MAAA;MAAAtB,YAAA,GAAAoB,CAAA;MAEjB,OAAO,2BAAApB,YAAA,GAAAsB,CAAA,UAAAY,IAAA,EAAMuC,EAAA;MAAA;MAAA,CAAAzE,YAAA,GAAAsB,CAAA,UAAM;IACrB,EAAE,OAAOa,KAAA,EAAO;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MACd4B,OAAA,CAAQb,KAAK,CAAC,YAAYA,KAAA;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MAC1B,OAAO;IACT;EACF;EAEA;;;EAGA,aAAasD,kBAAkBC,aAAuG,EAA0B;IAAA;IAAA3E,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IAC9J,IAAI;MACF;MACA,MAAM;QAAEc,IAAA,EAAM0C,QAAQ;QAAEzC,KAAA,EAAO0C;MAAU,CAAE;MAAA;MAAA,CAAA7E,YAAA,GAAAoB,CAAA,QAAG,MAAMgB,SAAA,CAAAC,QAAQ,CACzDC,IAAI,CAAC,0BACLC,MAAM,CAAC,MACPC,EAAE,CAAC,WAAWmC,aAAA,CAAczB,MAAM,EAClCV,EAAE,CAAC,kBAAkBmC,aAAA,CAAcG,aAAa,EAChD3B,MAAM;MAAA;MAAAnD,YAAA,GAAAoB,CAAA;MAET,IAAIwD,QAAA,EAAU;QAAA;QAAA5E,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QACZ,MAAM,IAAI2D,KAAA,CAAM;MAClB;MAAA;MAAA;QAAA/E,YAAA,GAAAsB,CAAA;MAAA;MAEA;MACA,MAAM+B,IAAA;MAAA;MAAA,CAAArD,YAAA,GAAAoB,CAAA,QAAO,MAAM,IAAI,CAAC6B,WAAW,CAAC0B,aAAA,CAAczB,MAAM;MAAA;MAAAlD,YAAA,GAAAoB,CAAA;MACxD,IAAI,CAACiC,IAAA,EAAM;QAAA;QAAArD,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QACT,MAAM,IAAI2D,KAAA,CAAM;MAClB;MAAA;MAAA;QAAA/E,YAAA,GAAAsB,CAAA;MAAA;MAAAtB,YAAA,GAAAoB,CAAA;MAEA,IAAIiC,IAAA,CAAK2B,mBAAmB,IAAI3B,IAAA,CAAKU,eAAe,EAAE;QAAA;QAAA/D,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QACpD,MAAM,IAAI2D,KAAA,CAAM;MAClB;MAAA;MAAA;QAAA/E,YAAA,GAAAsB,CAAA;MAAA;MAEA;MACA,MAAM;QAAEY,IAAA,EAAM+C,aAAa;QAAE9C,KAAA,EAAO+C;MAAY,CAAE;MAAA;MAAA,CAAAlF,YAAA,GAAAoB,CAAA,QAAG,MAAMgB,SAAA,CAAAC,QAAQ,CAChEC,IAAI,CAAC,mBACLC,MAAM,CAAC,aACPC,EAAE,CAAC,kBAAkBmC,aAAA,CAAcG,aAAa,EAChD3B,MAAM;MAAA;MAAAnD,YAAA,GAAAoB,CAAA;MAET;MAAI;MAAA,CAAApB,YAAA,GAAAsB,CAAA,WAAA4D,YAAA;MAAA;MAAA,CAAAlF,YAAA,GAAAsB,CAAA,WAAgB,CAAC2D,aAAA;MAAA;MAAA,CAAAjF,YAAA,GAAAsB,CAAA,WAAiB2D,aAAA,CAAcE,SAAS,GAAGR,aAAA,CAAcS,WAAW,GAAE;QAAA;QAAApF,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QACzF,MAAM,IAAI2D,KAAA,CAAM;MAClB;MAAA;MAAA;QAAA/E,YAAA,GAAAsB,CAAA;MAAA;MAEA;MACA,MAAM;QAAEY,IAAI;QAAEC;MAAK,CAAE;MAAA;MAAA,CAAAnC,YAAA,GAAAoB,CAAA,QAAG,MAAMgB,SAAA,CAAAC,QAAQ,CACnCC,IAAI,CAAC,0BACLgB,MAAM,CAAC,CAAC;QACP+B,OAAA,EAASV,aAAA,CAAczB,MAAM;QAC7BoC,OAAA,EAASX,aAAA,CAAcY,MAAM;QAC7BC,cAAA,EAAgBb,aAAA,CAAcG,aAAa;QAC3CW,YAAA,EAAcd,aAAA,CAAcS,WAAW;QACvCM,eAAA,EAAiB,IAAIhD,IAAA,GAAOC,WAAW;QACvCgD,OAAA,EAAS;MACX,EAAE,EACDpD,MAAM,CAAC,MACPY,MAAM;MAAA;MAAAnD,YAAA,GAAAoB,CAAA;MAET,IAAIe,KAAA,EAAO;QAAA;QAAAnC,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QAAA,MAAMe,KAAA;MAAA;MAAA;MAAA;QAAAnC,YAAA,GAAAsB,CAAA;MAAA;MAEjB;MAAAtB,YAAA,GAAAoB,CAAA;MACA,MAAM,IAAI,CAACwE,aAAa,CAACjB,aAAA,CAAcG,aAAa,EAAEH,aAAA,CAAcS,WAAW,EAAET,aAAA,CAAczB,MAAM;MAErG;MAAA;MAAAlD,YAAA,GAAAoB,CAAA;MACA,MAAM,IAAI,CAACyE,yBAAyB,CAAClB,aAAA,CAAczB,MAAM;MAAA;MAAAlD,YAAA,GAAAoB,CAAA;MAEzD,OAAO,2BAAApB,YAAA,GAAAsB,CAAA,WAAAY,IAAA,EAAMuC,EAAA;MAAA;MAAA,CAAAzE,YAAA,GAAAsB,CAAA,WAAM;IACrB,EAAE,OAAOa,KAAA,EAAO;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MACd4B,OAAA,CAAQb,KAAK,CAAC,YAAYA,KAAA;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MAC1B,MAAMe,KAAA;IACR;EACF;EAEA;;;EAGA,aAAa2D,sBAAsBhB,aAAqB,EAAmC;IAAA;IAAA9E,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IACzF,IAAI;MACF,MAAM;QAAEc,IAAI;QAAEC;MAAK,CAAE;MAAA;MAAA,CAAAnC,YAAA,GAAAoB,CAAA,QAAG,MAAMgB,SAAA,CAAAC,QAAQ,CACnCC,IAAI,CAAC,0BACLC,MAAM,CAAC;;;;;;;SAOP,EACAC,EAAE,CAAC,kBAAkBsC,aAAA,EACrBlC,KAAK,CAAC,mBAAmB;QAAEC,SAAA,EAAW;MAAM;MAAA;MAAA7C,YAAA,GAAAoB,CAAA;MAE/C,IAAIe,KAAA,EAAO;QAAA;QAAAnC,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QAAA,MAAMe,KAAA;MAAA;MAAA;MAAA;QAAAnC,YAAA,GAAAsB,CAAA;MAAA;MAAAtB,YAAA,GAAAoB,CAAA;MAEjB,OAAO,2BAAApB,YAAA,GAAAsB,CAAA,WAAAY,IAAA,EAAMY,GAAA,CAAI,IAAI,CAACiD,oBAAoB;MAAA;MAAA,CAAA/F,YAAA,GAAAsB,CAAA,WAAK,EAAE;IACnD,EAAE,OAAOa,KAAA,EAAO;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MACd4B,OAAA,CAAQb,KAAK,CAAC,eAAeA,KAAA;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MAC7B,OAAO,EAAE;IACX;EACF;EAEA;;;EAGA,aAAa4E,kBAAkB9C,MAAc,EAAoB;IAAA;IAAAlD,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IAC/D,IAAI;MACF;MACA,MAAMiC,IAAA;MAAA;MAAA,CAAArD,YAAA,GAAAoB,CAAA,QAAO,MAAM,IAAI,CAAC6B,WAAW,CAACC,MAAA;MAAA;MAAAlD,YAAA,GAAAoB,CAAA;MACpC,IAAI,CAACiC,IAAA,EAAM;QAAA;QAAArD,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QACT,MAAM,IAAI2D,KAAA,CAAM;MAClB;MAAA;MAAA;QAAA/E,YAAA,GAAAsB,CAAA;MAAA;MAEA;MACA,MAAM;QAAEY,IAAA,EAAM+D,YAAY;QAAE9D,KAAA,EAAO+D;MAAiB,CAAE;MAAA;MAAA,CAAAlG,YAAA,GAAAoB,CAAA,QAAG,MAAMgB,SAAA,CAAAC,QAAQ,CACpEC,IAAI,CAAC,0BACLC,MAAM,CAAC,KACPC,EAAE,CAAC,WAAWU,MAAA,EACdV,EAAE,CAAC,WAAW;MAAA;MAAAxC,YAAA,GAAAoB,CAAA;MAEjB,IAAI8E,iBAAA,EAAmB;QAAA;QAAAlG,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QAAA,MAAM8E,iBAAA;MAAA;MAAA;MAAA;QAAAlG,YAAA,GAAAsB,CAAA;MAAA;MAAAtB,YAAA,GAAAoB,CAAA;MAE7B;MAAI;MAAA,CAAApB,YAAA,GAAAsB,CAAA,YAAC2E,YAAA;MAAA;MAAA,CAAAjG,YAAA,GAAAsB,CAAA,WAAgB2E,YAAA,CAAaE,MAAM,KAAK,IAAG;QAAA;QAAAnG,YAAA,GAAAsB,CAAA;QAAAtB,YAAA,GAAAoB,CAAA;QAC9C,OAAO,MAAM;MACf;MAAA;MAAA;QAAApB,YAAA,GAAAsB,CAAA;MAAA;MAEA;MACA,MAAM8E,gBAAA;MAAA;MAAA,CAAApG,YAAA,GAAAoB,CAAA,QAAmB6E,YAAA,CAAaI,MAAM,CAAC,CAACC,GAAA,EAAKC,CAAA,KAAM;QAAA;QAAAvG,YAAA,GAAAqB,CAAA;QAAArB,YAAA,GAAAoB,CAAA;QAAA,OAAAkF,GAAA,GAAMC,CAAA,CAAEd,YAAY;MAAZ,CAAY,EAAE;MAC/E,MAAMhC,WAAA;MAAA;MAAA,CAAAzD,YAAA,GAAAoB,CAAA,QAAcoF,UAAA,CAAWnD,IAAA,CAAKI,WAAW;MAAA;MAAAzD,YAAA,GAAAoB,CAAA;MAE/C,KAAK,MAAMqF,WAAA,IAAeR,YAAA,EAAc;QACtC;QACA,MAAMS,WAAA;QAAA;QAAA,CAAA1G,YAAA,GAAAoB,CAAA,QAAcqF,WAAA,CAAYhB,YAAY,GAAGW,gBAAA;QAC/C,MAAMO,MAAA;QAAA;QAAA,CAAA3G,YAAA,GAAAoB,CAAA,QAAS,CAACqC,WAAA,GAAciD,WAAU,EAAGE,OAAO,CAAC;QAEnD;QAAA;QAAA5G,YAAA,GAAAoB,CAAA;QACA,MAAMgB,SAAA,CAAAC,QAAQ,CACXC,IAAI,CAAC,0BACLuE,MAAM,CAAC;UACNF,MAAA,EAAQA,MAAA;UACRhB,OAAA,EAAS;UACTmB,UAAA,EAAY,IAAIpE,IAAA,GAAOC,WAAW;QACpC,GACCH,EAAE,CAAC,MAAMiE,WAAA,CAAYhC,EAAE;QAE1B;QAAA;QAAAzE,YAAA,GAAAoB,CAAA;QACA,IAAIiC,IAAA,CAAKM,SAAS,KAAK,MAAM;UAAA;UAAA3D,YAAA,GAAAsB,CAAA;UAAAtB,YAAA,GAAAoB,CAAA;UAC3B;UACA,MAAM,IAAI,CAAC2F,kBAAkB,CAACN,WAAA,CAAYjB,cAAc,EAAEmB,MAAA;QAC5D,OAAO;UAAA;UAAA3G,YAAA,GAAAsB,CAAA;UAAAtB,YAAA,GAAAoB,CAAA;UACL;UACA,MAAM,IAAI,CAAC4F,iBAAiB,CAACP,WAAA,CAAYjB,cAAc,EAAEyB,QAAA,CAASN,MAAA;QACpE;MACF;MAEA;MAAA;MAAA3G,YAAA,GAAAoB,CAAA;MACA,MAAMgB,SAAA,CAAAC,QAAQ,CACXC,IAAI,CAAC,iBACLuE,MAAM,CAAC;QAAEvC,SAAA,EAAW;MAAM,GAC1B9B,EAAE,CAAC,MAAMU,MAAA;MAAA;MAAAlD,YAAA,GAAAoB,CAAA;MAEZ,OAAO;IACT,EAAE,OAAOe,KAAA,EAAO;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MACd4B,OAAA,CAAQb,KAAK,CAAC,aAAaA,KAAA;MAAA;MAAAnC,YAAA,GAAAoB,CAAA;MAC3B,OAAO;IACT;EACF;EAEA;;;EAGA,aAAqBwE,cAAcd,aAAqB,EAAEoC,MAAc,EAAEhE,MAAc,EAAiB;IAAA;IAAAlD,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IACvG;IACA,MAAMgB,SAAA,CAAAC,QAAQ,CACXC,IAAI,CAAC,uBACLgB,MAAM,CAAC,CAAC;MACPkC,cAAA,EAAgBV,aAAA;MAChB7D,IAAA,EAAM;MACNiG,MAAA,EAAQA,MAAA;MACRC,MAAA,EAAQ;MACR5D,WAAA,EAAa,OAAO;MACpB6D,eAAA,EAAiBlE,MAAA;MACjBmE,SAAA,EAAW,IAAI3E,IAAA,GAAOC,WAAW;IACnC,EAAE;IAEJ;IAAA;IAAA3C,YAAA,GAAAoB,CAAA;IACA,MAAMgB,SAAA,CAAAC,QAAQ,CAACiF,GAAG,CAAC,yBAAyB;MAC1CC,WAAA,EAAazC,aAAA;MACb0C,aAAA,EAAe,CAACN,MAAA;MAChBO,gBAAA,EAAkB;IACpB;EACF;EAEA;;;EAGA,aAAqBT,kBAAkBlC,aAAqB,EAAEoC,MAAc,EAAiB;IAAA;IAAAlH,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IAC3F;IACA,MAAMgB,SAAA,CAAAC,QAAQ,CACXC,IAAI,CAAC,uBACLgB,MAAM,CAAC,CAAC;MACPkC,cAAA,EAAgBV,aAAA;MAChB7D,IAAA,EAAM;MACNiG,MAAA,EAAQA,MAAA;MACRC,MAAA,EAAQ;MACR5D,WAAA,EAAa,OAAO;MACpB8D,SAAA,EAAW,IAAI3E,IAAA,GAAOC,WAAW;IACnC,EAAE;IAEJ;IAAA;IAAA3C,YAAA,GAAAoB,CAAA;IACA,MAAMgB,SAAA,CAAAC,QAAQ,CAACiF,GAAG,CAAC,yBAAyB;MAC1CC,WAAA,EAAazC,aAAA;MACb0C,aAAA,EAAeN,MAAA;MACfO,gBAAA,EAAkB;IACpB;EACF;EAEA;;;EAGA,aAAqBV,mBAAmBjC,aAAqB,EAAEoC,MAAc,EAAiB;IAAA;IAAAlH,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IAC5F;IACA;IACA4B,OAAA,CAAQ0E,GAAG,CAAC,MAAMR,MAAA,UAAgBpC,aAAA,EAAe;IAEjD;IAAA;IAAA9E,YAAA,GAAAoB,CAAA;IACA,MAAMgB,SAAA,CAAAC,QAAQ,CACXC,IAAI,CAAC,sBACLgB,MAAM,CAAC,CAAC;MACPkC,cAAA,EAAgBV,aAAA;MAChB7D,IAAA,EAAM;MACNiG,MAAA,EAAQA,MAAA;MACRS,KAAA,EAAO;MACPpE,WAAA,EAAa,WAAW;MACxB8D,SAAA,EAAW,IAAI3E,IAAA,GAAOC,WAAW;IACnC,EAAE;EACN;EAEA;;;EAGA,aAAqBkD,0BAA0B3C,MAAc,EAAiB;IAAA;IAAAlD,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IAC5E,MAAMgB,SAAA,CAAAC,QAAQ,CAACiF,GAAG,CAAC,+BAA+B;MAChDjC,OAAA,EAASnC;IACX;EACF;EAEA;;;EAGA,OAAeH,YAAY6E,QAAa,EAAe;IAAA;IAAA5H,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IACrD,OAAO;MACLqD,EAAA,EAAImD,QAAA,CAASnD,EAAE;MACf5D,IAAA,EAAM+G,QAAA,CAAS/G,IAAI;MACnB0C,WAAA,EAAaqE,QAAA,CAASrE,WAAW;MACjCE,WAAA,EAAamE,QAAA,CAASpE,YAAY;MAClCG,SAAA,EAAWiE,QAAA,CAASlE,UAAU;MAC9BG,QAAA,EAAU+D,QAAA,CAAShE,SAAS;MAC5BG,eAAA,EAAiB6D,QAAA,CAAS9D,gBAAgB;MAC1CkB,mBAAA;MAAqB;MAAA,CAAAhF,YAAA,GAAAsB,CAAA,WAAAsG,QAAA,CAASC,oBAAoB;MAAA;MAAA,CAAA7H,YAAA,GAAAsB,CAAA,WAAI;MACtD2C,SAAA,EAAW,IAAIvB,IAAA,CAAKkF,QAAA,CAAS5D,UAAU,EAAE8D,OAAO;MAChD3D,OAAA,EAAS,IAAIzB,IAAA,CAAKkF,QAAA,CAAS1D,QAAQ,EAAE4D,OAAO;MAC5CzD,gBAAA,EAAkB,IAAI3B,IAAA,CAAKkF,QAAA,CAASxD,iBAAiB,EAAE0D,OAAO;MAC9DvD,QAAA,EAAUqD,QAAA,CAAStD,SAAS;MAC5BE,YAAA,EAAcoD,QAAA,CAASpD;IACzB;EACF;EAEA;;;EAGA,OAAeuB,qBAAqB6B,QAAa,EAAwB;IAAA;IAAA5H,YAAA,GAAAqB,CAAA;IAAArB,YAAA,GAAAoB,CAAA;IACvE,OAAO;MACLqD,EAAA,EAAImD,QAAA,CAASnD,EAAE;MACfvB,MAAA,EAAQ0E,QAAA,CAASvC,OAAO;MACxBE,MAAA,EAAQqC,QAAA,CAAStC,OAAO;MACxBR,aAAA,EAAe8C,QAAA,CAASpC,cAAc;MACtCJ,WAAA,EAAawC,QAAA,CAASnC,YAAY;MAClCsC,cAAA,EAAgB,IAAIrF,IAAA,CAAKkF,QAAA,CAASlC,eAAe,EAAEoC,OAAO;MAC1DnB,MAAA,EAAQiB,QAAA,CAASjB,MAAM;MACvBhB,OAAA,EAASiC,QAAA,CAASjC,OAAO;MACzBqC,SAAA,EAAWJ,QAAA,CAASd,UAAU;MAAA;MAAA,CAAA9G,YAAA,GAAAsB,CAAA,WAAG,IAAIoB,IAAA,CAAKkF,QAAA,CAASd,UAAU,EAAEgB,OAAO;MAAA;MAAA,CAAA9H,YAAA,GAAAsB,CAAA,WAAKH,SAAA;IAC7E;EACF;AACF","ignoreList":[]}