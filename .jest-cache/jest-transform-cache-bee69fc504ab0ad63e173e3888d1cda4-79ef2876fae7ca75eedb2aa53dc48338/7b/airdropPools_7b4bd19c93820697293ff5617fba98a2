5b2f2245ff0e0091646758151b932cbd
/**
 * 小红花空投池数据库操作
 * 管理空投池的创建、参与、奖励分发等操作
 */"use strict";

/* istanbul ignore next */
function cov_z6oiupbo() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/lib/database/airdropPools.ts";
  var hash = "05df82cb0ba470ad3209a8d5a868a30083388f8a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/lib/database/airdropPools.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "3": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "5": {
        start: {
          line: 20,
          column: 36
        },
        end: {
          line: 22,
          column: 14
        }
      },
      "6": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "7": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "8": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "9": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 45
        }
      },
      "10": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 22
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "12": {
        start: {
          line: 34,
          column: 36
        },
        end: {
          line: 34,
          column: 120
        }
      },
      "13": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 35
        }
      },
      "14": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 35
        }
      },
      "15": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 56
        }
      },
      "16": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 47
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 24
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "19": {
        start: {
          line: 46,
          column: 36
        },
        end: {
          line: 60,
          column: 36
        }
      },
      "20": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 35
        }
      },
      "21": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 35
        }
      },
      "22": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 36
        }
      },
      "23": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 45
        }
      },
      "24": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 24
        }
      },
      "25": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "26": {
        start: {
          line: 73,
          column: 58
        },
        end: {
          line: 73,
          column: 221
        }
      },
      "27": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "28": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 46
        }
      },
      "29": {
        start: {
          line: 78,
          column: 25
        },
        end: {
          line: 78,
          column: 69
        }
      },
      "30": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "31": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 42
        }
      },
      "32": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "33": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 41
        }
      },
      "34": {
        start: {
          line: 86,
          column: 65
        },
        end: {
          line: 86,
          column: 192
        }
      },
      "35": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "36": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "37": {
        start: {
          line: 91,
          column: 36
        },
        end: {
          line: 100,
          column: 36
        }
      },
      "38": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 35
        }
      },
      "39": {
        start: {
          line: 101,
          column: 23
        },
        end: {
          line: 101,
          column: 35
        }
      },
      "40": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 115
        }
      },
      "41": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 71
        }
      },
      "42": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 36
        }
      },
      "43": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 45
        }
      },
      "44": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 24
        }
      },
      "45": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "46": {
        start: {
          line: 116,
          column: 36
        },
        end: {
          line: 125,
          column: 14
        }
      },
      "47": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 35
        }
      },
      "48": {
        start: {
          line: 126,
          column: 23
        },
        end: {
          line: 126,
          column: 35
        }
      },
      "49": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 62
        }
      },
      "50": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 48
        }
      },
      "51": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 22
        }
      },
      "52": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "53": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 138,
          column: 55
        }
      },
      "54": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "55": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 42
        }
      },
      "56": {
        start: {
          line: 143,
          column: 69
        },
        end: {
          line: 143,
          column: 179
        }
      },
      "57": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "58": {
        start: {
          line: 144,
          column: 35
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "59": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "60": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 28
        }
      },
      "61": {
        start: {
          line: 149,
          column: 37
        },
        end: {
          line: 149,
          column: 91
        }
      },
      "62": {
        start: {
          line: 149,
          column: 67
        },
        end: {
          line: 149,
          column: 87
        }
      },
      "63": {
        start: {
          line: 150,
          column: 32
        },
        end: {
          line: 150,
          column: 60
        }
      },
      "64": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "65": {
        start: {
          line: 153,
          column: 36
        },
        end: {
          line: 153,
          column: 79
        }
      },
      "66": {
        start: {
          line: 154,
          column: 31
        },
        end: {
          line: 154,
          column: 69
        }
      },
      "67": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 160,
          column: 44
        }
      },
      "68": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 168,
          column: 17
        }
      },
      "69": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 86
        }
      },
      "70": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 167,
          column: 95
        }
      },
      "71": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 173,
          column: 32
        }
      },
      "72": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 24
        }
      },
      "73": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 46
        }
      },
      "74": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 25
        }
      },
      "75": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "76": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "77": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 215,
          column: 11
        }
      },
      "78": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "79": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 59
        }
      },
      "80": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 239,
          column: 11
        }
      },
      "81": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      },
      "82": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 265,
          column: 10
        }
      },
      "83": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 280,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 18,
            column: 7
          }
        },
        loc: {
          start: {
            line: 18,
            column: 36
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 32,
            column: 7
          }
        },
        loc: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 6
          },
          end: {
            line: 44,
            column: 7
          }
        },
        loc: {
          start: {
            line: 44,
            column: 36
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        },
        loc: {
          start: {
            line: 70,
            column: 52
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 70
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 114,
            column: 7
          }
        },
        loc: {
          start: {
            line: 114,
            column: 56
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 114
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 135,
            column: 7
          }
        },
        loc: {
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 135
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 149,
            column: 57
          },
          end: {
            line: 149,
            column: 58
          }
        },
        loc: {
          start: {
            line: 149,
            column: 67
          },
          end: {
            line: 149,
            column: 87
          }
        },
        line: 149
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        },
        loc: {
          start: {
            line: 182,
            column: 64
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 182
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 204,
            column: 6
          },
          end: {
            line: 204,
            column: 7
          }
        },
        loc: {
          start: {
            line: 204,
            column: 60
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 204
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 225,
            column: 6
          },
          end: {
            line: 225,
            column: 7
          }
        },
        loc: {
          start: {
            line: 225,
            column: 61
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 225
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 243,
            column: 6
          },
          end: {
            line: 243,
            column: 7
          }
        },
        loc: {
          start: {
            line: 243,
            column: 53
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 243
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 250,
            column: 6
          },
          end: {
            line: 250,
            column: 7
          }
        },
        loc: {
          start: {
            line: 250,
            column: 35
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 250
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 269,
            column: 6
          },
          end: {
            line: 269,
            column: 7
          }
        },
        loc: {
          start: {
            line: 269,
            column: 44
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 269
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 46
          }
        }, {
          start: {
            line: 24,
            column: 50
          },
          end: {
            line: 24,
            column: 52
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 48
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 55
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 62,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 62,
            column: 27
          }
        }, {
          start: {
            line: 62,
            column: 31
          },
          end: {
            line: 62,
            column: 35
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 87,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 87,
            column: 28
          }
        }, {
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 46
          }
        }, {
          start: {
            line: 87,
            column: 50
          },
          end: {
            line: 87,
            column: 101
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "12": {
        loc: {
          start: {
            line: 106,
            column: 19
          },
          end: {
            line: 106,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 19
          },
          end: {
            line: 106,
            column: 27
          }
        }, {
          start: {
            line: 106,
            column: 31
          },
          end: {
            line: 106,
            column: 35
          }
        }],
        line: 106
      },
      "13": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 126,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 126,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "14": {
        loc: {
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 55
          }
        }, {
          start: {
            line: 127,
            column: 59
          },
          end: {
            line: 127,
            column: 61
          }
        }],
        line: 127
      },
      "15": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "16": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 144,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 144,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "17": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "18": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 29
          }
        }, {
          start: {
            line: 145,
            column: 33
          },
          end: {
            line: 145,
            column: 58
          }
        }],
        line: 145
      },
      "19": {
        loc: {
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 168,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 168,
            column: 17
          }
        }, {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 168,
            column: 17
          }
        }],
        line: 162
      },
      "20": {
        loc: {
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 62
          }
        }, {
          start: {
            line: 259,
            column: 66
          },
          end: {
            line: 259,
            column: 67
          }
        }],
        line: 259
      },
      "21": {
        loc: {
          start: {
            line: 279,
            column: 23
          },
          end: {
            line: 279,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 279,
            column: 45
          },
          end: {
            line: 279,
            column: 84
          }
        }, {
          start: {
            line: 279,
            column: 87
          },
          end: {
            line: 279,
            column: 96
          }
        }],
        line: 279
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/lib/database/airdropPools.ts"],
      sourcesContent: ["/**\n * \u5C0F\u7EA2\u82B1\u7A7A\u6295\u6C60\u6570\u636E\u5E93\u64CD\u4F5C\n * \u7BA1\u7406\u7A7A\u6295\u6C60\u7684\u521B\u5EFA\u3001\u53C2\u4E0E\u3001\u5956\u52B1\u5206\u53D1\u7B49\u64CD\u4F5C\n */\n\nimport { supabase } from '@/lib/supabase';\nimport { AirdropPool, AirdropParticipation } from '@/types/global';\n\nexport class AirdropPoolsDB {\n  /**\n   * \u83B7\u53D6\u6240\u6709\u6D3B\u8DC3\u7684\u7A7A\u6295\u6C60\n   */\n  static async getActivePools(): Promise<AirdropPool[]> {\n    try {\n      const { data, error } = await supabase\n        .from('airdrop_pools')\n        .select('*')\n        .eq('is_active', true)\n        .gte('end_date', new Date().toISOString())\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      return data?.map(this.mapDbToPool) || [];\n    } catch (error) {\n      console.error('\u83B7\u53D6\u7A7A\u6295\u6C60\u5931\u8D25:', error);\n      return [];\n    }\n  }\n\n  /**\n   * \u6839\u636EID\u83B7\u53D6\u7A7A\u6295\u6C60\u8BE6\u60C5\n   */\n  static async getPoolById(poolId: string): Promise<AirdropPool | null> {\n    try {\n      const { data, error } = await supabase\n        .from('airdrop_pools')\n        .select('*')\n        .eq('id', poolId)\n        .single();\n\n      if (error) throw error;\n\n      return data ? this.mapDbToPool(data) : null;\n    } catch (error) {\n      console.error('\u83B7\u53D6\u7A7A\u6295\u6C60\u8BE6\u60C5\u5931\u8D25:', error);\n      return null;\n    }\n  }\n\n  /**\n   * \u521B\u5EFA\u65B0\u7684\u7A7A\u6295\u6C60\n   */\n  static async createPool(pool: Omit<AirdropPool, 'id' | 'currentParticipants'>): Promise<string | null> {\n    try {\n      const { data, error } = await supabase\n        .from('airdrop_pools')\n        .insert([{\n          name: pool.name,\n          description: pool.description,\n          total_reward: pool.totalReward,\n          token_type: pool.tokenType,\n          entry_fee: pool.entryFee,\n          max_participants: pool.maxParticipants,\n          start_date: new Date(pool.startDate).toISOString(),\n          end_date: new Date(pool.endDate).toISOString(),\n          distribution_date: new Date(pool.distributionDate).toISOString(),\n          is_active: pool.isActive,\n          requirements: pool.requirements,\n        }])\n        .select('id')\n        .single();\n\n      if (error) throw error;\n\n      return data?.id || null;\n    } catch (error) {\n      console.error('\u521B\u5EFA\u7A7A\u6295\u6C60\u5931\u8D25:', error);\n      return null;\n    }\n  }\n\n  /**\n   * \u53C2\u4E0E\u7A7A\u6295\u6C60\n   */\n  static async participateInPool(participation: Omit<AirdropParticipation, 'id' | 'participatedAt' | 'reward' | 'claimed' | 'claimedAt'>): Promise<string | null> {\n    try {\n      // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5DF2\u7ECF\u53C2\u4E0E\n      const { data: existing, error: checkError } = await supabase\n        .from('airdrop_participations')\n        .select('id')\n        .eq('pool_id', participation.poolId)\n        .eq('wallet_address', participation.walletAddress)\n        .single();\n\n      if (existing) {\n        throw new Error('\u7528\u6237\u5DF2\u7ECF\u53C2\u4E0E\u6B64\u7A7A\u6295\u6C60');\n      }\n\n      // \u68C0\u67E5\u7A7A\u6295\u6C60\u662F\u5426\u8FD8\u6709\u540D\u989D\n      const pool = await this.getPoolById(participation.poolId);\n      if (!pool) {\n        throw new Error('\u7A7A\u6295\u6C60\u4E0D\u5B58\u5728');\n      }\n\n      if (pool.currentParticipants >= pool.maxParticipants) {\n        throw new Error('\u7A7A\u6295\u6C60\u5DF2\u6EE1');\n      }\n\n      // \u68C0\u67E5\u7528\u6237\u5C0F\u7EA2\u82B1\u4F59\u989D\n      const { data: flowerBalance, error: balanceError } = await supabase\n        .from('flower_balances')\n        .select('available')\n        .eq('wallet_address', participation.walletAddress)\n        .single();\n\n      if (balanceError || !flowerBalance || flowerBalance.available < participation.entryAmount) {\n        throw new Error('\u5C0F\u7EA2\u82B1\u4F59\u989D\u4E0D\u8DB3');\n      }\n\n      // \u5F00\u59CB\u4E8B\u52A1\n      const { data, error } = await supabase\n        .from('airdrop_participations')\n        .insert([{\n          pool_id: participation.poolId,\n          user_id: participation.userId,\n          wallet_address: participation.walletAddress,\n          entry_amount: participation.entryAmount,\n          participated_at: new Date().toISOString(),\n          claimed: false,\n        }])\n        .select('id')\n        .single();\n\n      if (error) throw error;\n\n      // \u6263\u9664\u7528\u6237\u5C0F\u7EA2\u82B1\n      await this.deductFlowers(participation.walletAddress, participation.entryAmount, participation.poolId);\n\n      // \u66F4\u65B0\u7A7A\u6295\u6C60\u53C2\u4E0E\u4EBA\u6570\n      await this.incrementPoolParticipants(participation.poolId);\n\n      return data?.id || null;\n    } catch (error) {\n      console.error('\u53C2\u4E0E\u7A7A\u6295\u6C60\u5931\u8D25:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u7684\u53C2\u4E0E\u8BB0\u5F55\n   */\n  static async getUserParticipations(walletAddress: string): Promise<AirdropParticipation[]> {\n    try {\n      const { data, error } = await supabase\n        .from('airdrop_participations')\n        .select(`\n          *,\n          airdrop_pools (\n            name,\n            token_type,\n            total_reward\n          )\n        `)\n        .eq('wallet_address', walletAddress)\n        .order('participated_at', { ascending: false });\n\n      if (error) throw error;\n\n      return data?.map(this.mapDbToParticipation) || [];\n    } catch (error) {\n      console.error('\u83B7\u53D6\u7528\u6237\u53C2\u4E0E\u8BB0\u5F55\u5931\u8D25:', error);\n      return [];\n    }\n  }\n\n  /**\n   * \u5206\u53D1\u7A7A\u6295\u5956\u52B1\n   */\n  static async distributeRewards(poolId: string): Promise<boolean> {\n    try {\n      // \u83B7\u53D6\u7A7A\u6295\u6C60\u4FE1\u606F\n      const pool = await this.getPoolById(poolId);\n      if (!pool) {\n        throw new Error('\u7A7A\u6295\u6C60\u4E0D\u5B58\u5728');\n      }\n\n      // \u83B7\u53D6\u6240\u6709\u53C2\u4E0E\u8005\n      const { data: participants, error: participantsError } = await supabase\n        .from('airdrop_participations')\n        .select('*')\n        .eq('pool_id', poolId)\n        .eq('claimed', false);\n\n      if (participantsError) throw participantsError;\n\n      if (!participants || participants.length === 0) {\n        return true; // \u6CA1\u6709\u53C2\u4E0E\u8005\uFF0C\u76F4\u63A5\u8FD4\u56DE\u6210\u529F\n      }\n\n      // \u8BA1\u7B97\u6BCF\u4E2A\u53C2\u4E0E\u8005\u7684\u5956\u52B1\n      const totalEntryAmount = participants.reduce((sum, p) => sum + p.entry_amount, 0);\n      const totalReward = parseFloat(pool.totalReward);\n\n      for (const participant of participants) {\n        // \u6309\u6BD4\u4F8B\u5206\u914D\u5956\u52B1\n        const rewardRatio = participant.entry_amount / totalEntryAmount;\n        const reward = (totalReward * rewardRatio).toFixed(6);\n\n        // \u66F4\u65B0\u53C2\u4E0E\u8BB0\u5F55\n        await supabase\n          .from('airdrop_participations')\n          .update({\n            reward: reward,\n            claimed: true,\n            claimed_at: new Date().toISOString(),\n          })\n          .eq('id', participant.id);\n\n        // \u53D1\u653E\u5956\u52B1\n        if (pool.tokenType === 'SM') {\n          // \u53D1\u653ESM\u4EE3\u5E01\uFF08\u8FD9\u91CC\u5E94\u8BE5\u8C03\u7528\u667A\u80FD\u5408\u7EA6\uFF09\n          await this.distributeSMTokens(participant.wallet_address, reward);\n        } else {\n          // \u53D1\u653E\u5C0F\u7EA2\u82B1\n          await this.distributeFlowers(participant.wallet_address, parseInt(reward));\n        }\n      }\n\n      // \u6807\u8BB0\u7A7A\u6295\u6C60\u4E3A\u5DF2\u5206\u53D1\n      await supabase\n        .from('airdrop_pools')\n        .update({ is_active: false })\n        .eq('id', poolId);\n\n      return true;\n    } catch (error) {\n      console.error('\u5206\u53D1\u7A7A\u6295\u5956\u52B1\u5931\u8D25:', error);\n      return false;\n    }\n  }\n\n  /**\n   * \u6263\u9664\u7528\u6237\u5C0F\u7EA2\u82B1\n   */\n  private static async deductFlowers(walletAddress: string, amount: number, poolId: string): Promise<void> {\n    // \u8BB0\u5F55\u5C0F\u7EA2\u82B1\u4EA4\u6613\n    await supabase\n      .from('flower_transactions')\n      .insert([{\n        wallet_address: walletAddress,\n        type: 'spend',\n        amount: amount,\n        source: 'airdrop',\n        description: `\u53C2\u4E0E\u7A7A\u6295\u6C60`,\n        related_pool_id: poolId,\n        timestamp: new Date().toISOString(),\n      }]);\n\n    // \u66F4\u65B0\u4F59\u989D\n    await supabase.rpc('update_flower_balance', {\n      user_wallet: walletAddress,\n      amount_change: -amount,\n      transaction_type: 'spend'\n    });\n  }\n\n  /**\n   * \u53D1\u653E\u5C0F\u7EA2\u82B1\u5956\u52B1\n   */\n  private static async distributeFlowers(walletAddress: string, amount: number): Promise<void> {\n    // \u8BB0\u5F55\u5C0F\u7EA2\u82B1\u4EA4\u6613\n    await supabase\n      .from('flower_transactions')\n      .insert([{\n        wallet_address: walletAddress,\n        type: 'earn',\n        amount: amount,\n        source: 'airdrop',\n        description: `\u7A7A\u6295\u6C60\u5956\u52B1`,\n        timestamp: new Date().toISOString(),\n      }]);\n\n    // \u66F4\u65B0\u4F59\u989D\n    await supabase.rpc('update_flower_balance', {\n      user_wallet: walletAddress,\n      amount_change: amount,\n      transaction_type: 'earn'\n    });\n  }\n\n  /**\n   * \u53D1\u653ESM\u4EE3\u5E01\u5956\u52B1\uFF08\u6A21\u62DF\uFF09\n   */\n  private static async distributeSMTokens(walletAddress: string, amount: string): Promise<void> {\n    // \u8FD9\u91CC\u5E94\u8BE5\u8C03\u7528\u667A\u80FD\u5408\u7EA6\u6765\u53D1\u653ESM\u4EE3\u5E01\n    // \u76EE\u524D\u53EA\u662F\u8BB0\u5F55\u65E5\u5FD7\n    console.log(`\u53D1\u653E ${amount} SM\u4EE3\u5E01\u7ED9 ${walletAddress}`);\n    \n    // \u8BB0\u5F55\u4EA4\u6613\u65E5\u5FD7\n    await supabase\n      .from('token_transactions')\n      .insert([{\n        wallet_address: walletAddress,\n        type: 'airdrop',\n        amount: amount,\n        token: 'SM',\n        description: `\u7A7A\u6295\u6C60SM\u4EE3\u5E01\u5956\u52B1`,\n        timestamp: new Date().toISOString(),\n      }]);\n  }\n\n  /**\n   * \u589E\u52A0\u7A7A\u6295\u6C60\u53C2\u4E0E\u4EBA\u6570\n   */\n  private static async incrementPoolParticipants(poolId: string): Promise<void> {\n    await supabase.rpc('increment_pool_participants', {\n      pool_id: poolId\n    });\n  }\n\n  /**\n   * \u6570\u636E\u5E93\u8BB0\u5F55\u8F6C\u6362\u4E3A\u7A7A\u6295\u6C60\u5BF9\u8C61\n   */\n  private static mapDbToPool(dbRecord: any): AirdropPool {\n    return {\n      id: dbRecord.id,\n      name: dbRecord.name,\n      description: dbRecord.description,\n      totalReward: dbRecord.total_reward,\n      tokenType: dbRecord.token_type,\n      entryFee: dbRecord.entry_fee,\n      maxParticipants: dbRecord.max_participants,\n      currentParticipants: dbRecord.current_participants || 0,\n      startDate: new Date(dbRecord.start_date).getTime(),\n      endDate: new Date(dbRecord.end_date).getTime(),\n      distributionDate: new Date(dbRecord.distribution_date).getTime(),\n      isActive: dbRecord.is_active,\n      requirements: dbRecord.requirements,\n    };\n  }\n\n  /**\n   * \u6570\u636E\u5E93\u8BB0\u5F55\u8F6C\u6362\u4E3A\u53C2\u4E0E\u5BF9\u8C61\n   */\n  private static mapDbToParticipation(dbRecord: any): AirdropParticipation {\n    return {\n      id: dbRecord.id,\n      poolId: dbRecord.pool_id,\n      userId: dbRecord.user_id,\n      walletAddress: dbRecord.wallet_address,\n      entryAmount: dbRecord.entry_amount,\n      participatedAt: new Date(dbRecord.participated_at).getTime(),\n      reward: dbRecord.reward,\n      claimed: dbRecord.claimed,\n      claimedAt: dbRecord.claimed_at ? new Date(dbRecord.claimed_at).getTime() : undefined,\n    };\n  }\n}\n"],
      names: ["AirdropPoolsDB", "getActivePools", "data", "error", "supabase", "from", "select", "eq", "gte", "Date", "toISOString", "order", "ascending", "map", "mapDbToPool", "console", "getPoolById", "poolId", "single", "createPool", "pool", "insert", "name", "description", "total_reward", "totalReward", "token_type", "tokenType", "entry_fee", "entryFee", "max_participants", "maxParticipants", "start_date", "startDate", "end_date", "endDate", "distribution_date", "distributionDate", "is_active", "isActive", "requirements", "id", "participateInPool", "participation", "existing", "checkError", "walletAddress", "Error", "currentParticipants", "flowerBalance", "balanceError", "available", "entryAmount", "pool_id", "user_id", "userId", "wallet_address", "entry_amount", "participated_at", "claimed", "deductFlowers", "incrementPoolParticipants", "getUserParticipations", "mapDbToParticipation", "distributeRewards", "participants", "participantsError", "length", "totalEntryAmount", "reduce", "sum", "p", "parseFloat", "participant", "rewardRatio", "reward", "toFixed", "update", "claimed_at", "distributeSMTokens", "distributeFlowers", "parseInt", "amount", "type", "source", "related_pool_id", "timestamp", "rpc", "user_wallet", "amount_change", "transaction_type", "log", "token", "dbRecord", "current_participants", "getTime", "participatedAt", "claimedAt", "undefined"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "05df82cb0ba470ad3209a8d5a868a30083388f8a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_z6oiupbo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_z6oiupbo();
cov_z6oiupbo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_z6oiupbo().s[1]++;
Object.defineProperty(exports, "AirdropPoolsDB", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_z6oiupbo().f[0]++;
    cov_z6oiupbo().s[2]++;
    return AirdropPoolsDB;
  }
});
const _supabase =
/* istanbul ignore next */
(cov_z6oiupbo().s[3]++, require("../supabase"));
class AirdropPoolsDB {
  /**
  * 获取所有活跃的空投池
  */
  static async getActivePools() {
    /* istanbul ignore next */
    cov_z6oiupbo().f[1]++;
    cov_z6oiupbo().s[4]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[5]++, await _supabase.supabase.from('airdrop_pools').select('*').eq('is_active', true).gte('end_date', new Date().toISOString()).order('created_at', {
        ascending: false
      }));
      /* istanbul ignore next */
      cov_z6oiupbo().s[6]++;
      if (error) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[0][0]++;
        cov_z6oiupbo().s[7]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[0][1]++;
      }
      cov_z6oiupbo().s[8]++;
      return /* istanbul ignore next */(cov_z6oiupbo().b[1][0]++, data?.map(this.mapDbToPool)) ||
      /* istanbul ignore next */
      (cov_z6oiupbo().b[1][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_z6oiupbo().s[9]++;
      console.error('获取空投池失败:', error);
      /* istanbul ignore next */
      cov_z6oiupbo().s[10]++;
      return [];
    }
  }
  /**
  * 根据ID获取空投池详情
  */
  static async getPoolById(poolId) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[2]++;
    cov_z6oiupbo().s[11]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[12]++, await _supabase.supabase.from('airdrop_pools').select('*').eq('id', poolId).single());
      /* istanbul ignore next */
      cov_z6oiupbo().s[13]++;
      if (error) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[2][0]++;
        cov_z6oiupbo().s[14]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[2][1]++;
      }
      cov_z6oiupbo().s[15]++;
      return data ?
      /* istanbul ignore next */
      (cov_z6oiupbo().b[3][0]++, this.mapDbToPool(data)) :
      /* istanbul ignore next */
      (cov_z6oiupbo().b[3][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_z6oiupbo().s[16]++;
      console.error('获取空投池详情失败:', error);
      /* istanbul ignore next */
      cov_z6oiupbo().s[17]++;
      return null;
    }
  }
  /**
  * 创建新的空投池
  */
  static async createPool(pool) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[3]++;
    cov_z6oiupbo().s[18]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[19]++, await _supabase.supabase.from('airdrop_pools').insert([{
        name: pool.name,
        description: pool.description,
        total_reward: pool.totalReward,
        token_type: pool.tokenType,
        entry_fee: pool.entryFee,
        max_participants: pool.maxParticipants,
        start_date: new Date(pool.startDate).toISOString(),
        end_date: new Date(pool.endDate).toISOString(),
        distribution_date: new Date(pool.distributionDate).toISOString(),
        is_active: pool.isActive,
        requirements: pool.requirements
      }]).select('id').single());
      /* istanbul ignore next */
      cov_z6oiupbo().s[20]++;
      if (error) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[4][0]++;
        cov_z6oiupbo().s[21]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[4][1]++;
      }
      cov_z6oiupbo().s[22]++;
      return /* istanbul ignore next */(cov_z6oiupbo().b[5][0]++, data?.id) ||
      /* istanbul ignore next */
      (cov_z6oiupbo().b[5][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_z6oiupbo().s[23]++;
      console.error('创建空投池失败:', error);
      /* istanbul ignore next */
      cov_z6oiupbo().s[24]++;
      return null;
    }
  }
  /**
  * 参与空投池
  */
  static async participateInPool(participation) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[4]++;
    cov_z6oiupbo().s[25]++;
    try {
      // 检查用户是否已经参与
      const {
        data: existing,
        error: checkError
      } =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[26]++, await _supabase.supabase.from('airdrop_participations').select('id').eq('pool_id', participation.poolId).eq('wallet_address', participation.walletAddress).single());
      /* istanbul ignore next */
      cov_z6oiupbo().s[27]++;
      if (existing) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[6][0]++;
        cov_z6oiupbo().s[28]++;
        throw new Error('用户已经参与此空投池');
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[6][1]++;
      }
      // 检查空投池是否还有名额
      const pool =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[29]++, await this.getPoolById(participation.poolId));
      /* istanbul ignore next */
      cov_z6oiupbo().s[30]++;
      if (!pool) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[7][0]++;
        cov_z6oiupbo().s[31]++;
        throw new Error('空投池不存在');
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[7][1]++;
      }
      cov_z6oiupbo().s[32]++;
      if (pool.currentParticipants >= pool.maxParticipants) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[8][0]++;
        cov_z6oiupbo().s[33]++;
        throw new Error('空投池已满');
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[8][1]++;
      }
      // 检查用户小红花余额
      const {
        data: flowerBalance,
        error: balanceError
      } =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[34]++, await _supabase.supabase.from('flower_balances').select('available').eq('wallet_address', participation.walletAddress).single());
      /* istanbul ignore next */
      cov_z6oiupbo().s[35]++;
      if (
      /* istanbul ignore next */
      (cov_z6oiupbo().b[10][0]++, balanceError) ||
      /* istanbul ignore next */
      (cov_z6oiupbo().b[10][1]++, !flowerBalance) ||
      /* istanbul ignore next */
      (cov_z6oiupbo().b[10][2]++, flowerBalance.available < participation.entryAmount)) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[9][0]++;
        cov_z6oiupbo().s[36]++;
        throw new Error('小红花余额不足');
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[9][1]++;
      }
      // 开始事务
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[37]++, await _supabase.supabase.from('airdrop_participations').insert([{
        pool_id: participation.poolId,
        user_id: participation.userId,
        wallet_address: participation.walletAddress,
        entry_amount: participation.entryAmount,
        participated_at: new Date().toISOString(),
        claimed: false
      }]).select('id').single());
      /* istanbul ignore next */
      cov_z6oiupbo().s[38]++;
      if (error) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[11][0]++;
        cov_z6oiupbo().s[39]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[11][1]++;
      }
      // 扣除用户小红花
      cov_z6oiupbo().s[40]++;
      await this.deductFlowers(participation.walletAddress, participation.entryAmount, participation.poolId);
      // 更新空投池参与人数
      /* istanbul ignore next */
      cov_z6oiupbo().s[41]++;
      await this.incrementPoolParticipants(participation.poolId);
      /* istanbul ignore next */
      cov_z6oiupbo().s[42]++;
      return /* istanbul ignore next */(cov_z6oiupbo().b[12][0]++, data?.id) ||
      /* istanbul ignore next */
      (cov_z6oiupbo().b[12][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_z6oiupbo().s[43]++;
      console.error('参与空投池失败:', error);
      /* istanbul ignore next */
      cov_z6oiupbo().s[44]++;
      throw error;
    }
  }
  /**
  * 获取用户的参与记录
  */
  static async getUserParticipations(walletAddress) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[5]++;
    cov_z6oiupbo().s[45]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[46]++, await _supabase.supabase.from('airdrop_participations').select(`
          *,
          airdrop_pools (
            name,
            token_type,
            total_reward
          )
        `).eq('wallet_address', walletAddress).order('participated_at', {
        ascending: false
      }));
      /* istanbul ignore next */
      cov_z6oiupbo().s[47]++;
      if (error) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[13][0]++;
        cov_z6oiupbo().s[48]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[13][1]++;
      }
      cov_z6oiupbo().s[49]++;
      return /* istanbul ignore next */(cov_z6oiupbo().b[14][0]++, data?.map(this.mapDbToParticipation)) ||
      /* istanbul ignore next */
      (cov_z6oiupbo().b[14][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_z6oiupbo().s[50]++;
      console.error('获取用户参与记录失败:', error);
      /* istanbul ignore next */
      cov_z6oiupbo().s[51]++;
      return [];
    }
  }
  /**
  * 分发空投奖励
  */
  static async distributeRewards(poolId) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[6]++;
    cov_z6oiupbo().s[52]++;
    try {
      // 获取空投池信息
      const pool =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[53]++, await this.getPoolById(poolId));
      /* istanbul ignore next */
      cov_z6oiupbo().s[54]++;
      if (!pool) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[15][0]++;
        cov_z6oiupbo().s[55]++;
        throw new Error('空投池不存在');
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[15][1]++;
      }
      // 获取所有参与者
      const {
        data: participants,
        error: participantsError
      } =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[56]++, await _supabase.supabase.from('airdrop_participations').select('*').eq('pool_id', poolId).eq('claimed', false));
      /* istanbul ignore next */
      cov_z6oiupbo().s[57]++;
      if (participantsError) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[16][0]++;
        cov_z6oiupbo().s[58]++;
        throw participantsError;
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[16][1]++;
      }
      cov_z6oiupbo().s[59]++;
      if (
      /* istanbul ignore next */
      (cov_z6oiupbo().b[18][0]++, !participants) ||
      /* istanbul ignore next */
      (cov_z6oiupbo().b[18][1]++, participants.length === 0)) {
        /* istanbul ignore next */
        cov_z6oiupbo().b[17][0]++;
        cov_z6oiupbo().s[60]++;
        return true; // 没有参与者，直接返回成功
      } else
      /* istanbul ignore next */
      {
        cov_z6oiupbo().b[17][1]++;
      }
      // 计算每个参与者的奖励
      const totalEntryAmount =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[61]++, participants.reduce((sum, p) => {
        /* istanbul ignore next */
        cov_z6oiupbo().f[7]++;
        cov_z6oiupbo().s[62]++;
        return sum + p.entry_amount;
      }, 0));
      const totalReward =
      /* istanbul ignore next */
      (cov_z6oiupbo().s[63]++, parseFloat(pool.totalReward));
      /* istanbul ignore next */
      cov_z6oiupbo().s[64]++;
      for (const participant of participants) {
        // 按比例分配奖励
        const rewardRatio =
        /* istanbul ignore next */
        (cov_z6oiupbo().s[65]++, participant.entry_amount / totalEntryAmount);
        const reward =
        /* istanbul ignore next */
        (cov_z6oiupbo().s[66]++, (totalReward * rewardRatio).toFixed(6));
        // 更新参与记录
        /* istanbul ignore next */
        cov_z6oiupbo().s[67]++;
        await _supabase.supabase.from('airdrop_participations').update({
          reward: reward,
          claimed: true,
          claimed_at: new Date().toISOString()
        }).eq('id', participant.id);
        // 发放奖励
        /* istanbul ignore next */
        cov_z6oiupbo().s[68]++;
        if (pool.tokenType === 'SM') {
          /* istanbul ignore next */
          cov_z6oiupbo().b[19][0]++;
          cov_z6oiupbo().s[69]++;
          // 发放SM代币（这里应该调用智能合约）
          await this.distributeSMTokens(participant.wallet_address, reward);
        } else {
          /* istanbul ignore next */
          cov_z6oiupbo().b[19][1]++;
          cov_z6oiupbo().s[70]++;
          // 发放小红花
          await this.distributeFlowers(participant.wallet_address, parseInt(reward));
        }
      }
      // 标记空投池为已分发
      /* istanbul ignore next */
      cov_z6oiupbo().s[71]++;
      await _supabase.supabase.from('airdrop_pools').update({
        is_active: false
      }).eq('id', poolId);
      /* istanbul ignore next */
      cov_z6oiupbo().s[72]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_z6oiupbo().s[73]++;
      console.error('分发空投奖励失败:', error);
      /* istanbul ignore next */
      cov_z6oiupbo().s[74]++;
      return false;
    }
  }
  /**
  * 扣除用户小红花
  */
  static async deductFlowers(walletAddress, amount, poolId) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[8]++;
    cov_z6oiupbo().s[75]++;
    // 记录小红花交易
    await _supabase.supabase.from('flower_transactions').insert([{
      wallet_address: walletAddress,
      type: 'spend',
      amount: amount,
      source: 'airdrop',
      description: `参与空投池`,
      related_pool_id: poolId,
      timestamp: new Date().toISOString()
    }]);
    // 更新余额
    /* istanbul ignore next */
    cov_z6oiupbo().s[76]++;
    await _supabase.supabase.rpc('update_flower_balance', {
      user_wallet: walletAddress,
      amount_change: -amount,
      transaction_type: 'spend'
    });
  }
  /**
  * 发放小红花奖励
  */
  static async distributeFlowers(walletAddress, amount) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[9]++;
    cov_z6oiupbo().s[77]++;
    // 记录小红花交易
    await _supabase.supabase.from('flower_transactions').insert([{
      wallet_address: walletAddress,
      type: 'earn',
      amount: amount,
      source: 'airdrop',
      description: `空投池奖励`,
      timestamp: new Date().toISOString()
    }]);
    // 更新余额
    /* istanbul ignore next */
    cov_z6oiupbo().s[78]++;
    await _supabase.supabase.rpc('update_flower_balance', {
      user_wallet: walletAddress,
      amount_change: amount,
      transaction_type: 'earn'
    });
  }
  /**
  * 发放SM代币奖励（模拟）
  */
  static async distributeSMTokens(walletAddress, amount) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[10]++;
    cov_z6oiupbo().s[79]++;
    // 这里应该调用智能合约来发放SM代币
    // 目前只是记录日志
    console.log(`发放 ${amount} SM代币给 ${walletAddress}`);
    // 记录交易日志
    /* istanbul ignore next */
    cov_z6oiupbo().s[80]++;
    await _supabase.supabase.from('token_transactions').insert([{
      wallet_address: walletAddress,
      type: 'airdrop',
      amount: amount,
      token: 'SM',
      description: `空投池SM代币奖励`,
      timestamp: new Date().toISOString()
    }]);
  }
  /**
  * 增加空投池参与人数
  */
  static async incrementPoolParticipants(poolId) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[11]++;
    cov_z6oiupbo().s[81]++;
    await _supabase.supabase.rpc('increment_pool_participants', {
      pool_id: poolId
    });
  }
  /**
  * 数据库记录转换为空投池对象
  */
  static mapDbToPool(dbRecord) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[12]++;
    cov_z6oiupbo().s[82]++;
    return {
      id: dbRecord.id,
      name: dbRecord.name,
      description: dbRecord.description,
      totalReward: dbRecord.total_reward,
      tokenType: dbRecord.token_type,
      entryFee: dbRecord.entry_fee,
      maxParticipants: dbRecord.max_participants,
      currentParticipants:
      /* istanbul ignore next */
      (cov_z6oiupbo().b[20][0]++, dbRecord.current_participants) ||
      /* istanbul ignore next */
      (cov_z6oiupbo().b[20][1]++, 0),
      startDate: new Date(dbRecord.start_date).getTime(),
      endDate: new Date(dbRecord.end_date).getTime(),
      distributionDate: new Date(dbRecord.distribution_date).getTime(),
      isActive: dbRecord.is_active,
      requirements: dbRecord.requirements
    };
  }
  /**
  * 数据库记录转换为参与对象
  */
  static mapDbToParticipation(dbRecord) {
    /* istanbul ignore next */
    cov_z6oiupbo().f[13]++;
    cov_z6oiupbo().s[83]++;
    return {
      id: dbRecord.id,
      poolId: dbRecord.pool_id,
      userId: dbRecord.user_id,
      walletAddress: dbRecord.wallet_address,
      entryAmount: dbRecord.entry_amount,
      participatedAt: new Date(dbRecord.participated_at).getTime(),
      reward: dbRecord.reward,
      claimed: dbRecord.claimed,
      claimedAt: dbRecord.claimed_at ?
      /* istanbul ignore next */
      (cov_z6oiupbo().b[21][0]++, new Date(dbRecord.claimed_at).getTime()) :
      /* istanbul ignore next */
      (cov_z6oiupbo().b[21][1]++, undefined)
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,