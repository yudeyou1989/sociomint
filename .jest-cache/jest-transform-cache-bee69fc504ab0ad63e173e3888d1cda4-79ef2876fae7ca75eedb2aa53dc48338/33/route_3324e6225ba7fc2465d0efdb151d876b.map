{"version":3,"names":["cov_1qdiewr4ab","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","GET","POST","dynamic","request","pools","_airdropPools","AirdropPoolsDB","getActivePools","_server","NextResponse","json","success","data","message","error","console","code","status","body","requiredFields","field","_security","InputValidator","validateLength","description","validTokenTypes","includes","tokenType","validateNumber","totalReward","validatePositiveInteger","entryFee","toString","maxParticipants","startDate","Date","getTime","endDate","distributionDate","now","poolData","isActive","requirements","poolId","createPool"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/app/api/airdrop-pools/route.ts"],"sourcesContent":["/**\n * 小红花空投池API路由\n * 处理空投池的CRUD操作\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { AirdropPoolsDB } from '@/lib/database/airdropPools';\nimport { InputValidator } from '@/lib/security';\n\n// 配置为动态路由以支持静态导出\nexport const dynamic = 'force-dynamic';\n\n/**\n * 获取所有活跃的空投池\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const pools = await AirdropPoolsDB.getActivePools();\n    \n    return NextResponse.json({\n      success: true,\n      data: pools,\n      message: '获取空投池成功'\n    });\n  } catch (error) {\n    console.error('获取空投池失败:', error);\n    \n    return NextResponse.json(\n      {\n        success: false,\n        error: '获取空投池失败',\n        code: 'FETCH_POOLS_FAILED'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * 创建新的空投池\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // 验证必填字段\n    const requiredFields = ['name', 'description', 'totalReward', 'tokenType', 'entryFee', 'maxParticipants', 'startDate', 'endDate', 'distributionDate'];\n    for (const field of requiredFields) {\n      if (!body[field]) {\n        return NextResponse.json(\n          {\n            success: false,\n            error: `缺少必填字段: ${field}`,\n            code: 'MISSING_REQUIRED_FIELD'\n          },\n          { status: 400 }\n        );\n      }\n    }\n    \n    // 验证名称长度\n    if (!InputValidator.validateLength(body.name, 1, 100)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '空投池名称长度必须在1-100字符之间',\n          code: 'INVALID_NAME_LENGTH'\n        },\n        { status: 400 }\n      );\n    }\n    \n    // 验证描述长度\n    if (!InputValidator.validateLength(body.description, 1, 1000)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '空投池描述长度必须在1-1000字符之间',\n          code: 'INVALID_DESCRIPTION_LENGTH'\n        },\n        { status: 400 }\n      );\n    }\n    \n    // 验证代币类型\n    const validTokenTypes = ['SM', 'FLOWER'];\n    if (!validTokenTypes.includes(body.tokenType)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '无效的代币类型',\n          code: 'INVALID_TOKEN_TYPE'\n        },\n        { status: 400 }\n      );\n    }\n    \n    // 验证总奖励数量\n    if (!InputValidator.validateNumber(body.totalReward)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '总奖励数量必须是有效数字',\n          code: 'INVALID_TOTAL_REWARD'\n        },\n        { status: 400 }\n      );\n    }\n    \n    // 验证入场费\n    if (!InputValidator.validatePositiveInteger(body.entryFee.toString())) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '入场费必须是正整数',\n          code: 'INVALID_ENTRY_FEE'\n        },\n        { status: 400 }\n      );\n    }\n    \n    // 验证最大参与人数\n    if (!InputValidator.validatePositiveInteger(body.maxParticipants.toString())) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '最大参与人数必须是正整数',\n          code: 'INVALID_MAX_PARTICIPANTS'\n        },\n        { status: 400 }\n      );\n    }\n    \n    // 验证日期\n    const startDate = new Date(body.startDate).getTime();\n    const endDate = new Date(body.endDate).getTime();\n    const distributionDate = new Date(body.distributionDate).getTime();\n    const now = Date.now();\n    \n    if (startDate < now) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '开始时间不能早于当前时间',\n          code: 'INVALID_START_DATE'\n        },\n        { status: 400 }\n      );\n    }\n    \n    if (endDate <= startDate) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '结束时间必须晚于开始时间',\n          code: 'INVALID_END_DATE'\n        },\n        { status: 400 }\n      );\n    }\n    \n    if (distributionDate <= endDate) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '分发时间必须晚于结束时间',\n          code: 'INVALID_DISTRIBUTION_DATE'\n        },\n        { status: 400 }\n      );\n    }\n    \n    // 创建空投池\n    const poolData = {\n      name: body.name,\n      description: body.description,\n      totalReward: body.totalReward,\n      tokenType: body.tokenType,\n      entryFee: body.entryFee,\n      maxParticipants: body.maxParticipants,\n      startDate: startDate,\n      endDate: endDate,\n      distributionDate: distributionDate,\n      isActive: body.isActive !== false, // 默认为true\n      requirements: body.requirements || {},\n    };\n    \n    const poolId = await AirdropPoolsDB.createPool(poolData);\n    \n    if (!poolId) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: '创建空投池失败',\n          code: 'CREATE_POOL_FAILED'\n        },\n        { status: 500 }\n      );\n    }\n    \n    return NextResponse.json({\n      success: true,\n      data: { poolId },\n      message: '创建空投池成功'\n    });\n    \n  } catch (error) {\n    console.error('创建空投池失败:', error);\n    \n    return NextResponse.json(\n      {\n        success: false,\n        error: '创建空投池失败',\n        code: 'CREATE_POOL_FAILED'\n      },\n      { status: 500 }\n    );\n  }\n}\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;U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","ignoreList":[]}