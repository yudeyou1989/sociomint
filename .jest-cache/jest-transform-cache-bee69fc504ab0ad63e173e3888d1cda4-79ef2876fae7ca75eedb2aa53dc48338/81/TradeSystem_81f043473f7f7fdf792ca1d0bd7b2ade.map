{"version":3,"names":["_default","mockOrders","cov_272kutmep4","s","id","merchantId","merchantName","type","asset","price","minAmount","maxAmount","availableAmount","paymentMethods","tradeCount","avgCompletionTime","status","isMedalist","completionRate","responseTime","createdAt","Date","mockTransactions","orderId","buyerId","sellerId","amount","totalPrice","updatedAt","paymentMethod","TradeSystem","f","wallet","balance","_WalletContext","useWallet","activeTab","setActiveTab","_react","useState","activeAsset","setActiveAsset","activePaymentMethods","setActivePaymentMethods","showTradeModal","setShowTradeModal","showPaymentModal","setShowPaymentModal","showResultModal","setShowResultModal","selectedOrder","setSelectedOrder","tradeAmount","setTradeAmount","selectedPaymentMethod","setSelectedPaymentMethod","paymentProof","setPaymentProof","currentTransaction","setCurrentTransaction","isProcessing","setIsProcessing","tradeResult","setTradeResult","filteredOrders","setFilteredOrders","useEffect","newFilteredOrders","filter","order","b","some","method","includes","openTradeModal","handleAmountChange","handleSelectPaymentMethod","handleDirectPayment","isConnected","totalAmount","sm","_reacthottoast","toast","error","setTimeout","transaction","now","handleUploadProof","closeAllModals","handleFileSelect","e","target","files","length","URL","createObjectURL","_jsxruntime","jsxs","className","jsx","_FaStore","default","onClick","map","checked","onChange","m","disabled","min","max","value","parseFloat","toFixed","_FaUpload","accept","Fragment"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/market/TradeSystem.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useWallet } from '@/contexts/WalletContext';\nimport {\n  FaStore,\n  FaUpload,\n} from 'react-icons/fa';\nimport { toast } from 'react-hot-toast';\n// import { Button, Card, Tabs, Table, Modal, Input, Select, Badge, Avatar, Rate, message, Space, Tag } from 'antd';\n// import { SearchOutlined, FilterOutlined, UserOutlined, HistoryOutlined, SyncOutlined, ClockCircleOutlined, DollarOutlined, SafetyOutlined } from '@ant-design/icons';\n// import './TradeSystem.css';\n\n// 支付方式类型\ntype PaymentMethod = 'sm' | 'wechat' | 'alipay' | 'usdt';\n\n// 交易类型\ntype TradeType = 'buy' | 'sell';\n\n// 资产类型\ntype AssetType = 'redFlower' | 'smToken';\n\n// 订单状态\ntype OrderStatus =\n  | 'active'\n  | 'processing'\n  | 'completed'\n  | 'canceled'\n  | 'disputed';\n\n// 订单接口\ninterface TradeOrder {\n  id: string;\n  merchantId: string;\n  merchantName: string;\n  type: TradeType;\n  asset: AssetType;\n  price: number;\n  minAmount: number;\n  maxAmount: number;\n  availableAmount: number;\n  paymentMethods: PaymentMethod[];\n  tradeCount: number;\n  avgCompletionTime: number;\n  status: OrderStatus;\n  isMedalist?: boolean;\n  completionRate?: number;\n  responseTime?: number;\n  createdAt: Date;\n}\n\n// 交易接口\ninterface Transaction {\n  id: string;\n  orderId: string;\n  buyerId: string;\n  sellerId: string;\n  asset: AssetType;\n  amount: number;\n  price: number;\n  totalPrice: number;\n  status: 'pending' | 'paid' | 'completed' | 'canceled' | 'disputed';\n  createdAt: Date;\n  updatedAt: Date;\n  paymentMethod: PaymentMethod;\n  paymentDetails?: {\n    accountName?: string;\n    accountNumber?: string;\n    bankName?: string;\n    qrCodeUrl?: string;\n  };\n  paymentProofUrl?: string;\n  disputeReason?: string;\n}\n\n// 模拟的订单数据\nconst mockOrders: TradeOrder[] = [\n  {\n    id: '1',\n    merchantId: '0x1a2b...3c4d',\n    merchantName: '币圈小王子',\n    type: 'buy',\n    asset: 'redFlower',\n    price: 0.05,\n    minAmount: 100,\n    maxAmount: 10000,\n    availableAmount: 5000,\n    paymentMethods: ['wechat', 'alipay'],\n    tradeCount: 1520,\n    avgCompletionTime: 8,\n    status: 'active',\n    isMedalist: true,\n    completionRate: 99.5,\n    responseTime: 2,\n    createdAt: new Date('2023-08-15'),\n  },\n  {\n    id: '2',\n    merchantId: '0x5e6f...7g8h',\n    merchantName: '数字藏家',\n    type: 'buy',\n    asset: 'redFlower',\n    price: 0.048,\n    minAmount: 500,\n    maxAmount: 20000,\n    availableAmount: 10000,\n    paymentMethods: ['alipay', 'usdt'],\n    tradeCount: 324,\n    avgCompletionTime: 15,\n    status: 'active',\n    completionRate: 98.7,\n    responseTime: 1,\n    createdAt: new Date('2023-09-01'),\n  },\n  {\n    id: '3',\n    merchantId: '0x9i10...11j12',\n    merchantName: '区块达人',\n    type: 'buy',\n    asset: 'smToken',\n    price: 1.2,\n    minAmount: 10,\n    maxAmount: 1000,\n    availableAmount: 500,\n    paymentMethods: ['wechat', 'alipay', 'usdt'],\n    tradeCount: 967,\n    avgCompletionTime: 12,\n    status: 'active',\n    completionRate: 95.2,\n    responseTime: 5,\n    createdAt: new Date('2023-08-22'),\n  },\n  {\n    id: '4',\n    merchantId: '0xab12...cd34',\n    merchantName: '链上玩家',\n    type: 'sell',\n    asset: 'redFlower',\n    price: 0.055,\n    minAmount: 100,\n    maxAmount: 5000,\n    availableAmount: 3000,\n    paymentMethods: ['wechat', 'alipay'],\n    tradeCount: 732,\n    avgCompletionTime: 10,\n    status: 'active',\n    completionRate: 99.1,\n    responseTime: 3,\n    createdAt: new Date('2023-09-10'),\n  },\n  {\n    id: '5',\n    merchantId: '0xef56...gh78',\n    merchantName: '花花交易所',\n    type: 'sell',\n    asset: 'redFlower',\n    price: 0.052,\n    minAmount: 200,\n    maxAmount: 8000,\n    availableAmount: 5000,\n    paymentMethods: ['alipay', 'usdt'],\n    tradeCount: 2150,\n    avgCompletionTime: 5,\n    status: 'active',\n    isMedalist: true,\n    completionRate: 96.8,\n    responseTime: 4,\n    createdAt: new Date('2023-09-05'),\n  },\n  {\n    id: '6',\n    merchantId: '0xij90...kl12',\n    merchantName: 'SM收藏家',\n    type: 'sell',\n    asset: 'smToken',\n    price: 1.18,\n    minAmount: 5,\n    maxAmount: 500,\n    availableAmount: 300,\n    paymentMethods: ['wechat', 'alipay', 'usdt'],\n    tradeCount: 456,\n    avgCompletionTime: 18,\n    status: 'active',\n    completionRate: 99.5,\n    responseTime: 2,\n    createdAt: new Date('2023-08-15'),\n  },\n];\n\n// 模拟交易历史\nconst mockTransactions: Transaction[] = [\n  {\n    id: 't1',\n    orderId: '1',\n    buyerId: 'user1',\n    sellerId: 'm1',\n    asset: 'redFlower',\n    amount: 500,\n    price: 0.05,\n    totalPrice: 25,\n    status: 'completed',\n    createdAt: new Date('2023-09-10T08:30:00'),\n    updatedAt: new Date('2023-09-10T08:45:00'),\n    paymentMethod: 'wechat',\n  },\n  {\n    id: 't2',\n    orderId: '2',\n    buyerId: 'user1',\n    sellerId: 'm2',\n    asset: 'redFlower',\n    amount: 1000,\n    price: 0.048,\n    totalPrice: 48,\n    status: 'pending',\n    createdAt: new Date('2023-09-15T14:20:00'),\n    updatedAt: new Date('2023-09-15T14:20:00'),\n    paymentMethod: 'alipay',\n  },\n];\n\n// 交易系统组件\nconst TradeSystem = () => {\n  const { wallet, balance } = useWallet();\n  const [activeTab, setActiveTab] = useState<string>('buy');\n  const [activeAsset, setActiveAsset] = useState<AssetType>('redFlower');\n  const [activePaymentMethods, setActivePaymentMethods] = useState<\n    PaymentMethod[]\n  >(['wechat', 'alipay', 'usdt', 'sm']);\n  const [showTradeModal, setShowTradeModal] = useState(false);\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\n  const [showResultModal, setShowResultModal] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState<TradeOrder | null>(null);\n  const [tradeAmount, setTradeAmount] = useState<number | null>(null);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] =\n    useState<PaymentMethod | null>(null);\n  const [paymentProof, setPaymentProof] = useState<string>('');\n  const [currentTransaction, setCurrentTransaction] =\n    useState<Transaction | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [tradeResult, setTradeResult] = useState<'success' | 'failure' | null>(null);\n  const [filteredOrders, setFilteredOrders] =\n    useState<TradeOrder[]>(mockOrders);\n\n  // 使用useEffect来更新filteredOrders\n  useEffect(() => {\n    // 根据筛选条件更新订单列表\n    const newFilteredOrders = mockOrders.filter(\n      (order) =>\n        order.type === activeTab &&\n        order.asset === activeAsset &&\n        order.paymentMethods.some((method) =>\n          activePaymentMethods.includes(method),\n        ),\n    );\n    setFilteredOrders(newFilteredOrders);\n  }, [activeTab, activeAsset, activePaymentMethods]);\n\n  // 打开交易模态框\n  const openTradeModal = (order: TradeOrder) => {\n    setSelectedOrder(order);\n    setTradeAmount(order.minAmount);\n    setShowTradeModal(true);\n  };\n\n  // 处理交易金额变更\n  const handleAmountChange = (amount: number) => {\n    if (!selectedOrder) return;\n\n    // 确保金额在范围内\n    if (amount < selectedOrder.minAmount) amount = selectedOrder.minAmount;\n    if (amount > selectedOrder.maxAmount) amount = selectedOrder.maxAmount;\n    if (amount > selectedOrder.availableAmount)\n      amount = selectedOrder.availableAmount;\n\n    setTradeAmount(amount);\n  };\n\n  // 选择支付方式\n  const handleSelectPaymentMethod = (method: PaymentMethod) => {\n    setSelectedPaymentMethod(method);\n\n    // 如果选择SM支付直接处理\n    if (method === 'sm') {\n      handleDirectPayment();\n    } else {\n      // 显示支付详情页\n      setShowTradeModal(false);\n      setShowPaymentModal(true);\n    }\n  };\n\n  // 直接SM支付\n  const handleDirectPayment = () => {\n    if (!selectedOrder || !wallet.isConnected || tradeAmount === null) return;\n\n    setIsProcessing(true);\n\n    // 计算总价\n    const totalAmount = tradeAmount * selectedOrder.price;\n\n    // 检查余额\n    if (selectedOrder.asset === 'redFlower' && selectedOrder.type === 'buy') {\n      if (balance?.sm < totalAmount) {\n        toast.error('SM余额不足');\n        setIsProcessing(false);\n        return;\n      }\n    }\n\n    // 模拟交易过程\n    setTimeout(() => {\n      setIsProcessing(false);\n\n      // 创建交易记录\n      const transaction: Transaction = {\n        id: `tx-${Date.now()}`,\n        orderId: selectedOrder.id,\n        buyerId: 'user1',\n        sellerId: 'm1',\n        asset: selectedOrder.asset,\n        amount: tradeAmount,\n        price: selectedOrder.price,\n        totalPrice: totalAmount,\n        status: 'completed',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        paymentMethod: 'sm',\n      };\n\n      setCurrentTransaction(transaction);\n      setTradeResult('success');\n      setShowTradeModal(false);\n      setShowResultModal(true);\n    }, 2000);\n  };\n\n  // 上传支付凭证\n  const handleUploadProof = () => {\n    if (!selectedOrder || !selectedPaymentMethod || tradeAmount === null)\n      return;\n\n    setIsProcessing(true);\n\n    // 计算总价\n    const totalAmount = tradeAmount * selectedOrder.price;\n\n    // 模拟交易过程\n    setTimeout(() => {\n      setIsProcessing(false);\n\n      // 创建交易记录\n      const transaction: Transaction = {\n        id: `tx-${Date.now()}`,\n        orderId: selectedOrder.id,\n        buyerId: 'user1',\n        sellerId: 'm1',\n        asset: selectedOrder.asset,\n        amount: tradeAmount,\n        price: selectedOrder.price,\n        totalPrice: totalAmount,\n        status: 'pending',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        paymentMethod: selectedPaymentMethod,\n      };\n\n      setCurrentTransaction(transaction);\n      setTradeResult('success');\n      setShowPaymentModal(false);\n      setShowResultModal(true);\n    }, 2000);\n  };\n\n  // 关闭所有模态框\n  const closeAllModals = () => {\n    setShowTradeModal(false);\n    setShowPaymentModal(false);\n    setShowResultModal(false);\n    setSelectedOrder(null);\n    setTradeAmount(null);\n    setSelectedPaymentMethod(null);\n    setPaymentProof('');\n    setCurrentTransaction(null);\n    setTradeResult(null);\n  };\n\n  // 处理文件选择\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setPaymentProof(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n\n  return (\n    <div className=\"mb-10\">\n      {/* 市场视图 */}\n      <div className=\"tech-card\">\n        <div className=\"flex items-center mb-6\">\n          <div className=\"p-2 rounded-md bg-gray-800/70 mr-3\">\n            <FaStore />\n          </div>\n          <h2 className=\"text-xl font-bold\">交易市场</h2>\n          <div className=\"ml-auto text-sm text-gray-400\">\n            <span>小红花和SM交易市场</span>\n          </div>\n        </div>\n\n        {/* 交易类型和资产选择 */}\n        <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-6\">\n          <div className=\"flex bg-gray-800 rounded-md p-1 mb-4 md:mb-0\">\n            <button\n              onClick={() => setActiveTab('buy')}\n              className={`px-4 py-1.5 rounded-md text-sm ${activeTab === 'buy' ? 'bg-primary text-black font-medium' : 'text-gray-300'}`}\n            >\n              购买\n            </button>\n            <button\n              onClick={() => setActiveTab('sell')}\n              className={`px-4 py-1.5 rounded-md text-sm ${activeTab === 'sell' ? 'bg-primary text-black font-medium' : 'text-gray-300'}`}\n            >\n              出售\n            </button>\n          </div>\n\n          <div className=\"flex bg-gray-800 rounded-md p-1\">\n            <button\n              onClick={() => setActiveAsset('redFlower')}\n              className={`px-4 py-1.5 rounded-md text-sm ${activeAsset === 'redFlower' ? 'bg-primary text-black font-medium' : 'text-gray-300'}`}\n            >\n              小红花\n            </button>\n            <button\n              onClick={() => setActiveAsset('smToken')}\n              className={`px-4 py-1.5 rounded-md text-sm ${activeAsset === 'smToken' ? 'bg-primary text-black font-medium' : 'text-gray-300'}`}\n            >\n              SM代币\n            </button>\n          </div>\n        </div>\n\n        {/* 支付方式过滤 */}\n        <div className=\"mb-6 p-3 bg-gray-800/30 rounded-md\">\n          <div className=\"flex flex-wrap items-center\">\n            <div className=\"mr-3 text-sm text-gray-400\">支付方式：</div>\n            {['wechat', 'alipay', 'usdt', 'sm'].map((method) => (\n              <label\n                key={method}\n                className=\"flex items-center mr-4 cursor-pointer\"\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={activePaymentMethods.includes(\n                    method as PaymentMethod,\n                  )}\n                  onChange={() => {\n                    if (\n                      activePaymentMethods.includes(method as PaymentMethod)\n                    ) {\n                      setActivePaymentMethods(\n                        activePaymentMethods.filter((m) => m !== method),\n                      );\n                    } else {\n                      setActivePaymentMethods([\n                        ...activePaymentMethods,\n                        method as PaymentMethod,\n                      ]);\n                    }\n                  }}\n                  className=\"mr-1\"\n                />\n                <span className=\"text-sm\">\n                  {method === 'wechat' && '微信'}\n                  {method === 'alipay' && '支付宝'}\n                  {method === 'usdt' && 'USDT'}\n                  {method === 'sm' && 'SM'}\n                </span>\n              </label>\n            ))}\n          </div>\n        </div>\n\n        {/* 订单列表 */}\n        <div className=\"space-y-4\">\n          {filteredOrders.length > 0 ? (\n            filteredOrders.map((order) => (\n              <div key={order.id} className=\"tech-card p-4\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <div className=\"flex items-center\">\n                    <div className=\"bg-gray-700 p-1.5 rounded-full mr-3\">\n                      <FaStore className=\"text-primary w-4 h-4\" />\n                    </div>\n                    <div>\n                      <span className=\"font-medium flex items-center\">\n                        {order.merchantName}\n                        {order.isMedalist && (\n                          <span className=\"ml-2 text-xs bg-yellow-500/20 text-yellow-400 px-1 py-0.5 rounded flex items-center\">\n                            金牌商人\n                          </span>\n                        )}\n                      </span>\n                      <span className=\"text-gray-400 text-xs\">\n                        {order.merchantId}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"text-lg font-bold text-primary\">\n                    {order.asset === 'redFlower'\n                      ? `1 小红花 = ${order.price} ¥`\n                      : `1 SM = ${order.price} ¥`}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-x-4 gap-y-2 mt-4 text-sm\">\n                  <div className=\"text-gray-400\">交易限额</div>\n                  <div className=\"md:col-span-2\">\n                    ¥ {order.minAmount} - {order.maxAmount}\n                  </div>\n\n                  <div className=\"text-gray-400\">可用数量</div>\n                  <div className=\"md:col-span-2\">\n                    {order.availableAmount}{' '}\n                    {order.asset === 'redFlower' ? '小红花' : 'SM'}\n                  </div>\n\n                  <div className=\"text-gray-400\">支付方式</div>\n                  <div className=\"md:col-span-2 flex flex-wrap space-x-2\">\n                    {order.paymentMethods.map((method) => (\n                      <span\n                        key={method}\n                        className=\"px-2 py-0.5 bg-gray-700 rounded-md text-xs\"\n                      >\n                        {method === 'wechat' && '微信'}\n                        {method === 'alipay' && '支付宝'}\n                        {method === 'usdt' && 'USDT'}\n                        {method === 'sm' && 'SM'}\n                      </span>\n                    ))}\n                  </div>\n\n                  <div className=\"text-gray-400\">交易统计</div>\n                  <div className=\"md:col-span-2 flex items-center\">\n                    <span className=\"mr-3\">成交: {order.tradeCount}笔</span>\n                    <span className=\"flex items-center\">\n                      平均完成时间: {order.avgCompletionTime}分钟\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"flex justify-end mt-4\">\n                  <button\n                    onClick={() => openTradeModal(order)}\n                    className=\"neon-button py-1.5 px-4 text-sm\"\n                    disabled={!wallet.isConnected}\n                  >\n                    {activeTab === 'buy' ? '购买' : '出售'}\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"text-center py-10 text-gray-400\">\n              暂无符合条件的{activeTab === 'buy' ? '购买' : '出售'}订单\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* 交易模态框 */}\n      {showTradeModal && selectedOrder && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black/70 backdrop-blur-sm\">\n          <div className=\"tech-card p-6 max-w-md w-full mx-4 relative\">\n            <button\n              onClick={closeAllModals}\n              className=\"absolute top-3 right-3 text-gray-400 hover:text-white\"\n            >\n              ×\n            </button>\n\n            <h3 className=\"text-xl font-bold mb-4\">\n              {activeTab === 'buy'\n                ? `购买${activeAsset === 'redFlower' ? '小红花' : 'SM代币'}`\n                : `出售${activeAsset === 'redFlower' ? '小红花' : 'SM代币'}`}\n            </h3>\n\n            <div className=\"mb-4\">\n              <div className=\"flex justify-between mb-2\">\n                <span className=\"text-gray-400\">商人</span>\n                <span>{selectedOrder.merchantName}</span>\n              </div>\n              <div className=\"flex justify-between mb-2\">\n                <span className=\"text-gray-400\">兑换比率</span>\n                <span className=\"text-primary\">\n                  1 {activeAsset === 'redFlower' ? '小红花' : 'SM'} ={' '}\n                  {selectedOrder.price} ¥\n                </span>\n              </div>\n              <div className=\"flex justify-between mb-2\">\n                <span className=\"text-gray-400\">交易限额</span>\n                <span>\n                  ¥ {selectedOrder.minAmount} - {selectedOrder.maxAmount}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"mb-6\">\n              <label className=\"block text-gray-400 mb-2\">\n                {activeTab === 'buy' ? '购买' : '出售'}数量 (\n                {activeAsset === 'redFlower' ? '小红花' : 'SM'})\n              </label>\n              <input\n                type=\"number\"\n                min={selectedOrder?.minAmount || 0}\n                max={selectedOrder?.availableAmount || 0}\n                value={tradeAmount || ''}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleAmountChange(parseFloat(e.target.value))\n                }\n                className=\"w-full px-4 py-2 rounded-md bg-gray-800 border border-gray-700 focus:border-primary focus:outline-none\"\n              />\n\n              {tradeAmount !== null && selectedOrder && (\n                <div className=\"flex justify-between mt-4 pt-4 border-t border-gray-700\">\n                  <div className=\"text-gray-400\">总金额</div>\n                  <div className=\"text-xl font-bold\">\n                    ¥{(tradeAmount * selectedOrder.price).toFixed(2)}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"mb-6\">\n              <div className=\"text-gray-400 mb-2\">选择支付方式</div>\n              <div className=\"grid grid-cols-2 gap-3\">\n                {selectedOrder.paymentMethods.map((method) => (\n                  <button\n                    key={method}\n                    onClick={() => handleSelectPaymentMethod(method)}\n                    className=\"py-2 px-3 bg-gray-800 hover:bg-gray-700 border border-gray-700 rounded-md transition-colors flex items-center justify-center\"\n                  >\n                    {method === 'wechat' && '微信支付'}\n                    {method === 'alipay' && '支付宝'}\n                    {method === 'usdt' && 'USDT'}\n                    {method === 'sm' && 'SM直接支付'}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"mb-4 p-3 bg-gray-800/50 rounded-md border border-gray-700\">\n              <h4 className=\"font-medium text-primary mb-1\">交易提示</h4>\n              <p className=\"text-xs text-gray-300\">\n                确认订单后，请按照商人提供的方式及时支付。如有疑问，可联系客服或通过平台纠纷解决机制处理。\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 支付详情模态框 */}\n      {showPaymentModal && selectedOrder && selectedPaymentMethod && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black/70 backdrop-blur-sm\">\n          <div className=\"tech-card p-6 max-w-md w-full mx-4 relative\">\n            <button\n              onClick={closeAllModals}\n              className=\"absolute top-3 right-3 text-gray-400 hover:text-white\"\n            >\n              ×\n            </button>\n\n            <h3 className=\"text-xl font-bold mb-4\">请完成支付</h3>\n\n            <div className=\"mb-4 p-4 bg-gray-800/40 rounded-md\">\n              <div className=\"flex justify-between mb-2\">\n                <span className=\"text-gray-400\">交易金额</span>\n                <span className=\"text-xl font-bold text-primary\">\n                  {tradeAmount !== null ? (tradeAmount * selectedOrder.price).toFixed(2) : '0.00'} ¥\n                </span>\n              </div>\n              <div className=\"flex justify-between mb-2\">\n                <span className=\"text-gray-400\">支付方式</span>\n                <span>\n                  {selectedPaymentMethod === 'wechat' && '微信支付'}\n                  {selectedPaymentMethod === 'alipay' && '支付宝'}\n                  {selectedPaymentMethod === 'usdt' && 'USDT'}\n                </span>\n              </div>\n              <div className=\"flex justify-between mb-2\">\n                <span className=\"text-gray-400\">交易数量</span>\n                <span>\n                  {tradeAmount}{' '}\n                  {selectedOrder.asset === 'redFlower' ? '小红花' : 'SM'}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"mb-6 p-4 bg-gray-800/40 rounded-md border border-gray-700\">\n              <h4 className=\"font-medium text-primary mb-3\">商人支付信息</h4>\n              <div className=\"bg-gray-900 p-3 rounded-md mb-3 flex items-center justify-center\">\n                {/* 这里显示商人的收款码或地址 */}\n                <div className=\"text-center\">\n                  <div className=\"w-48 h-48 bg-gray-800 mx-auto mb-2 flex items-center justify-center\">\n                    <span className=\"text-gray-500\">收款二维码</span>\n                  </div>\n                  <div className=\"text-xs text-gray-400\">\n                    {selectedPaymentMethod === 'usdt'\n                      ? 'USDT地址: 0x1a2b3c4d5e6f7g8h9i10j11k12l'\n                      : '请使用微信/支付宝扫描上方二维码支付'}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"text-sm text-yellow-400 mb-3\">\n                重要提示：请在转账备注中注明订单编号{' '}\n                <strong>{selectedOrder.id}</strong>\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"text-gray-400 mb-2\">上传支付凭证</div>\n                <label className=\"block w-full py-3 px-4 bg-gray-900 border border-dashed border-gray-700 rounded-md cursor-pointer hover:bg-gray-800 transition-colors\">\n                  <div className=\"flex flex-col items-center text-center\">\n                    <FaUpload className=\"text-gray-500 mb-2\" />\n                    <span className=\"text-sm\">\n                      {paymentProof ? paymentProof : '点击上传支付截图'}\n                    </span>\n                    <span className=\"text-xs text-gray-500 mt-1\">\n                      支持 JPG, PNG 格式\n                    </span>\n                  </div>\n                  <input\n                    type=\"file\"\n                    className=\"hidden\"\n                    accept=\"image/*\"\n                    onChange={handleFileSelect}\n                  />\n                </label>\n              </div>\n            </div>\n\n            <button\n              onClick={handleUploadProof}\n              disabled={isProcessing || !paymentProof}\n              className=\"neon-button w-full py-2.5\"\n            >\n              {isProcessing ? '处理中...' : '确认已支付并上传凭证'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 交易结果模态框 */}\n      {showResultModal && currentTransaction && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black/70 backdrop-blur-sm\">\n          <div className=\"tech-card p-6 max-w-md w-full mx-4 relative\">\n            <button\n              onClick={closeAllModals}\n              className=\"absolute top-3 right-3 text-gray-400 hover:text-white\"\n            >\n              ×\n            </button>\n\n            <div className=\"text-center mb-6\">\n              {currentTransaction.status === 'completed' ? (\n                <>\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-green-500/20 text-green-400 mb-4\">\n                    ✓\n                  </div>\n                  <h3 className=\"text-xl font-bold mb-2\">交易完成</h3>\n                </>\n              ) : (\n                <>\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-yellow-500/20 text-yellow-400 mb-4\">\n                    ⏳\n                  </div>\n                  <h3 className=\"text-xl font-bold mb-2\">待商人确认</h3>\n                </>\n              )}\n\n              <p className=\"text-gray-300\">\n                {currentTransaction.status === 'completed'\n                  ? '交易已成功完成，资产已转入您的账户。'\n                  : '您的支付凭证已上传，请等待商人确认。'}\n              </p>\n            </div>\n\n            <div className=\"mb-6 p-4 bg-gray-800/40 rounded-md\">\n              <h4 className=\"font-medium text-primary mb-3\">交易详情</h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">交易ID</span>\n                  <span>{currentTransaction.id}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">交易类型</span>\n                  <span>\n                    {selectedOrder?.type === 'buy' ? '购买' : '出售'}\n                    {selectedOrder?.asset === 'redFlower' ? '小红花' : 'SM'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">交易数量</span>\n                  <span>\n                    {currentTransaction.amount}{' '}\n                    {selectedOrder?.asset === 'redFlower' ? '小红花' : 'SM'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">单价</span>\n                  <span>{currentTransaction.price} ¥</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">总金额</span>\n                  <span className=\"text-primary\">\n                    {currentTransaction.totalPrice.toFixed(2)} ¥\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">支付方式</span>\n                  <span>\n                    {currentTransaction.paymentMethod === 'wechat' &&\n                      '微信支付'}\n                    {currentTransaction.paymentMethod === 'alipay' && '支付宝'}\n                    {currentTransaction.paymentMethod === 'usdt' && 'USDT'}\n                    {currentTransaction.paymentMethod === 'sm' && 'SM直接支付'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">交易状态</span>\n                  <span\n                    className={\n                      currentTransaction.status === 'completed'\n                        ? 'text-green-400'\n                        : 'text-yellow-400'\n                    }\n                  >\n                    {currentTransaction.status === 'completed' && '已完成'}\n                    {currentTransaction.status === 'pending' && '待确认'}\n                    {currentTransaction.status === 'paid' && '已支付'}\n                    {currentTransaction.status === 'canceled' && '已取消'}\n                    {currentTransaction.status === 'disputed' && '存在争议'}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {currentTransaction.status !== 'completed' && (\n              <div className=\"mb-6 p-3 bg-yellow-500/10 border border-yellow-500/30 rounded-md\">\n                <h4 className=\"font-medium text-yellow-400 mb-1\">注意事项</h4>\n                <p className=\"text-xs text-gray-300\">\n                  商人通常会在30分钟内确认您的支付。如超过2小时未确认，您可以联系客服或发起纠纷解决。\n                </p>\n              </div>\n            )}\n\n            <button\n              onClick={closeAllModals}\n              className=\"neon-button w-full py-2.5\"\n            >\n              完成\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TradeSystem;\n"],"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","ignoreList":[]}