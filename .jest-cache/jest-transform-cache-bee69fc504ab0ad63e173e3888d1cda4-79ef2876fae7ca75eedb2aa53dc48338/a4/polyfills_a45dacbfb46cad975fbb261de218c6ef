4214e68a8b6bf6afb89813decec7046c
/**
 * Polyfills for browser and Node.js environments
 * 解决跨环境依赖问题
 */ // Polyfill global fetch for environments where it might be missing
"use strict";

/* istanbul ignore next */
function cov_1sitkv1l9o() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/lib/polyfills.ts";
  var hash = "edc2707bb823af59b352c3ac5fc01e775860c183";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/lib/polyfills.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 51
        }
      },
      "2": {
        start: {
          line: 10,
          column: 39
        },
        end: {
          line: 10,
          column: 51
        }
      },
      "3": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "4": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 15,
          column: 20
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "11": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 53
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 30
        }
      },
      "14": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "15": {
        start: {
          line: 33,
          column: 32
        },
        end: {
          line: 33,
          column: 88
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "18": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 95
        }
      },
      "19": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "20": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 57
        }
      },
      "21": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 39
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 25
        }
      },
      "23": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "24": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 31
        }
      },
      "25": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "26": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "27": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "28": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "29": {
        start: {
          line: 53,
          column: 49
        },
        end: {
          line: 53,
          column: 98
        }
      },
      "30": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 33
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "33": {
        start: {
          line: 60,
          column: 49
        },
        end: {
          line: 60,
          column: 98
        }
      },
      "34": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 33
          }
        },
        loc: {
          start: {
            line: 9,
            column: 47
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 13,
            column: 40
          }
        },
        loc: {
          start: {
            line: 13,
            column: 61
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 34
          }
        },
        loc: {
          start: {
            line: 17,
            column: 53
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 53,
            column: 32
          }
        },
        loc: {
          start: {
            line: 53,
            column: 49
          },
          end: {
            line: 53,
            column: 98
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 105
          },
          end: {
            line: 53,
            column: 106
          }
        },
        loc: {
          start: {
            line: 53,
            column: 127
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 32
          }
        },
        loc: {
          start: {
            line: 60,
            column: 49
          },
          end: {
            line: 60,
            column: 98
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 60,
            column: 105
          },
          end: {
            line: 60,
            column: 106
          }
        },
        loc: {
          start: {
            line: 60,
            column: 127
          },
          end: {
            line: 62,
            column: 9
          }
        },
        line: 60
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 14,
            column: 45
          }
        }, {
          start: {
            line: 14,
            column: 48
          },
          end: {
            line: 14,
            column: 65
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 20
          }
        }, {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 27
          }
        }, {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 18,
            column: 45
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 20
          }
        }, {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 21,
            column: 47
          }
        }, {
          start: {
            line: 21,
            column: 51
          },
          end: {
            line: 21,
            column: 76
          }
        }],
        line: 21
      },
      "6": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "7": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 31
          }
        }],
        line: 27
      },
      "8": {
        loc: {
          start: {
            line: 33,
            column: 32
          },
          end: {
            line: 33,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 32
          },
          end: {
            line: 33,
            column: 53
          }
        }, {
          start: {
            line: 33,
            column: 57
          },
          end: {
            line: 33,
            column: 88
          }
        }],
        line: 33
      },
      "9": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "10": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 29
          }
        }, {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 35,
            column: 79
          }
        }],
        line: 35
      },
      "11": {
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 47
          },
          end: {
            line: 36,
            column: 88
          }
        }, {
          start: {
            line: 36,
            column: 91
          },
          end: {
            line: 36,
            column: 95
          }
        }],
        line: 36
      },
      "12": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 19
          },
          end: {
            line: 41,
            column: 13
          }
        }],
        line: 37
      },
      "13": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 33
          }
        }, {
          start: {
            line: 37,
            column: 37
          },
          end: {
            line: 37,
            column: 45
          }
        }],
        line: 37
      },
      "14": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "15": {
        loc: {
          start: {
            line: 50,
            column: 0
          },
          end: {
            line: 64,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 0
          },
          end: {
            line: 64,
            column: 1
          }
        }, {
          start: {
            line: 57,
            column: 7
          },
          end: {
            line: 64,
            column: 1
          }
        }],
        line: 50
      },
      "16": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "17": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "18": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 37
          }
        }, {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 59,
            column: 54
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/lib/polyfills.ts"],
      sourcesContent: ["/**\n * Polyfills for browser and Node.js environments\n * \u89E3\u51B3\u8DE8\u73AF\u5883\u4F9D\u8D56\u95EE\u9898\n */\n\n// Polyfill global fetch for environments where it might be missing\nif (typeof window !== 'undefined') {\n  // Browser environment\n  if (!window.fetch) {\n    import('cross-fetch').then(({ default: fetch }) => {\n      window.fetch = fetch;\n    });\n  }\n} else {\n  // Node.js environment\n  if (typeof global !== 'undefined' && !global.fetch) {\n    import('cross-fetch').then(({ default: fetch }) => {\n      global.fetch = fetch;\n    });\n  }\n}\n\nexport {}; "],
      names: ["window", "fetch", "then", "default", "global"],
      mappings: "AAAA;;;CAGC,GAED,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACnE,IAAI,OAAOA,WAAW,aAAa;IACjC,sBAAsB;IACtB,IAAI,CAACA,OAAOC,KAAK,EAAE;QACjB,mEAAA,QAAO,iBAAeC,IAAI,CAAC,CAAC,EAAEC,SAASF,KAAK,EAAE;YAC5CD,OAAOC,KAAK,GAAGA;QACjB;IACF;AACF,OAAO;IACL,sBAAsB;IACtB,IAAI,OAAOG,WAAW,eAAe,CAACA,OAAOH,KAAK,EAAE;QAClD,mEAAA,QAAO,iBAAeC,IAAI,CAAC,CAAC,EAAEC,SAASF,KAAK,EAAE;YAC5CG,OAAOH,KAAK,GAAGA;QACjB;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "edc2707bb823af59b352c3ac5fc01e775860c183"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sitkv1l9o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sitkv1l9o();
cov_1sitkv1l9o().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1sitkv1l9o().f[0]++;
  cov_1sitkv1l9o().s[1]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1sitkv1l9o().b[0][0]++;
    cov_1sitkv1l9o().s[2]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1sitkv1l9o().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1sitkv1l9o().s[3]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1sitkv1l9o().s[4]++, new WeakMap());
  /* istanbul ignore next */
  cov_1sitkv1l9o().s[5]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1sitkv1l9o().f[1]++;
    cov_1sitkv1l9o().s[6]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1sitkv1l9o().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1sitkv1l9o().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1sitkv1l9o().f[2]++;
  cov_1sitkv1l9o().s[7]++;
  if (
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1sitkv1l9o().b[2][0]++;
    cov_1sitkv1l9o().s[8]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1sitkv1l9o().b[2][1]++;
  }
  cov_1sitkv1l9o().s[9]++;
  if (
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1sitkv1l9o().b[4][0]++;
    cov_1sitkv1l9o().s[10]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1sitkv1l9o().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1sitkv1l9o().s[11]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1sitkv1l9o().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1sitkv1l9o().b[6][0]++;
    cov_1sitkv1l9o().s[13]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1sitkv1l9o().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1sitkv1l9o().s[14]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1sitkv1l9o().s[15]++,
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1sitkv1l9o().s[16]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1sitkv1l9o().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_1sitkv1l9o().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1sitkv1l9o().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1sitkv1l9o().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1sitkv1l9o().s[18]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1sitkv1l9o().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1sitkv1l9o().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1sitkv1l9o().s[19]++;
      if (
      /* istanbul ignore next */
      (cov_1sitkv1l9o().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1sitkv1l9o().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1sitkv1l9o().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1sitkv1l9o().b[12][0]++;
        cov_1sitkv1l9o().s[20]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1sitkv1l9o().b[12][1]++;
        cov_1sitkv1l9o().s[21]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1sitkv1l9o().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1sitkv1l9o().s[22]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1sitkv1l9o().s[23]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1sitkv1l9o().b[14][0]++;
    cov_1sitkv1l9o().s[24]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1sitkv1l9o().b[14][1]++;
  }
  cov_1sitkv1l9o().s[25]++;
  return newObj;
}
/* istanbul ignore next */
cov_1sitkv1l9o().s[26]++;
if (typeof window !== 'undefined') {
  /* istanbul ignore next */
  cov_1sitkv1l9o().b[15][0]++;
  cov_1sitkv1l9o().s[27]++;
  // Browser environment
  if (!window.fetch) {
    /* istanbul ignore next */
    cov_1sitkv1l9o().b[16][0]++;
    cov_1sitkv1l9o().s[28]++;
    Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1sitkv1l9o().f[3]++;
      cov_1sitkv1l9o().s[29]++;
      return /*#__PURE__*/_interop_require_wildcard(require("cross-fetch"));
    }).then(({
      default: fetch
    }) => {
      /* istanbul ignore next */
      cov_1sitkv1l9o().f[4]++;
      cov_1sitkv1l9o().s[30]++;
      window.fetch = fetch;
    });
  } else
  /* istanbul ignore next */
  {
    cov_1sitkv1l9o().b[16][1]++;
  }
} else {
  /* istanbul ignore next */
  cov_1sitkv1l9o().b[15][1]++;
  cov_1sitkv1l9o().s[31]++;
  // Node.js environment
  if (
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[18][0]++, typeof global !== 'undefined') &&
  /* istanbul ignore next */
  (cov_1sitkv1l9o().b[18][1]++, !global.fetch)) {
    /* istanbul ignore next */
    cov_1sitkv1l9o().b[17][0]++;
    cov_1sitkv1l9o().s[32]++;
    Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1sitkv1l9o().f[5]++;
      cov_1sitkv1l9o().s[33]++;
      return /*#__PURE__*/_interop_require_wildcard(require("cross-fetch"));
    }).then(({
      default: fetch
    }) => {
      /* istanbul ignore next */
      cov_1sitkv1l9o().f[6]++;
      cov_1sitkv1l9o().s[34]++;
      global.fetch = fetch;
    });
  } else
  /* istanbul ignore next */
  {
    cov_1sitkv1l9o().b[17][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ3aW5kb3ciLCJjb3ZfMXNpdGt2MWw5byIsImIiLCJzIiwiZmV0Y2giLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJmIiwiX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCIsInJlcXVpcmUiLCJkZWZhdWx0IiwiZ2xvYmFsIl0sInNvdXJjZXMiOlsiL1VzZXJzL3l1ZGV5b3UvRGVza3RvcC9zbS9zb2Npb21pbnQvc3JjL2xpYi9wb2x5ZmlsbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQb2x5ZmlsbHMgZm9yIGJyb3dzZXIgYW5kIE5vZGUuanMgZW52aXJvbm1lbnRzXG4gKiDop6PlhrPot6jnjq/looPkvp3otZbpl67pophcbiAqL1xuXG4vLyBQb2x5ZmlsbCBnbG9iYWwgZmV0Y2ggZm9yIGVudmlyb25tZW50cyB3aGVyZSBpdCBtaWdodCBiZSBtaXNzaW5nXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgLy8gQnJvd3NlciBlbnZpcm9ubWVudFxuICBpZiAoIXdpbmRvdy5mZXRjaCkge1xuICAgIGltcG9ydCgnY3Jvc3MtZmV0Y2gnKS50aGVuKCh7IGRlZmF1bHQ6IGZldGNoIH0pID0+IHtcbiAgICAgIHdpbmRvdy5mZXRjaCA9IGZldGNoO1xuICAgIH0pO1xuICB9XG59IGVsc2Uge1xuICAvLyBOb2RlLmpzIGVudmlyb25tZW50XG4gIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyAmJiAhZ2xvYmFsLmZldGNoKSB7XG4gICAgaW1wb3J0KCdjcm9zcy1mZXRjaCcpLnRoZW4oKHsgZGVmYXVsdDogZmV0Y2ggfSkgPT4ge1xuICAgICAgZ2xvYmFsLmZldGNoID0gZmV0Y2g7XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IHt9OyAiXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FBQSxDQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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