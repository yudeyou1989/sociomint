d3a05b7f9455dd5be30d47d1c02acf12
'use client';
"use strict";

/* istanbul ignore next */
function cov_2e9w7anruz() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx";
  var hash = "ec3b568899694e8b36c7fee8d7497bcb7f4d9eed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "9": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "10": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 103
        }
      },
      "11": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 85
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "13": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "14": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "15": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "16": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 69,
          column: 2
        }
      },
      "17": {
        start: {
          line: 71,
          column: 32
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "18": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 83
        }
      },
      "19": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "20": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "21": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "22": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "23": {
        start: {
          line: 82,
          column: 24
        },
        end: {
          line: 125,
          column: 1
        }
      },
      "24": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "25": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "26": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 50
        }
      },
      "27": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 88,
          column: 46
        }
      },
      "28": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 55
        }
      },
      "29": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 90,
          column: 49
        }
      },
      "30": {
        start: {
          line: 91,
          column: 24
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "31": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 92,
          column: 55
        }
      },
      "32": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 93,
          column: 51
        }
      },
      "33": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 60
        }
      },
      "34": {
        start: {
          line: 97,
          column: 27
        },
        end: {
          line: 97,
          column: 61
        }
      },
      "35": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 27
        }
      },
      "36": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "37": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 80
        }
      },
      "38": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 46
        }
      },
      "39": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "40": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "41": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 40
        }
      },
      "42": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 20
        }
      },
      "43": {
        start: {
          line: 127,
          column: 32
        },
        end: {
          line: 127,
          column: 72
        }
      },
      "44": {
        start: {
          line: 128,
          column: 44
        },
        end: {
          line: 128,
          column: 71
        }
      },
      "45": {
        start: {
          line: 129,
          column: 52
        },
        end: {
          line: 129,
          column: 97
        }
      },
      "46": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "47": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 30
        }
      },
      "48": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "49": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "50": {
        start: {
          line: 140,
          column: 36
        },
        end: {
          line: 140,
          column: 59
        }
      },
      "51": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 39
        }
      },
      "52": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "53": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "54": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 35
        }
      },
      "55": {
        start: {
          line: 162,
          column: 26
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "56": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 29
        }
      },
      "57": {
        start: {
          line: 166,
          column: 23
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "58": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "59": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "60": {
        start: {
          line: 172,
          column: 31
        },
        end: {
          line: 172,
          column: 75
        }
      },
      "61": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "62": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 71
        }
      },
      "63": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 42
        }
      },
      "64": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "65": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "66": {
        start: {
          line: 191,
          column: 29
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "67": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 28
        }
      },
      "68": {
        start: {
          line: 195,
          column: 27
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "69": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 59
        }
      },
      "70": {
        start: {
          line: 196,
          column: 52
        },
        end: {
          line: 196,
          column: 59
        }
      },
      "71": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "72": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 35
        }
      },
      "73": {
        start: {
          line: 200,
          column: 29
        },
        end: {
          line: 200,
          column: 50
        }
      },
      "74": {
        start: {
          line: 201,
          column: 31
        },
        end: {
          line: 201,
          column: 72
        }
      },
      "75": {
        start: {
          line: 202,
          column: 28
        },
        end: {
          line: 202,
          column: 31
        }
      },
      "76": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "77": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 91
        }
      },
      "78": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 50
        }
      },
      "79": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 214,
          column: 20
        }
      },
      "80": {
        start: {
          line: 208,
          column: 31
        },
        end: {
          line: 214,
          column: 17
        }
      },
      "81": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 33
        }
      },
      "82": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 44
        }
      },
      "83": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 232,
          column: 7
        }
      },
      "84": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 16
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 13
          },
          end: {
            line: 62,
            column: 14
          }
        },
        loc: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 25
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 17
          }
        },
        loc: {
          start: {
            line: 63,
            column: 26
          },
          end: {
            line: 63,
            column: 28
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        },
        loc: {
          start: {
            line: 64,
            column: 30
          },
          end: {
            line: 64,
            column: 32
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 65,
            column: 20
          }
        },
        loc: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 31
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 66,
            column: 22
          },
          end: {
            line: 66,
            column: 23
          }
        },
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 34
          }
        },
        line: 66
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 33
          }
        },
        loc: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 71
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 75,
            column: 28
          },
          end: {
            line: 75,
            column: 29
          }
        },
        loc: {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 75
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 82,
            column: 25
          }
        },
        loc: {
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 82
      },
      "12": {
        name: "WalletProvider",
        decl: {
          start: {
            line: 126,
            column: 9
          },
          end: {
            line: 126,
            column: 23
          }
        },
        loc: {
          start: {
            line: 126,
            column: 38
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 126
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 131,
            column: 20
          },
          end: {
            line: 131,
            column: 21
          }
        },
        loc: {
          start: {
            line: 131,
            column: 34
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 131
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 162,
            column: 26
          },
          end: {
            line: 162,
            column: 27
          }
        },
        loc: {
          start: {
            line: 162,
            column: 40
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 162
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 166,
            column: 23
          },
          end: {
            line: 166,
            column: 24
          }
        },
        loc: {
          start: {
            line: 166,
            column: 33
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 166
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 191,
            column: 29
          },
          end: {
            line: 191,
            column: 30
          }
        },
        loc: {
          start: {
            line: 191,
            column: 39
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 191
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 195,
            column: 27
          },
          end: {
            line: 195,
            column: 28
          }
        },
        loc: {
          start: {
            line: 195,
            column: 37
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 195
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 208,
            column: 22
          },
          end: {
            line: 208,
            column: 23
          }
        },
        loc: {
          start: {
            line: 208,
            column: 31
          },
          end: {
            line: 214,
            column: 17
          }
        },
        line: 208
      },
      "19": {
        name: "useWallet",
        decl: {
          start: {
            line: 234,
            column: 9
          },
          end: {
            line: 234,
            column: 18
          }
        },
        loc: {
          start: {
            line: 234,
            column: 21
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 234
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 72,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 72,
            column: 40
          }
        }, {
          start: {
            line: 72,
            column: 44
          },
          end: {
            line: 72,
            column: 82
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 76,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 76,
            column: 37
          }
        }, {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 57
          }
        }],
        line: 76
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 18
          },
          end: {
            line: 106,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 35
          },
          end: {
            line: 106,
            column: 52
          }
        }, {
          start: {
            line: 106,
            column: 55
          },
          end: {
            line: 106,
            column: 117
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 106,
            column: 55
          },
          end: {
            line: 106,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 72
          },
          end: {
            line: 106,
            column: 97
          }
        }, {
          start: {
            line: 106,
            column: 100
          },
          end: {
            line: 106,
            column: 117
          }
        }],
        line: 106
      },
      "8": {
        loc: {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 134,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 31
          },
          end: {
            line: 134,
            column: 51
          }
        }, {
          start: {
            line: 134,
            column: 54
          },
          end: {
            line: 134,
            column: 63
          }
        }],
        line: 134
      },
      "9": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "10": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 196,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 196,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "11": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 31
          }
        }, {
          start: {
            line: 196,
            column: 35
          },
          end: {
            line: 196,
            column: 50
          }
        }],
        line: 196
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/contexts/WalletContext.tsx"],
      sourcesContent: ["'use client';\n\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { ethers, formatEther } from 'ethers';\nimport { WalletType, getConnectedWalletType, disconnectWallet as disconnectWalletService } from '@/services/walletService';\nimport contractService from '@/services/contractService';\nimport Logger from '@/services/logger';\nimport config from '@/lib/config';\n\n// \u521B\u5EFA\u65E5\u5FD7\u8BB0\u5F55\u5668\nconst logger = Logger.createContextLogger({ component: 'WalletContext' });\n\n// \u94B1\u5305\u72B6\u6001\u63A5\u53E3\nexport interface WalletState {\n  isConnected: boolean;\n  address?: string;\n  chainId?: number;\n  balance?: {\n    bnb: string;\n    sm?: string;\n    flowers?: string;\n  };\n  network?: {\n    id: number;\n    name: string;\n  };\n  account?: {\n    address: string;\n  };\n}\n\n// \u53EF\u7528\u94B1\u5305\u63A5\u53E3\nexport interface AvailableWallet {\n  type: WalletType;\n  name: string;\n  icon: string;\n  installed: boolean;\n}\n\n// \u94B1\u5305\u4E0A\u4E0B\u6587\u63A5\u53E3\ninterface WalletContextType {\n  wallet: WalletState;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  updateBalances: () => Promise<void>;\n  connectWallet: (type: WalletType) => Promise<void>;\n  disconnectWallet: () => Promise<void>;\n  isConnecting: boolean;\n  availableWallets: AvailableWallet[];\n}\n\n// \u521B\u5EFA\u4E0A\u4E0B\u6587\uFF0C\u63D0\u4F9B\u9ED8\u8BA4\u503C\nconst defaultWalletState: WalletState = {\n  isConnected: false,\n};\n\n// \u9ED8\u8BA4\u53EF\u7528\u94B1\u5305\u5217\u8868\nconst defaultAvailableWallets: AvailableWallet[] = [\n  {\n    type: 'metamask',\n    name: 'MetaMask',\n    icon: '/images/wallets/metamask.svg',\n    installed: true\n  },\n  {\n    type: 'coinbase',\n    name: 'Coinbase Wallet',\n    icon: '/images/wallets/coinbase.svg',\n    installed: true\n  },\n  {\n    type: 'walletconnect',\n    name: 'WalletConnect',\n    icon: '/images/wallets/walletconnect.svg',\n    installed: true\n  }\n];\n\nconst WalletContext = createContext<WalletContextType>({\n  wallet: defaultWalletState,\n  connect: async () => {},\n  disconnect: async () => {},\n  updateBalances: async () => {},\n  connectWallet: async () => {},\n  disconnectWallet: async () => {},\n  isConnecting: false,\n  availableWallets: defaultAvailableWallets,\n});\n\n// \u94B1\u5305\u63D0\u4F9B\u8005Props\ninterface WalletProviderProps {\n  children: ReactNode;\n}\n\n// \u68C0\u67E5\u6D4F\u89C8\u5668\u662F\u5426\u6709MetaMask\u6216\u5176\u4ED6\u4EE5\u592A\u574A\u63D0\u4F9B\u8005\nconst checkIfBrowserHasWallet = (): boolean => {\n  return typeof window !== 'undefined' && typeof window.ethereum !== 'undefined';\n};\n\n// \u83B7\u53D6\u4EE5\u592A\u574A\u63D0\u4F9B\u8005\nconst getEthereumProvider = (): ethers.BrowserProvider => {\n  if (typeof window === 'undefined' || !window.ethereum) {\n    throw new Error('\u6CA1\u6709\u68C0\u6D4B\u5230Ethereum\u63D0\u4F9B\u8005');\n  }\n  return new ethers.BrowserProvider(window.ethereum as any);\n};\n\n// \u8FDE\u63A5\u5230\u4EE5\u592A\u574A\u94B1\u5305\nconst connectToWallet = async (): Promise<WalletState> => {\n  try {\n    if (!checkIfBrowserHasWallet()) {\n      throw new Error('\u8BF7\u5B89\u88C5MetaMask\u6216\u5176\u4ED6\u94B1\u5305\u6269\u5C55');\n    }\n\n    // \u8BF7\u6C42\u7528\u6237\u6388\u6743\u8FDE\u63A5\u94B1\u5305\n    const provider = getEthereumProvider();\n    await provider.send('eth_requestAccounts', []);\n\n    const signer = await provider.getSigner();\n    const address = await signer.getAddress();\n    const networkInfo = await provider.getNetwork();\n    const chainId = Number(networkInfo.chainId);\n\n    // \u521D\u59CB\u5316\u5408\u7EA6\u670D\u52A1\n    await contractService.initialize(provider);\n\n    // \u83B7\u53D6\u4F59\u989D\u4FE1\u606F\n    const bnbBalance = await provider.getBalance(address);\n\n    let smBalance = '0';\n    try {\n      smBalance = await contractService.getTokenBalance(address);\n    } catch (error) {\n      console.warn('\u83B7\u53D6SM\u4EE3\u5E01\u4F59\u989D\u5931\u8D25', error);\n    }\n\n    const network = {\n      id: chainId,\n      name: chainId === 56 ? 'BNB Smart Chain' :\n           chainId === 97 ? 'BNB Smart Chain Testnet' :\n           'Unknown Network'\n    };\n\n    return {\n      isConnected: true,\n      address,\n      chainId,\n      balance: {\n        bnb: formatEther(bnbBalance),\n        sm: smBalance\n      },\n      network,\n      account: { address }\n    };\n  } catch (error) {\n    console.error('\u8FDE\u63A5\u94B1\u5305\u5931\u8D25:', error);\n    throw error;\n  }\n};\n\n// \u94B1\u5305\u63D0\u4F9B\u8005\u7EC4\u4EF6\nexport function WalletProvider({ children }: WalletProviderProps) {\n  const [wallet, setWallet] = useState<WalletState>(defaultWalletState);\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const [availableWallets, setAvailableWallets] = useState<AvailableWallet[]>(defaultAvailableWallets);\n\n  // \u8FDE\u63A5\u94B1\u5305 - \u7EDF\u4E00\u7684\u8FDE\u63A5\u51FD\u6570\n  const connect = async (type?: WalletType) => {\n    setIsConnecting(true);\n    try {\n      logger.info(type ? `\u6B63\u5728\u8FDE\u63A5 ${type} \u94B1\u5305...` : '\u8FDE\u63A5\u94B1\u5305...', {\n        action: 'connect',\n        additionalData: { walletType: type }\n      });\n\n      const connectedWallet = await connectToWallet();\n      setWallet(connectedWallet);\n\n      logger.info('\u94B1\u5305\u5DF2\u8FDE\u63A5', {\n        action: 'connect',\n        additionalData: { address: connectedWallet.address, walletType: type }\n      });\n    } catch (error) {\n      logger.error('\u8FDE\u63A5\u94B1\u5305\u5931\u8D25', {\n        action: 'connect',\n        additionalData: { error, walletType: type }\n      });\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // \u6309\u7C7B\u578B\u8FDE\u63A5\u94B1\u5305 - \u4E3A\u4E86\u4FDD\u6301API\u517C\u5BB9\u6027\n  const connectWallet = async (type: WalletType) => {\n    return connect(type);\n  };\n\n  // \u65AD\u5F00\u8FDE\u63A5 - \u7EDF\u4E00\u7684\u65AD\u5F00\u8FDE\u63A5\u51FD\u6570\n  const disconnect = async () => {\n    try {\n      logger.info('\u65AD\u5F00\u94B1\u5305\u8FDE\u63A5...', {\n        action: 'disconnect'\n      });\n\n      // \u5C1D\u8BD5\u65AD\u5F00WalletConnect\u8FDE\u63A5\n      const walletType = getConnectedWalletType();\n      if (walletType) {\n        await disconnectWalletService(walletType);\n      }\n\n      // \u91CD\u7F6E\u72B6\u6001\n      setWallet(defaultWalletState);\n\n      logger.info('\u94B1\u5305\u5DF2\u65AD\u5F00\u8FDE\u63A5', {\n        action: 'disconnect'\n      });\n    } catch (error) {\n      logger.error('\u65AD\u5F00\u94B1\u5305\u8FDE\u63A5\u5931\u8D25', {\n        action: 'disconnect',\n        additionalData: { error }\n      });\n    }\n  };\n\n  // \u65AD\u5F00\u94B1\u5305\u8FDE\u63A5 - \u4E3A\u4E86\u4FDD\u6301API\u517C\u5BB9\u6027\n  const disconnectWallet = async () => {\n    return disconnect();\n  };\n\n  // \u66F4\u65B0\u4F59\u989D\n  const updateBalances = async () => {\n    if (!wallet.isConnected || !wallet.address) return;\n\n    try {\n      console.log('\u66F4\u65B0\u4F59\u989D...');\n\n      // \u83B7\u53D6\u771F\u5B9E\u4F59\u989D\n      const provider = getEthereumProvider();\n      const bnbBalance = await provider.getBalance(wallet.address);\n\n      let smBalance = '0';\n      try {\n        smBalance = await contractService.getTokenBalance(wallet.address);\n      } catch (error) {\n        console.warn('\u83B7\u53D6SM\u4EE3\u5E01\u4F59\u989D\u5931\u8D25', error);\n      }\n\n      setWallet(prev => ({\n        ...prev,\n        balance: {\n          bnb: formatEther(bnbBalance),\n          sm: smBalance\n        }\n      }));\n\n      console.log('\u4F59\u989D\u5DF2\u66F4\u65B0');\n    } catch (error) {\n      console.error('\u66F4\u65B0\u4F59\u989D\u5931\u8D25:', error);\n    }\n  };\n\n  return (\n    <WalletContext.Provider value={{\n      wallet,\n      connect,\n      disconnect,\n      updateBalances,\n      connectWallet,\n      disconnectWallet,\n      isConnecting,\n      availableWallets\n    }}>\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\n// \u94B1\u5305\u94A9\u5B50\nexport function useWallet() {\n  return useContext(WalletContext);\n}"],
      names: ["WalletProvider", "useWallet", "logger", "Logger", "createContextLogger", "component", "defaultWalletState", "isConnected", "defaultAvailableWallets", "type", "name", "icon", "installed", "WalletContext", "createContext", "wallet", "connect", "disconnect", "updateBalances", "connectWallet", "disconnectWallet", "isConnecting", "availableWallets", "checkIfBrowserHasWallet", "window", "ethereum", "getEthereumProvider", "Error", "ethers", "BrowserProvider", "connectToWallet", "provider", "send", "signer", "getSigner", "address", "getAddress", "networkInfo", "getNetwork", "chainId", "Number", "contractService", "initialize", "bnbBalance", "getBalance", "smBalance", "getTokenBalance", "error", "console", "warn", "network", "id", "balance", "bnb", "formatEther", "sm", "account", "children", "setWallet", "useState", "setIsConnecting", "setAvailableWallets", "info", "action", "additionalData", "walletType", "connectedWallet", "getConnectedWalletType", "disconnectWalletService", "log", "prev", "Provider", "value", "useContext"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ec3b568899694e8b36c7fee8d7497bcb7f4d9eed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e9w7anruz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e9w7anruz();
cov_2e9w7anruz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[0]++;
  cov_2e9w7anruz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2e9w7anruz().s[3]++;
_export(exports, {
  WalletProvider: function () {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[1]++;
    cov_2e9w7anruz().s[4]++;
    return WalletProvider;
  },
  useWallet: function () {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[2]++;
    cov_2e9w7anruz().s[5]++;
    return useWallet;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2e9w7anruz().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2e9w7anruz().s[7]++, require("react"));
const _ethers =
/* istanbul ignore next */
(cov_2e9w7anruz().s[8]++, require("ethers"));
const _walletService =
/* istanbul ignore next */
(cov_2e9w7anruz().s[9]++, require("../services/walletService"));
const _contractService =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[10]++, _interop_require_default(require("../services/contractService")));
const _logger =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[11]++, _interop_require_default(require("../services/logger")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[3]++;
  cov_2e9w7anruz().s[12]++;
  return /* istanbul ignore next */(cov_2e9w7anruz().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[0][1]++, {
    default: obj
  });
}
// 创建日志记录器
const logger =
/* istanbul ignore next */
(cov_2e9w7anruz().s[13]++, _logger.default.createContextLogger({
  component: 'WalletContext'
}));
// 创建上下文，提供默认值
const defaultWalletState =
/* istanbul ignore next */
(cov_2e9w7anruz().s[14]++, {
  isConnected: false
});
// 默认可用钱包列表
const defaultAvailableWallets =
/* istanbul ignore next */
(cov_2e9w7anruz().s[15]++, [{
  type: 'metamask',
  name: 'MetaMask',
  icon: '/images/wallets/metamask.svg',
  installed: true
}, {
  type: 'coinbase',
  name: 'Coinbase Wallet',
  icon: '/images/wallets/coinbase.svg',
  installed: true
}, {
  type: 'walletconnect',
  name: 'WalletConnect',
  icon: '/images/wallets/walletconnect.svg',
  installed: true
}]);
const WalletContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e9w7anruz().s[16]++, (0, _react.createContext)({
  wallet: defaultWalletState,
  connect: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[4]++;
  },
  disconnect: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[5]++;
  },
  updateBalances: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[6]++;
  },
  connectWallet: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[7]++;
  },
  disconnectWallet: async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[8]++;
  },
  isConnecting: false,
  availableWallets: defaultAvailableWallets
}));
// 检查浏览器是否有MetaMask或其他以太坊提供者
/* istanbul ignore next */
cov_2e9w7anruz().s[17]++;
const checkIfBrowserHasWallet = () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[9]++;
  cov_2e9w7anruz().s[18]++;
  return /* istanbul ignore next */(cov_2e9w7anruz().b[2][0]++, typeof window !== 'undefined') &&
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[2][1]++, typeof window.ethereum !== 'undefined');
};
// 获取以太坊提供者
/* istanbul ignore next */
cov_2e9w7anruz().s[19]++;
const getEthereumProvider = () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[10]++;
  cov_2e9w7anruz().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[4][0]++, typeof window === 'undefined') ||
  /* istanbul ignore next */
  (cov_2e9w7anruz().b[4][1]++, !window.ethereum)) {
    /* istanbul ignore next */
    cov_2e9w7anruz().b[3][0]++;
    cov_2e9w7anruz().s[21]++;
    throw new Error('没有检测到Ethereum提供者');
  } else
  /* istanbul ignore next */
  {
    cov_2e9w7anruz().b[3][1]++;
  }
  cov_2e9w7anruz().s[22]++;
  return new _ethers.ethers.BrowserProvider(window.ethereum);
};
// 连接到以太坊钱包
/* istanbul ignore next */
cov_2e9w7anruz().s[23]++;
const connectToWallet = async () => {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[11]++;
  cov_2e9w7anruz().s[24]++;
  try {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[25]++;
    if (!checkIfBrowserHasWallet()) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[5][0]++;
      cov_2e9w7anruz().s[26]++;
      throw new Error('请安装MetaMask或其他钱包扩展');
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[5][1]++;
    }
    // 请求用户授权连接钱包
    const provider =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[27]++, getEthereumProvider());
    /* istanbul ignore next */
    cov_2e9w7anruz().s[28]++;
    await provider.send('eth_requestAccounts', []);
    const signer =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[29]++, await provider.getSigner());
    const address =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[30]++, await signer.getAddress());
    const networkInfo =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[31]++, await provider.getNetwork());
    const chainId =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[32]++, Number(networkInfo.chainId));
    // 初始化合约服务
    /* istanbul ignore next */
    cov_2e9w7anruz().s[33]++;
    await _contractService.default.initialize(provider);
    // 获取余额信息
    const bnbBalance =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[34]++, await provider.getBalance(address));
    let smBalance =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[35]++, '0');
    /* istanbul ignore next */
    cov_2e9w7anruz().s[36]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[37]++;
      smBalance = await _contractService.default.getTokenBalance(address);
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[38]++;
      console.warn('获取SM代币余额失败', error);
    }
    const network =
    /* istanbul ignore next */
    (cov_2e9w7anruz().s[39]++, {
      id: chainId,
      name: chainId === 56 ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[6][0]++, 'BNB Smart Chain') :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[6][1]++, chainId === 97 ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[7][0]++, 'BNB Smart Chain Testnet') :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[7][1]++, 'Unknown Network'))
    });
    /* istanbul ignore next */
    cov_2e9w7anruz().s[40]++;
    return {
      isConnected: true,
      address,
      chainId,
      balance: {
        bnb: (0, _ethers.formatEther)(bnbBalance),
        sm: smBalance
      },
      network,
      account: {
        address
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2e9w7anruz().s[41]++;
    console.error('连接钱包失败:', error);
    /* istanbul ignore next */
    cov_2e9w7anruz().s[42]++;
    throw error;
  }
};
function WalletProvider({
  children
}) {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[12]++;
  const [wallet, setWallet] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[43]++, (0, _react.useState)(defaultWalletState));
  const [isConnecting, setIsConnecting] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[44]++, (0, _react.useState)(false));
  const [availableWallets, setAvailableWallets] =
  /* istanbul ignore next */
  (cov_2e9w7anruz().s[45]++, (0, _react.useState)(defaultAvailableWallets));
  // 连接钱包 - 统一的连接函数
  /* istanbul ignore next */
  cov_2e9w7anruz().s[46]++;
  const connect = async type => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[13]++;
    cov_2e9w7anruz().s[47]++;
    setIsConnecting(true);
    /* istanbul ignore next */
    cov_2e9w7anruz().s[48]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[49]++;
      logger.info(type ?
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[8][0]++, `正在连接 ${type} 钱包...`) :
      /* istanbul ignore next */
      (cov_2e9w7anruz().b[8][1]++, '连接钱包...'), {
        action: 'connect',
        additionalData: {
          walletType: type
        }
      });
      const connectedWallet =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[50]++, await connectToWallet());
      /* istanbul ignore next */
      cov_2e9w7anruz().s[51]++;
      setWallet(connectedWallet);
      /* istanbul ignore next */
      cov_2e9w7anruz().s[52]++;
      logger.info('钱包已连接', {
        action: 'connect',
        additionalData: {
          address: connectedWallet.address,
          walletType: type
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[53]++;
      logger.error('连接钱包失败', {
        action: 'connect',
        additionalData: {
          error,
          walletType: type
        }
      });
    } finally {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[54]++;
      setIsConnecting(false);
    }
  };
  // 按类型连接钱包 - 为了保持API兼容性
  /* istanbul ignore next */
  cov_2e9w7anruz().s[55]++;
  const connectWallet = async type => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[14]++;
    cov_2e9w7anruz().s[56]++;
    return connect(type);
  };
  // 断开连接 - 统一的断开连接函数
  /* istanbul ignore next */
  cov_2e9w7anruz().s[57]++;
  const disconnect = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[15]++;
    cov_2e9w7anruz().s[58]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[59]++;
      logger.info('断开钱包连接...', {
        action: 'disconnect'
      });
      // 尝试断开WalletConnect连接
      const walletType =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[60]++, (0, _walletService.getConnectedWalletType)());
      /* istanbul ignore next */
      cov_2e9w7anruz().s[61]++;
      if (walletType) {
        /* istanbul ignore next */
        cov_2e9w7anruz().b[9][0]++;
        cov_2e9w7anruz().s[62]++;
        await (0, _walletService.disconnectWallet)(walletType);
      } else
      /* istanbul ignore next */
      {
        cov_2e9w7anruz().b[9][1]++;
      }
      // 重置状态
      cov_2e9w7anruz().s[63]++;
      setWallet(defaultWalletState);
      /* istanbul ignore next */
      cov_2e9w7anruz().s[64]++;
      logger.info('钱包已断开连接', {
        action: 'disconnect'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[65]++;
      logger.error('断开钱包连接失败', {
        action: 'disconnect',
        additionalData: {
          error
        }
      });
    }
  };
  // 断开钱包连接 - 为了保持API兼容性
  /* istanbul ignore next */
  cov_2e9w7anruz().s[66]++;
  const disconnectWallet = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[16]++;
    cov_2e9w7anruz().s[67]++;
    return disconnect();
  };
  // 更新余额
  /* istanbul ignore next */
  cov_2e9w7anruz().s[68]++;
  const updateBalances = async () => {
    /* istanbul ignore next */
    cov_2e9w7anruz().f[17]++;
    cov_2e9w7anruz().s[69]++;
    if (
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[11][0]++, !wallet.isConnected) ||
    /* istanbul ignore next */
    (cov_2e9w7anruz().b[11][1]++, !wallet.address)) {
      /* istanbul ignore next */
      cov_2e9w7anruz().b[10][0]++;
      cov_2e9w7anruz().s[70]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2e9w7anruz().b[10][1]++;
    }
    cov_2e9w7anruz().s[71]++;
    try {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[72]++;
      console.log('更新余额...');
      // 获取真实余额
      const provider =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[73]++, getEthereumProvider());
      const bnbBalance =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[74]++, await provider.getBalance(wallet.address));
      let smBalance =
      /* istanbul ignore next */
      (cov_2e9w7anruz().s[75]++, '0');
      /* istanbul ignore next */
      cov_2e9w7anruz().s[76]++;
      try {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[77]++;
        smBalance = await _contractService.default.getTokenBalance(wallet.address);
      } catch (error) {
        /* istanbul ignore next */
        cov_2e9w7anruz().s[78]++;
        console.warn('获取SM代币余额失败', error);
      }
      /* istanbul ignore next */
      cov_2e9w7anruz().s[79]++;
      setWallet(prev => {
        /* istanbul ignore next */
        cov_2e9w7anruz().f[18]++;
        cov_2e9w7anruz().s[80]++;
        return {
          ...prev,
          balance: {
            bnb: (0, _ethers.formatEther)(bnbBalance),
            sm: smBalance
          }
        };
      });
      /* istanbul ignore next */
      cov_2e9w7anruz().s[81]++;
      console.log('余额已更新');
    } catch (error) {
      /* istanbul ignore next */
      cov_2e9w7anruz().s[82]++;
      console.error('更新余额失败:', error);
    }
  };
  /* istanbul ignore next */
  cov_2e9w7anruz().s[83]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(WalletContext.Provider, {
    value: {
      wallet,
      connect,
      disconnect,
      updateBalances,
      connectWallet,
      disconnectWallet,
      isConnecting,
      availableWallets
    },
    children: children
  });
}
function useWallet() {
  /* istanbul ignore next */
  cov_2e9w7anruz().f[19]++;
  cov_2e9w7anruz().s[84]++;
  return (0, _react.useContext)(WalletContext);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,