{"version":3,"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/__tests__/ui/Button.test.tsx"],"sourcesContent":["/**\n * Button组件测试\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport { Button } from '@/components/ui/Button';\n\ndescribe('Button Component', () => {\n  it('renders with default props', () => {\n    render(<Button>Click me</Button>);\n    const button = screen.getByRole('button', { name: /click me/i });\n    expect(button).toBeInTheDocument();\n    expect(button).toHaveClass('bg-primary');\n  });\n\n  it('renders with different variants', () => {\n    const { rerender } = render(<Button variant=\"destructive\">Delete</Button>);\n    expect(screen.getByRole('button')).toHaveClass('bg-red-500');\n\n    rerender(<Button variant=\"outline\">Outline</Button>);\n    expect(screen.getByRole('button')).toHaveClass('border');\n\n    rerender(<Button variant=\"ghost\">Ghost</Button>);\n    expect(screen.getByRole('button')).toHaveClass('bg-transparent');\n  });\n\n  it('renders with different sizes', () => {\n    const { rerender } = render(<Button size=\"sm\">Small</Button>);\n    expect(screen.getByRole('button')).toHaveClass('h-9');\n\n    rerender(<Button size=\"lg\">Large</Button>);\n    expect(screen.getByRole('button')).toHaveClass('h-11');\n  });\n\n  it('handles click events', () => {\n    const handleClick = jest.fn();\n    render(<Button onClick={handleClick}>Click me</Button>);\n    \n    fireEvent.click(screen.getByRole('button'));\n    expect(handleClick).toHaveBeenCalledTimes(1);\n  });\n\n  it('is disabled when disabled prop is true', () => {\n    render(<Button disabled>Disabled</Button>);\n    const button = screen.getByRole('button');\n    \n    expect(button).toBeDisabled();\n    expect(button).toHaveClass('disabled:opacity-50');\n  });\n\n  it('shows loading state', () => {\n    render(<Button loading>Loading</Button>);\n    const button = screen.getByRole('button');\n    \n    expect(button).toBeDisabled();\n    // 可以添加loading spinner的测试\n  });\n\n  it('applies custom className', () => {\n    render(<Button className=\"custom-class\">Custom</Button>);\n    expect(screen.getByRole('button')).toHaveClass('custom-class');\n  });\n\n  it('forwards ref correctly', () => {\n    const ref = React.createRef<HTMLButtonElement>();\n    render(<Button ref={ref}>Ref test</Button>);\n    \n    expect(ref.current).toBeInstanceOf(HTMLButtonElement);\n  });\n\n  it('supports different button types', () => {\n    const { rerender } = render(<Button type=\"submit\">Submit</Button>);\n    expect(screen.getByRole('button')).toHaveAttribute('type', 'submit');\n\n    rerender(<Button type=\"reset\">Reset</Button>);\n    expect(screen.getByRole('button')).toHaveAttribute('type', 'reset');\n  });\n\n  it('handles keyboard navigation', () => {\n    const handleClick = jest.fn();\n    render(<Button onClick={handleClick}>Keyboard test</Button>);\n    \n    const button = screen.getByRole('button');\n    button.focus();\n    \n    fireEvent.keyDown(button, { key: 'Enter' });\n    expect(handleClick).toHaveBeenCalledTimes(1);\n    \n    fireEvent.keyDown(button, { key: ' ' });\n    expect(handleClick).toHaveBeenCalledTimes(2);\n  });\n});\n"],"names":["describe","it","render","Button","button","screen","getByRole","name","expect","toBeInTheDocument","toHaveClass","rerender","variant","size","handleClick","jest","fn","onClick","fireEvent","click","toHaveBeenCalledTimes","disabled","toBeDisabled","loading","className","ref","React","createRef","current","toBeInstanceOf","HTMLButtonElement","type","toHaveAttribute","focus","keyDown","key"],"mappings":"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"}