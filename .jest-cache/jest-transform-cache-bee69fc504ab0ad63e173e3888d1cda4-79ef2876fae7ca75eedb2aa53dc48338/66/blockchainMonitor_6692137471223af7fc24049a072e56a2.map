{"version":3,"names":["cov_1zie7tvuxg","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","getMonitorStatus","healthCheck","startBlockchainMonitor","stopBlockchainMonitor","RPC_URL","process","env","NEXT_PUBLIC_RPC_URL","SUPABASE_URL","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_SERVICE_KEY","SUPABASE_SERVICE_ROLE_KEY","DISCORD_WEBHOOK_URL","AIRDROP_POOL_ADDRESS","NEXT_PUBLIC_AIRDROP_POOL_ADDRESS","SM_TOKEN_ADDRESS","NEXT_PUBLIC_SM_TOKEN_ADDRESS","provider","_ethers","ethers","JsonRpcProvider","supabase","_supabasejs","createClient","AIRDROP_POOL_ABI","SM_TOKEN_ABI","airdropPoolContract","Contract","smTokenContract","monitorState","isRunning","lastBlockNumber","errorCount","startTime","Date","console","log","getBlockNumber","setupEventListeners","startPeriodicChecks","sendNotification","_sentryConfig","addBreadcrumb","blockNumber","error","reportError","component","action","removeAllListeners","on","handleFlowersDeposited","handleRewardClaimed","handleRoundStarted","handleRoundEnded","handleRewardsDistributed","handleEmergencyWithdraw","handleTokenTransfer","event","parsedEvent","user","amount","roundId","args","amountFormatted","formatEther","from","insert","event_type","user_id","round_id","Number","tx_hash","transactionHash","block_number","event_data","toString","slice","trackTransaction","txHash","endTime","startDate","endDate","toLocaleString","totalDeposits","participantCount","totalDepositsFormatted","totalRewards","totalRewardsFormatted","Error","to","value","setInterval","currentBlock","message","colors","info","success","warning","embed","title","description","color","timestamp","toISOString","footer","text","_discordAPI","sendWebhookMessage","uptime","now","getTime","network","gasPrice","Promise","all","getNetwork","getFeeData","healthy","networkId","chainId","formatUnits"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/lib/monitoring/blockchainMonitor.ts"],"sourcesContent":["/**\n * 区块链监控模块\n * 监控智能合约事件和交易状态\n */\n\nimport { ethers } from 'ethers';\nimport { createClient } from '@supabase/supabase-js';\nimport { sendWebhookMessage } from '@/lib/social/discordAPI';\nimport { reportError, trackTransaction, addBreadcrumb } from './sentryConfig';\nimport type { Database } from '@/types/supabase';\n\n// 环境变量\nconst RPC_URL = process.env.NEXT_PUBLIC_RPC_URL!;\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY!;\nconst DISCORD_WEBHOOK_URL = process.env.DISCORD_WEBHOOK_URL;\nconst AIRDROP_POOL_ADDRESS = process.env.NEXT_PUBLIC_AIRDROP_POOL_ADDRESS!;\nconst SM_TOKEN_ADDRESS = process.env.NEXT_PUBLIC_SM_TOKEN_ADDRESS!;\n\n// 初始化客户端\nconst provider = new ethers.JsonRpcProvider(RPC_URL);\nconst supabase = createClient<Database>(SUPABASE_URL, SUPABASE_SERVICE_KEY);\n\n// 合约 ABI（简化版）\nconst AIRDROP_POOL_ABI = [\n  'event FlowersDeposited(address indexed user, uint256 amount, uint256 roundId)',\n  'event RewardClaimed(address indexed user, uint256 amount, uint256 roundId)',\n  'event RoundStarted(uint256 indexed roundId, uint256 startTime, uint256 endTime)',\n  'event RoundEnded(uint256 indexed roundId, uint256 totalDeposits, uint256 participantCount)',\n  'event RewardsDistributed(uint256 indexed roundId, uint256 totalRewards)',\n  'event EmergencyWithdraw(address indexed user, uint256 amount)'\n];\n\nconst SM_TOKEN_ABI = [\n  'event Transfer(address indexed from, address indexed to, uint256 value)',\n  'event Approval(address indexed owner, address indexed spender, uint256 value)'\n];\n\n// 合约实例\nconst airdropPoolContract = new ethers.Contract(AIRDROP_POOL_ADDRESS, AIRDROP_POOL_ABI, provider);\nconst smTokenContract = new ethers.Contract(SM_TOKEN_ADDRESS, SM_TOKEN_ABI, provider);\n\n// 监控状态\ninterface MonitorState {\n  isRunning: boolean;\n  lastBlockNumber: number;\n  errorCount: number;\n  startTime: Date;\n}\n\nlet monitorState: MonitorState = {\n  isRunning: false,\n  lastBlockNumber: 0,\n  errorCount: 0,\n  startTime: new Date()\n};\n\n// 事件处理器类型\ntype EventHandler = (event: ethers.Log, parsedEvent: ethers.LogDescription) => Promise<void>;\n\n/**\n * 启动区块链监控\n */\nexport async function startBlockchainMonitor(): Promise<void> {\n  if (monitorState.isRunning) {\n    console.log('⚠️ Blockchain monitor is already running');\n    return;\n  }\n\n  try {\n    monitorState.isRunning = true;\n    monitorState.startTime = new Date();\n    monitorState.errorCount = 0;\n\n    // 获取当前区块号\n    monitorState.lastBlockNumber = await provider.getBlockNumber();\n    \n    console.log('🚀 Starting blockchain monitor...');\n    console.log(`📊 Current block: ${monitorState.lastBlockNumber}`);\n\n    // 设置事件监听器\n    setupEventListeners();\n\n    // 启动定期检查\n    startPeriodicChecks();\n\n    // 发送启动通知\n    await sendNotification('🚀 区块链监控已启动', 'success');\n\n    addBreadcrumb('Blockchain monitor started', 'monitor', {\n      blockNumber: monitorState.lastBlockNumber\n    });\n\n  } catch (error: any) {\n    console.error('❌ Failed to start blockchain monitor:', error);\n    reportError(error, { component: 'blockchainMonitor', action: 'start' });\n    monitorState.isRunning = false;\n    throw error;\n  }\n}\n\n/**\n * 停止区块链监控\n */\nexport async function stopBlockchainMonitor(): Promise<void> {\n  if (!monitorState.isRunning) {\n    console.log('⚠️ Blockchain monitor is not running');\n    return;\n  }\n\n  try {\n    monitorState.isRunning = false;\n\n    // 移除所有事件监听器\n    airdropPoolContract.removeAllListeners();\n    smTokenContract.removeAllListeners();\n\n    console.log('🛑 Blockchain monitor stopped');\n    \n    // 发送停止通知\n    await sendNotification('🛑 区块链监控已停止', 'warning');\n\n    addBreadcrumb('Blockchain monitor stopped', 'monitor');\n\n  } catch (error: any) {\n    console.error('❌ Failed to stop blockchain monitor:', error);\n    reportError(error, { component: 'blockchainMonitor', action: 'stop' });\n  }\n}\n\n/**\n * 设置事件监听器\n */\nfunction setupEventListeners(): void {\n  // 空投池事件监听\n  airdropPoolContract.on('FlowersDeposited', handleFlowersDeposited);\n  airdropPoolContract.on('RewardClaimed', handleRewardClaimed);\n  airdropPoolContract.on('RoundStarted', handleRoundStarted);\n  airdropPoolContract.on('RoundEnded', handleRoundEnded);\n  airdropPoolContract.on('RewardsDistributed', handleRewardsDistributed);\n  airdropPoolContract.on('EmergencyWithdraw', handleEmergencyWithdraw);\n\n  // SM 代币事件监听（仅监控与空投池相关的转账）\n  smTokenContract.on('Transfer', handleTokenTransfer);\n\n  console.log('👂 Event listeners set up');\n}\n\n/**\n * 处理小红花投入事件\n */\nconst handleFlowersDeposited: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { user, amount, roundId } = parsedEvent.args;\n    const amountFormatted = ethers.formatEther(amount);\n\n    console.log(`🌸 Flowers deposited: ${amountFormatted} by ${user} in round ${roundId}`);\n\n    // 记录到数据库\n    await supabase\n      .from('airdrop_events')\n      .insert({\n        event_type: 'deposit',\n        user_id: user,\n        round_id: Number(roundId),\n        amount: amountFormatted,\n        tx_hash: event.transactionHash,\n        block_number: event.blockNumber,\n        event_data: {\n          user,\n          amount: amount.toString(),\n          roundId: roundId.toString()\n        }\n      });\n\n    // 发送通知\n    await sendNotification(\n      `🌸 新的小红花投入\\n用户: ${user.slice(0, 6)}...${user.slice(-4)}\\n数量: ${amountFormatted}\\n轮次: ${roundId}`,\n      'info'\n    );\n\n    trackTransaction(event.transactionHash, 'flowers_deposit', amountFormatted);\n\n  } catch (error: any) {\n    console.error('❌ Error handling FlowersDeposited event:', error);\n    reportError(error, { event: 'FlowersDeposited', txHash: event.transactionHash });\n  }\n};\n\n/**\n * 处理奖励领取事件\n */\nconst handleRewardClaimed: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { user, amount, roundId } = parsedEvent.args;\n    const amountFormatted = ethers.formatEther(amount);\n\n    console.log(`🏆 Reward claimed: ${amountFormatted} SM by ${user} from round ${roundId}`);\n\n    // 记录到数据库\n    await supabase\n      .from('airdrop_events')\n      .insert({\n        event_type: 'claim',\n        user_id: user,\n        round_id: Number(roundId),\n        amount: amountFormatted,\n        tx_hash: event.transactionHash,\n        block_number: event.blockNumber,\n        event_data: {\n          user,\n          amount: amount.toString(),\n          roundId: roundId.toString()\n        }\n      });\n\n    // 发送通知\n    await sendNotification(\n      `🏆 奖励已领取\\n用户: ${user.slice(0, 6)}...${user.slice(-4)}\\n数量: ${amountFormatted} SM\\n轮次: ${roundId}`,\n      'success'\n    );\n\n    trackTransaction(event.transactionHash, 'reward_claim', amountFormatted);\n\n  } catch (error: any) {\n    console.error('❌ Error handling RewardClaimed event:', error);\n    reportError(error, { event: 'RewardClaimed', txHash: event.transactionHash });\n  }\n};\n\n/**\n * 处理轮次开始事件\n */\nconst handleRoundStarted: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { roundId, startTime, endTime } = parsedEvent.args;\n\n    console.log(`🚀 Round started: ${roundId}`);\n\n    // 记录到数据库\n    await supabase\n      .from('airdrop_events')\n      .insert({\n        event_type: 'round_start',\n        round_id: Number(roundId),\n        tx_hash: event.transactionHash,\n        block_number: event.blockNumber,\n        event_data: {\n          roundId: roundId.toString(),\n          startTime: startTime.toString(),\n          endTime: endTime.toString()\n        }\n      });\n\n    // 发送通知\n    const startDate = new Date(Number(startTime) * 1000);\n    const endDate = new Date(Number(endTime) * 1000);\n    \n    await sendNotification(\n      `🚀 新轮次开始\\n轮次: ${roundId}\\n开始时间: ${startDate.toLocaleString()}\\n结束时间: ${endDate.toLocaleString()}`,\n      'info'\n    );\n\n  } catch (error: any) {\n    console.error('❌ Error handling RoundStarted event:', error);\n    reportError(error, { event: 'RoundStarted', txHash: event.transactionHash });\n  }\n};\n\n/**\n * 处理轮次结束事件\n */\nconst handleRoundEnded: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { roundId, totalDeposits, participantCount } = parsedEvent.args;\n    const totalDepositsFormatted = ethers.formatEther(totalDeposits);\n\n    console.log(`🏁 Round ended: ${roundId}, Total deposits: ${totalDepositsFormatted}`);\n\n    // 发送通知\n    await sendNotification(\n      `🏁 轮次结束\\n轮次: ${roundId}\\n总投入: ${totalDepositsFormatted} 小红花\\n参与人数: ${participantCount}`,\n      'warning'\n    );\n\n  } catch (error: any) {\n    console.error('❌ Error handling RoundEnded event:', error);\n    reportError(error, { event: 'RoundEnded', txHash: event.transactionHash });\n  }\n};\n\n/**\n * 处理奖励分配事件\n */\nconst handleRewardsDistributed: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { roundId, totalRewards } = parsedEvent.args;\n    const totalRewardsFormatted = ethers.formatEther(totalRewards);\n\n    console.log(`💰 Rewards distributed: ${totalRewardsFormatted} SM for round ${roundId}`);\n\n    // 发送通知\n    await sendNotification(\n      `💰 奖励已分配\\n轮次: ${roundId}\\n总奖励: ${totalRewardsFormatted} SM\\n用户现在可以领取奖励！`,\n      'success'\n    );\n\n  } catch (error: any) {\n    console.error('❌ Error handling RewardsDistributed event:', error);\n    reportError(error, { event: 'RewardsDistributed', txHash: event.transactionHash });\n  }\n};\n\n/**\n * 处理紧急提取事件\n */\nconst handleEmergencyWithdraw: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { user, amount } = parsedEvent.args;\n    const amountFormatted = ethers.formatEther(amount);\n\n    console.log(`🚨 Emergency withdraw: ${amountFormatted} by ${user}`);\n\n    // 发送紧急通知\n    await sendNotification(\n      `🚨 紧急提取警告\\n用户: ${user}\\n数量: ${amountFormatted}\\n交易: ${event.transactionHash}`,\n      'error'\n    );\n\n    reportError(new Error('Emergency withdraw detected'), {\n      user,\n      amount: amountFormatted,\n      txHash: event.transactionHash\n    });\n\n  } catch (error: any) {\n    console.error('❌ Error handling EmergencyWithdraw event:', error);\n    reportError(error, { event: 'EmergencyWithdraw', txHash: event.transactionHash });\n  }\n};\n\n/**\n * 处理代币转账事件\n */\nconst handleTokenTransfer: EventHandler = async (event, parsedEvent) => {\n  try {\n    const { from, to, value } = parsedEvent.args;\n    \n    // 只监控与空投池相关的转账\n    if (from === AIRDROP_POOL_ADDRESS || to === AIRDROP_POOL_ADDRESS) {\n      const amountFormatted = ethers.formatEther(value);\n      \n      console.log(`💸 SM Token transfer: ${amountFormatted} from ${from} to ${to}`);\n      \n      trackTransaction(event.transactionHash, 'token_transfer', amountFormatted);\n    }\n\n  } catch (error: any) {\n    console.error('❌ Error handling Transfer event:', error);\n    reportError(error, { event: 'Transfer', txHash: event.transactionHash });\n  }\n};\n\n/**\n * 启动定期检查\n */\nfunction startPeriodicChecks(): void {\n  setInterval(async () => {\n    if (!monitorState.isRunning) return;\n\n    try {\n      // 检查网络连接\n      const currentBlock = await provider.getBlockNumber();\n      \n      if (currentBlock > monitorState.lastBlockNumber) {\n        monitorState.lastBlockNumber = currentBlock;\n        console.log(`📊 Current block: ${currentBlock}`);\n      }\n\n      // 重置错误计数\n      monitorState.errorCount = 0;\n\n    } catch (error: any) {\n      monitorState.errorCount++;\n      console.error(`❌ Periodic check failed (${monitorState.errorCount}):`, error);\n\n      if (monitorState.errorCount >= 5) {\n        await sendNotification(\n          `🚨 区块链监控连续失败 ${monitorState.errorCount} 次\\n可能存在网络问题`,\n          'error'\n        );\n        \n        reportError(error, { \n          component: 'blockchainMonitor', \n          action: 'periodicCheck',\n          errorCount: monitorState.errorCount \n        });\n      }\n    }\n  }, 30000); // 每30秒检查一次\n}\n\n/**\n * 发送通知到 Discord\n */\nasync function sendNotification(message: string, type: 'info' | 'success' | 'warning' | 'error'): Promise<void> {\n  if (!DISCORD_WEBHOOK_URL) return;\n\n  try {\n    const colors = {\n      info: 0x3498db,\n      success: 0x2ecc71,\n      warning: 0xf39c12,\n      error: 0xe74c3c\n    };\n\n    const embed = {\n      title: 'SocioMint 区块链监控',\n      description: message,\n      color: colors[type],\n      timestamp: new Date().toISOString(),\n      footer: {\n        text: 'SocioMint Blockchain Monitor'\n      }\n    };\n\n    await sendWebhookMessage(DISCORD_WEBHOOK_URL, '', [embed]);\n\n  } catch (error: any) {\n    console.error('❌ Failed to send Discord notification:', error);\n  }\n}\n\n/**\n * 获取监控状态\n */\nexport function getMonitorStatus(): MonitorState & { uptime: number } {\n  return {\n    ...monitorState,\n    uptime: monitorState.isRunning ? Date.now() - monitorState.startTime.getTime() : 0\n  };\n}\n\n/**\n * 手动触发健康检查\n */\nexport async function healthCheck(): Promise<{\n  healthy: boolean;\n  blockNumber: number;\n  networkId: number;\n  gasPrice: string;\n  error?: string;\n}> {\n  try {\n    const [blockNumber, network, gasPrice] = await Promise.all([\n      provider.getBlockNumber(),\n      provider.getNetwork(),\n      provider.getFeeData()\n    ]);\n\n    return {\n      healthy: true,\n      blockNumber,\n      networkId: Number(network.chainId),\n      gasPrice: gasPrice.gasPrice ? ethers.formatUnits(gasPrice.gasPrice, 'gwei') : '0'\n    };\n\n  } catch (error: any) {\n    return {\n      healthy: false,\n      blockNumber: 0,\n      networkId: 0,\n      gasPrice: '0',\n      error: error.message\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}