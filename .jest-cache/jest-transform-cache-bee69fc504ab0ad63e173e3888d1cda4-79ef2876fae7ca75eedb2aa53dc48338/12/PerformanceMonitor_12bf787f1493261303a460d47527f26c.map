{"version":3,"names":["cov_1yxkwkpnoe","actualCoverage","s","PerformanceMonitor","f","default","_default","usePerformanceMonitoring","enabled","b","process","env","NODE_ENV","showInProduction","onMetricsUpdate","metrics","setMetrics","_react","useState","isExpanded","setIsExpanded","observerRef","useRef","shouldShow","useEffect","window","collectBasicMetrics","navigation","performance","getEntriesByType","paint","newMetrics","ttfb","responseStart","requestStart","domContentLoaded","domContentLoadedEventEnd","navigationStart","loadComplete","loadEventEnd","fcp","find","entry","name","startTime","memory","memoryUsage","usedJSHeapSize","navigator","connection","connectionType","effectiveType","prev","setupPerformanceObserver","lcpObserver","PerformanceObserver","list","entries","getEntries","lastEntry","length","lcp","observe","entryTypes","fidObserver","forEach","fid","processingStart","clsObserver","clsValue","hadRecentInput","value","cls","current","error","console","warn","timer","setTimeout","clearTimeout","disconnect","getPerformanceGrade","metric","thresholds","good","poor","threshold","getGradeColor","grade","formatValue","toFixed","Math","round","_jsxruntime","jsxs","_Box","sx","position","bottom","right","backgroundColor","border","borderColor","borderRadius","p","minWidth","maxWidth","zIndex","boxShadow","display","alignItems","justifyContent","mb","jsx","_Typography","variant","fontWeight","_IconButton","size","onClick","_ExpandLess","_ExpandMore","_Collapse","in","flexDirection","gap","Object","map","key","undefined","color","toUpperCase","_Chip","label","flexWrap","reportMetrics","log"],"sources":["/Users/yudeyou/Desktop/sm/sociomint/src/components/monitoring/PerformanceMonitor.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport { Box, Typography, Chip, Collapse, IconButton } from '@mui/material';\nimport { ExpandMore, ExpandLess } from '@mui/icons-material';\n\ninterface PerformanceMetrics {\n  fcp: number; // First Contentful Paint\n  lcp: number; // Largest Contentful Paint\n  fid: number; // First Input Delay\n  cls: number; // Cumulative Layout Shift\n  ttfb: number; // Time to First Byte\n  domContentLoaded: number;\n  loadComplete: number;\n  memoryUsage?: number;\n  connectionType?: string;\n}\n\ninterface PerformanceMonitorProps {\n  enabled?: boolean;\n  showInProduction?: boolean;\n  onMetricsUpdate?: (metrics: PerformanceMetrics) => void;\n}\n\nexport const PerformanceMonitor: React.FC<PerformanceMonitorProps> = ({\n  enabled = process.env.NODE_ENV === 'development',\n  showInProduction = false,\n  onMetricsUpdate,\n}) => {\n  const [metrics, setMetrics] = useState<Partial<PerformanceMetrics>>({});\n  const [isExpanded, setIsExpanded] = useState(false);\n  const observerRef = useRef<PerformanceObserver | null>(null);\n\n  // 检查是否应该显示监控器\n  const shouldShow = enabled || (process.env.NODE_ENV === 'production' && showInProduction);\n\n  useEffect(() => {\n    if (!shouldShow || typeof window === 'undefined') return;\n\n    // 收集基础性能指标\n    const collectBasicMetrics = () => {\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n      const paint = performance.getEntriesByType('paint');\n      \n      const newMetrics: Partial<PerformanceMetrics> = {\n        ttfb: navigation.responseStart - navigation.requestStart,\n        domContentLoaded: navigation.domContentLoadedEventEnd - navigation.navigationStart,\n        loadComplete: navigation.loadEventEnd - navigation.navigationStart,\n      };\n\n      // First Contentful Paint\n      const fcp = paint.find(entry => entry.name === 'first-contentful-paint');\n      if (fcp) {\n        newMetrics.fcp = fcp.startTime;\n      }\n\n      // 内存使用情况 (如果支持)\n      if ('memory' in performance) {\n        const memory = (performance as any).memory;\n        newMetrics.memoryUsage = memory.usedJSHeapSize / 1024 / 1024; // MB\n      }\n\n      // 网络连接类型 (如果支持)\n      if ('connection' in navigator) {\n        const connection = (navigator as any).connection;\n        newMetrics.connectionType = connection.effectiveType;\n      }\n\n      setMetrics(prev => ({ ...prev, ...newMetrics }));\n      onMetricsUpdate?.(newMetrics as PerformanceMetrics);\n    };\n\n    // 使用 PerformanceObserver 收集 Web Vitals\n    const setupPerformanceObserver = () => {\n      try {\n        // Largest Contentful Paint\n        const lcpObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          const lastEntry = entries[entries.length - 1];\n          setMetrics(prev => ({ ...prev, lcp: lastEntry.startTime }));\n        });\n        lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });\n\n        // First Input Delay\n        const fidObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach((entry) => {\n            setMetrics(prev => ({ ...prev, fid: entry.processingStart - entry.startTime }));\n          });\n        });\n        fidObserver.observe({ entryTypes: ['first-input'] });\n\n        // Cumulative Layout Shift\n        const clsObserver = new PerformanceObserver((list) => {\n          let clsValue = 0;\n          const entries = list.getEntries();\n          entries.forEach((entry) => {\n            if (!(entry as any).hadRecentInput) {\n              clsValue += (entry as any).value;\n            }\n          });\n          setMetrics(prev => ({ ...prev, cls: clsValue }));\n        });\n        clsObserver.observe({ entryTypes: ['layout-shift'] });\n\n        observerRef.current = lcpObserver; // 保存一个引用用于清理\n      } catch (error) {\n        console.warn('PerformanceObserver not supported:', error);\n      }\n    };\n\n    // 延迟收集指标，确保页面加载完成\n    const timer = setTimeout(() => {\n      collectBasicMetrics();\n      setupPerformanceObserver();\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n      observerRef.current?.disconnect();\n    };\n  }, [shouldShow, onMetricsUpdate]);\n\n  // 获取性能评级\n  const getPerformanceGrade = (metric: string, value: number): 'good' | 'needs-improvement' | 'poor' => {\n    const thresholds = {\n      fcp: { good: 1800, poor: 3000 },\n      lcp: { good: 2500, poor: 4000 },\n      fid: { good: 100, poor: 300 },\n      cls: { good: 0.1, poor: 0.25 },\n      ttfb: { good: 800, poor: 1800 },\n    };\n\n    const threshold = thresholds[metric as keyof typeof thresholds];\n    if (!threshold) return 'good';\n\n    if (value <= threshold.good) return 'good';\n    if (value <= threshold.poor) return 'needs-improvement';\n    return 'poor';\n  };\n\n  // 获取评级颜色\n  const getGradeColor = (grade: string) => {\n    switch (grade) {\n      case 'good': return 'success';\n      case 'needs-improvement': return 'warning';\n      case 'poor': return 'error';\n      default: return 'default';\n    }\n  };\n\n  // 格式化数值\n  const formatValue = (metric: string, value: number) => {\n    if (metric === 'cls') return value.toFixed(3);\n    if (metric === 'memoryUsage') return `${value.toFixed(1)} MB`;\n    return `${Math.round(value)} ms`;\n  };\n\n  if (!shouldShow) return null;\n\n  return (\n    <Box\n      sx={{\n        position: 'fixed',\n        bottom: 16,\n        right: 16,\n        backgroundColor: 'background.paper',\n        border: 1,\n        borderColor: 'divider',\n        borderRadius: 2,\n        p: 2,\n        minWidth: 280,\n        maxWidth: 400,\n        zIndex: 9999,\n        boxShadow: 3,\n      }}\n    >\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"subtitle2\" fontWeight=\"bold\">\n          性能监控\n        </Typography>\n        <IconButton\n          size=\"small\"\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          {isExpanded ? <ExpandLess /> : <ExpandMore />}\n        </IconButton>\n      </Box>\n\n      <Collapse in={isExpanded}>\n        <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n          {Object.entries(metrics).map(([key, value]) => {\n            if (value === undefined || value === null) return null;\n            \n            const grade = getPerformanceGrade(key, value);\n            const color = getGradeColor(grade);\n            \n            return (\n              <Box key={key} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography variant=\"caption\" sx={{ minWidth: 80 }}>\n                  {key.toUpperCase()}\n                </Typography>\n                <Chip\n                  label={formatValue(key, value)}\n                  size=\"small\"\n                  color={color as any}\n                  variant=\"outlined\"\n                />\n              </Box>\n            );\n          })}\n          \n          {metrics.connectionType && (\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n              <Typography variant=\"caption\">网络</Typography>\n              <Chip\n                label={metrics.connectionType}\n                size=\"small\"\n                variant=\"outlined\"\n              />\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n\n      {!isExpanded && (\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          {metrics.lcp && (\n            <Chip\n              label={`LCP: ${Math.round(metrics.lcp)}ms`}\n              size=\"small\"\n              color={getGradeColor(getPerformanceGrade('lcp', metrics.lcp)) as any}\n              variant=\"outlined\"\n            />\n          )}\n          {metrics.fid && (\n            <Chip\n              label={`FID: ${Math.round(metrics.fid)}ms`}\n              size=\"small\"\n              color={getGradeColor(getPerformanceGrade('fid', metrics.fid)) as any}\n              variant=\"outlined\"\n            />\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\n// 性能监控钩子\nexport const usePerformanceMonitoring = () => {\n  const [metrics, setMetrics] = useState<Partial<PerformanceMetrics>>({});\n\n  const reportMetrics = (newMetrics: PerformanceMetrics) => {\n    setMetrics(newMetrics);\n    \n    // 发送到分析服务 (如果需要)\n    if (process.env.NODE_ENV === 'production') {\n      // 这里可以集成 Google Analytics, Sentry 等\n      console.log('Performance Metrics:', newMetrics);\n    }\n  };\n\n  return { metrics, reportMetrics };\n};\n\nexport default PerformanceMonitor;\n"],"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","ignoreList":[]}