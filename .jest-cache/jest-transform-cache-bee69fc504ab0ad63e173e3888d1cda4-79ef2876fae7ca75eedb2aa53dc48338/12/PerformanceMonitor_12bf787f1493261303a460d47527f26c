b8a9642b3c714b4db072f49d51f1794b
'use client';
"use strict";

/* istanbul ignore next */
function cov_1yxkwkpnoe() {
  var path = "/Users/yudeyou/Desktop/sm/sociomint/src/components/monitoring/PerformanceMonitor.tsx";
  var hash = "f4167410b5d2d729cc2d0132c157e32bb5dc05e0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yudeyou/Desktop/sm/sociomint/src/components/monitoring/PerformanceMonitor.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "9": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 81
        }
      },
      "10": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 95
        }
      },
      "11": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 83
        }
      },
      "12": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 28,
          column: 91
        }
      },
      "13": {
        start: {
          line: 29,
          column: 34
        },
        end: {
          line: 29,
          column: 95
        }
      },
      "14": {
        start: {
          line: 30,
          column: 34
        },
        end: {
          line: 30,
          column: 101
        }
      },
      "15": {
        start: {
          line: 31,
          column: 34
        },
        end: {
          line: 31,
          column: 101
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "17": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 300,
          column: 1
        }
      },
      "18": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 38,
          column: 58
        }
      },
      "19": {
        start: {
          line: 39,
          column: 40
        },
        end: {
          line: 39,
          column: 67
        }
      },
      "20": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 48
        }
      },
      "21": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 91
        }
      },
      "22": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 65
        }
      },
      "24": {
        start: {
          line: 44,
          column: 58
        },
        end: {
          line: 44,
          column: 65
        }
      },
      "25": {
        start: {
          line: 46,
          column: 36
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "26": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 47,
          column: 76
        }
      },
      "27": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 48,
          column: 63
        }
      },
      "28": {
        start: {
          line: 49,
          column: 31
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "29": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 84
        }
      },
      "30": {
        start: {
          line: 55,
          column: 44
        },
        end: {
          line: 55,
          column: 83
        }
      },
      "31": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "32": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 47
        }
      },
      "33": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "34": {
        start: {
          line: 61,
          column: 31
        },
        end: {
          line: 61,
          column: 49
        }
      },
      "35": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 77
        }
      },
      "36": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "37": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 55
        }
      },
      "38": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 69
        }
      },
      "39": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 72,
          column: 20
        }
      },
      "40": {
        start: {
          line: 69,
          column: 32
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "41": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 42
        }
      },
      "42": {
        start: {
          line: 76,
          column: 41
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "43": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "44": {
        start: {
          line: 79,
          column: 36
        },
        end: {
          line: 86,
          column: 18
        }
      },
      "45": {
        start: {
          line: 80,
          column: 36
        },
        end: {
          line: 80,
          column: 53
        }
      },
      "46": {
        start: {
          line: 81,
          column: 38
        },
        end: {
          line: 81,
          column: 65
        }
      },
      "47": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 85,
          column: 28
        }
      },
      "48": {
        start: {
          line: 82,
          column: 40
        },
        end: {
          line: 85,
          column: 25
        }
      },
      "49": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 91,
          column: 19
        }
      },
      "50": {
        start: {
          line: 93,
          column: 36
        },
        end: {
          line: 101,
          column: 18
        }
      },
      "51": {
        start: {
          line: 94,
          column: 36
        },
        end: {
          line: 94,
          column: 53
        }
      },
      "52": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 100,
          column: 23
        }
      },
      "53": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 99,
          column: 32
        }
      },
      "54": {
        start: {
          line: 96,
          column: 44
        },
        end: {
          line: 99,
          column: 29
        }
      },
      "55": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "56": {
        start: {
          line: 108,
          column: 36
        },
        end: {
          line: 120,
          column: 18
        }
      },
      "57": {
        start: {
          line: 109,
          column: 35
        },
        end: {
          line: 109,
          column: 36
        }
      },
      "58": {
        start: {
          line: 110,
          column: 36
        },
        end: {
          line: 110,
          column: 53
        }
      },
      "59": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 115,
          column: 23
        }
      },
      "60": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 114,
          column: 25
        }
      },
      "61": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 52
        }
      },
      "62": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 119,
          column: 28
        }
      },
      "63": {
        start: {
          line: 116,
          column: 40
        },
        end: {
          line: 119,
          column: 25
        }
      },
      "64": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 125,
          column: 19
        }
      },
      "65": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 50
        }
      },
      "66": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 74
        }
      },
      "67": {
        start: {
          line: 132,
          column: 22
        },
        end: {
          line: 135,
          column: 16
        }
      },
      "68": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 34
        }
      },
      "69": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 39
        }
      },
      "70": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 10
        }
      },
      "71": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 32
        }
      },
      "72": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 46
        }
      },
      "73": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "74": {
        start: {
          line: 146,
          column: 27
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "75": {
        start: {
          line: 168,
          column: 26
        },
        end: {
          line: 168,
          column: 44
        }
      },
      "76": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 38
        }
      },
      "77": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 38
        }
      },
      "78": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "79": {
        start: {
          line: 170,
          column: 37
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "80": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 64
        }
      },
      "81": {
        start: {
          line: 171,
          column: 37
        },
        end: {
          line: 171,
          column: 64
        }
      },
      "82": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 22
        }
      },
      "83": {
        start: {
          line: 175,
          column: 26
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "84": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "85": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 33
        }
      },
      "86": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 33
        }
      },
      "87": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 31
        }
      },
      "88": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 33
        }
      },
      "89": {
        start: {
          line: 188,
          column: 24
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "90": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 54
        }
      },
      "91": {
        start: {
          line: 189,
          column: 30
        },
        end: {
          line: 189,
          column: 54
        }
      },
      "92": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 70
        }
      },
      "93": {
        start: {
          line: 190,
          column: 38
        },
        end: {
          line: 190,
          column: 70
        }
      },
      "94": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 41
        }
      },
      "95": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 33
        }
      },
      "96": {
        start: {
          line: 193,
          column: 21
        },
        end: {
          line: 193,
          column: 33
        }
      },
      "97": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 299,
          column: 7
        }
      },
      "98": {
        start: {
          line: 223,
          column: 37
        },
        end: {
          line: 223,
          column: 63
        }
      },
      "99": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 83
        }
      },
      "100": {
        start: {
          line: 236,
          column: 71
        },
        end: {
          line: 236,
          column: 83
        }
      },
      "101": {
        start: {
          line: 237,
          column: 42
        },
        end: {
          line: 237,
          column: 73
        }
      },
      "102": {
        start: {
          line: 238,
          column: 42
        },
        end: {
          line: 238,
          column: 62
        }
      },
      "103": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 258,
          column: 36
        }
      },
      "104": {
        start: {
          line: 301,
          column: 33
        },
        end: {
          line: 315,
          column: 1
        }
      },
      "105": {
        start: {
          line: 302,
          column: 34
        },
        end: {
          line: 302,
          column: 58
        }
      },
      "106": {
        start: {
          line: 303,
          column: 26
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "107": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 31
        }
      },
      "108": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "109": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 60
        }
      },
      "110": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 314,
          column: 6
        }
      },
      "111": {
        start: {
          line: 316,
          column: 17
        },
        end: {
          line: 316,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 25
          }
        },
        loc: {
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 19,
            column: 31
          }
        },
        loc: {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 33
          }
        },
        loc: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 37,
            column: 28
          }
        },
        loc: {
          start: {
            line: 37,
            column: 126
          },
          end: {
            line: 300,
            column: 1
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 27
          }
        },
        loc: {
          start: {
            line: 43,
            column: 30
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 46,
            column: 36
          },
          end: {
            line: 46,
            column: 37
          }
        },
        loc: {
          start: {
            line: 46,
            column: 40
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 46
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 55,
            column: 35
          },
          end: {
            line: 55,
            column: 36
          }
        },
        loc: {
          start: {
            line: 55,
            column: 44
          },
          end: {
            line: 55,
            column: 83
          }
        },
        line: 55
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 69,
            column: 24
          }
        },
        loc: {
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 72,
            column: 17
          }
        },
        line: 69
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 42
          }
        },
        loc: {
          start: {
            line: 76,
            column: 45
          },
          end: {
            line: 130,
            column: 9
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 79,
            column: 60
          },
          end: {
            line: 79,
            column: 61
          }
        },
        loc: {
          start: {
            line: 79,
            column: 68
          },
          end: {
            line: 86,
            column: 17
          }
        },
        line: 79
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 32
          }
        },
        loc: {
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 85,
            column: 25
          }
        },
        line: 82
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 93,
            column: 60
          },
          end: {
            line: 93,
            column: 61
          }
        },
        loc: {
          start: {
            line: 93,
            column: 68
          },
          end: {
            line: 101,
            column: 17
          }
        },
        line: 93
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 95,
            column: 36
          },
          end: {
            line: 95,
            column: 37
          }
        },
        loc: {
          start: {
            line: 95,
            column: 45
          },
          end: {
            line: 100,
            column: 21
          }
        },
        line: 95
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 96,
            column: 35
          },
          end: {
            line: 96,
            column: 36
          }
        },
        loc: {
          start: {
            line: 96,
            column: 44
          },
          end: {
            line: 99,
            column: 29
          }
        },
        line: 96
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 108,
            column: 60
          },
          end: {
            line: 108,
            column: 61
          }
        },
        loc: {
          start: {
            line: 108,
            column: 68
          },
          end: {
            line: 120,
            column: 17
          }
        },
        line: 108
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 37
          }
        },
        loc: {
          start: {
            line: 111,
            column: 45
          },
          end: {
            line: 115,
            column: 21
          }
        },
        line: 111
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 116,
            column: 31
          },
          end: {
            line: 116,
            column: 32
          }
        },
        loc: {
          start: {
            line: 116,
            column: 40
          },
          end: {
            line: 119,
            column: 25
          }
        },
        line: 116
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 132,
            column: 33
          },
          end: {
            line: 132,
            column: 34
          }
        },
        loc: {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 132
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 136,
            column: 16
          }
        },
        loc: {
          start: {
            line: 136,
            column: 19
          },
          end: {
            line: 139,
            column: 9
          }
        },
        line: 136
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 145,
            column: 32
          },
          end: {
            line: 145,
            column: 33
          }
        },
        loc: {
          start: {
            line: 145,
            column: 49
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 145
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 175,
            column: 26
          },
          end: {
            line: 175,
            column: 27
          }
        },
        loc: {
          start: {
            line: 175,
            column: 35
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 175
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 188,
            column: 25
          }
        },
        loc: {
          start: {
            line: 188,
            column: 41
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 188
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 223,
            column: 33
          },
          end: {
            line: 223,
            column: 34
          }
        },
        loc: {
          start: {
            line: 223,
            column: 37
          },
          end: {
            line: 223,
            column: 63
          }
        },
        line: 223
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 235,
            column: 52
          },
          end: {
            line: 235,
            column: 53
          }
        },
        loc: {
          start: {
            line: 235,
            column: 68
          },
          end: {
            line: 259,
            column: 25
          }
        },
        line: 235
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 301,
            column: 33
          },
          end: {
            line: 301,
            column: 34
          }
        },
        loc: {
          start: {
            line: 301,
            column: 37
          },
          end: {
            line: 315,
            column: 1
          }
        },
        line: 301
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 303,
            column: 26
          },
          end: {
            line: 303,
            column: 27
          }
        },
        loc: {
          start: {
            line: 303,
            column: 40
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 303
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 38
          }
        }, {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 35,
            column: 5
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 14
          }
        }, {
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 33,
            column: 32
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 37,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 40
          },
          end: {
            line: 37,
            column: 78
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 80
          },
          end: {
            line: 37,
            column: 104
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 99
          },
          end: {
            line: 37,
            column: 104
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 30
          }
        }, {
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 42,
            column: 71
          }
        }, {
          start: {
            line: 42,
            column: 75
          },
          end: {
            line: 42,
            column: 91
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 23
          }
        }, {
          start: {
            line: 44,
            column: 27
          },
          end: {
            line: 44,
            column: 56
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 114,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 114,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "11": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 169,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 169,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "12": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 170,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 170,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "13": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 178,
            column: 33
          }
        }, {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 180,
            column: 33
          }
        }, {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 182,
            column: 31
          }
        }, {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 184,
            column: 33
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "16": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 190,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 190,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "17": {
        loc: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "18": {
        loc: {
          start: {
            line: 224,
            column: 34
          },
          end: {
            line: 224,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 61
          },
          end: {
            line: 224,
            column: 106
          }
        }, {
          start: {
            line: 224,
            column: 123
          },
          end: {
            line: 224,
            column: 168
          }
        }],
        line: 224
      },
      "19": {
        loc: {
          start: {
            line: 236,
            column: 28
          },
          end: {
            line: 236,
            column: 83
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 28
          },
          end: {
            line: 236,
            column: 83
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "20": {
        loc: {
          start: {
            line: 236,
            column: 32
          },
          end: {
            line: 236,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 32
          },
          end: {
            line: 236,
            column: 51
          }
        }, {
          start: {
            line: 236,
            column: 55
          },
          end: {
            line: 236,
            column: 69
          }
        }],
        line: 236
      },
      "21": {
        loc: {
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 275,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 260,
            column: 46
          }
        }, {
          start: {
            line: 260,
            column: 64
          },
          end: {
            line: 275,
            column: 26
          }
        }],
        line: 260
      },
      "22": {
        loc: {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 297,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 279,
            column: 23
          }
        }, {
          start: {
            line: 279,
            column: 41
          },
          end: {
            line: 297,
            column: 14
          }
        }],
        line: 279
      },
      "23": {
        loc: {
          start: {
            line: 284,
            column: 20
          },
          end: {
            line: 289,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 20
          },
          end: {
            line: 284,
            column: 31
          }
        }, {
          start: {
            line: 284,
            column: 49
          },
          end: {
            line: 289,
            column: 22
          }
        }],
        line: 284
      },
      "24": {
        loc: {
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 295,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 31
          }
        }, {
          start: {
            line: 290,
            column: 49
          },
          end: {
            line: 295,
            column: 22
          }
        }],
        line: 290
      },
      "25": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/yudeyou/Desktop/sm/sociomint/src/components/monitoring/PerformanceMonitor.tsx"],
      sourcesContent: ["'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport { Box, Typography, Chip, Collapse, IconButton } from '@mui/material';\nimport { ExpandMore, ExpandLess } from '@mui/icons-material';\n\ninterface PerformanceMetrics {\n  fcp: number; // First Contentful Paint\n  lcp: number; // Largest Contentful Paint\n  fid: number; // First Input Delay\n  cls: number; // Cumulative Layout Shift\n  ttfb: number; // Time to First Byte\n  domContentLoaded: number;\n  loadComplete: number;\n  memoryUsage?: number;\n  connectionType?: string;\n}\n\ninterface PerformanceMonitorProps {\n  enabled?: boolean;\n  showInProduction?: boolean;\n  onMetricsUpdate?: (metrics: PerformanceMetrics) => void;\n}\n\nexport const PerformanceMonitor: React.FC<PerformanceMonitorProps> = ({\n  enabled = process.env.NODE_ENV === 'development',\n  showInProduction = false,\n  onMetricsUpdate,\n}) => {\n  const [metrics, setMetrics] = useState<Partial<PerformanceMetrics>>({});\n  const [isExpanded, setIsExpanded] = useState(false);\n  const observerRef = useRef<PerformanceObserver | null>(null);\n\n  // \u68C0\u67E5\u662F\u5426\u5E94\u8BE5\u663E\u793A\u76D1\u63A7\u5668\n  const shouldShow = enabled || (process.env.NODE_ENV === 'production' && showInProduction);\n\n  useEffect(() => {\n    if (!shouldShow || typeof window === 'undefined') return;\n\n    // \u6536\u96C6\u57FA\u7840\u6027\u80FD\u6307\u6807\n    const collectBasicMetrics = () => {\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n      const paint = performance.getEntriesByType('paint');\n      \n      const newMetrics: Partial<PerformanceMetrics> = {\n        ttfb: navigation.responseStart - navigation.requestStart,\n        domContentLoaded: navigation.domContentLoadedEventEnd - navigation.navigationStart,\n        loadComplete: navigation.loadEventEnd - navigation.navigationStart,\n      };\n\n      // First Contentful Paint\n      const fcp = paint.find(entry => entry.name === 'first-contentful-paint');\n      if (fcp) {\n        newMetrics.fcp = fcp.startTime;\n      }\n\n      // \u5185\u5B58\u4F7F\u7528\u60C5\u51B5 (\u5982\u679C\u652F\u6301)\n      if ('memory' in performance) {\n        const memory = (performance as any).memory;\n        newMetrics.memoryUsage = memory.usedJSHeapSize / 1024 / 1024; // MB\n      }\n\n      // \u7F51\u7EDC\u8FDE\u63A5\u7C7B\u578B (\u5982\u679C\u652F\u6301)\n      if ('connection' in navigator) {\n        const connection = (navigator as any).connection;\n        newMetrics.connectionType = connection.effectiveType;\n      }\n\n      setMetrics(prev => ({ ...prev, ...newMetrics }));\n      onMetricsUpdate?.(newMetrics as PerformanceMetrics);\n    };\n\n    // \u4F7F\u7528 PerformanceObserver \u6536\u96C6 Web Vitals\n    const setupPerformanceObserver = () => {\n      try {\n        // Largest Contentful Paint\n        const lcpObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          const lastEntry = entries[entries.length - 1];\n          setMetrics(prev => ({ ...prev, lcp: lastEntry.startTime }));\n        });\n        lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });\n\n        // First Input Delay\n        const fidObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach((entry) => {\n            setMetrics(prev => ({ ...prev, fid: entry.processingStart - entry.startTime }));\n          });\n        });\n        fidObserver.observe({ entryTypes: ['first-input'] });\n\n        // Cumulative Layout Shift\n        const clsObserver = new PerformanceObserver((list) => {\n          let clsValue = 0;\n          const entries = list.getEntries();\n          entries.forEach((entry) => {\n            if (!(entry as any).hadRecentInput) {\n              clsValue += (entry as any).value;\n            }\n          });\n          setMetrics(prev => ({ ...prev, cls: clsValue }));\n        });\n        clsObserver.observe({ entryTypes: ['layout-shift'] });\n\n        observerRef.current = lcpObserver; // \u4FDD\u5B58\u4E00\u4E2A\u5F15\u7528\u7528\u4E8E\u6E05\u7406\n      } catch (error) {\n        console.warn('PerformanceObserver not supported:', error);\n      }\n    };\n\n    // \u5EF6\u8FDF\u6536\u96C6\u6307\u6807\uFF0C\u786E\u4FDD\u9875\u9762\u52A0\u8F7D\u5B8C\u6210\n    const timer = setTimeout(() => {\n      collectBasicMetrics();\n      setupPerformanceObserver();\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n      observerRef.current?.disconnect();\n    };\n  }, [shouldShow, onMetricsUpdate]);\n\n  // \u83B7\u53D6\u6027\u80FD\u8BC4\u7EA7\n  const getPerformanceGrade = (metric: string, value: number): 'good' | 'needs-improvement' | 'poor' => {\n    const thresholds = {\n      fcp: { good: 1800, poor: 3000 },\n      lcp: { good: 2500, poor: 4000 },\n      fid: { good: 100, poor: 300 },\n      cls: { good: 0.1, poor: 0.25 },\n      ttfb: { good: 800, poor: 1800 },\n    };\n\n    const threshold = thresholds[metric as keyof typeof thresholds];\n    if (!threshold) return 'good';\n\n    if (value <= threshold.good) return 'good';\n    if (value <= threshold.poor) return 'needs-improvement';\n    return 'poor';\n  };\n\n  // \u83B7\u53D6\u8BC4\u7EA7\u989C\u8272\n  const getGradeColor = (grade: string) => {\n    switch (grade) {\n      case 'good': return 'success';\n      case 'needs-improvement': return 'warning';\n      case 'poor': return 'error';\n      default: return 'default';\n    }\n  };\n\n  // \u683C\u5F0F\u5316\u6570\u503C\n  const formatValue = (metric: string, value: number) => {\n    if (metric === 'cls') return value.toFixed(3);\n    if (metric === 'memoryUsage') return `${value.toFixed(1)} MB`;\n    return `${Math.round(value)} ms`;\n  };\n\n  if (!shouldShow) return null;\n\n  return (\n    <Box\n      sx={{\n        position: 'fixed',\n        bottom: 16,\n        right: 16,\n        backgroundColor: 'background.paper',\n        border: 1,\n        borderColor: 'divider',\n        borderRadius: 2,\n        p: 2,\n        minWidth: 280,\n        maxWidth: 400,\n        zIndex: 9999,\n        boxShadow: 3,\n      }}\n    >\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"subtitle2\" fontWeight=\"bold\">\n          \u6027\u80FD\u76D1\u63A7\n        </Typography>\n        <IconButton\n          size=\"small\"\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          {isExpanded ? <ExpandLess /> : <ExpandMore />}\n        </IconButton>\n      </Box>\n\n      <Collapse in={isExpanded}>\n        <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n          {Object.entries(metrics).map(([key, value]) => {\n            if (value === undefined || value === null) return null;\n            \n            const grade = getPerformanceGrade(key, value);\n            const color = getGradeColor(grade);\n            \n            return (\n              <Box key={key} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography variant=\"caption\" sx={{ minWidth: 80 }}>\n                  {key.toUpperCase()}\n                </Typography>\n                <Chip\n                  label={formatValue(key, value)}\n                  size=\"small\"\n                  color={color as any}\n                  variant=\"outlined\"\n                />\n              </Box>\n            );\n          })}\n          \n          {metrics.connectionType && (\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n              <Typography variant=\"caption\">\u7F51\u7EDC</Typography>\n              <Chip\n                label={metrics.connectionType}\n                size=\"small\"\n                variant=\"outlined\"\n              />\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n\n      {!isExpanded && (\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          {metrics.lcp && (\n            <Chip\n              label={`LCP: ${Math.round(metrics.lcp)}ms`}\n              size=\"small\"\n              color={getGradeColor(getPerformanceGrade('lcp', metrics.lcp)) as any}\n              variant=\"outlined\"\n            />\n          )}\n          {metrics.fid && (\n            <Chip\n              label={`FID: ${Math.round(metrics.fid)}ms`}\n              size=\"small\"\n              color={getGradeColor(getPerformanceGrade('fid', metrics.fid)) as any}\n              variant=\"outlined\"\n            />\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\n// \u6027\u80FD\u76D1\u63A7\u94A9\u5B50\nexport const usePerformanceMonitoring = () => {\n  const [metrics, setMetrics] = useState<Partial<PerformanceMetrics>>({});\n\n  const reportMetrics = (newMetrics: PerformanceMetrics) => {\n    setMetrics(newMetrics);\n    \n    // \u53D1\u9001\u5230\u5206\u6790\u670D\u52A1 (\u5982\u679C\u9700\u8981)\n    if (process.env.NODE_ENV === 'production') {\n      // \u8FD9\u91CC\u53EF\u4EE5\u96C6\u6210 Google Analytics, Sentry \u7B49\n      console.log('Performance Metrics:', newMetrics);\n    }\n  };\n\n  return { metrics, reportMetrics };\n};\n\nexport default PerformanceMonitor;\n"],
      names: ["PerformanceMonitor", "usePerformanceMonitoring", "enabled", "process", "env", "NODE_ENV", "showInProduction", "onMetricsUpdate", "metrics", "setMetrics", "useState", "isExpanded", "setIsExpanded", "observerRef", "useRef", "shouldShow", "useEffect", "window", "collectBasicMetrics", "navigation", "performance", "getEntriesByType", "paint", "newMetrics", "ttfb", "responseStart", "requestStart", "domContentLoaded", "domContentLoadedEventEnd", "navigationStart", "loadComplete", "loadEventEnd", "fcp", "find", "entry", "name", "startTime", "memory", "memoryUsage", "usedJSHeapSize", "navigator", "connection", "connectionType", "effectiveType", "prev", "setupPerformanceObserver", "lcpObserver", "PerformanceObserver", "list", "entries", "getEntries", "lastEntry", "length", "lcp", "observe", "entryTypes", "fidObserver", "forEach", "fid", "processingStart", "clsObserver", "clsValue", "hadRecentInput", "value", "cls", "current", "error", "console", "warn", "timer", "setTimeout", "clearTimeout", "disconnect", "getPerformanceGrade", "metric", "thresholds", "good", "poor", "threshold", "getGradeColor", "grade", "formatValue", "toFixed", "Math", "round", "Box", "sx", "position", "bottom", "right", "backgroundColor", "border", "borderColor", "borderRadius", "p", "minWidth", "maxWidth", "zIndex", "boxShadow", "display", "alignItems", "justifyContent", "mb", "Typography", "variant", "fontWeight", "IconButton", "size", "onClick", "ExpandLess", "ExpandMore", "Collapse", "in", "flexDirection", "gap", "Object", "map", "key", "undefined", "color", "toUpperCase", "Chip", "label", "flexWrap", "reportMetrics", "log"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f4167410b5d2d729cc2d0132c157e32bb5dc05e0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yxkwkpnoe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yxkwkpnoe();
cov_1yxkwkpnoe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1yxkwkpnoe().f[0]++;
  cov_1yxkwkpnoe().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1yxkwkpnoe().s[3]++;
_export(exports, {
  PerformanceMonitor: function () {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().f[1]++;
    cov_1yxkwkpnoe().s[4]++;
    return PerformanceMonitor;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().f[2]++;
    cov_1yxkwkpnoe().s[5]++;
    return _default;
  },
  usePerformanceMonitoring: function () {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().f[3]++;
    cov_1yxkwkpnoe().s[6]++;
    return usePerformanceMonitoring;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1yxkwkpnoe().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1yxkwkpnoe().s[8]++, require("react"));
const _Box =
/* istanbul ignore next */
(/*#__PURE__*/cov_1yxkwkpnoe().s[9]++, _interop_require_default(require("@mui/material/Box")));
const _Typography =
/* istanbul ignore next */
(/*#__PURE__*/cov_1yxkwkpnoe().s[10]++, _interop_require_default(require("@mui/material/Typography")));
const _Chip =
/* istanbul ignore next */
(/*#__PURE__*/cov_1yxkwkpnoe().s[11]++, _interop_require_default(require("@mui/material/Chip")));
const _Collapse =
/* istanbul ignore next */
(/*#__PURE__*/cov_1yxkwkpnoe().s[12]++, _interop_require_default(require("@mui/material/Collapse")));
const _IconButton =
/* istanbul ignore next */
(/*#__PURE__*/cov_1yxkwkpnoe().s[13]++, _interop_require_default(require("@mui/material/IconButton")));
const _ExpandMore =
/* istanbul ignore next */
(/*#__PURE__*/cov_1yxkwkpnoe().s[14]++, _interop_require_default(require("@mui/icons-material/ExpandMore")));
const _ExpandLess =
/* istanbul ignore next */
(/*#__PURE__*/cov_1yxkwkpnoe().s[15]++, _interop_require_default(require("@mui/icons-material/ExpandLess")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1yxkwkpnoe().f[4]++;
  cov_1yxkwkpnoe().s[16]++;
  return /* istanbul ignore next */(cov_1yxkwkpnoe().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_1yxkwkpnoe().s[17]++;
const PerformanceMonitor = ({
  enabled =
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().b[2][0]++, process.env.NODE_ENV === 'development'),
  showInProduction =
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().b[3][0]++, false),
  onMetricsUpdate
}) => {
  /* istanbul ignore next */
  cov_1yxkwkpnoe().f[5]++;
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().s[18]++, (0, _react.useState)({}));
  const [isExpanded, setIsExpanded] =
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().s[19]++, (0, _react.useState)(false));
  const observerRef =
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().s[20]++, (0, _react.useRef)(null));
  // 检查是否应该显示监控器
  const shouldShow =
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().s[21]++,
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().b[4][0]++, enabled) ||
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().b[4][1]++, process.env.NODE_ENV === 'production') &&
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().b[4][2]++, showInProduction));
  /* istanbul ignore next */
  cov_1yxkwkpnoe().s[22]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().f[6]++;
    cov_1yxkwkpnoe().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_1yxkwkpnoe().b[6][0]++, !shouldShow) ||
    /* istanbul ignore next */
    (cov_1yxkwkpnoe().b[6][1]++, typeof window === 'undefined')) {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().b[5][0]++;
      cov_1yxkwkpnoe().s[24]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1yxkwkpnoe().b[5][1]++;
    }
    // 收集基础性能指标
    cov_1yxkwkpnoe().s[25]++;
    const collectBasicMetrics = () => {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().f[7]++;
      const navigation =
      /* istanbul ignore next */
      (cov_1yxkwkpnoe().s[26]++, performance.getEntriesByType('navigation')[0]);
      const paint =
      /* istanbul ignore next */
      (cov_1yxkwkpnoe().s[27]++, performance.getEntriesByType('paint'));
      const newMetrics =
      /* istanbul ignore next */
      (cov_1yxkwkpnoe().s[28]++, {
        ttfb: navigation.responseStart - navigation.requestStart,
        domContentLoaded: navigation.domContentLoadedEventEnd - navigation.navigationStart,
        loadComplete: navigation.loadEventEnd - navigation.navigationStart
      });
      // First Contentful Paint
      const fcp =
      /* istanbul ignore next */
      (cov_1yxkwkpnoe().s[29]++, paint.find(entry => {
        /* istanbul ignore next */
        cov_1yxkwkpnoe().f[8]++;
        cov_1yxkwkpnoe().s[30]++;
        return entry.name === 'first-contentful-paint';
      }));
      /* istanbul ignore next */
      cov_1yxkwkpnoe().s[31]++;
      if (fcp) {
        /* istanbul ignore next */
        cov_1yxkwkpnoe().b[7][0]++;
        cov_1yxkwkpnoe().s[32]++;
        newMetrics.fcp = fcp.startTime;
      } else
      /* istanbul ignore next */
      {
        cov_1yxkwkpnoe().b[7][1]++;
      }
      // 内存使用情况 (如果支持)
      cov_1yxkwkpnoe().s[33]++;
      if ('memory' in performance) {
        /* istanbul ignore next */
        cov_1yxkwkpnoe().b[8][0]++;
        const memory =
        /* istanbul ignore next */
        (cov_1yxkwkpnoe().s[34]++, performance.memory);
        /* istanbul ignore next */
        cov_1yxkwkpnoe().s[35]++;
        newMetrics.memoryUsage = memory.usedJSHeapSize / 1024 / 1024; // MB
      } else
      /* istanbul ignore next */
      {
        cov_1yxkwkpnoe().b[8][1]++;
      }
      // 网络连接类型 (如果支持)
      cov_1yxkwkpnoe().s[36]++;
      if ('connection' in navigator) {
        /* istanbul ignore next */
        cov_1yxkwkpnoe().b[9][0]++;
        const connection =
        /* istanbul ignore next */
        (cov_1yxkwkpnoe().s[37]++, navigator.connection);
        /* istanbul ignore next */
        cov_1yxkwkpnoe().s[38]++;
        newMetrics.connectionType = connection.effectiveType;
      } else
      /* istanbul ignore next */
      {
        cov_1yxkwkpnoe().b[9][1]++;
      }
      cov_1yxkwkpnoe().s[39]++;
      setMetrics(prev => {
        /* istanbul ignore next */
        cov_1yxkwkpnoe().f[9]++;
        cov_1yxkwkpnoe().s[40]++;
        return {
          ...prev,
          ...newMetrics
        };
      });
      /* istanbul ignore next */
      cov_1yxkwkpnoe().s[41]++;
      onMetricsUpdate?.(newMetrics);
    };
    // 使用 PerformanceObserver 收集 Web Vitals
    /* istanbul ignore next */
    cov_1yxkwkpnoe().s[42]++;
    const setupPerformanceObserver = () => {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().f[10]++;
      cov_1yxkwkpnoe().s[43]++;
      try {
        // Largest Contentful Paint
        const lcpObserver =
        /* istanbul ignore next */
        (cov_1yxkwkpnoe().s[44]++, new PerformanceObserver(list => {
          /* istanbul ignore next */
          cov_1yxkwkpnoe().f[11]++;
          const entries =
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().s[45]++, list.getEntries());
          const lastEntry =
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().s[46]++, entries[entries.length - 1]);
          /* istanbul ignore next */
          cov_1yxkwkpnoe().s[47]++;
          setMetrics(prev => {
            /* istanbul ignore next */
            cov_1yxkwkpnoe().f[12]++;
            cov_1yxkwkpnoe().s[48]++;
            return {
              ...prev,
              lcp: lastEntry.startTime
            };
          });
        }));
        /* istanbul ignore next */
        cov_1yxkwkpnoe().s[49]++;
        lcpObserver.observe({
          entryTypes: ['largest-contentful-paint']
        });
        // First Input Delay
        const fidObserver =
        /* istanbul ignore next */
        (cov_1yxkwkpnoe().s[50]++, new PerformanceObserver(list => {
          /* istanbul ignore next */
          cov_1yxkwkpnoe().f[13]++;
          const entries =
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().s[51]++, list.getEntries());
          /* istanbul ignore next */
          cov_1yxkwkpnoe().s[52]++;
          entries.forEach(entry => {
            /* istanbul ignore next */
            cov_1yxkwkpnoe().f[14]++;
            cov_1yxkwkpnoe().s[53]++;
            setMetrics(prev => {
              /* istanbul ignore next */
              cov_1yxkwkpnoe().f[15]++;
              cov_1yxkwkpnoe().s[54]++;
              return {
                ...prev,
                fid: entry.processingStart - entry.startTime
              };
            });
          });
        }));
        /* istanbul ignore next */
        cov_1yxkwkpnoe().s[55]++;
        fidObserver.observe({
          entryTypes: ['first-input']
        });
        // Cumulative Layout Shift
        const clsObserver =
        /* istanbul ignore next */
        (cov_1yxkwkpnoe().s[56]++, new PerformanceObserver(list => {
          /* istanbul ignore next */
          cov_1yxkwkpnoe().f[16]++;
          let clsValue =
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().s[57]++, 0);
          const entries =
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().s[58]++, list.getEntries());
          /* istanbul ignore next */
          cov_1yxkwkpnoe().s[59]++;
          entries.forEach(entry => {
            /* istanbul ignore next */
            cov_1yxkwkpnoe().f[17]++;
            cov_1yxkwkpnoe().s[60]++;
            if (!entry.hadRecentInput) {
              /* istanbul ignore next */
              cov_1yxkwkpnoe().b[10][0]++;
              cov_1yxkwkpnoe().s[61]++;
              clsValue += entry.value;
            } else
            /* istanbul ignore next */
            {
              cov_1yxkwkpnoe().b[10][1]++;
            }
          });
          /* istanbul ignore next */
          cov_1yxkwkpnoe().s[62]++;
          setMetrics(prev => {
            /* istanbul ignore next */
            cov_1yxkwkpnoe().f[18]++;
            cov_1yxkwkpnoe().s[63]++;
            return {
              ...prev,
              cls: clsValue
            };
          });
        }));
        /* istanbul ignore next */
        cov_1yxkwkpnoe().s[64]++;
        clsObserver.observe({
          entryTypes: ['layout-shift']
        });
        /* istanbul ignore next */
        cov_1yxkwkpnoe().s[65]++;
        observerRef.current = lcpObserver; // 保存一个引用用于清理
      } catch (error) {
        /* istanbul ignore next */
        cov_1yxkwkpnoe().s[66]++;
        console.warn('PerformanceObserver not supported:', error);
      }
    };
    // 延迟收集指标，确保页面加载完成
    const timer =
    /* istanbul ignore next */
    (cov_1yxkwkpnoe().s[67]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().f[19]++;
      cov_1yxkwkpnoe().s[68]++;
      collectBasicMetrics();
      /* istanbul ignore next */
      cov_1yxkwkpnoe().s[69]++;
      setupPerformanceObserver();
    }, 1000));
    /* istanbul ignore next */
    cov_1yxkwkpnoe().s[70]++;
    return () => {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().f[20]++;
      cov_1yxkwkpnoe().s[71]++;
      clearTimeout(timer);
      /* istanbul ignore next */
      cov_1yxkwkpnoe().s[72]++;
      observerRef.current?.disconnect();
    };
  }, [shouldShow, onMetricsUpdate]);
  // 获取性能评级
  /* istanbul ignore next */
  cov_1yxkwkpnoe().s[73]++;
  const getPerformanceGrade = (metric, value) => {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().f[21]++;
    const thresholds =
    /* istanbul ignore next */
    (cov_1yxkwkpnoe().s[74]++, {
      fcp: {
        good: 1800,
        poor: 3000
      },
      lcp: {
        good: 2500,
        poor: 4000
      },
      fid: {
        good: 100,
        poor: 300
      },
      cls: {
        good: 0.1,
        poor: 0.25
      },
      ttfb: {
        good: 800,
        poor: 1800
      }
    });
    const threshold =
    /* istanbul ignore next */
    (cov_1yxkwkpnoe().s[75]++, thresholds[metric]);
    /* istanbul ignore next */
    cov_1yxkwkpnoe().s[76]++;
    if (!threshold) {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().b[11][0]++;
      cov_1yxkwkpnoe().s[77]++;
      return 'good';
    } else
    /* istanbul ignore next */
    {
      cov_1yxkwkpnoe().b[11][1]++;
    }
    cov_1yxkwkpnoe().s[78]++;
    if (value <= threshold.good) {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().b[12][0]++;
      cov_1yxkwkpnoe().s[79]++;
      return 'good';
    } else
    /* istanbul ignore next */
    {
      cov_1yxkwkpnoe().b[12][1]++;
    }
    cov_1yxkwkpnoe().s[80]++;
    if (value <= threshold.poor) {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().b[13][0]++;
      cov_1yxkwkpnoe().s[81]++;
      return 'needs-improvement';
    } else
    /* istanbul ignore next */
    {
      cov_1yxkwkpnoe().b[13][1]++;
    }
    cov_1yxkwkpnoe().s[82]++;
    return 'poor';
  };
  // 获取评级颜色
  /* istanbul ignore next */
  cov_1yxkwkpnoe().s[83]++;
  const getGradeColor = grade => {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().f[22]++;
    cov_1yxkwkpnoe().s[84]++;
    switch (grade) {
      case 'good':
        /* istanbul ignore next */
        cov_1yxkwkpnoe().b[14][0]++;
        cov_1yxkwkpnoe().s[85]++;
        return 'success';
      case 'needs-improvement':
        /* istanbul ignore next */
        cov_1yxkwkpnoe().b[14][1]++;
        cov_1yxkwkpnoe().s[86]++;
        return 'warning';
      case 'poor':
        /* istanbul ignore next */
        cov_1yxkwkpnoe().b[14][2]++;
        cov_1yxkwkpnoe().s[87]++;
        return 'error';
      default:
        /* istanbul ignore next */
        cov_1yxkwkpnoe().b[14][3]++;
        cov_1yxkwkpnoe().s[88]++;
        return 'default';
    }
  };
  // 格式化数值
  /* istanbul ignore next */
  cov_1yxkwkpnoe().s[89]++;
  const formatValue = (metric, value) => {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().f[23]++;
    cov_1yxkwkpnoe().s[90]++;
    if (metric === 'cls') {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().b[15][0]++;
      cov_1yxkwkpnoe().s[91]++;
      return value.toFixed(3);
    } else
    /* istanbul ignore next */
    {
      cov_1yxkwkpnoe().b[15][1]++;
    }
    cov_1yxkwkpnoe().s[92]++;
    if (metric === 'memoryUsage') {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().b[16][0]++;
      cov_1yxkwkpnoe().s[93]++;
      return `${value.toFixed(1)} MB`;
    } else
    /* istanbul ignore next */
    {
      cov_1yxkwkpnoe().b[16][1]++;
    }
    cov_1yxkwkpnoe().s[94]++;
    return `${Math.round(value)} ms`;
  };
  /* istanbul ignore next */
  cov_1yxkwkpnoe().s[95]++;
  if (!shouldShow) {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().b[17][0]++;
    cov_1yxkwkpnoe().s[96]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1yxkwkpnoe().b[17][1]++;
  }
  cov_1yxkwkpnoe().s[97]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
    sx: {
      position: 'fixed',
      bottom: 16,
      right: 16,
      backgroundColor: 'background.paper',
      border: 1,
      borderColor: 'divider',
      borderRadius: 2,
      p: 2,
      minWidth: 280,
      maxWidth: 400,
      zIndex: 9999,
      boxShadow: 3
    },
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mb: 1,
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
        variant: "subtitle2",
        fontWeight: "bold",
        children: "性能监控"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_IconButton.default, {
        size: "small",
        onClick: () => {
          /* istanbul ignore next */
          cov_1yxkwkpnoe().f[24]++;
          cov_1yxkwkpnoe().s[98]++;
          return setIsExpanded(!isExpanded);
        },
        children: isExpanded ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1yxkwkpnoe().b[18][0]++, (0, _jsxruntime.jsx)(_ExpandLess.default, {})) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1yxkwkpnoe().b[18][1]++, (0, _jsxruntime.jsx)(_ExpandMore.default, {}))
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Collapse.default, {
      in: isExpanded,
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
        display: "flex",
        flexDirection: "column",
        gap: 1,
        children: [Object.entries(metrics).map(([key, value]) => {
          /* istanbul ignore next */
          cov_1yxkwkpnoe().f[25]++;
          cov_1yxkwkpnoe().s[99]++;
          if (
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().b[20][0]++, value === undefined) ||
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().b[20][1]++, value === null)) {
            /* istanbul ignore next */
            cov_1yxkwkpnoe().b[19][0]++;
            cov_1yxkwkpnoe().s[100]++;
            return null;
          } else
          /* istanbul ignore next */
          {
            cov_1yxkwkpnoe().b[19][1]++;
          }
          const grade =
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().s[101]++, getPerformanceGrade(key, value));
          const color =
          /* istanbul ignore next */
          (cov_1yxkwkpnoe().s[102]++, getGradeColor(grade));
          /* istanbul ignore next */
          cov_1yxkwkpnoe().s[103]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
              variant: "caption",
              sx: {
                minWidth: 80
              },
              children: key.toUpperCase()
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Chip.default, {
              label: formatValue(key, value),
              size: "small",
              color: color,
              variant: "outlined"
            })]
          }, key);
        }),
        /* istanbul ignore next */
        (cov_1yxkwkpnoe().b[21][0]++, metrics.connectionType) &&
        /* istanbul ignore next */
        (cov_1yxkwkpnoe().b[21][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Typography.default, {
            variant: "caption",
            children: "网络"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Chip.default, {
            label: metrics.connectionType,
            size: "small",
            variant: "outlined"
          })]
        }))]
      })
    }),
    /* istanbul ignore next */
    (cov_1yxkwkpnoe().b[22][0]++, !isExpanded) &&
    /* istanbul ignore next */
    (cov_1yxkwkpnoe().b[22][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_Box.default, {
      display: "flex",
      gap: 1,
      flexWrap: "wrap",
      children: [
      /* istanbul ignore next */
      (cov_1yxkwkpnoe().b[23][0]++, metrics.lcp) &&
      /* istanbul ignore next */
      (cov_1yxkwkpnoe().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Chip.default, {
        label: `LCP: ${Math.round(metrics.lcp)}ms`,
        size: "small",
        color: getGradeColor(getPerformanceGrade('lcp', metrics.lcp)),
        variant: "outlined"
      })),
      /* istanbul ignore next */
      (cov_1yxkwkpnoe().b[24][0]++, metrics.fid) &&
      /* istanbul ignore next */
      (cov_1yxkwkpnoe().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Chip.default, {
        label: `FID: ${Math.round(metrics.fid)}ms`,
        size: "small",
        color: getGradeColor(getPerformanceGrade('fid', metrics.fid)),
        variant: "outlined"
      }))]
    }))]
  });
};
/* istanbul ignore next */
cov_1yxkwkpnoe().s[104]++;
const usePerformanceMonitoring = () => {
  /* istanbul ignore next */
  cov_1yxkwkpnoe().f[26]++;
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_1yxkwkpnoe().s[105]++, (0, _react.useState)({}));
  /* istanbul ignore next */
  cov_1yxkwkpnoe().s[106]++;
  const reportMetrics = newMetrics => {
    /* istanbul ignore next */
    cov_1yxkwkpnoe().f[27]++;
    cov_1yxkwkpnoe().s[107]++;
    setMetrics(newMetrics);
    // 发送到分析服务 (如果需要)
    /* istanbul ignore next */
    cov_1yxkwkpnoe().s[108]++;
    if (process.env.NODE_ENV === 'production') {
      /* istanbul ignore next */
      cov_1yxkwkpnoe().b[25][0]++;
      cov_1yxkwkpnoe().s[109]++;
      // 这里可以集成 Google Analytics, Sentry 等
      console.log('Performance Metrics:', newMetrics);
    } else
    /* istanbul ignore next */
    {
      cov_1yxkwkpnoe().b[25][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1yxkwkpnoe().s[110]++;
  return {
    metrics,
    reportMetrics
  };
};
const _default =
/* istanbul ignore next */
(cov_1yxkwkpnoe().s[111]++, PerformanceMonitor);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXl4a3drcG5vZSIsImFjdHVhbENvdmVyYWdlIiwicyIsIlBlcmZvcm1hbmNlTW9uaXRvciIsImYiLCJkZWZhdWx0IiwiX2RlZmF1bHQiLCJ1c2VQZXJmb3JtYW5jZU1vbml0b3JpbmciLCJlbmFibGVkIiwiYiIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInNob3dJblByb2R1Y3Rpb24iLCJvbk1ldHJpY3NVcGRhdGUiLCJtZXRyaWNzIiwic2V0TWV0cmljcyIsIl9yZWFjdCIsInVzZVN0YXRlIiwiaXNFeHBhbmRlZCIsInNldElzRXhwYW5kZWQiLCJvYnNlcnZlclJlZiIsInVzZVJlZiIsInNob3VsZFNob3ciLCJ1c2VFZmZlY3QiLCJ3aW5kb3ciLCJjb2xsZWN0QmFzaWNNZXRyaWNzIiwibmF2aWdhdGlvbiIsInBlcmZvcm1hbmNlIiwiZ2V0RW50cmllc0J5VHlwZSIsInBhaW50IiwibmV3TWV0cmljcyIsInR0ZmIiLCJyZXNwb25zZVN0YXJ0IiwicmVxdWVzdFN0YXJ0IiwiZG9tQ29udGVudExvYWRlZCIsImRvbUNvbnRlbnRMb2FkZWRFdmVudEVuZCIsIm5hdmlnYXRpb25TdGFydCIsImxvYWRDb21wbGV0ZSIsImxvYWRFdmVudEVuZCIsImZjcCIsImZpbmQiLCJlbnRyeSIsIm5hbWUiLCJzdGFydFRpbWUiLCJtZW1vcnkiLCJtZW1vcnlVc2FnZSIsInVzZWRKU0hlYXBTaXplIiwibmF2aWdhdG9yIiwiY29ubmVjdGlvbiIsImNvbm5lY3Rpb25UeXBlIiwiZWZmZWN0aXZlVHlwZSIsInByZXYiLCJzZXR1cFBlcmZvcm1hbmNlT2JzZXJ2ZXIiLCJsY3BPYnNlcnZlciIsIlBlcmZvcm1hbmNlT2JzZXJ2ZXIiLCJsaXN0IiwiZW50cmllcyIsImdldEVudHJpZXMiLCJsYXN0RW50cnkiLCJsZW5ndGgiLCJsY3AiLCJvYnNlcnZlIiwiZW50cnlUeXBlcyIsImZpZE9ic2VydmVyIiwiZm9yRWFjaCIsImZpZCIsInByb2Nlc3NpbmdTdGFydCIsImNsc09ic2VydmVyIiwiY2xzVmFsdWUiLCJoYWRSZWNlbnRJbnB1dCIsInZhbHVlIiwiY2xzIiwiY3VycmVudCIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJ0aW1lciIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJkaXNjb25uZWN0IiwiZ2V0UGVyZm9ybWFuY2VHcmFkZSIsIm1ldHJpYyIsInRocmVzaG9sZHMiLCJnb29kIiwicG9vciIsInRocmVzaG9sZCIsImdldEdyYWRlQ29sb3IiLCJncmFkZSIsImZvcm1hdFZhbHVlIiwidG9GaXhlZCIsIk1hdGgiLCJyb3VuZCIsIl9qc3hydW50aW1lIiwianN4cyIsIl9Cb3giLCJzeCIsInBvc2l0aW9uIiwiYm90dG9tIiwicmlnaHQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXIiLCJib3JkZXJDb2xvciIsImJvcmRlclJhZGl1cyIsInAiLCJtaW5XaWR0aCIsIm1heFdpZHRoIiwiekluZGV4IiwiYm94U2hhZG93IiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsIm1iIiwianN4IiwiX1R5cG9ncmFwaHkiLCJ2YXJpYW50IiwiZm9udFdlaWdodCIsIl9JY29uQnV0dG9uIiwic2l6ZSIsIm9uQ2xpY2siLCJfRXhwYW5kTGVzcyIsIl9FeHBhbmRNb3JlIiwiX0NvbGxhcHNlIiwiaW4iLCJmbGV4RGlyZWN0aW9uIiwiZ2FwIiwiT2JqZWN0IiwibWFwIiwia2V5IiwidW5kZWZpbmVkIiwiY29sb3IiLCJ0b1VwcGVyQ2FzZSIsIl9DaGlwIiwibGFiZWwiLCJmbGV4V3JhcCIsInJlcG9ydE1ldHJpY3MiLCJsb2ciXSwic291cmNlcyI6WyIvVXNlcnMveXVkZXlvdS9EZXNrdG9wL3NtL3NvY2lvbWludC9zcmMvY29tcG9uZW50cy9tb25pdG9yaW5nL1BlcmZvcm1hbmNlTW9uaXRvci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCb3gsIFR5cG9ncmFwaHksIENoaXAsIENvbGxhcHNlLCBJY29uQnV0dG9uIH0gZnJvbSAnQG11aS9tYXRlcmlhbCc7XG5pbXBvcnQgeyBFeHBhbmRNb3JlLCBFeHBhbmRMZXNzIH0gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbCc7XG5cbmludGVyZmFjZSBQZXJmb3JtYW5jZU1ldHJpY3Mge1xuICBmY3A6IG51bWJlcjsgLy8gRmlyc3QgQ29udGVudGZ1bCBQYWludFxuICBsY3A6IG51bWJlcjsgLy8gTGFyZ2VzdCBDb250ZW50ZnVsIFBhaW50XG4gIGZpZDogbnVtYmVyOyAvLyBGaXJzdCBJbnB1dCBEZWxheVxuICBjbHM6IG51bWJlcjsgLy8gQ3VtdWxhdGl2ZSBMYXlvdXQgU2hpZnRcbiAgdHRmYjogbnVtYmVyOyAvLyBUaW1lIHRvIEZpcnN0IEJ5dGVcbiAgZG9tQ29udGVudExvYWRlZDogbnVtYmVyO1xuICBsb2FkQ29tcGxldGU6IG51bWJlcjtcbiAgbWVtb3J5VXNhZ2U/OiBudW1iZXI7XG4gIGNvbm5lY3Rpb25UeXBlPzogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgUGVyZm9ybWFuY2VNb25pdG9yUHJvcHMge1xuICBlbmFibGVkPzogYm9vbGVhbjtcbiAgc2hvd0luUHJvZHVjdGlvbj86IGJvb2xlYW47XG4gIG9uTWV0cmljc1VwZGF0ZT86IChtZXRyaWNzOiBQZXJmb3JtYW5jZU1ldHJpY3MpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBjb25zdCBQZXJmb3JtYW5jZU1vbml0b3I6IFJlYWN0LkZDPFBlcmZvcm1hbmNlTW9uaXRvclByb3BzPiA9ICh7XG4gIGVuYWJsZWQgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyxcbiAgc2hvd0luUHJvZHVjdGlvbiA9IGZhbHNlLFxuICBvbk1ldHJpY3NVcGRhdGUsXG59KSA9PiB7XG4gIGNvbnN0IFttZXRyaWNzLCBzZXRNZXRyaWNzXSA9IHVzZVN0YXRlPFBhcnRpYWw8UGVyZm9ybWFuY2VNZXRyaWNzPj4oe30pO1xuICBjb25zdCBbaXNFeHBhbmRlZCwgc2V0SXNFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IG9ic2VydmVyUmVmID0gdXNlUmVmPFBlcmZvcm1hbmNlT2JzZXJ2ZXIgfCBudWxsPihudWxsKTtcblxuICAvLyDmo4Dmn6XmmK/lkKblupTor6XmmL7npLrnm5HmjqflmahcbiAgY29uc3Qgc2hvdWxkU2hvdyA9IGVuYWJsZWQgfHwgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgc2hvd0luUHJvZHVjdGlvbik7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXNob3VsZFNob3cgfHwgdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybjtcblxuICAgIC8vIOaUtumbhuWfuuehgOaAp+iDveaMh+agh1xuICAgIGNvbnN0IGNvbGxlY3RCYXNpY01ldHJpY3MgPSAoKSA9PiB7XG4gICAgICBjb25zdCBuYXZpZ2F0aW9uID0gcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSgnbmF2aWdhdGlvbicpWzBdIGFzIFBlcmZvcm1hbmNlTmF2aWdhdGlvblRpbWluZztcbiAgICAgIGNvbnN0IHBhaW50ID0gcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSgncGFpbnQnKTtcbiAgICAgIFxuICAgICAgY29uc3QgbmV3TWV0cmljczogUGFydGlhbDxQZXJmb3JtYW5jZU1ldHJpY3M+ID0ge1xuICAgICAgICB0dGZiOiBuYXZpZ2F0aW9uLnJlc3BvbnNlU3RhcnQgLSBuYXZpZ2F0aW9uLnJlcXVlc3RTdGFydCxcbiAgICAgICAgZG9tQ29udGVudExvYWRlZDogbmF2aWdhdGlvbi5kb21Db250ZW50TG9hZGVkRXZlbnRFbmQgLSBuYXZpZ2F0aW9uLm5hdmlnYXRpb25TdGFydCxcbiAgICAgICAgbG9hZENvbXBsZXRlOiBuYXZpZ2F0aW9uLmxvYWRFdmVudEVuZCAtIG5hdmlnYXRpb24ubmF2aWdhdGlvblN0YXJ0LFxuICAgICAgfTtcblxuICAgICAgLy8gRmlyc3QgQ29udGVudGZ1bCBQYWludFxuICAgICAgY29uc3QgZmNwID0gcGFpbnQuZmluZChlbnRyeSA9PiBlbnRyeS5uYW1lID09PSAnZmlyc3QtY29udGVudGZ1bC1wYWludCcpO1xuICAgICAgaWYgKGZjcCkge1xuICAgICAgICBuZXdNZXRyaWNzLmZjcCA9IGZjcC5zdGFydFRpbWU7XG4gICAgICB9XG5cbiAgICAgIC8vIOWGheWtmOS9v+eUqOaDheWGtSAo5aaC5p6c5pSv5oyBKVxuICAgICAgaWYgKCdtZW1vcnknIGluIHBlcmZvcm1hbmNlKSB7XG4gICAgICAgIGNvbnN0IG1lbW9yeSA9IChwZXJmb3JtYW5jZSBhcyBhbnkpLm1lbW9yeTtcbiAgICAgICAgbmV3TWV0cmljcy5tZW1vcnlVc2FnZSA9IG1lbW9yeS51c2VkSlNIZWFwU2l6ZSAvIDEwMjQgLyAxMDI0OyAvLyBNQlxuICAgICAgfVxuXG4gICAgICAvLyDnvZHnu5zov57mjqXnsbvlnosgKOWmguaenOaUr+aMgSlcbiAgICAgIGlmICgnY29ubmVjdGlvbicgaW4gbmF2aWdhdG9yKSB7XG4gICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSAobmF2aWdhdG9yIGFzIGFueSkuY29ubmVjdGlvbjtcbiAgICAgICAgbmV3TWV0cmljcy5jb25uZWN0aW9uVHlwZSA9IGNvbm5lY3Rpb24uZWZmZWN0aXZlVHlwZTtcbiAgICAgIH1cblxuICAgICAgc2V0TWV0cmljcyhwcmV2ID0+ICh7IC4uLnByZXYsIC4uLm5ld01ldHJpY3MgfSkpO1xuICAgICAgb25NZXRyaWNzVXBkYXRlPy4obmV3TWV0cmljcyBhcyBQZXJmb3JtYW5jZU1ldHJpY3MpO1xuICAgIH07XG5cbiAgICAvLyDkvb/nlKggUGVyZm9ybWFuY2VPYnNlcnZlciDmlLbpm4YgV2ViIFZpdGFsc1xuICAgIGNvbnN0IHNldHVwUGVyZm9ybWFuY2VPYnNlcnZlciA9ICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIExhcmdlc3QgQ29udGVudGZ1bCBQYWludFxuICAgICAgICBjb25zdCBsY3BPYnNlcnZlciA9IG5ldyBQZXJmb3JtYW5jZU9ic2VydmVyKChsaXN0KSA9PiB7XG4gICAgICAgICAgY29uc3QgZW50cmllcyA9IGxpc3QuZ2V0RW50cmllcygpO1xuICAgICAgICAgIGNvbnN0IGxhc3RFbnRyeSA9IGVudHJpZXNbZW50cmllcy5sZW5ndGggLSAxXTtcbiAgICAgICAgICBzZXRNZXRyaWNzKHByZXYgPT4gKHsgLi4ucHJldiwgbGNwOiBsYXN0RW50cnkuc3RhcnRUaW1lIH0pKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGxjcE9ic2VydmVyLm9ic2VydmUoeyBlbnRyeVR5cGVzOiBbJ2xhcmdlc3QtY29udGVudGZ1bC1wYWludCddIH0pO1xuXG4gICAgICAgIC8vIEZpcnN0IElucHV0IERlbGF5XG4gICAgICAgIGNvbnN0IGZpZE9ic2VydmVyID0gbmV3IFBlcmZvcm1hbmNlT2JzZXJ2ZXIoKGxpc3QpID0+IHtcbiAgICAgICAgICBjb25zdCBlbnRyaWVzID0gbGlzdC5nZXRFbnRyaWVzKCk7XG4gICAgICAgICAgZW50cmllcy5mb3JFYWNoKChlbnRyeSkgPT4ge1xuICAgICAgICAgICAgc2V0TWV0cmljcyhwcmV2ID0+ICh7IC4uLnByZXYsIGZpZDogZW50cnkucHJvY2Vzc2luZ1N0YXJ0IC0gZW50cnkuc3RhcnRUaW1lIH0pKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZpZE9ic2VydmVyLm9ic2VydmUoeyBlbnRyeVR5cGVzOiBbJ2ZpcnN0LWlucHV0J10gfSk7XG5cbiAgICAgICAgLy8gQ3VtdWxhdGl2ZSBMYXlvdXQgU2hpZnRcbiAgICAgICAgY29uc3QgY2xzT2JzZXJ2ZXIgPSBuZXcgUGVyZm9ybWFuY2VPYnNlcnZlcigobGlzdCkgPT4ge1xuICAgICAgICAgIGxldCBjbHNWYWx1ZSA9IDA7XG4gICAgICAgICAgY29uc3QgZW50cmllcyA9IGxpc3QuZ2V0RW50cmllcygpO1xuICAgICAgICAgIGVudHJpZXMuZm9yRWFjaCgoZW50cnkpID0+IHtcbiAgICAgICAgICAgIGlmICghKGVudHJ5IGFzIGFueSkuaGFkUmVjZW50SW5wdXQpIHtcbiAgICAgICAgICAgICAgY2xzVmFsdWUgKz0gKGVudHJ5IGFzIGFueSkudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgc2V0TWV0cmljcyhwcmV2ID0+ICh7IC4uLnByZXYsIGNsczogY2xzVmFsdWUgfSkpO1xuICAgICAgICB9KTtcbiAgICAgICAgY2xzT2JzZXJ2ZXIub2JzZXJ2ZSh7IGVudHJ5VHlwZXM6IFsnbGF5b3V0LXNoaWZ0J10gfSk7XG5cbiAgICAgICAgb2JzZXJ2ZXJSZWYuY3VycmVudCA9IGxjcE9ic2VydmVyOyAvLyDkv53lrZjkuIDkuKrlvJXnlKjnlKjkuo7muIXnkIZcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignUGVyZm9ybWFuY2VPYnNlcnZlciBub3Qgc3VwcG9ydGVkOicsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8g5bu26L+f5pS26ZuG5oyH5qCH77yM56Gu5L+d6aG16Z2i5Yqg6L295a6M5oiQXG4gICAgY29uc3QgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbGxlY3RCYXNpY01ldHJpY3MoKTtcbiAgICAgIHNldHVwUGVyZm9ybWFuY2VPYnNlcnZlcigpO1xuICAgIH0sIDEwMDApO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICBvYnNlcnZlclJlZi5jdXJyZW50Py5kaXNjb25uZWN0KCk7XG4gICAgfTtcbiAgfSwgW3Nob3VsZFNob3csIG9uTWV0cmljc1VwZGF0ZV0pO1xuXG4gIC8vIOiOt+WPluaAp+iDveivhOe6p1xuICBjb25zdCBnZXRQZXJmb3JtYW5jZUdyYWRlID0gKG1ldHJpYzogc3RyaW5nLCB2YWx1ZTogbnVtYmVyKTogJ2dvb2QnIHwgJ25lZWRzLWltcHJvdmVtZW50JyB8ICdwb29yJyA9PiB7XG4gICAgY29uc3QgdGhyZXNob2xkcyA9IHtcbiAgICAgIGZjcDogeyBnb29kOiAxODAwLCBwb29yOiAzMDAwIH0sXG4gICAgICBsY3A6IHsgZ29vZDogMjUwMCwgcG9vcjogNDAwMCB9LFxuICAgICAgZmlkOiB7IGdvb2Q6IDEwMCwgcG9vcjogMzAwIH0sXG4gICAgICBjbHM6IHsgZ29vZDogMC4xLCBwb29yOiAwLjI1IH0sXG4gICAgICB0dGZiOiB7IGdvb2Q6IDgwMCwgcG9vcjogMTgwMCB9LFxuICAgIH07XG5cbiAgICBjb25zdCB0aHJlc2hvbGQgPSB0aHJlc2hvbGRzW21ldHJpYyBhcyBrZXlvZiB0eXBlb2YgdGhyZXNob2xkc107XG4gICAgaWYgKCF0aHJlc2hvbGQpIHJldHVybiAnZ29vZCc7XG5cbiAgICBpZiAodmFsdWUgPD0gdGhyZXNob2xkLmdvb2QpIHJldHVybiAnZ29vZCc7XG4gICAgaWYgKHZhbHVlIDw9IHRocmVzaG9sZC5wb29yKSByZXR1cm4gJ25lZWRzLWltcHJvdmVtZW50JztcbiAgICByZXR1cm4gJ3Bvb3InO1xuICB9O1xuXG4gIC8vIOiOt+WPluivhOe6p+minOiJslxuICBjb25zdCBnZXRHcmFkZUNvbG9yID0gKGdyYWRlOiBzdHJpbmcpID0+IHtcbiAgICBzd2l0Y2ggKGdyYWRlKSB7XG4gICAgICBjYXNlICdnb29kJzogcmV0dXJuICdzdWNjZXNzJztcbiAgICAgIGNhc2UgJ25lZWRzLWltcHJvdmVtZW50JzogcmV0dXJuICd3YXJuaW5nJztcbiAgICAgIGNhc2UgJ3Bvb3InOiByZXR1cm4gJ2Vycm9yJztcbiAgICAgIGRlZmF1bHQ6IHJldHVybiAnZGVmYXVsdCc7XG4gICAgfVxuICB9O1xuXG4gIC8vIOagvOW8j+WMluaVsOWAvFxuICBjb25zdCBmb3JtYXRWYWx1ZSA9IChtZXRyaWM6IHN0cmluZywgdmFsdWU6IG51bWJlcikgPT4ge1xuICAgIGlmIChtZXRyaWMgPT09ICdjbHMnKSByZXR1cm4gdmFsdWUudG9GaXhlZCgzKTtcbiAgICBpZiAobWV0cmljID09PSAnbWVtb3J5VXNhZ2UnKSByZXR1cm4gYCR7dmFsdWUudG9GaXhlZCgxKX0gTUJgO1xuICAgIHJldHVybiBgJHtNYXRoLnJvdW5kKHZhbHVlKX0gbXNgO1xuICB9O1xuXG4gIGlmICghc2hvdWxkU2hvdykgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgICAgYm90dG9tOiAxNixcbiAgICAgICAgcmlnaHQ6IDE2LFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdiYWNrZ3JvdW5kLnBhcGVyJyxcbiAgICAgICAgYm9yZGVyOiAxLFxuICAgICAgICBib3JkZXJDb2xvcjogJ2RpdmlkZXInLFxuICAgICAgICBib3JkZXJSYWRpdXM6IDIsXG4gICAgICAgIHA6IDIsXG4gICAgICAgIG1pbldpZHRoOiAyODAsXG4gICAgICAgIG1heFdpZHRoOiA0MDAsXG4gICAgICAgIHpJbmRleDogOTk5OSxcbiAgICAgICAgYm94U2hhZG93OiAzLFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8Qm94IGRpc3BsYXk9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG1iPXsxfT5cbiAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cInN1YnRpdGxlMlwiIGZvbnRXZWlnaHQ9XCJib2xkXCI+XG4gICAgICAgICAg5oCn6IO955uR5o6nXG4gICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPEljb25CdXR0b25cbiAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldElzRXhwYW5kZWQoIWlzRXhwYW5kZWQpfVxuICAgICAgICA+XG4gICAgICAgICAge2lzRXhwYW5kZWQgPyA8RXhwYW5kTGVzcyAvPiA6IDxFeHBhbmRNb3JlIC8+fVxuICAgICAgICA8L0ljb25CdXR0b24+XG4gICAgICA8L0JveD5cblxuICAgICAgPENvbGxhcHNlIGluPXtpc0V4cGFuZGVkfT5cbiAgICAgICAgPEJveCBkaXNwbGF5PVwiZmxleFwiIGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIiBnYXA9ezF9PlxuICAgICAgICAgIHtPYmplY3QuZW50cmllcyhtZXRyaWNzKS5tYXAoKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCBncmFkZSA9IGdldFBlcmZvcm1hbmNlR3JhZGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBjb2xvciA9IGdldEdyYWRlQ29sb3IoZ3JhZGUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICA8Qm94IGtleT17a2V5fSBkaXNwbGF5PVwiZmxleFwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiY2FwdGlvblwiIHN4PXt7IG1pbldpZHRoOiA4MCB9fT5cbiAgICAgICAgICAgICAgICAgIHtrZXkudG9VcHBlckNhc2UoKX1cbiAgICAgICAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgICAgICAgPENoaXBcbiAgICAgICAgICAgICAgICAgIGxhYmVsPXtmb3JtYXRWYWx1ZShrZXksIHZhbHVlKX1cbiAgICAgICAgICAgICAgICAgIHNpemU9XCJzbWFsbFwiXG4gICAgICAgICAgICAgICAgICBjb2xvcj17Y29sb3IgYXMgYW55fVxuICAgICAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVkXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSl9XG4gICAgICAgICAgXG4gICAgICAgICAge21ldHJpY3MuY29ubmVjdGlvblR5cGUgJiYgKFxuICAgICAgICAgICAgPEJveCBkaXNwbGF5PVwiZmxleFwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImNhcHRpb25cIj7nvZHnu5w8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgICAgIDxDaGlwXG4gICAgICAgICAgICAgICAgbGFiZWw9e21ldHJpY3MuY29ubmVjdGlvblR5cGV9XG4gICAgICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgICAgICAgICAgICB2YXJpYW50PVwib3V0bGluZWRcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0NvbGxhcHNlPlxuXG4gICAgICB7IWlzRXhwYW5kZWQgJiYgKFxuICAgICAgICA8Qm94IGRpc3BsYXk9XCJmbGV4XCIgZ2FwPXsxfSBmbGV4V3JhcD1cIndyYXBcIj5cbiAgICAgICAgICB7bWV0cmljcy5sY3AgJiYgKFxuICAgICAgICAgICAgPENoaXBcbiAgICAgICAgICAgICAgbGFiZWw9e2BMQ1A6ICR7TWF0aC5yb3VuZChtZXRyaWNzLmxjcCl9bXNgfVxuICAgICAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgICAgICBjb2xvcj17Z2V0R3JhZGVDb2xvcihnZXRQZXJmb3JtYW5jZUdyYWRlKCdsY3AnLCBtZXRyaWNzLmxjcCkpIGFzIGFueX1cbiAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVkXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7bWV0cmljcy5maWQgJiYgKFxuICAgICAgICAgICAgPENoaXBcbiAgICAgICAgICAgICAgbGFiZWw9e2BGSUQ6ICR7TWF0aC5yb3VuZChtZXRyaWNzLmZpZCl9bXNgfVxuICAgICAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgICAgICBjb2xvcj17Z2V0R3JhZGVDb2xvcihnZXRQZXJmb3JtYW5jZUdyYWRlKCdmaWQnLCBtZXRyaWNzLmZpZCkpIGFzIGFueX1cbiAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVkXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9Cb3g+XG4gICAgICApfVxuICAgIDwvQm94PlxuICApO1xufTtcblxuLy8g5oCn6IO955uR5o6n6ZKp5a2QXG5leHBvcnQgY29uc3QgdXNlUGVyZm9ybWFuY2VNb25pdG9yaW5nID0gKCkgPT4ge1xuICBjb25zdCBbbWV0cmljcywgc2V0TWV0cmljc10gPSB1c2VTdGF0ZTxQYXJ0aWFsPFBlcmZvcm1hbmNlTWV0cmljcz4+KHt9KTtcblxuICBjb25zdCByZXBvcnRNZXRyaWNzID0gKG5ld01ldHJpY3M6IFBlcmZvcm1hbmNlTWV0cmljcykgPT4ge1xuICAgIHNldE1ldHJpY3MobmV3TWV0cmljcyk7XG4gICAgXG4gICAgLy8g5Y+R6YCB5Yiw5YiG5p6Q5pyN5YqhICjlpoLmnpzpnIDopoEpXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIC8vIOi/memHjOWPr+S7pembhuaIkCBHb29nbGUgQW5hbHl0aWNzLCBTZW50cnkg562JXG4gICAgICBjb25zb2xlLmxvZygnUGVyZm9ybWFuY2UgTWV0cmljczonLCBuZXdNZXRyaWNzKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHsgbWV0cmljcywgcmVwb3J0TWV0cmljcyB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGVyZm9ybWFuY2VNb25pdG9yO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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SztRQUMxQ3lELElBQUEsRUFBSztRQUNMWSxLQUFBLEVBQU8zQyxhQUFBLENBQWNOLG1CQUFBLENBQW9CLE9BQU9sRSxPQUFBLENBQVE4QyxHQUFHO1FBQzNEc0QsT0FBQSxFQUFROztNQUdYO01BQUEsQ0FBQW5ILGNBQUEsR0FBQVMsQ0FBQSxXQUFBTSxPQUFBLENBQVFtRCxHQUFHO01BQUE7TUFBQSxDQUFBbEUsY0FBQSxHQUFBUyxDQUFBLHdCQUNWLElBQUFvRixXQUFBLENBQUFvQixHQUFBLEVBQUNtQixLQUFBLENBQUEvSCxPQUFJO1FBQ0hnSSxLQUFBLEVBQU8sUUFBUTFDLElBQUEsQ0FBS0MsS0FBSyxDQUFDN0UsT0FBQSxDQUFRbUQsR0FBRyxLQUFLO1FBQzFDb0QsSUFBQSxFQUFLO1FBQ0xZLEtBQUEsRUFBTzNDLGFBQUEsQ0FBY04sbUJBQUEsQ0FBb0IsT0FBT2xFLE9BQUEsQ0FBUW1ELEdBQUc7UUFDM0RpRCxPQUFBLEVBQVE7Ozs7QUFPdEI7QUFBQTtBQUFBbkgsY0FBQSxHQUFBRSxDQUFBO0FBR08sTUFBTUssd0JBQUEsR0FBMkJBLENBQUE7RUFBQTtFQUFBUCxjQUFBLEdBQUFJLENBQUE7RUFDdEMsTUFBTSxDQUFDVyxPQUFBLEVBQVNDLFVBQUEsQ0FBVztFQUFBO0VBQUEsQ0FBQWhCLGNBQUEsR0FBQUUsQ0FBQSxTQUFHLElBQUFlLE1BQUEsQ0FBQUMsUUFBUSxFQUE4QixDQUFDO0VBQUE7RUFBQWxCLGNBQUEsR0FBQUUsQ0FBQTtFQUVyRSxNQUFNcUksYUFBQSxHQUFpQnhHLFVBQUE7SUFBQTtJQUFBL0IsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtJQUNyQmMsVUFBQSxDQUFXZSxVQUFBO0lBRVg7SUFBQTtJQUFBL0IsY0FBQSxHQUFBRSxDQUFBO0lBQ0EsSUFBSVEsT0FBQSxDQUFRQyxHQUFHLENBQUNDLFFBQVEsS0FBSyxjQUFjO01BQUE7TUFBQVosY0FBQSxHQUFBUyxDQUFBO01BQUFULGNBQUEsR0FBQUUsQ0FBQTtNQUN6QztNQUNBeUUsT0FBQSxDQUFRNkQsR0FBRyxDQUFDLHdCQUF3QnpHLFVBQUE7SUFDdEM7SUFBQTtJQUFBO01BQUEvQixjQUFBLEdBQUFTLENBQUE7SUFBQTtFQUNGO0VBQUE7RUFBQVQsY0FBQSxHQUFBRSxDQUFBO0VBRUEsT0FBTztJQUFFYSxPQUFBO0lBQVN3SDtFQUFjO0FBQ2xDO01BRUFqSSxRQUFBO0FBQUE7QUFBQSxDQUFBTixjQUFBLEdBQUFFLENBQUEsU0FBZUMsa0JBQUEiLCJpZ25vcmVMaXN0IjpbXX0=